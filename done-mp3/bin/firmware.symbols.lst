
bin/firmware.symbols.elf:     file format elf32-littlearm
bin/firmware.symbols.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010195

Program Header:
0x70000001 off    0x000251e4 vaddr 0x000251e4 paddr 0x000251e4 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00010000 vaddr 0x00010000 paddr 0x00010000 align 2**16
         filesz 0x000151ec memsz 0x000151ec flags r-x
    LOAD off    0x0002c000 vaddr 0x2007c000 paddr 0x000251ec align 2**16
         filesz 0x00000300 memsz 0x00001068 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .text         000151e1  00010000  00010000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000300  2007c000  000251ec  0002c000  2**2  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000d68  2007c300  000254ec  0002c300  2**3  ALLOC
  3 .ARM.exidx    00000008  000251e4  000251e4  000251e4  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .debug_info   0004c0d7  00000000  00000000  0002c300  2**0  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000cf04  00000000  00000000  000783d7  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00001b08  00000000  00000000  000852db  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0001217a  00000000  00000000  00086de3  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000f065  00000000  00000000  00098f5d  2**0  CONTENTS, READONLY, DEBUGGING
  9 .comment      0000007f  00000000  00000000  000a7fc2  2**0  CONTENTS, READONLY
 10 .ARM.attributes 00000031  00000000  00000000  000a8041  2**0  CONTENTS, READONLY
 11 .debug_loc    00016284  00000000  00000000  000a8072  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00002d08  00000000  00000000  000be2f6  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00006f90  00000000  00000000  000c1000  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00010000 l    d  .text	00000000 .text
2007c000 l    d  .data	00000000 .data
2007c300 l    d  .bss	00000000 .bss
000251e4 l    d  .ARM.exidx	00000000 .ARM.exidx
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 startup.cpp
000100f0 l       .text	00000000 _MSP
00010200 l     F .text	0000003c isr_forwarder_routine
2007c000 l     O .data	0000008c g_isr_array
00000000 l    df *ABS*	00000000 lpc_sys.cpp
2007c304 l     O .bss	00000002 g_timer_rollover_count
00000000 l    df *ABS*	00000000 lpc_peripherals.c
00000000 l    df *ABS*	00000000 core_cm3.c
00000000 l    df *ABS*	00000000 sys_clock.cpp
000104c0 l     F .text	00000014 sys_clock_pll0_feed()
000104d4 l     F .text	00000078 sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]
00000000 l    df *ABS*	00000000 low_level_init.cpp
2007c30c l     O .bss	0000000c g_rtc_boot_time
2007c318 l     O .bss	00000001 g_sys_boot_type
00000000 l    df *ABS*	00000000 uart0_min.c
00000000 l    df *ABS*	00000000 ff.c
00010986 l     F .text	00000038 mem_cpy
000109be l     F .text	0000000e mem_set
000109cc l     F .text	0000001e sum_sfn
000109ea l     F .text	0000003a get_ldnumber
00010a24 l     F .text	000000c4 get_fileinfo
00010ae8 l     F .text	00000046 sync_window.part.1
00010b2e l     F .text	0000000c sync_window
00010b3c l     F .text	00000074 sync_fs
00010bb0 l     F .text	00000034 move_window
00010be4 l     F .text	0000004c check_fs
00010c30 l     F .text	0000021c find_volume
00010e4c l     F .text	0000003a validate
00010e86 l     F .text	0000001a unlock_fs
00010f5c l     F .text	00000080 dir_sdi
000110ae l     F .text	000000a0 create_chain
0001114e l     F .text	000000ec dir_next
0001123c l     F .text	00000120 dir_find.part.9
0001135c l     F .text	00000270 follow_path
000115cc l     F .text	00000238 dir_register
00011804 l     F .text	000000e8 dir_read.constprop.11
000118ec l     F .text	00000058 remove_chain
2007c31c l     O .bss	00000008 FatFs
2007c324 l     O .bss	00000002 Fsid
00021037 l     O .text	00000080 ExCvt
000210b7 l     O .text	0000000d LfnOfs
000210c4 l     O .text	00000016 cst.6348
0002111e l     O .text	00000016 vst.6347
00000000 l    df *ABS*	00000000 ccsbcs.c
00021134 l     O .text	00000100 Tbl
00021234 l     O .text	000001e0 tbl_lower.5775
00021414 l     O .text	000001e0 tbl_upper.5776
00000000 l    df *ABS*	00000000 reentrant.c
00000000 l    df *ABS*	00000000 spi_flash.cpp
0001277c l     F .text	00000020 flash_get_mem_size_bytes()
0001279c l     F .text	00000074 flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)
00012810 l     F .text	000000ac ssp1_exchange_data
000128bc l     F .text	00000026 flash_send_op_addr(flash_opcode_t, unsigned long)
000128e4 l     F .text	00000044 flash_read_page(unsigned char*, unsigned long, unsigned long)
00012928 l     F .text	00000040 flash_wait_for_ready()
00012b7c l     F .text	0000008c flash_write_page(unsigned char*, unsigned long, unsigned long)
2007c328 l     O .bss	00000004 g_sector_count
2007c32c l     O .bss	00000001 g_flash_capacity
2007c32e l     O .bss	00000002 g_flash_pagesize
000215fc l     O .text	00000010 CSWTCH.70
00000000 l    df *ABS*	00000000 sd.c
00012c34 l     F .text	00000012 sys_get_uptime_ms
00012c48 l     F .text	00000030 ssp1_set_max_clock
00012c78 l     F .text	00000014 ssp1_exchange_byte
2007c330 l     O .bss	00000001 g_card_type
2007c08c l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 diskio.c
00000000 l    df *ABS*	00000000 fatfs_time.c
00000000 l    df *ABS*	00000000 wireless.c
00013478 l     F .text	00000070 nrf_driver_init
00013590 l     F .text	00000034 nrf_irq_callback
000134e8 l     F .text	00000050 nrf_driver_app_recv
00013538 l     F .text	00000058 nrf_driver_send
000135c4 l     F .text	00000022 nrf_driver_receive
000135e6 l     F .text	00000028 nrf_driver_get_timer
2007c334 l     O .bss	00000004 g_ack_queue
2007c338 l     O .bss	00000004 g_nrf_activity_sem
2007c33c l     O .bss	00000004 g_rx_queue
00000000 l    df *ABS*	00000000 nrf24L01Plus.c
000136a8 l     F .text	000000e8 nordic_transfer
00013790 l     F .text	00000020 nordic_readRegister
000137b0 l     F .text	0000001e nordic_writeRegister
00000000 l    df *ABS*	00000000 mesh.c
00013b24 l     F .text	00000026 mesh_incr_soft_timers_for_arr
00013b4c l     F .text	0000004c mesh_update_soft_timers
00013b98 l     F .text	0000003c mesh_send_packet
00013bd4 l     F .text	00000034 mesh_send_retry_packet
00013c08 l     F .text	00000024 mesh_find_rte_tbl_entry
00013c2c l     F .text	00000028 mesh_update_rte_scores
00013c54 l     F .text	00000040 mesh_get_pnd_pkt_slot
00013c94 l     F .text	00000090 mesh_pending_packets_add
00013d24 l     F .text	00000058 mesh_get_rte_to_modify
00013d7c l     F .text	00000178 mesh_handle_pnd_pkts_for_arr
000141a6 l     F .text	0000001a mesh_send_ack
2007c340 l     O .bss	00000014 g_driver
2007c354 l     O .bss	00000001 g_error_mask
2007c355 l     O .bss	00000001 g_locked
2007c356 l     O .bss	00000090 g_mesh_pnd_pkts
2007c3e6 l     O .bss	0000000c g_mesh_stats
2007c3f2 l     O .bss	00000018 g_our_name
2007c40a l     O .bss	00000048 g_our_pnd_pkts
2007c452 l     O .bss	0000000c g_pkt_hist
2007c45e l     O .bss	00000001 g_rpt_node
2007c45f l     O .bss	00000010 g_rte_table
2007c46f l     O .bss	00000001 s_next_packet_id.5115
2007c470 l     O .bss	00000004 s_prev_time_ms.5129
2007c08d l     O .data	00000001 g_our_node_id
2007c090 l     O .data	00000004 g_pkt_hist_wptr
2007c094 l     O .data	00000001 g_retry_count
00000000 l    df *ABS*	00000000 storage.cpp
00000000 l    df *ABS*	00000000 io_source.cpp
2007c474 l     O .bss	00000080 g_ir_timings
2007c4f4 l     O .bss	00000002 g_signal_count
2007c4f8 l     O .bss	00000004 g_last_decoded_signal
0002161d l     O .text	00000080 LED_DISPLAY_CHARMAP
00000000 l    df *ABS*	00000000 gpioDriver.cpp
00000000 l    df *ABS*	00000000 i2c_base.cpp
00000000 l    df *ABS*	00000000 uart_dev.cpp
00000000 l    df *ABS*	00000000 char_dev.cpp
00000000 l    df *ABS*	00000000 spi_sem.c
2007c4fc l     O .bss	00000004 mSpi0Lock
00000000 l    df *ABS*	00000000 lpc_rit.c
2007c500 l     O .bss	00000004 g_rit_callback
00000000 l    df *ABS*	00000000 can.c
00015088 l     F .text	00000032 CAN_tx_now
000150bc l     F .text	000000a4 CAN_handle_isr
00000000 l    df *ABS*	00000000 uart0.cpp
00000000 l    df *ABS*	00000000 uart3.cpp
00000000 l    df *ABS*	00000000 eint.c
00015298 l     F .text	0000002c handle_eint_list
000152c4 l     F .text	00000038 eint3_enable.isra.0
2007c50c l     O .bss	00000004 gp_port0_falling_list
2007c510 l     O .bss	00000004 gp_port0_rising_list
2007c514 l     O .bss	00000004 gp_port2_falling_list
2007c518 l     O .bss	00000004 gp_port2_rising_list
00000000 l    df *ABS*	00000000 lpc_timers.c
000153ac l     F .text	00000020 lpc_timer_get_struct
00000000 l    df *ABS*	00000000 spi_dma.c
00000000 l    df *ABS*	00000000 uart2.cpp
00000000 l    df *ABS*	00000000 adc.c
0001557c l     F .text	00000024 adc0_start_conversion
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 i2c2.cpp
00000000 l    df *ABS*	00000000 c_tlm_comp.c
000158f8 l     F .text	00000010 tlm_component_find_by_name
2007c52c l     O .bss	00000004 mp_tlm_component_list
00000000 l    df *ABS*	00000000 c_tlm_var.c
00015998 l     F .text	0000001e tlm_variable_check_dup
000159b6 l     F .text	00000014 tlm_component_find_callback
00000000 l    df *ABS*	00000000 c_tlm_stream.c
00000000 l    df *ABS*	00000000 rtc_alarm.c
00015c28 l     F .text	00000024 for_each_recur_alarm_callback
00015c4c l     F .text	0000005a for_each_alarm_callback
2007c530 l     O .bss	00000010 g_list_recur_alarms
2007c540 l     O .bss	00000004 g_list_timed_alarms
00000000 l    df *ABS*	00000000 file_logger.c
00015d54 l     F .text	000000b4 logger_write_to_file
00015e08 l     F .text	000000d0 logger_task
2007c544 l     O .bss	00000002 g_buffer_watermark
2007c548 l     O .bss	00000004 g_empty_buffer_queue
2007c54c l     O .bss	00000002 g_highest_file_write_time
2007c550 l     O .bss	00000004 g_write_buffer_queue
2007c554 l     O .bss	00000004 gp_file_buffer
00000000 l    df *ABS*	00000000 c_list.c
00000000 l    df *ABS*	00000000 scheduler_task.cpp
00016052 l     F .text	0000002c __sputc_r
00016080 l     F .text	00000034 dbg_print(char const*, char const*)
000160b4 l     F .text	00000038 printline(char const*, char const*)
2007c558 l     O .bss	00000004 gpTaskList
2007c55c l     O .bss	00000001 g_dbg_print
2007c560 l     O .bss	00000004 gRunTaskSemaphore
2007c564 l     O .bss	00000004 gTaskEntryTaskHandle
00000000 l    df *ABS*	00000000 printf_lib.c
00000000 l    df *ABS*	00000000 utilities.c
00000000 l    df *ABS*	00000000 freertos_mem_man.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
000165d8 l     F .text	00000066 prvCopyDataToQueue
0001663e l     F .text	0000004a prvNotifyQueueSetContainer
00016688 l     F .text	00000028 prvCopyDataFromQueue
000166b0 l     F .text	0000007e prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
00016bbc l     F .text	00000028 prvIdleTask
00016be4 l     F .text	00000024 prvTaskIsTaskSuspended
00016c08 l     F .text	00000024 prvResetNextTaskUnblockTime
00016c2c l     F .text	0000008c prvAddCurrentTaskToDelayedList
2007c56c l     O .bss	00000004 pxDelayedTaskList
2007c570 l     O .bss	00000004 pxOverflowDelayedTaskList
2007c574 l     O .bss	000000c8 pxReadyTasksLists
2007c63c l     O .bss	00000004 ulTaskSwitchedInTime
2007c640 l     O .bss	00000004 uxCurrentNumberOfTasks
2007c644 l     O .bss	00000004 uxPendedTicks
2007c648 l     O .bss	00000004 uxSchedulerSuspended
2007c64c l     O .bss	00000004 uxTaskNumber
2007c650 l     O .bss	00000004 uxTopReadyPriority
2007c654 l     O .bss	00000014 xDelayedTaskList1
2007c668 l     O .bss	00000014 xDelayedTaskList2
2007c67c l     O .bss	00000004 xIdleTaskHandle
2007c680 l     O .bss	00000004 xNextTaskUnblockTime
2007c684 l     O .bss	00000004 xNumOfOverflows
2007c688 l     O .bss	00000014 xPendingReadyList
2007c69c l     O .bss	00000004 xSchedulerRunning
2007c6a0 l     O .bss	00000014 xSuspendedTaskList
2007c6b4 l     O .bss	00000004 xTickCount
2007c6b8 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 port.c
000175e0 l     F .text	00000012 prvTaskExitError
000175f4 l     F .text	0000001a prvPortStartFirstTask
00017660 l       .text	00000000 pxCurrentTCBConst2
000176e0 l       .text	00000000 pxCurrentTCBConst
2007c6bc l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 run_time_stats.c
2007c6c0 l     O .bss	00000008 g_freertos_runtime_timer_start
00000000 l    df *ABS*	00000000 hooks.c
00000000 l    df *ABS*	00000000 examples.cpp
00000000 l    df *ABS*	00000000 high_level_init.cpp
0001787c l     F .text	0000000c hl_print_line()
00017888 l     F .text	0000002c ssp_set_max_clock
000178b4 l     F .text	00000090 hl_mount_storage(FileSystemObject&, char const*)
00000000 l    df *ABS*	00000000 newlib_time.c
00000000 l    df *ABS*	00000000 malloc_lock.c
00000000 l    df *ABS*	00000000 newlib_syscalls.c
00017f8a l     F .text	00000056 remap_fatfs_errors
00017fe0 l     F .text	0000004c findslot
0001802c l     F .text	00000028 remap_handle
2007c6f4 l     O .bss	00000004 g_input_dev_fptr
2007c6f8 l     O .bss	00000004 g_output_dev_fptr
2007c6fc l     O .bss	00000001 initialized.8352
2007c700 l     O .bss	00000060 openfiles
2007c760 l     O .bss	00000004 slot.8318
2007c0d8 l     O .data	00000004 lastfh.8319
00000000 l    df *ABS*	00000000 memory.cpp
2007c764 l     O .bss	00000004 g_sbrk_calls
2007c768 l     O .bss	00000004 g_last_sbrk_ptr
2007c76c l     O .bss	00000004 g_next_heap_ptr
2007c770 l     O .bss	00000004 g_last_sbrk_size
00000000 l    df *ABS*	00000000 main.cpp
00018664 l     F .text	00000014 ssp0_exchange_byte
00018ab8 l     F .text	00000150 _GLOBAL__sub_I_mp3_dcs
2007c778 l     O .bss	00000001 pause_isr()::paused
00000000 l    df *ABS*	00000000 LabGPIOInterrupts.cpp
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 del_ops.cc
00000000 l    df *ABS*	00000000 guard.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 vmi_class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 _ashldi3.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _arm_muldivsf3.o
00000000 l    df *ABS*	00000000 _arm_fixunssfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 calloc.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgetc.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
0001a93c l     F .text	00000048 std.isra.0
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mktime.c
0001aec0 l     F .text	000001c0 validate_structure
000223b8 l     O .text	00000030 DAYS_IN_MONTH
000223e8 l     O .text	00000030 _DAYS_BEFORE_MONTH
00000000 l    df *ABS*	00000000 mstats.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf_float.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfscanf_float.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 realloc.c
00000000 l    df *ABS*	00000000 refill.c
0001c3d4 l     F .text	00000012 lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 sscanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strstr.c
00000000 l    df *ABS*	00000000 strtod.c
0001c98e l     F .text	00000042 sulp
000224b0 l     O .text	00000014 fpi.6129
000224c4 l     O .text	00000014 fpinan.6165
000224d8 l     O .text	00000028 tinytens
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
0001d638 l     F .text	00000100 _strtol_l.isra.0
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 tzcalc_limits.c
00000000 l    df *ABS*	00000000 tzlock.c
00000000 l    df *ABS*	00000000 tzset.c
00000000 l    df *ABS*	00000000 tzset_r.c
2007d03c l     O .bss	0000000b __tzname_dst
2007d047 l     O .bss	0000000b __tzname_std
2007d054 l     O .bss	00000004 prev_tzenv
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 div.c
00000000 l    df *ABS*	00000000 dtoa.c
0001de90 l     F .text	00000118 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0001ebe0 l     F .text	0000006a rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0001f0b2 l     F .text	00000024 L_shift
00000000 l    df *ABS*	00000000 getenv_r.c
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 gettzinfo.c
2007c2bc l     O .data	00000040 tzinfo
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mprec.c
00022740 l     O .text	0000000c p05.6047
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00020154 l     F .text	0000002c __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfscanf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 strtoul.c
000209fe l     F .text	000000fa _strtoul_l.isra.0
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 envlock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 impure.c
2007c0e8 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 month_lengths.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 symbol-table.c
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 tzvars.c
00000000 l    df *ABS*	00000000 environ.c
2007d060 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 reent.c
00015258 g     F .text	0000001c Uart3::Uart3()
000163dc g     F .text	00000040 scheduler_start(bool, bool)
00020ca4 g     F .text	00000012 _malloc_usable_size_r
0001b560 g     F .text	000000b8 __cvt
000102a4 g     F .text	00000054 lpc_sys_setup_system_timer
000206c8 g     F .text	000000c6 _scanf_chars
00019494 g     F .text	00000004 std::type_info::__is_function_p() const
00020dc8 g     F .text	0000002c .hidden __aeabi_dcmpun
00018656  w    F .text	0000000e uart_display::~uart_display()
00015780 g     F .text	000000d0 rtc_init
0001faca g     F .text	00000042 __any_on
0001f2d8 g     F .text	00000020 _isatty_r
00020d8c g     F .text	00000012 .hidden __aeabi_dcmple
0001c8ea g     F .text	00000010 strcpy
000194e8 g     F .text	00000018 .hidden __ashldi3
0001808c g     F .text	00000004 _getpid
0001c238 g     F .text	000000b8 _puts_r
00010148  w    F .text	00000010 TIMER2_IRQHandler
000163c0 g     F .text	0000001c scheduler_add_task(scheduler_task*)
00020cc8 g     F .text	0000007a .hidden __cmpdf2
0001f318 g     F .text	00000024 _lseek_r
00010eb6 g     F .text	000000a6 get_fat
0001506c g     F .text	0000001c RIT_IRQHandler
00013f18 g     F .text	000000f8 mesh_form_pkt
0001eb50 g     F .text	0000006a __sflags
00020cc8 g     F .text	0000007a .hidden __eqdf2
00012b6c g     F .text	00000010 flash_supports_metadata
000216ac g     O .text	00000009 typeinfo name for UartDev
2007c9b0 g     O .bss	000002f4 gpio_intr_instance
000100cc g       .text	00000000 __section_table_start
0001f2ac g     F .text	00000024 _gettimeofday_r
00017688 g     F .text	00000014 vPortExitCritical
0001d632 g     F .text	00000006 strtok_r
00019814 g     F .text	0000005a .hidden __floatdidf
00010148  w    F .text	00000010 I2C0_IRQHandler
2007c6d4  w    O .bss	00000004 SingletonTemplate<LED>::mpSingletonInstance
0001c76c g     F .text	00000024 _kill_r
0001c208 g     F .text	00000030 printf
000102f8 g     F .text	0000002c sys_get_uptime_us
00018a88  w    F .text	00000030 uart_display::run(void*)
0001c88e g     F .text	00000024 __sseek
0001a9b0 g     F .text	00000060 __sinit
000151f0  w    F .text	00000014 Uart3::~Uart3()
2007ccbc g     O .bss	0000000c mp3_dreq
0001dc88 g     F .text	000000a4 __swbuf_r
2007d058 g     O .bss	00000004 _daylight
2007c6ec  w    O .bss	00000004 Storage::getFlashDrive()::pFlashDrive
00018ee0 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00022280 g     O .text	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
000217b8  w    O .text	0000001c vtable for Uart3
0001a984 g     F .text	0000002c __sfmoreglue
00018600 g     F .text	00000038 pause_isr()
00017f86 g     F .text	00000004 __malloc_unlock
2007cce4 g     O .bss	00000328 song_list
00014772 g     F .text	00000030 I2C_Temp::getCelsius()
00019368 g     F .text	0000012a __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00018820  w    F .text	000000d8 read_file::run(void*)
0001d5c0 g     F .text	00000020 _strtod_r
0001a0f8 g     F .text	00000136 .hidden __divsf3
00012fe4 g     F .text	00000098 sd_read
0002176c  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart3>
0001ec4a g     F .text	0000002a __hexdig_fun
00014812 g     F .text	00000010 LabGPIO::setAsOutput()
00021900  w    O .text	00000020 vtable for scheduler_task
00014d08 g     F .text	0000006c UartDev::getChar(char*, unsigned int)
00021788  w    O .text	00000008 typeinfo for SingletonTemplate<Uart3>
00022158  w    O .text	00000020 vtable for read_file
000153cc g     F .text	0000006c lpc_timer_enable
00010148  w    F .text	00000010 PWM1_IRQHandler
0001ae7c g     F .text	00000034 memmove
0001383c g     F .text	00000008 nordic_clear_packet_sent_flag
2007c528  w    O .bss	00000004 SingletonTemplate<I2C2>::mpSingletonInstance
0001ad04 g     F .text	0000001c __locale_ctype_ptr
00016908 g     F .text	00000080 xQueueGenericSendFromISR
0001f33c g     F .text	00000068 _Balloc
000251ec g       .ARM.exidx	00000000 __exidx_end
0001d5e0 g     F .text	00000052 __strtok_r
000156d0 g     F .text	00000048 rtc_gettime
000100d8 g       .text	00000000 __data_section_table_end
0001537c g     F .text	00000030 eint3_enable_port0
0001877c  w    F .text	00000070 play_mp3::init()
00010148  w    F .text	00000010 I2C1_IRQHandler
000164ee g     F .text	0000000e is_freertos_running
00015ff0 g     F .text	0000002c c_list_find_elm
00010148  w    F .text	00000010 EINT2_IRQHandler
00010148  w    F .text	00000010 UART1_IRQHandler
00020cb8 g     F .text	0000008a .hidden __gtdf2
0001a5a8 g     F .text	0000000c __errno
0001641c g     F .text	00000034 scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)
000216a0 g     O .text	0000000c typeinfo for UartDev
0001054c g     F .text	000000b4 sys_clock_configure()
0001b440 g     F .text	00000064 _mallinfo_r
00016ba2 g     F .text	00000018 xQueueSelectFromSet
000175d0 g     F .text	00000010 vRunTimeStatIsrExit
0001f2f8 g     F .text	00000004 __localeconv_l
000177fc  w    F .text	00000028 SingletonTemplate<TemperatureSensor>::getInstance()
00018678  w    F .text	0000005c play_mp3::run(void*)
2007c568 g     O .bss	00000004 pxCurrentTCB
00012c8c g     F .text	0000002e wait_ready
000152fc g     F .text	00000080 EINT3_IRQHandler
00014598 g     F .text	00000064 IR_Sensor::decodeIrCode()
000137f0 g     F .text	00000016 nordic_standby1_to_tx_mode1
00013f0c g     F .text	0000000c mesh_get_node_address
000145fc g     F .text	00000034 IR_Sensor::init()
0001ebbc g     F .text	00000024 _fstat_r
000185d4 g     F .text	0000002c prev_isr()
2007d064 g     O .bss	00000004 errno
00020790 g     F .text	000001ec _scanf_i
0001c852 g     F .text	00000004 __seofread
000251ec g       .ARM.exidx	00000000 _etext
000138d4 g     F .text	0000003e nordic_set_intr_signals
00020d54 g     F .text	00000010 .hidden __aeabi_cdcmple
2007c51c  w    O .bss	00000004 SingletonTemplate<Uart2>::mpSingletonInstance
000137dc g     F .text	00000008 nordic_clear_all_intr_flags
000149c4 g     F .text	00000018 I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)
00019d80 g     F .text	00000160 .hidden __aeabi_fadd
00019d7c g     F .text	00000164 .hidden __subsf3
000126fc g     F .text	00000024 ff_wtoupper
000187ec  w    F .text	00000034 read_file::open_song()
00020678 g     F .text	00000050 _vfiscanf_r
0001604e  w    F .text	00000004 scheduler_task::taskEntry()
00010464 g     F .text	00000048 lpc_pclk
0001a91c g     F .text	00000014 fgets
00010148  w    F .text	00000010 TIMER3_IRQHandler
2007c9ac g     O .bss	00000004 buffer_ptr_queue
000158bc g     F .text	00000014 I2C2::I2C2()
00013a4e g     F .text	0000000c nordic_set_rx_pipe0_addr
2007ccc8 g     O .bss	0000000c mp3_reset
000151cc g     F .text	00000024 UART0_IRQHandler
2007ccb0 g     O .bss	0000000c mp3_dcs
00017724 g     F .text	00000030 xPortStartScheduler
00016f34 g     F .text	00000020 vTaskEndScheduler
0001ae66 g     F .text	00000016 memcpy
00017350 g     F .text	00000020 vTaskPlaceOnEventList
0001f0fc g     F .text	00000120 __hexnan
00015454 g     F .text	000000c0 ssp1_dma_transfer_block
00020d44 g     F .text	00000020 .hidden __aeabi_cdrcmple
2007c308 g     O .bss	00000004 gp_timer_ptr
0001c5a8 g     F .text	0000015c setvbuf
00017944  w    F .text	0000004c Storage::getFlashDrive()
000217e4  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart2>
0001a930 g     F .text	0000000c _cleanup_r
00018e30 g     F .text	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0001fc10 g     F .text	000001e8 _svfprintf_r
000197a4 g     F .text	00000022 .hidden __floatsidf
00017710  w    F .text	00000014 vPortSetupTimerInterrupt
000138c8 g     F .text	0000000c nordic_flush_rx_fifo
00020cc0 g     F .text	00000082 .hidden __ltdf2
000176e4 g     F .text	0000002c xPortSysTickHandler
000100fa  w    F .text	0000000e isr_nmi
0001334c g     F .text	00000026 disk_initialize
00018e3c g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001a270 g     F .text	00000000 .hidden __aeabi_uldivmod
00014b20  w    F .text	0000010a I2C_Base::i2cStateMachine()
0001c2f0 g     F .text	00000010 puts
000222d4 g     O .text	0000000c typeinfo for __cxxabiv1::__vmi_class_type_info
0001653c g     F .text	0000001a vPortFree
00020678 g     F .text	00000050 _vfscanf_r
000220f8  w    O .text	0000000c typeinfo for play_mp3
0001fa46 g     F .text	00000050 __ratio
0001c578 g     F .text	00000030 iscanf
000146d2 g     F .text	00000004 LED::init()
000159cc g     F .text	0000007c tlm_variable_register
00012734 g     F .text	00000004 ff_del_syncobj
0001ade8 g     F .text	00000010 malloc
00021728  w    O .text	00000007 typeinfo name for Uart0
00014f3c  w    F .text	00000004 CharDev::flush()
000100e0  w    F .text	0000001a isr_hard_fault
00014630 g     F .text	00000018 LED_Display::setLeftDigit(char)
0001c70c g     F .text	00000050 _raise_r
00018408 g     F .text	00000010 _fstat
00015018 g     F .text	00000030 spi1_lock
00019ee8 g     F .text	0000001c .hidden __aeabi_i2f
00022678 g     O .text	000000c8 __mprec_tens
00017450 g     F .text	00000020 uxTaskGetStackHighWaterMark
00018c18 g     F .text	00000010 LabGPIOInterrupts::init()
0001dc6c g     F .text	0000001c vsnprintf
000176a0 g     F .text	00000044 xPortPendSVHandler
00018924 g     F .text	000000c8 mp3_init()
00019c94 g     F .text	00000040 .hidden __fixunsdfsi
00016572 g     F .text	00000018 vListInsertEnd
00013a2c g     F .text	00000016 nordic_set_addr_width
00012e68 g     F .text	0000016c sd_initialize
0001fe72 g     F .text	0000003a __ssrefill_r
00013a5c g     F .text	000000c8 nordic_init
0001c790 g     F .text	00000004 _getpid_r
000251e1 g       .text	00000000 __symbol_table_end
00013372 g     F .text	00000010 disk_status
00013610 g     F .text	0000004c wireless_init
00020b1c g     F .text	0000002c strtoul
2007c6f0 g     O .bss	00000004 .hidden __dso_handle
00019784 g     F .text	0000001e .hidden __aeabi_ui2d
00015850 g     F .text	0000006c I2C2::init(unsigned int)
0001f2fc g     F .text	0000001c _localeconv_r
00019010 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
2007ccd4 g     O .bss	00000004 next_prev_control
0001f560 g     F .text	00000012 __i2b
00018e7c g     F .text	0000002a __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00018744 g     F .text	00000038 write_mp3_register(unsigned char, unsigned char, unsigned char)
0001a2a0 g     F .text	000002dc .hidden __udivmoddi4
00013978 g     F .text	00000024 nordic_set_channel
00019500 g     F .text	00000000 .hidden __aeabi_drsub
00010194 g     F .text	0000006c isr_reset
0001c558 g     F .text	00000020 _sbrk_r
00014168 g     F .text	0000003e mesh_send
00021800  w    O .text	00000008 typeinfo for SingletonTemplate<Uart2>
0001208c g     F .text	0000001a f_closedir
0002097c g     F .text	00000024 _read_r
0001656c g     F .text	00000006 vListInitialiseItem
000133f2 g     F .text	00000032 disk_ioctl
00010148  w    F .text	00000010 PLL0_IRQHandler
00020d78 g     F .text	00000012 .hidden __aeabi_dcmplt
0001a5b4 g     F .text	000000a4 _fclose_r
00015160 g     F .text	00000028 CAN_IRQHandler
0001a7cc g     F .text	00000024 fflush
00018ccc g     F .text	00000012 LabGPIOInterrupts::~LabGPIOInterrupts()
00010118  w    F .text	00000010 isr_bus_fault
00010148  w    F .text	00000010 PLL1_IRQHandler
000216dc g     O .text	00000009 typeinfo name for CharDev
00017754 g     F .text	00000014 rts_not_full_trace_init
00014660 g     F .text	00000038 LED_Display::init()
000197c8 g     F .text	0000003a .hidden __extendsfdf2
0001feac g     F .text	000002a8 __ssvfscanf_r
00019ac4 g     F .text	000001d0 .hidden __aeabi_ddiv
0001a7f0 g     F .text	00000058 _fgetc_r
00010148  w    F .text	00000010 SSP0_IRQHandler
0001399c g     F .text	0000002c nordic_set_air_data_rate
2007c7a0 g     O .bss	0000000c btn_3
0001950c g     F .text	00000276 .hidden __adddf3
00010148  w    F .text	00000010 CANAct_IRQHandler
000222a8 g     O .text	0000002c vtable for __cxxabiv1::__si_class_type_info
0001f904 g     F .text	000000a4 __b2d
000251e1 g       .text	00000000 __exidx_start
00019870 g     F .text	00000254 .hidden __aeabi_dmul
000106a8 g     F .text	0000000c sys_get_boot_type
00018418 g     F .text	00000024 _isatty
00018e64 g     F .text	00000018 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00013a42 g     F .text	0000000c nordic_set_tx_address
000184ac g     F .text	00000004 operator delete(void*)
2007ccd8 g     O .bss	0000000c on_board_1
000223ac g     O .text	00000004 _global_impure_ptr
00019024 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0001fb0c g     F .text	0000004c _realloc_r
0001acb4 g     F .text	00000048 __libc_init_array
00012d6c g     F .text	0000004c xmit_datablock
00014c64 g     F .text	0000005c UartDev::putChar(char, unsigned int)
0001592c g     F .text	0000006c tlm_component_add
000138b4 g     F .text	00000014 nordic_read_rx_fifo
00022650 g     O .text	00000028 __mprec_bigtens
0001f448 g     F .text	0000007c __s2b
0001a580 g     F .text	0000000e abort
00018268 g     F .text	0000014c _open
00019784 g     F .text	0000001e .hidden __floatunsidf
00012968 g     F .text	00000098 flash_initialize
000188f8  w    F .text	0000000a read_file::init()
0001843c g     F .text	0000006c _sbrk
0001f7ca g     F .text	00000034 __mcmp
0001651e g     F .text	0000001e pvPortMalloc
00021808  w    O .text	00000007 typeinfo name for Uart2
0001519c  w    F .text	00000014 Uart0::~Uart0()
00010148  w    F .text	00000010 I2S_IRQHandler
00018090 g     F .text	00000004 _init
0001035c  w    F .text	00000018 SingletonTemplate<IR_Sensor>::getInstance()
00017664 g     F .text	00000002 vPortEndScheduler
000158d0 g     F .text	00000028 I2C2_IRQHandler
00016556 g     F .text	00000016 vListInitialise
00014822 g     F .text	00000010 LabGPIO::setHigh()
00018094 g     F .text	00000034 syscalls_init
000151f0  w    F .text	00000014 Uart3::~Uart3()
000100cc g       .text	00000000 __data_section_table
0001d75c g     F .text	0000002c strtol
00015514  w    F .text	00000014 Uart2::~Uart2()
0001ab20 g     F .text	00000120 _fseeko_r
000194dc g     F .text	0000000a std::terminate()
0001856a  w    F .text	00000002 uart_display::~uart_display()
00014f68 g     F .text	00000078 CharDev::printf(char const*, ...)
00019cd4 g     F .text	0000009e .hidden __aeabi_d2f
000149dc g     F .text	00000018 I2C_Base::readRegisters(unsigned char, unsigned char*, unsigned long)
00016f64 g     F .text	0000000c xTaskGetTickCount
000167e0 g     F .text	00000104 xQueueGenericSend
00019d7c g     F .text	00000164 .hidden __aeabi_fsub
00015ca8 g     F .text	000000ac RTC_IRQHandler
0001c9d0 g     F .text	00000bf0 _strtod_l
0001f0d6 g     F .text	00000026 __match
2007d068 g       .bss	00000000 _ebss
000160ec g     F .text	00000124 scheduler_c_task_private(void*)
00019038 g     F .text	00000074 __cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00010148  w    F .text	00000010 TIMER0_IRQHandler
000104ac g     F .text	00000006 __set_PSP
00014ce8 g     F .text	00000020 UartDev::flush()
0001dc6c g     F .text	0000001c vsniprintf
00022224 g     O .text	00000022 typeinfo name for __cxxabiv1::__class_type_info
0001d902 g     F .text	00000002 __tz_unlock
00010148  w    F .text	00000010 SPI_IRQHandler
0001f4c4 g     F .text	0000003e __hi0bits
00010158  w    F .text	00000012 isr_sys_tick
00013a18 g     F .text	00000014 nordic_set_payload_for_pipe
000186d4 g     F .text	00000070 populate_tracks_dir()
00020df4 g     F .text	0000004e .hidden __fixdfsi
0001a598 g     F .text	00000010 calloc
00017520 g     F .text	00000070 xTaskPriorityDisinherit
2007c0dc  w    O .data	00000001 read_file::run(void*)::action
00012ad4 g     F .text	00000044 flash_write_permanent_id
2007c524 g     O .bss	00000004 g_adc_result_queue
00019f14 g     F .text	0000007c .hidden __floatdisf
00021830  w    O .text	0000001c vtable for Uart2
000179a8 g     F .text	00000560 high_level_init()
00014e68 g     F .text	00000028 UartDev::UartDev(unsigned int*)
00019492 g     F .text	00000002 std::type_info::~type_info()
00010600 g     F .text	000000a8 sys_get_cpu_clock
00014530  w    F .text	0000002a i2c2_device::get16BitRegister(unsigned char)
000106b4 g     F .text	00000228 low_level_init()
2007c2b4 g     O .data	00000008 _tzname
00017824  w    F .text	00000024 SingletonTemplate<LED_Display>::getInstance()
00017370 g     F .text	00000070 xTaskRemoveFromEventList
000177b8 g     F .text	00000024 vApplicationMallocFailedHook
2007c2fc g     O .data	00000004 environ
000151b0 g     F .text	0000001c Uart0::Uart0()
0001024c g     F .text	00000058 isr_hard_fault_handler
00018fe6 g     F .text	00000004 operator delete(void*, unsigned int)
0001950c g     F .text	00000276 .hidden __aeabi_dadd
00020cc0 g     F .text	00000082 .hidden __ledf2
2007c6dc  w    O .bss	00000004 SingletonTemplate<Acceleration_Sensor>::mpSingletonInstance
0001496e g     F .text	00000028 I2C_Base::readReg(unsigned char, unsigned char)
0001601c g     F .text	0000002a c_list_for_each_elm
00015fb8 g     F .text	00000038 c_list_insert_elm_end
0001f68c g     F .text	0000009c __pow5mult
00019804 g     F .text	0000006a .hidden __aeabi_ul2d
00013818 g     F .text	00000024 nordic_standby1_to_rx
00014832 g     F .text	00000012 LabGPIO::setLow()
00010148  w    F .text	00000010 EINT1_IRQHandler
000147c8 g     F .text	00000038 LabGPIO::LabGPIO(unsigned char, unsigned char)
00010374 g     F .text	000000bc TIMER1_IRQHandler
00014738 g     F .text	00000018 Switches::getSwitchValues()
0002234c g     O .text	00000020 __sf_fake_stderr
00021810  w    O .text	00000020 typeinfo for Uart2
000194cc g     F .text	00000010 std::get_terminate()
00018ccc g     F .text	00000012 LabGPIOInterrupts::~LabGPIOInterrupts()
00013850 g     F .text	0000004c nordic_mode1_send_single_packet
00012ce0 g     F .text	0000008c rcvr_datablock
00018c08 g     F .text	00000010 LabGPIOInterrupts::LabGPIOInterrupts()
00015558 g     F .text	00000024 UART2_IRQHandler
00014cc0  w    F .text	00000014 UartDev::~UartDev()
00014858 g     F .text	00000002 LabGPIO::~LabGPIO()
00017768 g     F .text	00000014 rts_not_full_trace_get
000141c0 g     F .text	0000001c mesh_get_num_routing_entries
0001fb58 g     F .text	000000b6 __ssputs_r
00013ef4 g     F .text	00000018 mesh_set_node_address
00017590 g     F .text	00000018 pvTaskIncrementMutexHeldCount
00015188  w    F .text	00000014 Uart0::~Uart0()
00018ea6 g     F .text	00000038 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00019010 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00016046  w    F .text	00000004 scheduler_task::init()
0001856c  w    F .text	00000002 read_file::~read_file()
00020db4 g     F .text	00000012 .hidden __aeabi_dcmpgt
00018dfc g     F .text	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
2007c6c8  w    O .bss	00000004 SingletonTemplate<TemperatureSensor>::mpSingletonInstance
00020180 g     F .text	00000024 __sfputs_r
000185a8 g     F .text	0000002c next_isr()
0001472c g     F .text	00000006 Light_Sensor::getRawValue()
0001aa88 g     F .text	00000002 __sfp_lock_acquire
0001ae2c g     F .text	0000001c memchr
0001b684  w    F .text	00000470 _printf_float
2007c77c g     O .bss	0000000c btn_0
00022110  w    O .text	0000000c typeinfo for read_file
00015048 g     F .text	00000024 spi1_unlock
000173f8 g     F .text	0000004c xTaskCheckForTimeOut
00014858 g     F .text	00000002 LabGPIO::~LabGPIO()
0001b3a8 g     F .text	00000098 _free_r
00015a70 g     F .text	000001b8 tlm_stream_decode_file
0001856e  w    F .text	00000002 play_mp3::~play_mp3()
00020da0 g     F .text	00000012 .hidden __aeabi_dcmpge
0001553c g     F .text	0000001c Uart2::Uart2()
00018568  w    F .text	00000002 uart_display::init()
0001c500 g     F .text	00000058 __srget_r
000177dc  w    F .text	00000020 SingletonTemplate<I2C2>::getInstance()
000108dc g     F .text	00000060 uart0_init
2007c300 g       .bss	00000000 _bss
0001fdf8 g     F .text	0000007a _sungetc_r
00017990  w    F .text	00000018 SingletonTemplate<Switches>::getInstance()
00011e94 g     F .text	00000024 f_close
00012fd4 g     F .text	00000010 sd_status
00019508 g     F .text	0000027a .hidden __aeabi_dsub
0001b080 g     F .text	000002f8 mktime
00010148 g     F .text	00000010 isr_default_handler
000138ac g     F .text	00000008 nordic_clear_packet_available_flag
00021720  w    O .text	00000008 typeinfo for SingletonTemplate<Uart0>
00016f54 g     F .text	00000010 vTaskSuspendAll
0001c958 g     F .text	00000036 strstr
2007c508  w    O .bss	00000004 SingletonTemplate<Uart3>::mpSingletonInstance
0002233c g     O .text	0000000d typeinfo name for std::type_info
00016f70 g     F .text	0000000c xTaskGetTickCountFromISR
00019804 g     F .text	0000006a .hidden __floatundidf
2007c794 g     O .bss	0000000c btn_2
00012b60 g     F .text	0000000c flash_get_page_size
0001c350 g     F .text	00000074 rand
00018164 g     F .text	00000060 _lseek
00019008 g     F .text	00000006 __cxa_pure_virtual
0001f728 g     F .text	000000a2 __lshift
00019ee8 g     F .text	0000001c .hidden __floatsisf
000165b8 g     F .text	00000020 uxListRemove
00018638  w    F .text	0000000e play_mp3::~play_mp3()
0001c1e4 g     F .text	00000024 _open_r
00014524  w    F .text	0000000c i2c2_device::writeReg(unsigned char, unsigned char)
00018c08 g     F .text	00000010 LabGPIOInterrupts::LabGPIOInterrupts()
000144e0 g     F .text	00000044 Storage::read(char const*, void*, unsigned int, unsigned int)
00011aee g     F .text	00000170 f_read
2007c7ac g     O .bss	00000200 buffer
0001c90a g     F .text	00000024 strncmp
000155a0 g     F .text	00000048 ADC_IRQHandler
00018f40 g     F .text	0000007c __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0001093c g     F .text	00000018 uart0_getchar
0001f572 g     F .text	00000118 __multiply
000120a6 g     F .text	0000005e f_readdir
0001023c g     F .text	00000010 isr_register
00017490 g     F .text	00000090 vTaskPriorityInherit
00012720 g     F .text	00000014 ff_cre_syncobj
20083fe0 g       .bss	00000000 _vStackTop
00022418 g     O .text	00000060 __month_lengths
0001c92e g     F .text	0000002a strncpy
2007d00c g     O .bss	00000028 __malloc_current_mallinfo
00016e5c g     F .text	00000074 vTaskResume
0001f9a8 g     F .text	0000009e __d2b
2007c6e4  w    O .bss	00000004 Storage::getSDDrive()::pSDCardDrive
000171e8 g     F .text	000000b8 vTaskSwitchContext
00019492 g     F .text	00000002 std::type_info::~type_info()
000151b0 g     F .text	0000001c Uart0::Uart0()
00010148  w    F .text	00000010 SSP1_IRQHandler
000216e8 g     O .text	0000001c vtable for CharDev
00018fbc g     F .text	0000002a __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0001c3c4 g     F .text	00000010 realloc
00014f40 g     F .text	00000028 CharDev::put(char const*, unsigned int)
000222e0 g     O .text	00000026 typeinfo name for __cxxabiv1::__vmi_class_type_info
0001365c g     F .text	0000004c wireless_service
00020af8 g     F .text	00000024 _strtoul_r
0001389c g     F .text	00000010 nordic_is_packet_available
00012a00 g     F .text	00000050 flash_read_sectors
000100e0 g       .text	00000000 __bss_section_table_end
0001a0f8 g     F .text	00000136 .hidden __aeabi_fdiv
0001de48 g     F .text	00000020 _close_r
2007c504  w    O .bss	00000004 SingletonTemplate<Uart0>::mpSingletonInstance
000197a4 g     F .text	00000022 .hidden __aeabi_i2d
00014068 g     F .text	00000100 mesh_init
00010180 g     F .text	00000014 bss_init(unsigned int, unsigned int)
0001485a g     F .text	00000108 I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)
00014c2c g     F .text	00000038 I2C_Base::handleInterrupt()
0001ae48 g     F .text	0000001e memcmp
00016450 g     F .text	00000028 scheduler_task::getTaskPtrByName(char const*)
00022178  w    O .text	00000020 vtable for uart_display
00010148  w    F .text	00000010 USB_IRQHandler
00019f04 g     F .text	0000008c .hidden __floatundisf
00018ee0 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0001c7dc g     F .text	00000054 sscanf
0001dd6c g     F .text	000000dc __swsetup_r
2007c520 g     O .bss	00000004 g_adc_mutex
00017780 g     F .text	00000038 vApplicationStackOverflowHook
0001a57c  w    F .text	00000002 .hidden __aeabi_ldiv0
000172a0 g     F .text	000000b0 vTaskSuspend
00019ac4 g     F .text	000001d0 .hidden __divdf3
0001aa10 g     F .text	00000078 __sfp
0001fa96 g     F .text	00000034 __copybits
00019494 g     F .text	00000004 std::type_info::__is_pointer_p() const
00017860  w    F .text	0000001c SingletonTemplate<LED>::getInstance()
00019ee0 g     F .text	00000024 .hidden __aeabi_ui2f
00010148  w    F .text	00000010 BOD_IRQHandler
2007c098 g     O .data	00000040 g_can_structs
0001dc14 g     F .text	00000058 _vsnprintf_r
00019870 g     F .text	00000254 .hidden __muldf3
0001c830 g     F .text	00000022 __sread
2007cca4 g     O .bss	0000000c mp3_cs
000164d2 g     F .text	0000001c delay_us
00013424 g     F .text	00000052 get_fattime
00018c28 g     F .text	0000002c handle_isr(isr_vector*, unsigned long)
00014cd4  w    F .text	00000014 UartDev::~UartDev()
00013912 g     F .text	00000038 nordic_set_crc
0002278c g     O .text	00002a55 APP_SYM_TABLE
0001096c g     F .text	0000001a uart0_puts
00015514  w    F .text	00000014 Uart2::~Uart2()
00014fe0 g     F .text	00000020 CharDev::CharDev()
00017f82 g     F .text	00000004 __malloc_lock
00022248 g     O .text	0000002c vtable for __cxxabiv1::__class_type_info
0001a778 g     F .text	00000054 _fflush_r
0001b38c g     F .text	0000001c _calloc_r
00014a64 g     F .text	00000094 I2C_Base::init(unsigned long, unsigned long)
0002236c g     O .text	00000020 __sf_fake_stdin
0001d900 g     F .text	00000002 __tz_lock
0001ab0c g     F .text	00000010 fopen
0001aeb0 g     F .text	00000010 memset
0001016a g     F .text	00000016 data_init(unsigned int, unsigned int, unsigned int)
000189ec g     F .text	0000009c main
00021704  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart0>
000164fc g     F .text	00000022 delay_ms
000137ce g     F .text	0000000e nordic_is_tx_fifo_empty
00014844 g     F .text	00000014 LabGPIO::getLevel()
00014732 g     F .text	00000004 Switches::init()
000184b0 g     F .text	000000b4 sys_get_mem_info
2007c300  w    O .bss	00000004 SingletonTemplate<IR_Sensor>::mpSingletonInstance
00013844 g     F .text	0000000c nordic_flush_tx_fifo
00019f14 g     F .text	0000007c .hidden __aeabi_l2f
0001c300 g     F .text	00000050 srand
0001641c g     F .text	00000034 scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)
00014e68 g     F .text	00000028 UartDev::UartDev(unsigned int*)
00014a08 g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
00011e0a g     F .text	0000008a f_sync
00010148  w    F .text	00000010 WDT_IRQHandler
00014648 g     F .text	00000018 LED_Display::setRightDigit(char)
000141dc g     F .text	000002d0 mesh_service
0001658a g     F .text	0000002e vListInsert
0002212c  w    O .text	0000000c typeinfo for uart_display
0001c8b2 g     F .text	00000008 __sclose
0001a658 g     F .text	00000010 fclose
2007c6e0  w    O .bss	00000004 guard variable for Storage::getSDDrive()::pSDCardDrive
0001d738 g     F .text	00000024 _strtol_r
00019cd4 g     F .text	0000009e .hidden __truncdfsf2
000155e8 g     F .text	00000074 adc0_init
0001f21c g     F .text	00000080 _findenv_r
0002278c g       .text	00000000 __init_array_end
00017640 g     F .text	00000024 vPortSVCHandler
0001dfa8 g     F .text	00000ba8 _dtoa_r
0001b4a4 g     F .text	000000bc _malloc_r
0001dd2c g     F .text	0000001a __ascii_wctomb
0001d788 g     F .text	00000028 time
00014010 g     F .text	00000058 mesh_send_formed_pkt
0001856a  w    F .text	00000002 uart_display::~uart_display()
000121cc g     F .text	000004f4 f_mkfs
00019814 g     F .text	0000005a .hidden __aeabi_l2d
00018cde  w    F .text	00000074 void std::vector<isr_vector*, std::allocator<isr_vector*> >::_M_emplace_back_aux<isr_vector*>(isr_vector*&&)
000146d8 g     F .text	00000050 LED::setAll(unsigned char)
00011944 g     F .text	0000007c f_mount
00017160 g     F .text	00000058 vTaskDelayUntil
00020b48 g     F .text	00000072 __submore
00020ca2 g     F .text	00000002 __env_unlock
00022218 g     O .text	0000000c typeinfo for __cxxabiv1::__class_type_info
0001457c g     F .text	0000001c IR_Sensor::storeIrCode(unsigned long)
0001ac40 g     F .text	00000038 _fwalk
00022138  w    O .text	00000020 vtable for play_mp3
00012006 g     F .text	00000086 f_opendir
0001a858 g     F .text	000000c4 _fgets_r
00016b24 g     F .text	00000068 xQueueReceiveFromISR
00019f04 g     F .text	0000008c .hidden __aeabi_ul2f
00018c54 g     F .text	00000078 LabGPIOInterrupts::handle_interrupt()
00022104  w    O .text	0000000b typeinfo name for read_file
0001307c g     F .text	000000b4 sd_write
0001679c g     F .text	00000032 xQueueGenericCreate
00021798  w    O .text	00000020 typeinfo for Uart3
00019f90 g     F .text	00000168 .hidden __mulsf3
00010108  w    F .text	00000010 isr_mem_fault
00014996 g     F .text	0000001a I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)
0001d904 g     F .text	0000000c _tzset_unlocked
0001c8d6 g     F .text	00000014 strcmp
0001c7dc g     F .text	00000054 siscanf
000167ce g     F .text	00000012 xQueueCreateCountingSemaphore
0001394a g     F .text	00000018 nordic_power_up
00018904  w    F .text	00000020 SingletonTemplate<Uart3>::getInstance()
00018060 g     F .text	0000000c sys_set_inchar_func
00010fdc g     F .text	000000d2 put_fat
00010148  w    F .text	00000010 QEI_IRQHandler
000100d8 g       .text	00000000 __bss_section_table
00020cc8 g     F .text	0000007a .hidden __nedf2
000216d4 g     O .text	00000008 typeinfo for CharDev
00017848  w    F .text	00000018 SingletonTemplate<Light_Sensor>::getInstance()
000147c8 g     F .text	00000038 LabGPIO::LabGPIO(unsigned char, unsigned char)
0001c208 g     F .text	00000030 iprintf
0001275e g     F .text	0000001e ff_rel_grant
00015258 g     F .text	0000001c Uart3::Uart3()
00018ef4 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00017088 g     F .text	000000d8 xTaskResumeAll
000203d0 g     F .text	000002a8 __svfiscanf_r
00011eb8 g     F .text	0000014e f_lseek
0001a848 g     F .text	00000010 fgetc
0001c794 g     F .text	00000048 sprintf
00014cc0  w    F .text	00000014 UartDev::~UartDev()
00016ed0 g     F .text	00000064 vTaskStartScheduler
0001b618 g     F .text	0000006a __exponent
00021790  w    O .text	00000007 typeinfo name for Uart3
0001455a g     F .text	00000020 Acceleration_Sensor::init()
00019002 g     F .text	00000006 __cxa_guard_release
00014fe0 g     F .text	00000020 CharDev::CharDev()
0001dd48 g     F .text	00000024 _write_r
000216b8 g     O .text	0000001c vtable for UartDev
00014d74 g     F .text	00000034 UartDev::setBaudRate(unsigned int)
0001c578 g     F .text	00000030 scanf
2007c6d0  w    O .bss	00000004 SingletonTemplate<Light_Sensor>::mpSingletonInstance
00019d74 g     F .text	0000016c .hidden __aeabi_frsub
00022308 g     O .text	0000002c vtable for __cxxabiv1::__vmi_class_type_info
00010148  w    F .text	00000010 EINT0_IRQHandler
00018054 g     F .text	0000000c sys_set_outchar_func
00012c08 g     F .text	0000002c flash_chip_erase
0001c704 g     F .text	00000008 nanf
0001baf4 g     F .text	000000ee _printf_common
0001565c g     F .text	00000074 adc0_get_reading
2007c0e4 g     O .data	00000004 _impure_ptr
00016496 g     F .text	0000003c u0_dbg_printf
0001a668 g     F .text	00000110 __sflush_r
00019f90 g     F .text	00000168 .hidden __aeabi_fmul
00021750  w    O .text	0000001c vtable for Uart0
0001ab1c g     F .text	00000004 _fseek_r
00022788 g       .text	00000000 __preinit_array_end
0001fc10 g     F .text	000001e8 _svfiprintf_r
0001c3e8 g     F .text	00000118 __srefill_r
00012cbc g     F .text	00000024 power_off
000147a4 g     F .text	00000024 I2C_Temp::getFarenheit()
0001ae08 g     F .text	00000024 __ascii_mbtowc
2007c000 g       .data	00000000 _data
000158bc g     F .text	00000014 I2C2::I2C2()
000104b2 g     F .text	00000006 __set_MSP
0001f8bc g     F .text	00000048 __ulp
00015204  w    F .text	00000014 Uart3::~Uart3()
00015528  w    F .text	00000014 Uart2::~Uart2()
00017444 g     F .text	0000000c vTaskMissedYield
000137e4 g     F .text	0000000c nordic_queue_tx_fifo
2007d068 g       .bss	00000000 _pvHeapStart
00010954 g     F .text	00000018 uart0_putchar
000100e0 g       .text	00000000 __section_table_end
0001b378 g     F .text	00000014 mallinfo
000149b0 g     F .text	00000014 I2C_Base::writeRegisters(unsigned char, unsigned char*, unsigned long)
00015218 g     F .text	00000040 Uart3::init(unsigned int, int, int)
00016478 g     F .text	0000001e u0_dbg_put
000220eb  w    O .text	0000000a typeinfo name for play_mp3
00014da8 g     F .text	000000c0 UartDev::handleInterrupt()
000149f4 g     F .text	00000014 I2C_Base::checkDeviceResponse(unsigned char)
0001dc14 g     F .text	00000058 _vsniprintf_r
00016b8c g     F .text	00000012 uxQueueMessagesWaiting
000169f0 g     F .text	00000134 xQueueGenericReceive
00019c94 g     F .text	00000040 .hidden __aeabi_d2uiz
00014a08 g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
2007d05c g     O .bss	00000004 _timezone
00012db8 g     F .text	0000008c send_cmd
00018e3c g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
00015188  w    F .text	00000014 Uart0::~Uart0()
00016f7c g     F .text	0000010c xTaskIncrementTick
0001feac g     F .text	000002a8 __ssvfiscanf_r
00013962 g     F .text	00000016 nordic_power_down
00015718 g     F .text	00000068 rtc_settime
2007c6e8  w    O .bss	00000004 guard variable for Storage::getFlashDrive()::pFlashDrive
00010ea0 g     F .text	00000016 clust2sect
000194e8 g     F .text	00000018 .hidden __aeabi_llsl
00010324 g     F .text	00000038 sys_get_mem_info_str
0001ad20 g     F .text	00000048 __swhatbuf_r
2007c0e0 g     O .data	00000004 __cxxabiv1::__terminate_handler
000104b8 g     F .text	00000006 __set_BASEPRI
00020d64 g     F .text	00000012 .hidden __aeabi_dcmpeq
00015438 g     F .text	0000001c ssp1_dma_init
0001553c g     F .text	0000001c Uart2::Uart2()
00022274 g     O .text	0000000c typeinfo for __cxxabiv1::__si_class_type_info
00016730 g     F .text	0000006c xQueueGenericReset
000181c4 g     F .text	000000a4 _write
2007c300 g       .data	00000000 _edata
000190d6 g     F .text	00000292 __cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00014698 g     F .text	0000003a LED_Display::setNumber(char)
000144ac g     F .text	00000034 mesh_get_pnd_pkt_count
00012b40 g     F .text	00000020 flash_get_page_count
00014962 g     F .text	0000000c I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)
00011c5e g     F .text	000001ac f_write
00014750 g     F .text	00000022 I2C_Temp::init()
00012a50 g     F .text	0000004c flash_write_sectors
0001857c g     F .text	0000002c restart_isr()
0001d910 g     F .text	00000304 _tzset_unlocked_r
00016cb8 g     F .text	000001a4 xTaskCreate
0001a230 g     F .text	0000003e .hidden __aeabi_f2uiz
00015000 g     F .text	00000018 CharDev::~CharDev()
0001c856 g     F .text	00000038 __swrite
000184a8 g     F .text	00000004 operator new(unsigned int)
000119c0 g     F .text	0000012e f_open
000190ac  w    F .text	0000002a __cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
000133ba g     F .text	00000038 disk_write
00012a9c g     F .text	00000036 flash_ioctl
000139ec g     F .text	0000002c nordic_set_auto_transmit_options
00015fa4 g     F .text	00000014 c_list_create
000201a4 g     F .text	0000022c _vfiprintf_r
00010000 g     O .text	000000cc g_pfnVectors
0001604a  w    F .text	00000004 scheduler_task::regTlm()
0001ac78 g     F .text	0000003c _fwalk_reent
00018f08 g     F .text	00000038 __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00019ee0 g     F .text	00000024 .hidden __floatunsisf
0001f7fe g     F .text	000000be __mdiff
00015000 g     F .text	00000018 CharDev::~CharDev()
00020df4 g     F .text	0000004e .hidden __aeabi_d2iz
000194c4 g     F .text	00000008 __cxxabiv1::__terminate(void (*)())
00012738 g     F .text	00000026 ff_req_grant
2007c6cc  w    O .bss	00000004 SingletonTemplate<Switches>::mpSingletonInstance
00018570 g     F .text	0000000c c_eint3_handler()
0001806c g     F .text	00000010 _kill
00010148  w    F .text	00000010 DMA_IRQHandler
00015908 g     F .text	00000024 tlm_component_get_by_name
000171b8 g     F .text	00000030 vTaskDelay
0001aa8a g     F .text	00000002 __sfp_lock_release
00014af8  w    F .text	00000028 I2C_Base::setStop()
00016210 g     F .text	000001b0 scheduler_init_all(bool)
0002238c g     O .text	00000020 __sf_fake_stdout
0001c794 g     F .text	00000048 siprintf
2007c774  w    O .bss	00000004 play_mp3::run(void*)::size
000209a0 g     F .text	0000005e __sccl
0001a58e g     F .text	00000008 atoi
00017f08 g     F .text	0000007a _gettimeofday
00017470 g     F .text	00000020 xTaskGetSchedulerState
0002253c g     O .text	00000101 _ctype_
000180c8 g     F .text	0000009c _read
00022788 g       .text	00000000 __init_array_start
0001a57c  w    F .text	00000002 .hidden __aeabi_idiv0
00020dc8 g     F .text	0000002c .hidden __unorddf2
000218f8  w    O .text	00000008 typeinfo for scheduler_task
00015ed8 g     F .text	000000cc logger_init
00018d54 g     F .text	000000a8 LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)
0001a230 g     F .text	0000003e .hidden __fixunssfsi
0002211c  w    O .text	0000000f typeinfo name for uart_display
0001aa8c g     F .text	00000080 _fopen_r
0001807c g     F .text	00000010 _exit
00010128  w    F .text	00000010 isr_usage_fault
00014728 g     F .text	00000004 Light_Sensor::init()
0001ad68 g     F .text	00000080 __smakebuf_r
0001c8fa g     F .text	00000010 strlen
00013382 g     F .text	00000038 disk_read
00017614 g     F .text	00000024 pxPortInitialiseStack
0001bbe4 g     F .text	00000240 _printf_i
0001acfc g     F .text	00000006 __locale_ctype_ptr_l
00022334 g     O .text	00000008 typeinfo for std::type_info
00020d54 g     F .text	00000010 .hidden __aeabi_cdcmpeq
00020cb8 g     F .text	0000008a .hidden __gedf2
00015274 g     F .text	00000024 UART3_IRQHandler
0001ec74 g     F .text	0000043e __gethex
2007d038 g     O .bss	00000004 __malloc_sbrk_start
00010148  w    F .text	00000010 MCPWM_IRQHandler
0001de68 g     F .text	00000028 div
0001c8ba g     F .text	0000001c strchr
00012104 g     F .text	000000c8 f_getfree
000173e0 g     F .text	00000018 vTaskSetTimeOutState
000126c0 g     F .text	0000003c ff_convert
000197c8 g     F .text	0000003a .hidden __aeabi_f2d
00017668 g     F .text	00000020 vPortEnterCritical
00018646  w    F .text	00000010 read_file::~read_file()
0002278c g       .text	00000000 __symbol_table_start
00012e44 g     F .text	00000024 sd_update_card_status
00012b18 g     F .text	00000028 flash_read_permanent_id
2007d034 g     O .bss	00000004 __malloc_free_list
00015a48 g     F .text	00000028 tlm_variable_get_by_name
2007c6d8  w    O .bss	00000004 SingletonTemplate<LED_Display>::mpSingletonInstance
00013808 g     F .text	00000010 nordic_rx_to_Stanby1
0001856e  w    F .text	00000002 play_mp3::~play_mp3()
00016b9e g     F .text	00000004 uxQueueMessagesWaitingFromISR
00020ca0 g     F .text	00000002 __env_lock
00019508 g     F .text	0000027a .hidden __subdf3
000201a4 g     F .text	0000022c _vfprintf_r
00022788 g       .text	00000000 __preinit_array_start
000218e4  w    O .text	00000011 typeinfo name for scheduler_task
0001f502 g     F .text	0000005e __lo0bits
000203d0 g     F .text	000002a8 __svfscanf_r
0001d7b0 g     F .text	00000150 __tzcalc_limits
000175a8 g     F .text	00000028 vRunTimeStatIsrEntry
00020bbc g     F .text	000000e4 _ungetc_r
00018564 g     F .text	00000004 __aeabi_atexit
00019498 g     F .text	0000002c std::type_info::operator==(std::type_info const&) const
00018fea g     F .text	00000018 __cxa_guard_acquire
00010148  w    F .text	00000010 ENET_IRQHandler
00010148  w    F .text	00000010 USBAct_IRQHandler
000168e4 g     F .text	00000024 xQueueCreateMutex
0001856c  w    F .text	00000002 read_file::~read_file()
00019d80 g     F .text	00000160 .hidden __addsf3
00014800 g     F .text	00000012 LabGPIO::setAsInput()
2007c148 g     O .data	0000016c __global_locale
000139c8 g     F .text	00000024 nordic_set_power_level
00010138  w    F .text	00000010 isr_debug_mon
2007c788 g     O .bss	0000000c btn_1
00016988 g     F .text	00000068 xQueueGiveFromISR
0001f2d0 g     F .text	00000008 __gettzinfo
0001c75c g     F .text	00000010 raise
000183b4 g     F .text	00000054 _close
0001adf8 g     F .text	00000010 free
0001be24  w    F .text	000003c0 _scanf_float
00021730  w    O .text	00000020 typeinfo for Uart0
00013130 g     F .text	0000021c sd_ioctl
0001f3d2 g     F .text	00000076 __multadd
00018e50 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001f3a4 g     F .text	0000002e _Bfree
00014e90 g     F .text	000000ac UartDev::init(unsigned int, unsigned int, int, int)
0001f29c g     F .text	0000000e _getenv_r
00010430 g     F .text	00000034 lpc_pconp
0001777c g     F .text	00000004 vApplicationIdleHook



Disassembly of section .text:

00010000 <g_pfnVectors>:
   10000:	e0 3f 08 20 95 01 01 00 fb 00 01 00 e1 00 01 00     .?. ............
   10010:	09 01 01 00 19 01 01 00 29 01 01 00 00 00 00 00     ........).......
	...
   1002c:	41 76 01 00 39 01 01 00 00 00 00 00 a1 76 01 00     Av..9........v..
   1003c:	59 01 01 00 01 02 01 00 01 02 01 00 01 02 01 00     Y...............
   1004c:	01 02 01 00 01 02 01 00 01 02 01 00 01 02 01 00     ................
   1005c:	01 02 01 00 01 02 01 00 01 02 01 00 01 02 01 00     ................
   1006c:	01 02 01 00 01 02 01 00 01 02 01 00 01 02 01 00     ................
   1007c:	01 02 01 00 01 02 01 00 01 02 01 00 01 02 01 00     ................
   1008c:	01 02 01 00 01 02 01 00 01 02 01 00 01 02 01 00     ................
   1009c:	01 02 01 00 01 02 01 00 01 02 01 00 01 02 01 00     ................
   100ac:	01 02 01 00 01 02 01 00 01 02 01 00 01 02 01 00     ................
   100bc:	01 02 01 00 01 02 01 00 01 02 01 00 01 02 01 00     ................

000100cc <__data_section_table>:
__data_section_table():
   100cc:	000251ec 	.word	0x000251ec
   100d0:	2007c000 	.word	0x2007c000
   100d4:	00000300 	.word	0x00000300

000100d8 <__bss_section_table>:
__bss_section_table():
   100d8:	2007c300 	.word	0x2007c300
   100dc:	00000d68 	.word	0x00000d68

000100e0 <isr_hard_fault>:
isr_hard_fault():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:396
            "MRS    R0, PSP \n"
            "B      isr_hard_fault_handler  \n"
            "_MSP:  \n"
            "MRS    R0, MSP \n"
            "B      isr_hard_fault_handler  \n"
    ) ;
   100e0:	2004      	movs	r0, #4
   100e2:	4671      	mov	r1, lr
   100e4:	4208      	tst	r0, r1
   100e6:	d003      	beq.n	100f0 <_MSP>
   100e8:	f3ef 8009 	mrs	r0, PSP
   100ec:	f000 b8ae 	b.w	1024c <isr_hard_fault_handler>

000100f0 <_MSP>:
   100f0:	f3ef 8008 	mrs	r0, MSP
   100f4:	f000 b8aa 	b.w	1024c <isr_hard_fault_handler>
   100f8:	4770      	bx	lr

000100fa <isr_nmi>:
isr_nmi():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:399
}

__attribute__ ((section(".after_vectors"))) void isr_nmi(void)        { u0_dbg_put("NMI Fault\n"); while(1); }
   100fa:	b508      	push	{r3, lr}
   100fc:	4801      	ldr	r0, [pc, #4]	; (10104 <isr_nmi+0xa>)
   100fe:	f006 f9bb 	bl	16478 <u0_dbg_put>
   10102:	e7fe      	b.n	10102 <isr_nmi+0x8>
   10104:	00020e7b 	.word	0x00020e7b

00010108 <isr_mem_fault>:
isr_mem_fault():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:400
__attribute__ ((section(".after_vectors"))) void isr_mem_fault(void)  { u0_dbg_put("Mem Fault\n"); while(1); }
   10108:	b508      	push	{r3, lr}
   1010a:	4802      	ldr	r0, [pc, #8]	; (10114 <isr_mem_fault+0xc>)
   1010c:	f006 f9b4 	bl	16478 <u0_dbg_put>
   10110:	e7fe      	b.n	10110 <isr_mem_fault+0x8>
   10112:	bf00      	nop
   10114:	00020e86 	.word	0x00020e86

00010118 <isr_bus_fault>:
isr_bus_fault():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:401
__attribute__ ((section(".after_vectors"))) void isr_bus_fault(void)  { u0_dbg_put("BUS Fault\n"); while(1); }
   10118:	b508      	push	{r3, lr}
   1011a:	4802      	ldr	r0, [pc, #8]	; (10124 <isr_bus_fault+0xc>)
   1011c:	f006 f9ac 	bl	16478 <u0_dbg_put>
   10120:	e7fe      	b.n	10120 <isr_bus_fault+0x8>
   10122:	bf00      	nop
   10124:	00020e91 	.word	0x00020e91

00010128 <isr_usage_fault>:
isr_usage_fault():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:402
__attribute__ ((section(".after_vectors"))) void isr_usage_fault(void){ u0_dbg_put("Usage Fault\n"); while(1); }
   10128:	b508      	push	{r3, lr}
   1012a:	4802      	ldr	r0, [pc, #8]	; (10134 <isr_usage_fault+0xc>)
   1012c:	f006 f9a4 	bl	16478 <u0_dbg_put>
   10130:	e7fe      	b.n	10130 <isr_usage_fault+0x8>
   10132:	bf00      	nop
   10134:	00020e9c 	.word	0x00020e9c

00010138 <isr_debug_mon>:
isr_debug_mon():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:403
__attribute__ ((section(".after_vectors"))) void isr_debug_mon(void)  { u0_dbg_put("DBGMON Fault\n"); while(1); }
   10138:	b508      	push	{r3, lr}
   1013a:	4802      	ldr	r0, [pc, #8]	; (10144 <isr_debug_mon+0xc>)
   1013c:	f006 f99c 	bl	16478 <u0_dbg_put>
   10140:	e7fe      	b.n	10140 <isr_debug_mon+0x8>
   10142:	bf00      	nop
   10144:	00020ea9 	.word	0x00020ea9

00010148 <isr_default_handler>:
TIMER2_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:406

/// If an IRQ is not registered, we end up at this stub function
__attribute__ ((section(".after_vectors"))) void isr_default_handler(void) { u0_dbg_put("IRQ not registered!"); while(1); }
   10148:	b508      	push	{r3, lr}
   1014a:	4802      	ldr	r0, [pc, #8]	; (10154 <isr_default_handler+0xc>)
   1014c:	f006 f994 	bl	16478 <u0_dbg_put>
   10150:	e7fe      	b.n	10150 <isr_default_handler+0x8>
   10152:	bf00      	nop
   10154:	00020eb7 	.word	0x00020eb7

00010158 <isr_sys_tick>:
isr_sys_tick():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:410

/// Wrap the FreeRTOS tick function such that we get a true measure of how much CPU tasks are using
__attribute__ ((section(".after_vectors"))) void isr_sys_tick(void)
{
   10158:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:411
    vRunTimeStatIsrEntry();
   1015a:	f007 fa25 	bl	175a8 <vRunTimeStatIsrEntry>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:412
    xPortSysTickHandler();
   1015e:	f007 fac1 	bl	176e4 <xPortSysTickHandler>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:414
    vRunTimeStatIsrExit();
}
   10162:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:413
    vRunTimeStatIsrExit();
   10166:	f007 ba33 	b.w	175d0 <vRunTimeStatIsrExit>

0001016a <data_init(unsigned int, unsigned int, unsigned int)>:
_Z9data_initjjj():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:195
{
   1016a:	460b      	mov	r3, r1
   1016c:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:200
        *pulDest++ = *pulSrc++;
   1016e:	1a40      	subs	r0, r0, r1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:199 (discriminator 3)
    for (loop = 0; loop < len; loop = loop + 4)
   10170:	1a5c      	subs	r4, r3, r1
   10172:	42a2      	cmp	r2, r4
   10174:	d903      	bls.n	1017e <data_init(unsigned int, unsigned int, unsigned int)+0x14>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:200 (discriminator 2)
        *pulDest++ = *pulSrc++;
   10176:	58c4      	ldr	r4, [r0, r3]
   10178:	f843 4b04 	str.w	r4, [r3], #4
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:199 (discriminator 2)
    for (loop = 0; loop < len; loop = loop + 4)
   1017c:	e7f8      	b.n	10170 <data_init(unsigned int, unsigned int, unsigned int)+0x6>
   1017e:	bd10      	pop	{r4, pc}

00010180 <bss_init(unsigned int, unsigned int)>:
_Z8bss_initjj():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:206
    unsigned int *pulDest = (unsigned int*) start;
   10180:	4603      	mov	r3, r0
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:209
        *pulDest++ = 0;
   10182:	2200      	movs	r2, #0
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:205
{
   10184:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:208 (discriminator 3)
    for (loop = 0; loop < len; loop = loop + 4)
   10186:	1a1c      	subs	r4, r3, r0
   10188:	42a1      	cmp	r1, r4
   1018a:	d902      	bls.n	10192 <bss_init(unsigned int, unsigned int)+0x12>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:209 (discriminator 2)
        *pulDest++ = 0;
   1018c:	f843 2b04 	str.w	r2, [r3], #4
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:208 (discriminator 2)
    for (loop = 0; loop < len; loop = loop + 4)
   10190:	e7f9      	b.n	10186 <bss_init(unsigned int, unsigned int)+0x6>
   10192:	bd10      	pop	{r4, pc}

00010194 <isr_reset>:
isr_reset():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:238
        __set_PSP(topOfStack);
   10194:	4815      	ldr	r0, [pc, #84]	; (101ec <isr_reset+0x58>)
   10196:	f000 f989 	bl	104ac <__set_PSP>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:239
        __set_MSP(topOfStack);
   1019a:	4814      	ldr	r0, [pc, #80]	; (101ec <isr_reset+0x58>)
   1019c:	f000 f989 	bl	104b2 <__set_MSP>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:248
        SectionTableAddr = &__data_section_table;
   101a0:	4c13      	ldr	r4, [pc, #76]	; (101f0 <isr_reset+0x5c>)
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:251
        while (SectionTableAddr < &__data_section_table_end)
   101a2:	4d14      	ldr	r5, [pc, #80]	; (101f4 <isr_reset+0x60>)
   101a4:	42ac      	cmp	r4, r5
   101a6:	d309      	bcc.n	101bc <isr_reset+0x28>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:261
        while (SectionTableAddr < &__bss_section_table_end)
   101a8:	4d13      	ldr	r5, [pc, #76]	; (101f8 <isr_reset+0x64>)
   101aa:	42ac      	cmp	r4, r5
   101ac:	d20e      	bcs.n	101cc <isr_reset+0x38>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:263
            ExeAddr = *SectionTableAddr++;
   101ae:	f854 0b08 	ldr.w	r0, [r4], #8
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:265
            bss_init(ExeAddr, SectionLen);
   101b2:	f854 1c04 	ldr.w	r1, [r4, #-4]
   101b6:	f7ff ffe3 	bl	10180 <bss_init(unsigned int, unsigned int)>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:261
        while (SectionTableAddr < &__bss_section_table_end)
   101ba:	e7f6      	b.n	101aa <isr_reset+0x16>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:254
            ExeAddr = *SectionTableAddr++;
   101bc:	e894 0003 	ldmia.w	r4, {r0, r1}
   101c0:	340c      	adds	r4, #12
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:256
            data_init(LoadAddr, ExeAddr, SectionLen);
   101c2:	f854 2c04 	ldr.w	r2, [r4, #-4]
   101c6:	f7ff ffd0 	bl	1016a <data_init(unsigned int, unsigned int, unsigned int)>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:251
        while (SectionTableAddr < &__data_section_table_end)
   101ca:	e7eb      	b.n	101a4 <isr_reset+0x10>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:270
        __libc_init_array();    // Call C++ library initialization
   101cc:	f00a fd72 	bl	1acb4 <__libc_init_array>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:274
        low_level_init();   // Initialize minimal system, such as Clock & UART
   101d0:	f000 fa70 	bl	106b4 <low_level_init()>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:275
        high_level_init();  // Initialize high level board specific features
   101d4:	f007 fbe8 	bl	179a8 <high_level_init()>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:276
        main();             // Finally call main()
   101d8:	f008 fc08 	bl	189ec <main>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:280
    uart0_init(SYS_CFG_UART0_BPS);
   101dc:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   101e0:	f000 fb7c 	bl	108dc <uart0_init>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:281
    u0_dbg_put("main() should never exit on this system\n");
   101e4:	4805      	ldr	r0, [pc, #20]	; (101fc <isr_reset+0x68>)
   101e6:	f006 f947 	bl	16478 <u0_dbg_put>
   101ea:	e7fe      	b.n	101ea <isr_reset+0x56>
   101ec:	20083fe0 	.word	0x20083fe0
   101f0:	000100cc 	.word	0x000100cc
   101f4:	000100d8 	.word	0x000100d8
   101f8:	000100e0 	.word	0x000100e0
   101fc:	00020ecb 	.word	0x00020ecb

00010200 <isr_forwarder_routine>:
isr_forwarder_routine():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:350
{
   10200:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:354
    vRunTimeStatIsrEntry();
   10202:	f007 f9d1 	bl	175a8 <vRunTimeStatIsrEntry>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   10206:	4b09      	ldr	r3, [pc, #36]	; (1022c <isr_forwarder_routine+0x2c>)
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:368
    if (isr_default_handler == isr_to_service)
   10208:	4a09      	ldr	r2, [pc, #36]	; (10230 <isr_forwarder_routine+0x30>)
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   1020a:	7819      	ldrb	r1, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:363
    isr_func_t isr_to_service = g_isr_array[isr_num];
   1020c:	4b09      	ldr	r3, [pc, #36]	; (10234 <isr_forwarder_routine+0x34>)
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   1020e:	3910      	subs	r1, #16
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:363
    isr_func_t isr_to_service = g_isr_array[isr_num];
   10210:	b2c9      	uxtb	r1, r1
   10212:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:368
    if (isr_default_handler == isr_to_service)
   10216:	4293      	cmp	r3, r2
   10218:	d103      	bne.n	10222 <isr_forwarder_routine+0x22>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:370
        u0_dbg_printf("%u IRQ was triggered, but no IRQ service was defined!\n", isr_num);
   1021a:	4807      	ldr	r0, [pc, #28]	; (10238 <isr_forwarder_routine+0x38>)
   1021c:	f006 f93b 	bl	16496 <u0_dbg_printf>
   10220:	e7fe      	b.n	10220 <isr_forwarder_routine+0x20>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:375
        isr_to_service();
   10222:	4798      	blx	r3
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:381
}
   10224:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:380
    vRunTimeStatIsrExit();
   10228:	f007 b9d2 	b.w	175d0 <vRunTimeStatIsrExit>
   1022c:	e000ed04 	.word	0xe000ed04
   10230:	00010149 	.word	0x00010149
   10234:	2007c000 	.word	0x2007c000
   10238:	00020e44 	.word	0x00020e44

0001023c <isr_register>:
isr_register():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:338
    if (num >= 0) {
   1023c:	2800      	cmp	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:339
        g_isr_array[num] = isr_func_ptr;
   1023e:	bfa4      	itt	ge
   10240:	4b01      	ldrge	r3, [pc, #4]	; (10248 <isr_register+0xc>)
   10242:	f843 1020 	strge.w	r1, [r3, r0, lsl #2]
   10246:	4770      	bx	lr
   10248:	2007c000 	.word	0x2007c000

0001024c <isr_hard_fault_handler>:
isr_hard_fault_handler():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:433
    volatile unsigned int stacked_r12 ;
    volatile unsigned int stacked_lr ;
    volatile unsigned int stacked_pc ;
    volatile unsigned int stacked_psr ;

    stacked_r0 = ((unsigned long)hardfault_args[0]) ;
   1024c:	6803      	ldr	r3, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:423
{
   1024e:	b088      	sub	sp, #32
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:433
    stacked_r0 = ((unsigned long)hardfault_args[0]) ;
   10250:	9300      	str	r3, [sp, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:434
    stacked_r1 = ((unsigned long)hardfault_args[1]) ;
   10252:	6843      	ldr	r3, [r0, #4]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:442
    stacked_r12 = ((unsigned long)hardfault_args[4]) ;
    stacked_lr = ((unsigned long)hardfault_args[5]) ;
    stacked_pc = ((unsigned long)hardfault_args[6]) ;
    stacked_psr = ((unsigned long)hardfault_args[7]) ;

    FAULT_EXISTS = FAULT_PRESENT_VAL;
   10254:	4a11      	ldr	r2, [pc, #68]	; (1029c <isr_hard_fault_handler+0x50>)
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:434
    stacked_r1 = ((unsigned long)hardfault_args[1]) ;
   10256:	9301      	str	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:435
    stacked_r2 = ((unsigned long)hardfault_args[2]) ;
   10258:	6883      	ldr	r3, [r0, #8]
   1025a:	9302      	str	r3, [sp, #8]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:436
    stacked_r3 = ((unsigned long)hardfault_args[3]) ;
   1025c:	68c3      	ldr	r3, [r0, #12]
   1025e:	9303      	str	r3, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:437
    stacked_r12 = ((unsigned long)hardfault_args[4]) ;
   10260:	6903      	ldr	r3, [r0, #16]
   10262:	9304      	str	r3, [sp, #16]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:438
    stacked_lr = ((unsigned long)hardfault_args[5]) ;
   10264:	6943      	ldr	r3, [r0, #20]
   10266:	9305      	str	r3, [sp, #20]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:439
    stacked_pc = ((unsigned long)hardfault_args[6]) ;
   10268:	6983      	ldr	r3, [r0, #24]
   1026a:	9306      	str	r3, [sp, #24]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:440
    stacked_psr = ((unsigned long)hardfault_args[7]) ;
   1026c:	69c3      	ldr	r3, [r0, #28]
   1026e:	9307      	str	r3, [sp, #28]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:442
    FAULT_EXISTS = FAULT_PRESENT_VAL;
   10270:	4b0b      	ldr	r3, [pc, #44]	; (102a0 <isr_hard_fault_handler+0x54>)
   10272:	649a      	str	r2, [r3, #72]	; 0x48
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:443
    FAULT_PC = stacked_pc;
   10274:	9a06      	ldr	r2, [sp, #24]
   10276:	64da      	str	r2, [r3, #76]	; 0x4c
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:444
    FAULT_LR = stacked_lr - 1;
   10278:	9a05      	ldr	r2, [sp, #20]
   1027a:	3a01      	subs	r2, #1
   1027c:	651a      	str	r2, [r3, #80]	; 0x50
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:445
    FAULT_PSR = stacked_psr;
   1027e:	9a07      	ldr	r2, [sp, #28]
   10280:	655a      	str	r2, [r3, #84]	; 0x54
sys_reboot():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    /**
     * From the datasheet:
     * After writing 0xAA to WDFEED, access to any Watchdog register other than writing
     * 0x55 to WDFEED causes an immediate reset/interrupt when the Watchdog is enabled.
     */
    LPC_WDT->WDFEED = 0xAA;
   10282:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   10286:	22aa      	movs	r2, #170	; 0xaa
   10288:	721a      	strb	r2, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   1028a:	2200      	movs	r2, #0
   1028c:	701a      	strb	r2, [r3, #0]
isr_hard_fault_handler():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:450

    sys_reboot();

    /* Prevent compiler warnings */
    (void) stacked_r0 ;
   1028e:	9b00      	ldr	r3, [sp, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:451
    (void) stacked_r1 ;
   10290:	9b01      	ldr	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:452
    (void) stacked_r2 ;
   10292:	9b02      	ldr	r3, [sp, #8]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:453
    (void) stacked_r3 ;
   10294:	9b03      	ldr	r3, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:454
    (void) stacked_r12 ;
   10296:	9b04      	ldr	r3, [sp, #16]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:455
}
   10298:	b008      	add	sp, #32
   1029a:	4770      	bx	lr
   1029c:	deadbeef 	.word	0xdeadbeef
   102a0:	40024000 	.word	0x40024000

000102a4 <lpc_sys_setup_system_timer>:
lpc_sys_setup_system_timer():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    // Initialize the timer structure pointer
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);

    // Setup the timer to tick with a fine-grain resolution
    const uint32_t one_micro_second = 1;
    lpc_timer_enable(sys_timer_source, one_micro_second);
   102a4:	2101      	movs	r1, #1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:54
{
   102a6:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:62
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);
   102a8:	4b0f      	ldr	r3, [pc, #60]	; (102e8 <lpc_sys_setup_system_timer+0x44>)
   102aa:	4c10      	ldr	r4, [pc, #64]	; (102ec <lpc_sys_setup_system_timer+0x48>)
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    lpc_timer_enable(sys_timer_source, one_micro_second);
   102ac:	4608      	mov	r0, r1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:62
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);
   102ae:	6023      	str	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    lpc_timer_enable(sys_timer_source, one_micro_second);
   102b0:	f005 f88c 	bl	153cc <lpc_timer_enable>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:72

    /**
     * MR0: Setup the match register to take care of the overflow.
     * Upon the roll-over, we increment the roll-over count and the timer restarts from zero.
     */
    gp_timer_ptr->MR0 = UINT32_MAX;
   102b4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   102b8:	6823      	ldr	r3, [r4, #0]
   102ba:	619a      	str	r2, [r3, #24]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:75

    // MR1: Setup the periodic interrupt to do background processing
    gp_timer_ptr->MR1 = LPC_SYS_TIME_FOR_BCKGND_TASK_US;
   102bc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   102c0:	61da      	str	r2, [r3, #28]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:79

#if (1 == SYS_CFG_SYS_TIMER)
    // MR2: IR code timeout when timer1 is used since IR receiver is tied to timer1 capture pin
    gp_timer_ptr->MR2 = 0;
   102c2:	2200      	movs	r2, #0
   102c4:	621a      	str	r2, [r3, #32]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:85
#else
    #warning "IR receiver will not work unless SYS_CFG_SYS_TIMER uses TIMER1, so set it to 1 if possible"
#endif

    /* Setup the first match interrupt to reset the watchdog */
    gp_timer_ptr->MR3 = LPC_SYS_WATCHDOG_RESET_TIME_US;
   102c6:	4a0a      	ldr	r2, [pc, #40]	; (102f0 <lpc_sys_setup_system_timer+0x4c>)
   102c8:	625a      	str	r2, [r3, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:88

    // Enable the timer match interrupts
    gp_timer_ptr->MCR = (mr0_mcr_for_overflow | mr1_mcr_for_mesh_bckgnd_task | mr3_mcr_for_watchdog_reset);
   102ca:	f240 2209 	movw	r2, #521	; 0x209
   102ce:	615a      	str	r2, [r3, #20]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:92

    // Only if we have got TIMER1, we can use IR sensor timeout match interrupt
#if (1 == SYS_CFG_SYS_TIMER)
    gp_timer_ptr->MCR |= (mr2_mcr_for_ir_sensor_timeout);
   102d0:	695a      	ldr	r2, [r3, #20]
   102d2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   102d6:	615a      	str	r2, [r3, #20]
NVIC_SetPriority():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   102d8:	2218      	movs	r2, #24
   102da:	4b06      	ldr	r3, [pc, #24]	; (102f4 <lpc_sys_setup_system_timer+0x50>)
   102dc:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
NVIC_EnableIRQ():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   102e0:	2204      	movs	r2, #4
   102e2:	601a      	str	r2, [r3, #0]
   102e4:	bd10      	pop	{r4, pc}
   102e6:	bf00      	nop
   102e8:	40008000 	.word	0x40008000
   102ec:	2007c308 	.word	0x2007c308
   102f0:	0016e360 	.word	0x0016e360
   102f4:	e000e100 	.word	0xe000e100

000102f8 <sys_get_uptime_us>:
sys_get_uptime_us():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
     * and pick up the new rollover count.  This avoid critical section and simplifies
     * the logic of reading higher 16-bit (roll-over) and lower 32-bit (timer value).
     */
    do
    {
        before    = gp_timer_ptr->TC;
   102f8:	4b08      	ldr	r3, [pc, #32]	; (1031c <sys_get_uptime_us+0x24>)
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:104
{
   102fa:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
        before    = gp_timer_ptr->TC;
   102fc:	681b      	ldr	r3, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   102fe:	4c08      	ldr	r4, [pc, #32]	; (10320 <sys_get_uptime_us+0x28>)
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
        before    = gp_timer_ptr->TC;
   10300:	689a      	ldr	r2, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   10302:	8821      	ldrh	r1, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:120
        after     = gp_timer_ptr->TC;
   10304:	6898      	ldr	r0, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   10306:	b289      	uxth	r1, r1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:121
    } while (after < before);
   10308:	4282      	cmp	r2, r0
   1030a:	d8f9      	bhi.n	10300 <sys_get_uptime_us+0x8>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:124

    // each rollover is 2^32 or UINT32_MAX
    return (((uint64_t)rollovers << 32) | after);
   1030c:	460b      	mov	r3, r1
   1030e:	2200      	movs	r2, #0
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:125
}
   10310:	ea42 0200 	orr.w	r2, r2, r0
   10314:	4610      	mov	r0, r2
   10316:	4619      	mov	r1, r3
   10318:	bd10      	pop	{r4, pc}
   1031a:	bf00      	nop
   1031c:	2007c308 	.word	0x2007c308
   10320:	2007c304 	.word	0x2007c304

00010324 <sys_get_mem_info_str>:
sys_get_mem_info_str():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:220
        }
    }
}

extern "C" void sys_get_mem_info_str(char buffer[280])
{
   10324:	b510      	push	{r4, lr}
   10326:	4604      	mov	r4, r0
   10328:	b08e      	sub	sp, #56	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:221
    sys_mem_t info = sys_get_mem_info();
   1032a:	a806      	add	r0, sp, #24
   1032c:	f008 f8c0 	bl	184b0 <sys_get_mem_info>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:238

            (int)info.used_global, (int)info.used_heap, (int)info.avail_heap, (int)info.avail_sys,
            (unsigned int)info.next_malloc_ptr,
            (unsigned int)info.last_sbrk_ptr,
            (unsigned int)info.last_sbrk_size,
            (unsigned int)info.num_sbrk_calls);
   10330:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   10332:	9a06      	ldr	r2, [sp, #24]
   10334:	9305      	str	r3, [sp, #20]
   10336:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   10338:	4907      	ldr	r1, [pc, #28]	; (10358 <sys_get_mem_info_str+0x34>)
   1033a:	9304      	str	r3, [sp, #16]
   1033c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1033e:	4620      	mov	r0, r4
   10340:	9303      	str	r3, [sp, #12]
   10342:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   10344:	9302      	str	r3, [sp, #8]
   10346:	9b09      	ldr	r3, [sp, #36]	; 0x24
   10348:	9301      	str	r3, [sp, #4]
   1034a:	9b08      	ldr	r3, [sp, #32]
   1034c:	9300      	str	r3, [sp, #0]
   1034e:	9b07      	ldr	r3, [sp, #28]
   10350:	f00c fa20 	bl	1c794 <siprintf>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:239
}
   10354:	b00e      	add	sp, #56	; 0x38
   10356:	bd10      	pop	{r4, pc}
   10358:	00020f15 	.word	0x00020f15

0001035c <SingletonTemplate<IR_Sensor>::getInstance()>:
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
#elif (SINGLETON_INIT_METHOD == STATIC_PRIVATE_POINTER_INSTANCE)
    template <typename classType>
    SingletonTemplate<classType>* SingletonTemplate<classType>::mpSingletonInstance = 0;

    template <typename classType>
    classType& SingletonTemplate<classType>::getInstance()
   1035c:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
    {
        if(0 == mpSingletonInstance)
   1035e:	4c04      	ldr	r4, [pc, #16]	; (10370 <SingletonTemplate<IR_Sensor>::getInstance()+0x14>)
   10360:	6823      	ldr	r3, [r4, #0]
   10362:	b91b      	cbnz	r3, 1036c <SingletonTemplate<IR_Sensor>::getInstance()+0x10>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
        {
            mpSingletonInstance = new classType();
   10364:	2001      	movs	r0, #1
   10366:	f008 f89f 	bl	184a8 <operator new(unsigned int)>
   1036a:	6020      	str	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
        }
        return *(classType*)mpSingletonInstance;
    }
   1036c:	6820      	ldr	r0, [r4, #0]
   1036e:	bd10      	pop	{r4, pc}
   10370:	2007c300 	.word	0x2007c300

00010374 <TIMER1_IRQHandler>:
TIMER1_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:142
{
   10374:	b538      	push	{r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:153
    const uint32_t intr_reason = gp_timer_ptr->IR;
   10376:	4c2b      	ldr	r4, [pc, #172]	; (10424 <TIMER1_IRQHandler+0xb0>)
   10378:	6823      	ldr	r3, [r4, #0]
   1037a:	4625      	mov	r5, r4
   1037c:	681a      	ldr	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:157
    if (intr_reason & timer_capt0_intr_ir_sensor_edge_time_captured)
   1037e:	f012 0f10 	tst.w	r2, #16
   10382:	d00e      	beq.n	103a2 <TIMER1_IRQHandler+0x2e>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:159
        gp_timer_ptr->IR = timer_capt0_intr_ir_sensor_edge_time_captured;
   10384:	2210      	movs	r2, #16
   10386:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:162
        IS.storeIrCode(gp_timer_ptr->CR0);
   10388:	f7ff ffe8 	bl	1035c <SingletonTemplate<IR_Sensor>::getInstance()>
   1038c:	6823      	ldr	r3, [r4, #0]
   1038e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
   10390:	f004 f8f4 	bl	1457c <IR_Sensor::storeIrCode(unsigned long)>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:163
        gp_timer_ptr->MR2 = 10000 + gp_timer_ptr->TC;
   10394:	6822      	ldr	r2, [r4, #0]
   10396:	6893      	ldr	r3, [r2, #8]
   10398:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
   1039c:	3310      	adds	r3, #16
   1039e:	6213      	str	r3, [r2, #32]
   103a0:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:166
    else if (intr_reason & timer_mr2_intr_ir_sensor_timeout)
   103a2:	0754      	lsls	r4, r2, #29
   103a4:	d507      	bpl.n	103b6 <TIMER1_IRQHandler+0x42>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:168
        gp_timer_ptr->IR = timer_mr2_intr_ir_sensor_timeout;
   103a6:	2204      	movs	r2, #4
   103a8:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:169
        IS.decodeIrCode();
   103aa:	f7ff ffd7 	bl	1035c <SingletonTemplate<IR_Sensor>::getInstance()>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:217
}
   103ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:169
        IS.decodeIrCode();
   103b2:	f004 b8f1 	b.w	14598 <IR_Sensor::decodeIrCode()>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:174
    if(intr_reason & timer_mr0_intr_timer_rollover)
   103b6:	07d0      	lsls	r0, r2, #31
   103b8:	d507      	bpl.n	103ca <TIMER1_IRQHandler+0x56>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:176
        gp_timer_ptr->IR = timer_mr0_intr_timer_rollover;
   103ba:	2201      	movs	r2, #1
   103bc:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:177
        ++g_timer_rollover_count;
   103be:	4a1a      	ldr	r2, [pc, #104]	; (10428 <TIMER1_IRQHandler+0xb4>)
   103c0:	8813      	ldrh	r3, [r2, #0]
   103c2:	3301      	adds	r3, #1
   103c4:	b29b      	uxth	r3, r3
   103c6:	8013      	strh	r3, [r2, #0]
   103c8:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:179
    else if(intr_reason & timer_mr1_intr_mesh_servicing)
   103ca:	0791      	lsls	r1, r2, #30
   103cc:	d515      	bpl.n	103fa <TIMER1_IRQHandler+0x86>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:181
        gp_timer_ptr->IR = timer_mr1_intr_mesh_servicing;
   103ce:	2202      	movs	r2, #2
   103d0:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:186
        if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState()) {
   103d2:	f007 f84d 	bl	17470 <xTaskGetSchedulerState>
   103d6:	2802      	cmp	r0, #2
   103d8:	d009      	beq.n	103ee <TIMER1_IRQHandler+0x7a>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:187
            wireless_service();
   103da:	f003 f93f 	bl	1365c <wireless_service>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:195
        gp_timer_ptr->MR1 += gp_timer_ptr->TC + LPC_SYS_TIME_FOR_BCKGND_TASK_US;
   103de:	682a      	ldr	r2, [r5, #0]
   103e0:	6893      	ldr	r3, [r2, #8]
   103e2:	69d1      	ldr	r1, [r2, #28]
   103e4:	440b      	add	r3, r1
   103e6:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
   103ea:	61d3      	str	r3, [r2, #28]
   103ec:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:191
            gp_timer_ptr->MCR &= ~(mr1_mcr_for_mesh_bckgnd_task);
   103ee:	682a      	ldr	r2, [r5, #0]
   103f0:	6953      	ldr	r3, [r2, #20]
   103f2:	f023 0308 	bic.w	r3, r3, #8
   103f6:	6153      	str	r3, [r2, #20]
   103f8:	e7f1      	b.n	103de <TIMER1_IRQHandler+0x6a>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:197
    else if (intr_reason & timer_mr3_intr_for_watchdog_rst) {
   103fa:	0712      	lsls	r2, r2, #28
   103fc:	d50e      	bpl.n	1041c <TIMER1_IRQHandler+0xa8>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:198
        gp_timer_ptr->IR = timer_mr3_intr_for_watchdog_rst;
   103fe:	2208      	movs	r2, #8
sys_watchdog_feed():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:143
    LPC_WDT->WDFEED = 0xAA;
   10400:	21aa      	movs	r1, #170	; 0xaa
TIMER1_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:198
   10402:	601a      	str	r2, [r3, #0]
sys_watchdog_feed():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:143
   10404:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
   10408:	7211      	strb	r1, [r2, #8]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:144
    LPC_WDT->WDFEED = 0x55;
   1040a:	2155      	movs	r1, #85	; 0x55
   1040c:	7211      	strb	r1, [r2, #8]
TIMER1_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:207
        gp_timer_ptr->MR3 = gp_timer_ptr->TC + LPC_SYS_WATCHDOG_RESET_TIME_US;
   1040e:	689a      	ldr	r2, [r3, #8]
   10410:	f502 12b7 	add.w	r2, r2, #1499136	; 0x16e000
   10414:	f502 7258 	add.w	r2, r2, #864	; 0x360
   10418:	625a      	str	r2, [r3, #36]	; 0x24
   1041a:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:212
        puts("Unexpected ISR call at lpc_sys.c");
   1041c:	4803      	ldr	r0, [pc, #12]	; (1042c <TIMER1_IRQHandler+0xb8>)
   1041e:	f00b ff67 	bl	1c2f0 <puts>
   10422:	e7fe      	b.n	10422 <TIMER1_IRQHandler+0xae>
   10424:	2007c308 	.word	0x2007c308
   10428:	2007c304 	.word	0x2007c304
   1042c:	00020ef4 	.word	0x00020ef4

00010430 <lpc_pconp>:
lpc_pconp():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:31
#include "FreeRTOS.h"



void lpc_pconp(lpc_pconp_t peripheral, bool on)
{
   10430:	b538      	push	{r3, r4, r5, lr}
   10432:	460d      	mov	r5, r1
   10434:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:32
    vPortEnterCritical();
   10436:	f007 f917 	bl	17668 <vPortEnterCritical>
   1043a:	4a09      	ldr	r2, [pc, #36]	; (10460 <lpc_pconp+0x30>)
   1043c:	2301      	movs	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:33
    if (on) {
   1043e:	b14d      	cbz	r5, 10454 <lpc_pconp+0x24>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:34
        LPC_SC->PCONP |= (UINT32_C(1) << peripheral);
   10440:	f8d2 00c4 	ldr.w	r0, [r2, #196]	; 0xc4
   10444:	40a3      	lsls	r3, r4
   10446:	4303      	orrs	r3, r0
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:37
    }
    else {
        LPC_SC->PCONP &= ~(UINT32_C(1) << peripheral);
   10448:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:40
    }
    vPortExitCritical();
}
   1044c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:39
    vPortExitCritical();
   10450:	f007 b91a 	b.w	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:37
        LPC_SC->PCONP &= ~(UINT32_C(1) << peripheral);
   10454:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
   10458:	40a3      	lsls	r3, r4
   1045a:	ea21 0303 	bic.w	r3, r1, r3
   1045e:	e7f3      	b.n	10448 <lpc_pconp+0x18>
   10460:	400fc000 	.word	0x400fc000

00010464 <lpc_pclk>:
lpc_pclk():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:43

void lpc_pclk(lpc_pclk_t peripheral, clkdiv_t divider)
{
   10464:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:49
    /**
     * This is a quick and dirty trick to use uint64_t such that we don't have to
     * use if/else statements to pick either PCLKSEL0 or PCLKSEL1 register.
     */
    uint64_t *pclk_ptr = (uint64_t*)  &(LPC_SC->PCLKSEL0);
    const uint32_t bitpos = ((uint32_t)peripheral * 2);
   10468:	ea4f 0840 	mov.w	r8, r0, lsl #1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:43
{
   1046c:	460e      	mov	r6, r1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:52
    const uint32_t b11 = 3; // 0b11 in binary = 3

    vPortEnterCritical();
   1046e:	f007 f8fb 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:53
    *pclk_ptr &= ~((uint64_t)b11 << bitpos);
   10472:	4642      	mov	r2, r8
   10474:	2003      	movs	r0, #3
   10476:	2100      	movs	r1, #0
   10478:	f009 f836 	bl	194e8 <__aeabi_llsl>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:54
    *pclk_ptr |=  ((uint64_t)(divider & b11) << bitpos);
   1047c:	4f0a      	ldr	r7, [pc, #40]	; (104a8 <lpc_pclk+0x44>)
   1047e:	4642      	mov	r2, r8
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:53
    *pclk_ptr &= ~((uint64_t)b11 << bitpos);
   10480:	e9d7 4500 	ldrd	r4, r5, [r7]
   10484:	ea24 0400 	bic.w	r4, r4, r0
   10488:	ea25 0501 	bic.w	r5, r5, r1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:54
    *pclk_ptr |=  ((uint64_t)(divider & b11) << bitpos);
   1048c:	f006 0003 	and.w	r0, r6, #3
   10490:	2100      	movs	r1, #0
   10492:	f009 f829 	bl	194e8 <__aeabi_llsl>
   10496:	4320      	orrs	r0, r4
   10498:	4329      	orrs	r1, r5
   1049a:	e9c7 0100 	strd	r0, r1, [r7]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:56
    vPortExitCritical();
}
   1049e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:55
    vPortExitCritical();
   104a2:	f007 b8f1 	b.w	17688 <vPortExitCritical>
   104a6:	bf00      	nop
   104a8:	400fc1a8 	.word	0x400fc1a8

000104ac <__set_PSP>:
__set_PSP():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:464
 * (process stack pointer) Cortex processor register
 */
void __set_PSP(uint32_t topOfProcStack) __attribute__( ( naked ) );
void __set_PSP(uint32_t topOfProcStack)
{
  __ASM volatile ("MSR psp, %0\n\t"
   104ac:	f380 8809 	msr	PSP, r0
   104b0:	4770      	bx	lr

000104b2 <__set_MSP>:
__set_MSP():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:498
 * (main stack pointer) Cortex processor register
 */
void __set_MSP(uint32_t topOfMainStack) __attribute__( ( naked ) );
void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0\n\t"
   104b2:	f380 8808 	msr	MSP, r0
   104b6:	4770      	bx	lr

000104b8 <__set_BASEPRI>:
__set_BASEPRI():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:526
 *
 * Set the base priority register
 */
void __set_BASEPRI(uint32_t value)
{
  __ASM volatile ("MSR basepri, %0" : : "r" (value) );
   104b8:	f380 8811 	msr	BASEPRI, r0
   104bc:	4770      	bx	lr
   104be:	Address 0x00000000000104be is out of bounds.


000104c0 <sys_clock_pll0_feed()>:
_ZL19sys_clock_pll0_feedv():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:255
/**
 * Feed is used to make PLL register contents take effect
 */
static inline void sys_clock_pll0_feed()
{
    LPC_SC->PLL0FEED = 0xAA;
   104c0:	22aa      	movs	r2, #170	; 0xaa
   104c2:	4b03      	ldr	r3, [pc, #12]	; (104d0 <sys_clock_pll0_feed()+0x10>)
   104c4:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:256
    LPC_SC->PLL0FEED = 0x55;
   104c8:	2255      	movs	r2, #85	; 0x55
   104ca:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
   104ce:	4770      	bx	lr
   104d0:	400fc000 	.word	0x400fc000

000104d4 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>:
_ZL23sys_clock_configure_plljjPiS_S_.constprop.0():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:59
static bool sys_clock_configure_pll(const unsigned int desiredCpuSpeedKhz,
   104d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:63
    *pPLL_M = 0;
   104d8:	2400      	movs	r4, #0
   104da:	600c      	str	r4, [r1, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:64
    *pPLL_N = 0;
   104dc:	6014      	str	r4, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:65
    *pCPU_D = 0;
   104de:	601c      	str	r4, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   104e0:	f240 14ff 	movw	r4, #511	; 0x1ff
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:95
                    if (cpuClockKhz <= maxCpuSpeedKhz)
   104e4:	f8df a060 	ldr.w	sl, [pc, #96]	; 10548 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x74>
   104e8:	f44f 55fa 	mov.w	r5, #8000	; 0x1f40
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   104ec:	2600      	movs	r6, #0
   104ee:	fb04 5b05 	mla	fp, r4, r5, r5
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:80
            const unsigned int FccoKhz = (2 * (m + 1) * inputFreqKhz) / (n + 1);
   104f2:	f106 0c01 	add.w	ip, r6, #1
   104f6:	fbbb f8fc 	udiv	r8, fp, ip
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:83
            if (FccoKhz >= FccoMinKhz && FccoKhz <= FccoMaxKhz)
   104fa:	4f12      	ldr	r7, [pc, #72]	; (10544 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x70>)
   104fc:	f5a8 2586 	sub.w	r5, r8, #274432	; 0x43000
   10500:	f5a5 750e 	sub.w	r5, r5, #568	; 0x238
   10504:	42bd      	cmp	r5, r7
   10506:	d91a      	bls.n	1053e <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x6a>
   10508:	4666      	mov	r6, ip
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:76
        for (int n = 0; n < 32; n++)
   1050a:	2e20      	cmp	r6, #32
   1050c:	d1f1      	bne.n	104f2 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   1050e:	3c01      	subs	r4, #1
   10510:	2c05      	cmp	r4, #5
   10512:	d1e9      	bne.n	104e8 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x14>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:113
    return false;
   10514:	2000      	movs	r0, #0
   10516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:86
                for (int cpudiv = 3; cpudiv < 256; cpudiv++)
   1051a:	f5b9 7f80 	cmp.w	r9, #256	; 0x100
   1051e:	464d      	mov	r5, r9
   10520:	d0f2      	beq.n	10508 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x34>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:88
                    const unsigned int cpuClockKhz = FccoKhz / (cpudiv + 1);
   10522:	f105 0901 	add.w	r9, r5, #1
   10526:	fbb8 fef9 	udiv	lr, r8, r9
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:95
                    if (cpuClockKhz <= maxCpuSpeedKhz)
   1052a:	45d6      	cmp	lr, sl
   1052c:	d8f5      	bhi.n	1051a <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x46>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:102
                        if (cpuClockKhz == desiredCpuSpeedKhz)
   1052e:	4586      	cmp	lr, r0
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:97
                        *pPLL_M = m;
   10530:	600c      	str	r4, [r1, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:98
                        *pPLL_N = n;
   10532:	6016      	str	r6, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:99
                        *pCPU_D = cpudiv;
   10534:	601d      	str	r5, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:102
                        if (cpuClockKhz == desiredCpuSpeedKhz)
   10536:	d1f0      	bne.n	1051a <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x46>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:105
                            return true;
   10538:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:114
}
   1053a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:83
            if (FccoKhz >= FccoMinKhz && FccoKhz <= FccoMaxKhz)
   1053e:	2503      	movs	r5, #3
   10540:	e7ef      	b.n	10522 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x4e>
   10542:	bf00      	nop
   10544:	00043238 	.word	0x00043238
   10548:	000186a0 	.word	0x000186a0

0001054c <sys_clock_configure()>:
_Z19sys_clock_configurev():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:279
    sys_clock_pll0_feed();
    LPC_SC->CCLKCFG = 0;    // Divider = 1 when PLL is not used
}

void sys_clock_configure()
{
   1054c:	b530      	push	{r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:287
        struct {
            uint32_t msel :16;
            uint32_t nsel :8;
            uint32_t : 8; ///< Not used (reserved)
        }__attribute__ ((packed));
    } PLL0ConfigValue = { 0 };
   1054e:	2400      	movs	r4, #0
sys_clock_disable_pll_use_internal_4mhz():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   10550:	492a      	ldr	r1, [pc, #168]	; (105fc <sys_clock_configure()+0xb0>)
_Z19sys_clock_configurev():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:279
{
   10552:	b085      	sub	sp, #20
sys_clock_disable_pll_use_internal_4mhz():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   10554:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
_Z19sys_clock_configurev():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:291

	int m = 0;
	int n = 0;
	int d = 0;
   10558:	ad04      	add	r5, sp, #16
sys_clock_disable_pll_use_internal_4mhz():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   1055a:	f023 0302 	bic.w	r3, r3, #2
_Z19sys_clock_configurev():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:291
	int d = 0;
   1055e:	f845 4d04 	str.w	r4, [r5, #-4]!
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:289
	int m = 0;
   10562:	9401      	str	r4, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:290
	int n = 0;
   10564:	9402      	str	r4, [sp, #8]
sys_clock_disable_pll_use_internal_4mhz():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   10566:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:266
    sys_clock_pll0_feed();
   1056a:	f7ff ffa9 	bl	104c0 <sys_clock_pll0_feed()>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:269
    LPC_SC->PLL0CON &= ~(1 << 0);
   1056e:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
   10572:	f023 0301 	bic.w	r3, r3, #1
   10576:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:270
    sys_clock_pll0_feed();
   1057a:	f7ff ffa1 	bl	104c0 <sys_clock_pll0_feed()>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:272
    LPC_SC->CLKSRCSEL = 0;
   1057e:	f8c1 410c 	str.w	r4, [r1, #268]	; 0x10c
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:273
    LPC_SC->PLL0CFG = 0;    // M=1, N=1 (disregarded anyway after PLL is disabled)
   10582:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:274
    sys_clock_pll0_feed();
   10586:	f7ff ff9b 	bl	104c0 <sys_clock_pll0_feed()>
_Z19sys_clock_configurev():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:313
#error "Clock source must be CLOCK_SOURCE_INTERNAL, CLOCK_SOURCE_EXTERNAL or CLOCK_SOURCE_RTC"
#endif

#if (CLOCK_SOURCE_INTERNAL == SYS_CFG_CLOCK_SOURCE || CLOCK_SOURCE_EXTERNAL == SYS_CFG_CLOCK_SOURCE)
	// If we cannot calculate desired CPU clock, then default to a safe value
	if(!sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d)) {
   1058a:	462b      	mov	r3, r5
sys_clock_disable_pll_use_internal_4mhz():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:275
    LPC_SC->CCLKCFG = 0;    // Divider = 1 when PLL is not used
   1058c:	f8c1 4104 	str.w	r4, [r1, #260]	; 0x104
_Z19sys_clock_configurev():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:313
	if(!sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d)) {
   10590:	aa02      	add	r2, sp, #8
   10592:	a901      	add	r1, sp, #4
   10594:	f64b 3080 	movw	r0, #48000	; 0xbb80
   10598:	f7ff ff9c 	bl	104d4 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
   1059c:	b930      	cbnz	r0, 105ac <sys_clock_configure()+0x60>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:315
	    cpuClockKhz = SYS_CFG_DEFAULT_CPU_CLK / 1000;
	    sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d);
   1059e:	462b      	mov	r3, r5
   105a0:	aa02      	add	r2, sp, #8
   105a2:	a901      	add	r1, sp, #4
   105a4:	f645 50c0 	movw	r0, #24000	; 0x5dc0
   105a8:	f7ff ff94 	bl	104d4 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:321
	}
#else
	sys_clock_get_pll_params_for_rtc(SYS_CFG_DESIRED_CPU_CLK, &m, &n, &d);
#endif

	PLL0ConfigValue.msel = m;
   105ac:	9b01      	ldr	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:339
		; // Wait for main oscillator to be ready
#endif

	// Select the clock source and if the clock source is the desired clock, then
	// do not use PLL at all and simply return!
	LPC_SC->CLKSRCSEL = SYS_CFG_CLOCK_SOURCE;
   105ae:	4913      	ldr	r1, [pc, #76]	; (105fc <sys_clock_configure()+0xb0>)
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:321
	PLL0ConfigValue.msel = m;
   105b0:	f363 040f 	bfi	r4, r3, #0, #16
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:322
	PLL0ConfigValue.nsel = n;
   105b4:	9b02      	ldr	r3, [sp, #8]
   105b6:	f363 4417 	bfi	r4, r3, #16, #8
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:339
	LPC_SC->CLKSRCSEL = SYS_CFG_CLOCK_SOURCE;
   105ba:	2300      	movs	r3, #0
   105bc:	f8c1 310c 	str.w	r3, [r1, #268]	; 0x10c
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:351
	    return;
	}
	else
#endif
	{
	    LPC_SC->PLL0CFG = PLL0ConfigValue.raw; // Set values of PLL Multiplier and divider
   105c0:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:352
	    sys_clock_pll0_feed();
   105c4:	f7ff ff7c 	bl	104c0 <sys_clock_pll0_feed()>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:355

	    // Enable PLL0
	    LPC_SC->PLL0CON = 0x01;
   105c8:	2301      	movs	r3, #1
   105ca:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:356
	    sys_clock_pll0_feed();
   105ce:	f7ff ff77 	bl	104c0 <sys_clock_pll0_feed()>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:357
	    while (!(LPC_SC->PLL0STAT & (1 << 26))) {
   105d2:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
   105d6:	015b      	lsls	r3, r3, #5
   105d8:	d5fb      	bpl.n	105d2 <sys_clock_configure()+0x86>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:366
	    /**
	     * Connect PLL0 as our clock source.
	     * Right before we make the PLL clock as CPU clock, set our divider so our
	     * CPU clock doesn't go out of range once the faster PLL clock is established.
	     */
        LPC_SC->CCLKCFG  = d;
   105da:	9b03      	ldr	r3, [sp, #12]
   105dc:	f8c1 3104 	str.w	r3, [r1, #260]	; 0x104
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:367
	    LPC_SC->PLL0CON = 0x03;
   105e0:	2303      	movs	r3, #3
   105e2:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:368
	    sys_clock_pll0_feed();
   105e6:	f7ff ff6b 	bl	104c0 <sys_clock_pll0_feed()>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:371

	    // Finally, wait for PLLC0_STAT & PLLE0_STAT
	    while (!(LPC_SC->PLL0STAT & ((1 << 25) | (1 << 24)))) {
   105ea:	4a04      	ldr	r2, [pc, #16]	; (105fc <sys_clock_configure()+0xb0>)
   105ec:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
   105f0:	f013 7f40 	tst.w	r3, #50331648	; 0x3000000
   105f4:	d0fa      	beq.n	105ec <sys_clock_configure()+0xa0>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:375
	        ;
	    }
	}
}
   105f6:	b005      	add	sp, #20
   105f8:	bd30      	pop	{r4, r5, pc}
   105fa:	bf00      	nop
   105fc:	400fc000 	.word	0x400fc000

00010600 <sys_get_cpu_clock>:
sys_get_cpu_clock():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:382
unsigned int sys_get_cpu_clock()
{
	unsigned clock = 0;

	/* Determine clock frequency according to clock register values             */
	if (((LPC_SC->PLL0STAT >> 24) & 3) == 3)
   10600:	4b24      	ldr	r3, [pc, #144]	; (10694 <sys_get_cpu_clock+0x94>)
   10602:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
   10606:	f3c2 6201 	ubfx	r2, r2, #24, #2
   1060a:	2a03      	cmp	r2, #3
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:384
	{ /* If PLL0 enabled and connected */
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   1060c:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   10610:	f002 0203 	and.w	r2, r2, #3
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:382
	if (((LPC_SC->PLL0STAT >> 24) & 3) == 3)
   10614:	d12d      	bne.n	10672 <sys_get_cpu_clock+0x72>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:384
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   10616:	2a01      	cmp	r2, #1
   10618:	d016      	beq.n	10648 <sys_get_cpu_clock+0x48>
   1061a:	2a02      	cmp	r2, #2
   1061c:	d01e      	beq.n	1065c <sys_get_cpu_clock+0x5c>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:389
	    {
	        case 0: /* Int. RC oscillator => PLL0    */
	        case 3: /* Reserved, default to Int. RC  */
	            clock = (INTERNAL_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   1061e:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:390
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10622:	481d      	ldr	r0, [pc, #116]	; (10698 <sys_get_cpu_clock+0x98>)
   10624:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:391
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   10628:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:389
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   1062c:	f3c1 010e 	ubfx	r1, r1, #0, #15
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:397
	            break;

	        case 1: /* Main oscillator => PLL0       */
	            clock = (EXTERNAL_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10630:	fb01 0000 	mla	r0, r1, r0, r0
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	            break;

	        case 2: /* RTC oscillator => PLL0        */
	            clock = (RTC_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10634:	f3c2 4207 	ubfx	r2, r2, #16, #8
   10638:	3201      	adds	r2, #1
   1063a:	fbb0 f0f2 	udiv	r0, r0, r2
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:405
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   1063e:	b2db      	uxtb	r3, r3
   10640:	3301      	adds	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:421
	            break;
	        case 1: /* Main oscillator => PLL0       */
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
	            break;
	        case 2: /* RTC oscillator => PLL0        */
	            clock = RTC_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10642:	fbb0 f0f3 	udiv	r0, r0, r3
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:427
	            break;
	    }
	}

	return clock;
}
   10646:	4770      	bx	lr
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:396
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   10648:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:397
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   1064c:	4813      	ldr	r0, [pc, #76]	; (1069c <sys_get_cpu_clock+0x9c>)
   1064e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:396
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   10652:	f3c1 010e 	ubfx	r1, r1, #0, #15
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:398
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   10656:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   1065a:	e7e9      	b.n	10630 <sys_get_cpu_clock+0x30>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:403
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   1065c:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10660:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:403
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   10664:	f3c0 000e 	ubfx	r0, r0, #0, #15
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10668:	3001      	adds	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:405
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   1066a:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   1066e:	0400      	lsls	r0, r0, #16
   10670:	e7e0      	b.n	10634 <sys_get_cpu_clock+0x34>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10672:	f8d3 0104 	ldr.w	r0, [r3, #260]	; 0x104
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:411
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   10676:	2a01      	cmp	r2, #1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10678:	b2c0      	uxtb	r0, r0
   1067a:	f100 0301 	add.w	r3, r0, #1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:411
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   1067e:	d003      	beq.n	10688 <sys_get_cpu_clock+0x88>
   10680:	2a02      	cmp	r2, #2
   10682:	d003      	beq.n	1068c <sys_get_cpu_clock+0x8c>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:415
	            clock = INTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10684:	4806      	ldr	r0, [pc, #24]	; (106a0 <sys_get_cpu_clock+0xa0>)
   10686:	e7dc      	b.n	10642 <sys_get_cpu_clock+0x42>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10688:	4806      	ldr	r0, [pc, #24]	; (106a4 <sys_get_cpu_clock+0xa4>)
   1068a:	e7da      	b.n	10642 <sys_get_cpu_clock+0x42>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:421
	            clock = RTC_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   1068c:	f44f 4000 	mov.w	r0, #32768	; 0x8000
   10690:	e7d7      	b.n	10642 <sys_get_cpu_clock+0x42>
   10692:	bf00      	nop
   10694:	400fc000 	.word	0x400fc000
   10698:	007a1200 	.word	0x007a1200
   1069c:	016e3600 	.word	0x016e3600
   106a0:	003d0900 	.word	0x003d0900
   106a4:	00b71b00 	.word	0x00b71b00

000106a8 <sys_get_boot_type>:
sys_get_boot_type():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:124
static rtc_t g_rtc_boot_time = {0};

sys_boot_t sys_get_boot_type()
{
    return g_sys_boot_type;
}
   106a8:	4b01      	ldr	r3, [pc, #4]	; (106b0 <sys_get_boot_type+0x8>)
   106aa:	7818      	ldrb	r0, [r3, #0]
   106ac:	4770      	bx	lr
   106ae:	bf00      	nop
   106b0:	2007c318 	.word	0x2007c318

000106b4 <low_level_init()>:
_Z14low_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:165
 * Initializes the minimal system including CPU Clock, UART, and Flash accelerator
 * Be careful of the order of the operations!!!
 */
#include "FreeRTOS.h"
void low_level_init(void)
{
   106b4:	b530      	push	{r4, r5, lr}
   106b6:	b085      	sub	sp, #20
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:177
        // logs all the way up until the RTOS starts
        // I tried starting it early but it didn't work :(
        // uiTraceStart();
    #endif

    rtc_init();
   106b8:	f005 f862 	bl	15780 <rtc_init>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:178
    g_rtc_boot_time = rtc_gettime();
   106bc:	4668      	mov	r0, sp
   106be:	f005 f807 	bl	156d0 <rtc_gettime>
   106c2:	4c77      	ldr	r4, [pc, #476]	; (108a0 <low_level_init()+0x1ec>)
   106c4:	9b00      	ldr	r3, [sp, #0]
   106c6:	6023      	str	r3, [r4, #0]
   106c8:	9b01      	ldr	r3, [sp, #4]
   106ca:	6063      	str	r3, [r4, #4]
   106cc:	9b02      	ldr	r3, [sp, #8]
   106ce:	60a3      	str	r3, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:181

    /* Configure System Clock based on desired clock rate @ sys_config.h */
    sys_clock_configure();
   106d0:	f7ff ff3c 	bl	1054c <sys_clock_configure()>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:182
    configure_flash_acceleration(sys_get_cpu_clock());
   106d4:	f7ff ff94 	bl	10600 <sys_get_cpu_clock>
configure_flash_acceleration():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:36
    const uint32_t clockMhz = clock / (1000 * 1000);
   106d8:	4b72      	ldr	r3, [pc, #456]	; (108a4 <low_level_init()+0x1f0>)
   106da:	fbb0 f0f3 	udiv	r0, r0, r3
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:40
    switch(clockMhz)
   106de:	283c      	cmp	r0, #60	; 0x3c
   106e0:	4b71      	ldr	r3, [pc, #452]	; (108a8 <low_level_init()+0x1f4>)
   106e2:	f200 809a 	bhi.w	1081a <low_level_init()+0x166>
   106e6:	2829      	cmp	r0, #41	; 0x29
   106e8:	f080 80a1 	bcs.w	1082e <low_level_init()+0x17a>
   106ec:	2814      	cmp	r0, #20
   106ee:	f200 809b 	bhi.w	10828 <low_level_init()+0x174>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:42
        case  0 ... 20  : LPC_SC->FLASHCFG = (0 << 12) | const_val; break;
   106f2:	223a      	movs	r2, #58	; 0x3a
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:48
            LPC_SC->FLASHCFG = (5 << 12) | const_val; /* works for all clock settings */
   106f4:	601a      	str	r2, [r3, #0]
NVIC_SetPriority():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
   106f6:	2308      	movs	r3, #8
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   106f8:	2298      	movs	r2, #152	; 0x98
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
   106fa:	496c      	ldr	r1, [pc, #432]	; (108ac <low_level_init()+0x1f8>)
_Z14low_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:189
    /* Setup default interrupt priorities that will work with FreeRTOS */
    configure_interrupt_priorities();

    /* These methods shouldn't be needed but doing it anyway to be safe */
    NVIC_SetPriorityGrouping(0);
    __set_BASEPRI(0);
   106fc:	2000      	movs	r0, #0
NVIC_SetPriority():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
   106fe:	760b      	strb	r3, [r1, #24]
   10700:	764b      	strb	r3, [r1, #25]
   10702:	768b      	strb	r3, [r1, #26]
   10704:	f881 3020 	strb.w	r3, [r1, #32]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   10708:	4b69      	ldr	r3, [pc, #420]	; (108b0 <low_level_init()+0x1fc>)
   1070a:	f883 2305 	strb.w	r2, [r3, #773]	; 0x305
   1070e:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
   10712:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
   10716:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
   1071a:	2290      	movs	r2, #144	; 0x90
   1071c:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
   10720:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
   10724:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
   10728:	2270      	movs	r2, #112	; 0x70
   1072a:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
   1072e:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
   10732:	2258      	movs	r2, #88	; 0x58
   10734:	f883 2312 	strb.w	r2, [r3, #786]	; 0x312
   10738:	f883 2313 	strb.w	r2, [r3, #787]	; 0x313
   1073c:	f883 2314 	strb.w	r2, [r3, #788]	; 0x314
   10740:	f883 2315 	strb.w	r2, [r3, #789]	; 0x315
   10744:	2278      	movs	r2, #120	; 0x78
   10746:	f883 2319 	strb.w	r2, [r3, #793]	; 0x319
   1074a:	22a0      	movs	r2, #160	; 0xa0
   1074c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
   10750:	f883 2301 	strb.w	r2, [r3, #769]	; 0x301
   10754:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
   10758:	f883 2303 	strb.w	r2, [r3, #771]	; 0x303
   1075c:	f883 2304 	strb.w	r2, [r3, #772]	; 0x304
   10760:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
   10764:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
   10768:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
   1076c:	f883 2311 	strb.w	r2, [r3, #785]	; 0x311
   10770:	f883 2316 	strb.w	r2, [r3, #790]	; 0x316
   10774:	f883 2317 	strb.w	r2, [r3, #791]	; 0x317
   10778:	f883 2318 	strb.w	r2, [r3, #792]	; 0x318
   1077c:	f883 231a 	strb.w	r2, [r3, #794]	; 0x31a
   10780:	f883 231b 	strb.w	r2, [r3, #795]	; 0x31b
   10784:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c
   10788:	f883 231e 	strb.w	r2, [r3, #798]	; 0x31e
   1078c:	f883 231f 	strb.w	r2, [r3, #799]	; 0x31f
   10790:	f883 2320 	strb.w	r2, [r3, #800]	; 0x320
   10794:	f883 231d 	strb.w	r2, [r3, #797]	; 0x31d
   10798:	f883 2321 	strb.w	r2, [r3, #801]	; 0x321
   1079c:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
NVIC_SetPriorityGrouping():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1458
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
   107a0:	68cb      	ldr	r3, [r1, #12]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1459
  reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to change               */
   107a2:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
   107a6:	041b      	lsls	r3, r3, #16
   107a8:	0c1b      	lsrs	r3, r3, #16
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1460
  reg_value  =  (reg_value                       |
   107aa:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
   107ae:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1463
  SCB->AIRCR =  reg_value;
   107b2:	60cb      	str	r3, [r1, #12]
_Z14low_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:189
   107b4:	f7ff fe80 	bl	104b8 <__set_BASEPRI>
__enable_fault_irq():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1192
static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
   107b8:	b661      	cpsie	f
__enable_irq():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1189
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
   107ba:	b662      	cpsie	i
_Z14low_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:194
    __enable_fault_irq();
    __enable_irq();

    /* Setup UART with minimal I/O functions */
    uart0_init(SYS_CFG_UART0_BPS);
   107bc:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   107c0:	f000 f88c 	bl	108dc <uart0_init>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:195
    sys_set_outchar_func(uart0_putchar);
   107c4:	483b      	ldr	r0, [pc, #236]	; (108b4 <low_level_init()+0x200>)
   107c6:	f007 fc45 	bl	18054 <sys_set_outchar_func>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:196
    sys_set_inchar_func(uart0_getchar);
   107ca:	483b      	ldr	r0, [pc, #236]	; (108b8 <low_level_init()+0x204>)
   107cc:	f007 fc48 	bl	18060 <sys_set_inchar_func>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:202

    /**
     * Turn off I/O buffering otherwise sometimes printf/scanf doesn't behave
     * correctly due to strange buffering and/or flushing effects.
     */
    setvbuf(stdout, 0, _IONBF, 0);
   107d0:	2300      	movs	r3, #0
   107d2:	4c3a      	ldr	r4, [pc, #232]	; (108bc <low_level_init()+0x208>)
   107d4:	4619      	mov	r1, r3
   107d6:	6820      	ldr	r0, [r4, #0]
   107d8:	2202      	movs	r2, #2
   107da:	6880      	ldr	r0, [r0, #8]
   107dc:	f00b fee4 	bl	1c5a8 <setvbuf>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:203
    setvbuf(stdin,  0, _IONBF, 0);
   107e0:	2300      	movs	r3, #0
   107e2:	6820      	ldr	r0, [r4, #0]
print_boot_info():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:132
    if (LPC_SC->RSID & boot_power_on) {
   107e4:	4c30      	ldr	r4, [pc, #192]	; (108a8 <low_level_init()+0x1f4>)
_Z14low_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:203
    setvbuf(stdin,  0, _IONBF, 0);
   107e6:	4619      	mov	r1, r3
   107e8:	2202      	movs	r2, #2
   107ea:	6840      	ldr	r0, [r0, #4]
   107ec:	f00b fedc 	bl	1c5a8 <setvbuf>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:206

    /* Initialize newlib fopen() fread() calls support */
    syscalls_init();
   107f0:	f007 fc50 	bl	18094 <syscalls_init>
print_boot_info():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:132
    if (LPC_SC->RSID & boot_power_on) {
   107f4:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   107f8:	4d31      	ldr	r5, [pc, #196]	; (108c0 <low_level_init()+0x20c>)
   107fa:	f013 0f01 	tst.w	r3, #1
   107fe:	d01f      	beq.n	10840 <low_level_init()+0x18c>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:133
        uart0_puts("System Power-on: Booting ...");
   10800:	4830      	ldr	r0, [pc, #192]	; (108c4 <low_level_init()+0x210>)
   10802:	f000 f8b3 	bl	1096c <uart0_puts>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:134
        g_sys_boot_type = boot_power_on;
   10806:	2301      	movs	r3, #1
   10808:	702b      	strb	r3, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:135
        LPC_SC->RSID |= boot_power_on; // Clear POR bit
   1080a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1080e:	f043 0301 	orr.w	r3, r3, #1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:140
        LPC_SC->RSID |= boot_reset; // Clear RESET bit
   10812:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
_Z14low_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:215
    sys_watchdog_enable();
    #endif

    /* Uart and printf() are initialized, so print our boot-up message */
    print_boot_info();
}
   10816:	b005      	add	sp, #20
   10818:	bd30      	pop	{r4, r5, pc}
configure_flash_acceleration():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:40
    switch(clockMhz)
   1081a:	2850      	cmp	r0, #80	; 0x50
   1081c:	d90a      	bls.n	10834 <low_level_init()+0x180>
   1081e:	2864      	cmp	r0, #100	; 0x64
   10820:	d90b      	bls.n	1083a <low_level_init()+0x186>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:48
            LPC_SC->FLASHCFG = (5 << 12) | const_val; /* works for all clock settings */
   10822:	f245 023a 	movw	r2, #20538	; 0x503a
   10826:	e765      	b.n	106f4 <low_level_init()+0x40>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:43
        case 21 ... 40  : LPC_SC->FLASHCFG = (1 << 12) | const_val; break;
   10828:	f241 023a 	movw	r2, #4154	; 0x103a
   1082c:	e762      	b.n	106f4 <low_level_init()+0x40>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:44
        case 41 ... 60  : LPC_SC->FLASHCFG = (2 << 12) | const_val; break;
   1082e:	f242 023a 	movw	r2, #8250	; 0x203a
   10832:	e75f      	b.n	106f4 <low_level_init()+0x40>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:45
        case 61 ... 80  : LPC_SC->FLASHCFG = (3 << 12) | const_val; break;
   10834:	f243 023a 	movw	r2, #12346	; 0x303a
   10838:	e75c      	b.n	106f4 <low_level_init()+0x40>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:46
        case 81 ... 100 : LPC_SC->FLASHCFG = (4 << 12) | const_val; break;
   1083a:	f244 023a 	movw	r2, #16442	; 0x403a
   1083e:	e759      	b.n	106f4 <low_level_init()+0x40>
print_boot_info():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:137
    else if(LPC_SC->RSID & boot_reset) {
   10840:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   10844:	079b      	lsls	r3, r3, #30
   10846:	d509      	bpl.n	1085c <low_level_init()+0x1a8>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:138
        uart0_puts("System Reset: Booting ...");
   10848:	481f      	ldr	r0, [pc, #124]	; (108c8 <low_level_init()+0x214>)
   1084a:	f000 f88f 	bl	1096c <uart0_puts>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:139
        g_sys_boot_type = boot_reset;
   1084e:	2302      	movs	r3, #2
   10850:	702b      	strb	r3, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:140
        LPC_SC->RSID |= boot_reset; // Clear RESET bit
   10852:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   10856:	f043 0302 	orr.w	r3, r3, #2
   1085a:	e7da      	b.n	10812 <low_level_init()+0x15e>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:142
    else if(LPC_SC->RSID & boot_watchdog) {
   1085c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   10860:	f013 0304 	ands.w	r3, r3, #4
   10864:	d019      	beq.n	1089a <low_level_init()+0x1e6>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:143
        if(FAULT_PRESENT_VAL == FAULT_EXISTS) {
   10866:	4b19      	ldr	r3, [pc, #100]	; (108cc <low_level_init()+0x218>)
   10868:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   1086a:	4b19      	ldr	r3, [pc, #100]	; (108d0 <low_level_init()+0x21c>)
   1086c:	429a      	cmp	r2, r3
   1086e:	d108      	bne.n	10882 <low_level_init()+0x1ce>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:144
            g_sys_boot_type = boot_watchdog_recover;
   10870:	2305      	movs	r3, #5
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:145
            uart0_puts("System Crash: Re-booting ...");
   10872:	4818      	ldr	r0, [pc, #96]	; (108d4 <low_level_init()+0x220>)
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:144
            g_sys_boot_type = boot_watchdog_recover;
   10874:	702b      	strb	r3, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:145
            uart0_puts("System Crash: Re-booting ...");
   10876:	f000 f879 	bl	1096c <uart0_puts>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:152
        FAULT_EXISTS = 0;
   1087a:	2200      	movs	r2, #0
   1087c:	4b13      	ldr	r3, [pc, #76]	; (108cc <low_level_init()+0x218>)
   1087e:	649a      	str	r2, [r3, #72]	; 0x48
   10880:	e7c9      	b.n	10816 <low_level_init()+0x162>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:148
            g_sys_boot_type = boot_watchdog;
   10882:	2304      	movs	r3, #4
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:149
            uart0_puts("Watchdog System Reset: Booting ...");
   10884:	4814      	ldr	r0, [pc, #80]	; (108d8 <low_level_init()+0x224>)
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:148
            g_sys_boot_type = boot_watchdog;
   10886:	702b      	strb	r3, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:149
            uart0_puts("Watchdog System Reset: Booting ...");
   10888:	f000 f870 	bl	1096c <uart0_puts>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:150
            LPC_SC->RSID |= boot_watchdog; // Clear WDTR bit
   1088c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   10890:	f043 0304 	orr.w	r3, r3, #4
   10894:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
   10898:	e7ef      	b.n	1087a <low_level_init()+0x1c6>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:155
        g_sys_boot_type = boot_unknown;
   1089a:	702b      	strb	r3, [r5, #0]
_Z14low_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:215
}
   1089c:	e7bb      	b.n	10816 <low_level_init()+0x162>
   1089e:	bf00      	nop
   108a0:	2007c30c 	.word	0x2007c30c
   108a4:	000f4240 	.word	0x000f4240
   108a8:	400fc000 	.word	0x400fc000
   108ac:	e000ed00 	.word	0xe000ed00
   108b0:	e000e100 	.word	0xe000e100
   108b4:	00010955 	.word	0x00010955
   108b8:	0001093d 	.word	0x0001093d
   108bc:	2007c0e4 	.word	0x2007c0e4
   108c0:	2007c318 	.word	0x2007c318
   108c4:	00020fda 	.word	0x00020fda
   108c8:	0002101d 	.word	0x0002101d
   108cc:	40024000 	.word	0x40024000
   108d0:	deadbeef 	.word	0xdeadbeef
   108d4:	00020ff7 	.word	0x00020ff7
   108d8:	00021014 	.word	0x00021014

000108dc <uart0_init>:
uart0_init():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:25
#include "sys_config.h"



void uart0_init(unsigned int baud_rate)
{
   108dc:	b510      	push	{r4, lr}
   108de:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:29
    /* Adding 0.5 to perform rounding correctly since we do not want
     * 1.9 to round down to 1, but we want it to round-up to 2.
     */
    const uint16_t divider = (sys_get_cpu_clock() / (16 * baud_rate) + 0.5);
   108e0:	f7ff fe8e 	bl	10600 <sys_get_cpu_clock>
   108e4:	0124      	lsls	r4, r4, #4
   108e6:	fbb0 f0f4 	udiv	r0, r0, r4
   108ea:	f008 ff4b 	bl	19784 <__aeabi_ui2d>
   108ee:	2200      	movs	r2, #0
   108f0:	4b10      	ldr	r3, [pc, #64]	; (10934 <uart0_init+0x58>)
   108f2:	f008 fe0b 	bl	1950c <__adddf3>
   108f6:	f009 f9cd 	bl	19c94 <__aeabi_d2uiz>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:33
    const uint8_t dlab_bit = (1 << 7);
    const uint8_t eight_bit_datalen = 3;

    lpc_pconp(pconp_uart0, true);
   108fa:	2101      	movs	r1, #1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:29
    const uint16_t divider = (sys_get_cpu_clock() / (16 * baud_rate) + 0.5);
   108fc:	b284      	uxth	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:33
    lpc_pconp(pconp_uart0, true);
   108fe:	2003      	movs	r0, #3
   10900:	f7ff fd96 	bl	10430 <lpc_pconp>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:34
    lpc_pclk(pclk_uart0, clkdiv_1);
   10904:	2101      	movs	r1, #1
   10906:	2003      	movs	r0, #3
   10908:	f7ff fdac 	bl	10464 <lpc_pclk>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:36

    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   1090c:	4b0a      	ldr	r3, [pc, #40]	; (10938 <uart0_init+0x5c>)
   1090e:	681a      	ldr	r2, [r3, #0]
   10910:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
   10914:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:37
    LPC_PINCON->PINSEL0 |= (0x5 << 4);  // Set values for UART0 Rx/Tx
   10916:	681a      	ldr	r2, [r3, #0]
   10918:	f042 0250 	orr.w	r2, r2, #80	; 0x50
   1091c:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:39

    LPC_UART0->LCR = dlab_bit;          // Set DLAB bit to access DLM & DLL
   1091e:	2280      	movs	r2, #128	; 0x80
   10920:	f5a3 3300 	sub.w	r3, r3, #131072	; 0x20000
   10924:	731a      	strb	r2, [r3, #12]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:40
    LPC_UART0->DLM = (divider >> 8);
   10926:	0a22      	lsrs	r2, r4, #8
   10928:	711a      	strb	r2, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:42
    LPC_UART0->DLL = (divider >> 0);
    LPC_UART0->LCR = eight_bit_datalen; // DLAB is reset back to zero
   1092a:	2203      	movs	r2, #3
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:41
    LPC_UART0->DLL = (divider >> 0);
   1092c:	b2e4      	uxtb	r4, r4
   1092e:	701c      	strb	r4, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:42
    LPC_UART0->LCR = eight_bit_datalen; // DLAB is reset back to zero
   10930:	731a      	strb	r2, [r3, #12]
   10932:	bd10      	pop	{r4, pc}
   10934:	3fe00000 	.word	0x3fe00000
   10938:	4002c000 	.word	0x4002c000

0001093c <uart0_getchar>:
uart0_getchar():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:47
}

char uart0_getchar(char notused)
{
    while(! BIT(LPC_UART0->LSR).b0);
   1093c:	4a03      	ldr	r2, [pc, #12]	; (1094c <uart0_getchar+0x10>)
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:47 (discriminator 1)
   1093e:	6813      	ldr	r3, [r2, #0]
   10940:	07db      	lsls	r3, r3, #31
   10942:	d5fc      	bpl.n	1093e <uart0_getchar+0x2>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:49

    return LPC_UART0->RBR;
   10944:	4b02      	ldr	r3, [pc, #8]	; (10950 <uart0_getchar+0x14>)
   10946:	7818      	ldrb	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:50
}
   10948:	4770      	bx	lr
   1094a:	bf00      	nop
   1094c:	4000c014 	.word	0x4000c014
   10950:	4000c000 	.word	0x4000c000

00010954 <uart0_putchar>:
uart0_putchar():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:55

char uart0_putchar(char out)
{
    //while(! (LPC_UART0->LSR & (1 << 6)));
    LPC_UART0->THR = out;
   10954:	4b03      	ldr	r3, [pc, #12]	; (10964 <uart0_putchar+0x10>)
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:57

    while(! BIT(LPC_UART0->LSR).b6);
   10956:	4a04      	ldr	r2, [pc, #16]	; (10968 <uart0_putchar+0x14>)
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:55
    LPC_UART0->THR = out;
   10958:	7018      	strb	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:57 (discriminator 1)
    while(! BIT(LPC_UART0->LSR).b6);
   1095a:	6813      	ldr	r3, [r2, #0]
   1095c:	065b      	lsls	r3, r3, #25
   1095e:	d5fc      	bpl.n	1095a <uart0_putchar+0x6>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:60

    return 1;
}
   10960:	2001      	movs	r0, #1
   10962:	4770      	bx	lr
   10964:	4000c000 	.word	0x4000c000
   10968:	4000c014 	.word	0x4000c014

0001096c <uart0_puts>:
uart0_puts():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:63

void uart0_puts(const char* c_string)
{
   1096c:	b508      	push	{r3, lr}
   1096e:	1e41      	subs	r1, r0, #1
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:65
    char* p = (char*) c_string;
    while(*p)
   10970:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   10974:	b920      	cbnz	r0, 10980 <uart0_puts+0x14>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:70
    {
        uart0_putchar(*p);
        p++;
    }
    uart0_putchar('\n');
   10976:	200a      	movs	r0, #10
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:71
}
   10978:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:70
    uart0_putchar('\n');
   1097c:	f7ff bfea 	b.w	10954 <uart0_putchar>
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:67
        uart0_putchar(*p);
   10980:	f7ff ffe8 	bl	10954 <uart0_putchar>
   10984:	e7f4      	b.n	10970 <uart0_puts+0x4>

00010986 <mem_cpy>:
mem_cpy():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:562
/* String functions                                                      */
/*-----------------------------------------------------------------------*/

/* Copy memory to memory */
static
void mem_cpy (void* dst, const void* src, UINT cnt) {
   10986:	b530      	push	{r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:563
	BYTE *d = (BYTE*)dst;
   10988:	4604      	mov	r4, r0
   1098a:	1f0d      	subs	r5, r1, #4
   1098c:	1b13      	subs	r3, r2, r4
   1098e:	4403      	add	r3, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:567
	const BYTE *s = (const BYTE*)src;

#if _WORD_ACCESS == 1
	while (cnt >= sizeof (int)) {
   10990:	2b03      	cmp	r3, #3
   10992:	d80a      	bhi.n	109aa <mem_cpy+0x24>
   10994:	f022 0303 	bic.w	r3, r2, #3
   10998:	4419      	add	r1, r3
   1099a:	f002 0203 	and.w	r2, r2, #3
   1099e:	3b01      	subs	r3, #1
   109a0:	4418      	add	r0, r3
   109a2:	440a      	add	r2, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:573
		*(int*)d = *(int*)s;
		d += sizeof (int); s += sizeof (int);
		cnt -= sizeof (int);
	}
#endif
	while (cnt--)
   109a4:	4291      	cmp	r1, r2
   109a6:	d105      	bne.n	109b4 <mem_cpy+0x2e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:575
		*d++ = *s++;
}
   109a8:	bd30      	pop	{r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:568
		*(int*)d = *(int*)s;
   109aa:	f855 3f04 	ldr.w	r3, [r5, #4]!
   109ae:	f844 3b04 	str.w	r3, [r4], #4
   109b2:	e7eb      	b.n	1098c <mem_cpy+0x6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:574
		*d++ = *s++;
   109b4:	f811 3b01 	ldrb.w	r3, [r1], #1
   109b8:	f800 3f01 	strb.w	r3, [r0, #1]!
   109bc:	e7f2      	b.n	109a4 <mem_cpy+0x1e>

000109be <mem_set>:
mem_set():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:579

/* Fill memory */
static
void mem_set (void* dst, int val, UINT cnt) {
   109be:	4402      	add	r2, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:582
	BYTE *d = (BYTE*)dst;

	while (cnt--)
   109c0:	4290      	cmp	r0, r2
   109c2:	d100      	bne.n	109c6 <mem_set+0x8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:584
		*d++ = (BYTE)val;
}
   109c4:	4770      	bx	lr
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:583
		*d++ = (BYTE)val;
   109c6:	f800 1b01 	strb.w	r1, [r0], #1
   109ca:	e7f9      	b.n	109c0 <mem_set+0x2>

000109cc <sum_sfn>:
sum_sfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1473
#if _USE_LFN
static
BYTE sum_sfn (
	const BYTE* dir		/* Pointer to the SFN entry */
)
{
   109cc:	4602      	mov	r2, r0
   109ce:	f100 010b 	add.w	r1, r0, #11
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1474
	BYTE sum = 0;
   109d2:	2000      	movs	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1477 (discriminator 1)
	UINT n = 11;

	do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
   109d4:	01c3      	lsls	r3, r0, #7
   109d6:	ea43 0350 	orr.w	r3, r3, r0, lsr #1
   109da:	f812 0b01 	ldrb.w	r0, [r2], #1
   109de:	4403      	add	r3, r0
   109e0:	428a      	cmp	r2, r1
   109e2:	f003 00ff 	and.w	r0, r3, #255	; 0xff
   109e6:	d1f5      	bne.n	109d4 <sum_sfn+0x8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1479
	return sum;
}
   109e8:	4770      	bx	lr

000109ea <get_ldnumber>:
get_ldnumber():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2086
	const TCHAR *tp, *tt;
	UINT i;
	int vol = -1;


	if (*path) {	/* If the pointer is not a null */
   109ea:	6803      	ldr	r3, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2080
{
   109ec:	b510      	push	{r4, lr}
   109ee:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2086
	if (*path) {	/* If the pointer is not a null */
   109f0:	b153      	cbz	r3, 10a08 <get_ldnumber+0x1e>
   109f2:	4619      	mov	r1, r3
   109f4:	460a      	mov	r2, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2087 (discriminator 1)
		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the path */
   109f6:	f811 0b01 	ldrb.w	r0, [r1], #1
   109fa:	281f      	cmp	r0, #31
   109fc:	d910      	bls.n	10a20 <get_ldnumber+0x36>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2087 (discriminator 3)
   109fe:	283a      	cmp	r0, #58	; 0x3a
   10a00:	d1f8      	bne.n	109f4 <get_ldnumber+0xa>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
		if (*tt == ':') {	/* If a ':' is exist in the path name */
			tp = *path;
			i = *tp++ - '0'; 
   10a02:	1c59      	adds	r1, r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2091
			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
   10a04:	428a      	cmp	r2, r1
   10a06:	d002      	beq.n	10a0e <get_ldnumber+0x24>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2083
	int vol = -1;
   10a08:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2126
#else
		vol = 0;		/* Drive 0 */
#endif
	}
	return vol;
}
   10a0c:	bd10      	pop	{r4, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
			i = *tp++ - '0'; 
   10a0e:	781b      	ldrb	r3, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2092
				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
   10a10:	3b30      	subs	r3, #48	; 0x30
   10a12:	b2d9      	uxtb	r1, r3
   10a14:	2901      	cmp	r1, #1
   10a16:	d8f7      	bhi.n	10a08 <get_ldnumber+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2094
					*path = ++tt;
   10a18:	3201      	adds	r2, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
			i = *tp++ - '0'; 
   10a1a:	4618      	mov	r0, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2094
					*path = ++tt;
   10a1c:	6022      	str	r2, [r4, #0]
   10a1e:	bd10      	pop	{r4, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2122
		vol = 0;		/* Drive 0 */
   10a20:	2000      	movs	r0, #0
   10a22:	bd10      	pop	{r4, pc}

00010a24 <get_fileinfo>:
get_fileinfo():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1745
	if (dp->sect) {		/* Get SFN */
   10a24:	6903      	ldr	r3, [r0, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1739
{
   10a26:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1744
	p = fno->fname;
   10a2a:	f101 0209 	add.w	r2, r1, #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1739
{
   10a2e:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1745
	if (dp->sect) {		/* Get SFN */
   10a30:	b363      	cbz	r3, 10a8c <get_fileinfo+0x68>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1748
		i = 0;
   10a32:	2400      	movs	r4, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   10a34:	272e      	movs	r7, #46	; 0x2e
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1746
		BYTE *dir = dp->dir;
   10a36:	6941      	ldr	r1, [r0, #20]
   10a38:	1e4e      	subs	r6, r1, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1750
			c = (TCHAR)dir[i++];
   10a3a:	f816 3f01 	ldrb.w	r3, [r6, #1]!
   10a3e:	3401      	adds	r4, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1751
			if (c == ' ') continue;			/* Skip padding spaces */
   10a40:	2b20      	cmp	r3, #32
   10a42:	d019      	beq.n	10a78 <get_fileinfo+0x54>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1752
			if (c == NDDE) c = (TCHAR)DDE;	/* Restore replaced DDE character */
   10a44:	2b05      	cmp	r3, #5
   10a46:	d048      	beq.n	10ada <get_fileinfo+0xb6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   10a48:	2c09      	cmp	r4, #9
   10a4a:	d101      	bne.n	10a50 <get_fileinfo+0x2c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753 (discriminator 1)
   10a4c:	7017      	strb	r7, [r2, #0]
   10a4e:	3201      	adds	r2, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1755
			if (IsUpper(c) && (dir[DIR_NTres] & (i >= 9 ? NS_EXT : NS_BODY)))
   10a50:	f1a3 0e41 	sub.w	lr, r3, #65	; 0x41
   10a54:	f1be 0f19 	cmp.w	lr, #25
   10a58:	d80c      	bhi.n	10a74 <get_fileinfo+0x50>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1755 (discriminator 1)
   10a5a:	2c08      	cmp	r4, #8
   10a5c:	bf8c      	ite	hi
   10a5e:	f04f 0c10 	movhi.w	ip, #16
   10a62:	f04f 0c08 	movls.w	ip, #8
   10a66:	f891 e00c 	ldrb.w	lr, [r1, #12]
   10a6a:	ea1c 0f0e 	tst.w	ip, lr
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1756 (discriminator 1)
				c += 0x20;			/* To lower */
   10a6e:	bf1c      	itt	ne
   10a70:	3320      	addne	r3, #32
   10a72:	b2db      	uxtbne	r3, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1764
			*p++ = c;
   10a74:	7013      	strb	r3, [r2, #0]
   10a76:	3201      	adds	r2, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1749
		while (i < 11) {		/* Copy name body and extension */
   10a78:	2c0b      	cmp	r4, #11
   10a7a:	d1de      	bne.n	10a3a <get_fileinfo+0x16>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1766
		fno->fattrib = dir[DIR_Attr];				/* Attribute */
   10a7c:	7acb      	ldrb	r3, [r1, #11]
   10a7e:	722b      	strb	r3, [r5, #8]
LD_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
#define	ST_WORD(ptr,val)	*(WORD*)(BYTE*)(ptr)=(WORD)(val)
#define	ST_DWORD(ptr,val)	*(DWORD*)(BYTE*)(ptr)=(DWORD)(val)
#else
#endif
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   10a80:	69cb      	ldr	r3, [r1, #28]
get_fileinfo():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1767
		fno->fsize = LD_DWORD(dir+DIR_FileSize);	/* Size */
   10a82:	602b      	str	r3, [r5, #0]
LD_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   10a84:	8b0b      	ldrh	r3, [r1, #24]
get_fileinfo():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1768
		fno->fdate = LD_WORD(dir+DIR_WrtDate);		/* Date */
   10a86:	80ab      	strh	r3, [r5, #4]
LD_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
   10a88:	8acb      	ldrh	r3, [r1, #22]
get_fileinfo():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1769
		fno->ftime = LD_WORD(dir+DIR_WrtTime);		/* Time */
   10a8a:	80eb      	strh	r3, [r5, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1771
	*p = 0;		/* Terminate SFN string by a \0 */
   10a8c:	2400      	movs	r4, #0
   10a8e:	7014      	strb	r4, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1774
	if (fno->lfname) {
   10a90:	69ae      	ldr	r6, [r5, #24]
   10a92:	b33e      	cbz	r6, 10ae4 <get_fileinfo+0xc0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1778
		if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
   10a94:	6903      	ldr	r3, [r0, #16]
   10a96:	b923      	cbnz	r3, 10aa2 <get_fileinfo+0x7e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1777
		i = 0; p = fno->lfname;
   10a98:	2400      	movs	r4, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1791
		p[i] = 0;	/* Terminate LFN string by a \0 */
   10a9a:	2300      	movs	r3, #0
   10a9c:	5533      	strb	r3, [r6, r4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1794
}
   10a9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1778 (discriminator 1)
		if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
   10aa2:	69eb      	ldr	r3, [r5, #28]
   10aa4:	2b00      	cmp	r3, #0
   10aa6:	d0f7      	beq.n	10a98 <get_fileinfo+0x74>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1778 (discriminator 2)
   10aa8:	f64f 73ff 	movw	r3, #65535	; 0xffff
   10aac:	8c02      	ldrh	r2, [r0, #32]
   10aae:	429a      	cmp	r2, r3
   10ab0:	d0f2      	beq.n	10a98 <get_fileinfo+0x74>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1779
			lfn = dp->lfn;
   10ab2:	f8d0 801c 	ldr.w	r8, [r0, #28]
   10ab6:	1e77      	subs	r7, r6, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1780
			while ((w = *lfn++) != 0) {		/* Get an LFN character */
   10ab8:	f838 0014 	ldrh.w	r0, [r8, r4, lsl #1]
   10abc:	2800      	cmp	r0, #0
   10abe:	d0ec      	beq.n	10a9a <get_fileinfo+0x76>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1782
				w = ff_convert(w, 0);		/* Unicode -> OEM */
   10ac0:	2100      	movs	r1, #0
   10ac2:	f001 fdfd 	bl	126c0 <ff_convert>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1783
				if (!w) { i = 0; break; }	/* No LFN if it could not be converted */
   10ac6:	2800      	cmp	r0, #0
   10ac8:	d0e6      	beq.n	10a98 <get_fileinfo+0x74>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1787
				if (i >= fno->lfsize - 1) { i = 0; break; }	/* No LFN if buffer overflow */
   10aca:	69eb      	ldr	r3, [r5, #28]
   10acc:	3b01      	subs	r3, #1
   10ace:	429c      	cmp	r4, r3
   10ad0:	d2e2      	bcs.n	10a98 <get_fileinfo+0x74>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1788
				p[i++] = (TCHAR)w;
   10ad2:	3401      	adds	r4, #1
   10ad4:	f807 0f01 	strb.w	r0, [r7, #1]!
   10ad8:	e7ee      	b.n	10ab8 <get_fileinfo+0x94>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   10ada:	2c09      	cmp	r4, #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1752
			if (c == NDDE) c = (TCHAR)DDE;	/* Restore replaced DDE character */
   10adc:	f04f 03e5 	mov.w	r3, #229	; 0xe5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   10ae0:	d1c8      	bne.n	10a74 <get_fileinfo+0x50>
   10ae2:	e7b3      	b.n	10a4c <get_fileinfo+0x28>
   10ae4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00010ae8 <sync_window.part.1>:
sync_window():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:755
FRESULT sync_window (
   10ae8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:764
		wsect = fs->winsect;	/* Current sector number */
   10aea:	6b05      	ldr	r5, [r0, #48]	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:765
		if (disk_write(fs->drv, fs->win, wsect, 1))
   10aec:	f100 0734 	add.w	r7, r0, #52	; 0x34
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:755
FRESULT sync_window (
   10af0:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:765
		if (disk_write(fs->drv, fs->win, wsect, 1))
   10af2:	2301      	movs	r3, #1
   10af4:	462a      	mov	r2, r5
   10af6:	4639      	mov	r1, r7
   10af8:	7840      	ldrb	r0, [r0, #1]
   10afa:	f002 fc5e 	bl	133ba <disk_write>
   10afe:	b9a0      	cbnz	r0, 10b2a <sync_window.part.1+0x42>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:768
		if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
   10b00:	6a63      	ldr	r3, [r4, #36]	; 0x24
   10b02:	69e2      	ldr	r2, [r4, #28]
   10b04:	1aeb      	subs	r3, r5, r3
   10b06:	4293      	cmp	r3, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:767
		fs->wflag = 0;
   10b08:	7120      	strb	r0, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:768
		if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
   10b0a:	d301      	bcc.n	10b10 <sync_window.part.1+0x28>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:775
	return FR_OK;
   10b0c:	2000      	movs	r0, #0
   10b0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:769
			for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
   10b10:	78e6      	ldrb	r6, [r4, #3]
   10b12:	2e01      	cmp	r6, #1
   10b14:	d9fa      	bls.n	10b0c <sync_window.part.1+0x24>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:770
				wsect += fs->fsize;
   10b16:	69e3      	ldr	r3, [r4, #28]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:771
				disk_write(fs->drv, fs->win, wsect, 1);
   10b18:	4639      	mov	r1, r7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:770
				wsect += fs->fsize;
   10b1a:	441d      	add	r5, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:771
				disk_write(fs->drv, fs->win, wsect, 1);
   10b1c:	462a      	mov	r2, r5
   10b1e:	2301      	movs	r3, #1
   10b20:	7860      	ldrb	r0, [r4, #1]
   10b22:	f002 fc4a 	bl	133ba <disk_write>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:769
			for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
   10b26:	3e01      	subs	r6, #1
   10b28:	e7f3      	b.n	10b12 <sync_window.part.1+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:766
			return FR_DISK_ERR;
   10b2a:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:776
}
   10b2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00010b2e <sync_window>:
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:763
	if (fs->wflag) {	/* Write back the sector if it is dirty */
   10b2e:	7903      	ldrb	r3, [r0, #4]
   10b30:	b10b      	cbz	r3, 10b36 <sync_window+0x8>
   10b32:	f7ff bfd9 	b.w	10ae8 <sync_window.part.1>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:776
}
   10b36:	4618      	mov	r0, r3
   10b38:	4770      	bx	lr
   10b3a:	Address 0x0000000000010b3a is out of bounds.


00010b3c <sync_fs>:
sync_fs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:810
{
   10b3c:	b570      	push	{r4, r5, r6, lr}
   10b3e:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:814
	res = sync_window(fs);
   10b40:	f7ff fff5 	bl	10b2e <sync_window>
   10b44:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:815
	if (res == FR_OK) {
   10b46:	bb80      	cbnz	r0, 10baa <sync_fs+0x6e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:817
		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
   10b48:	7823      	ldrb	r3, [r4, #0]
   10b4a:	2b03      	cmp	r3, #3
   10b4c:	d125      	bne.n	10b9a <sync_fs+0x5e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:817 (discriminator 1)
   10b4e:	7963      	ldrb	r3, [r4, #5]
   10b50:	2b01      	cmp	r3, #1
   10b52:	d122      	bne.n	10b9a <sync_fs+0x5e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:819
			mem_set(fs->win, 0, SS(fs));
   10b54:	f104 0634 	add.w	r6, r4, #52	; 0x34
   10b58:	4601      	mov	r1, r0
   10b5a:	f44f 7200 	mov.w	r2, #512	; 0x200
   10b5e:	4630      	mov	r0, r6
   10b60:	f7ff ff2d 	bl	109be <mem_set>
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   10b64:	f64a 2255 	movw	r2, #43605	; 0xaa55
   10b68:	f8a4 2232 	strh.w	r2, [r4, #562]	; 0x232
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   10b6c:	4a0f      	ldr	r2, [pc, #60]	; (10bac <sync_fs+0x70>)
sync_fs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
			disk_write(fs->drv, fs->win, fs->winsect, 1);
   10b6e:	4631      	mov	r1, r6
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   10b70:	6362      	str	r2, [r4, #52]	; 0x34
   10b72:	f102 52ff 	add.w	r2, r2, #534773760	; 0x1fe00000
   10b76:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
   10b7a:	3220      	adds	r2, #32
   10b7c:	f8c4 2218 	str.w	r2, [r4, #536]	; 0x218
   10b80:	6962      	ldr	r2, [r4, #20]
sync_fs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
   10b82:	7860      	ldrb	r0, [r4, #1]
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   10b84:	f8c4 221c 	str.w	r2, [r4, #540]	; 0x21c
   10b88:	6922      	ldr	r2, [r4, #16]
   10b8a:	f8c4 2220 	str.w	r2, [r4, #544]	; 0x220
sync_fs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:826
			fs->winsect = fs->volbase + 1;
   10b8e:	6a22      	ldr	r2, [r4, #32]
   10b90:	3201      	adds	r2, #1
   10b92:	6322      	str	r2, [r4, #48]	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
			disk_write(fs->drv, fs->win, fs->winsect, 1);
   10b94:	f002 fc11 	bl	133ba <disk_write>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:828
			fs->fsi_flag = 0;
   10b98:	7165      	strb	r5, [r4, #5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:831
		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK)
   10b9a:	2200      	movs	r2, #0
   10b9c:	7860      	ldrb	r0, [r4, #1]
   10b9e:	4611      	mov	r1, r2
   10ba0:	f002 fc27 	bl	133f2 <disk_ioctl>
   10ba4:	3000      	adds	r0, #0
   10ba6:	bf18      	it	ne
   10ba8:	2001      	movne	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:836
}
   10baa:	bd70      	pop	{r4, r5, r6, pc}
   10bac:	41615252 	.word	0x41615252

00010bb0 <move_window>:
move_window():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   10bb0:	6b03      	ldr	r3, [r0, #48]	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:785
{
   10bb2:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   10bb4:	428b      	cmp	r3, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:785
{
   10bb6:	4605      	mov	r5, r0
   10bb8:	460e      	mov	r6, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   10bba:	d011      	beq.n	10be0 <move_window+0x30>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:788
		if (sync_window(fs) != FR_OK)
   10bbc:	f7ff ffb7 	bl	10b2e <sync_window>
   10bc0:	4604      	mov	r4, r0
   10bc2:	b110      	cbz	r0, 10bca <move_window+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:789
			return FR_DISK_ERR;
   10bc4:	2401      	movs	r4, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:797
}
   10bc6:	4620      	mov	r0, r4
   10bc8:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:791
		if (disk_read(fs->drv, fs->win, sector, 1))
   10bca:	2301      	movs	r3, #1
   10bcc:	4632      	mov	r2, r6
   10bce:	f105 0134 	add.w	r1, r5, #52	; 0x34
   10bd2:	7868      	ldrb	r0, [r5, #1]
   10bd4:	f002 fbd5 	bl	13382 <disk_read>
   10bd8:	2800      	cmp	r0, #0
   10bda:	d1f3      	bne.n	10bc4 <move_window+0x14>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:793
		fs->winsect = sector;
   10bdc:	632e      	str	r6, [r5, #48]	; 0x30
   10bde:	e7f2      	b.n	10bc6 <move_window+0x16>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:796
	return FR_OK;
   10be0:	2400      	movs	r4, #0
   10be2:	e7f0      	b.n	10bc6 <move_window+0x16>

00010be4 <check_fs>:
check_fs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2141
BYTE check_fs (	/* 0:FAT boor sector, 1:Valid boor sector but not FAT, 2:Not a boot sector, 3:Disk error */
	FATFS* fs,	/* File system object */
	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
)
{
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
   10be4:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2140
{
   10be6:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2141
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
   10be8:	7103      	strb	r3, [r0, #4]
   10bea:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   10bee:	6303      	str	r3, [r0, #48]	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2140
{
   10bf0:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2142
	if (move_window(fs, sect) != FR_OK)			/* Load boot record */
   10bf2:	f7ff ffdd 	bl	10bb0 <move_window>
   10bf6:	b9a0      	cbnz	r0, 10c22 <check_fs+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2145
		return 3;

	if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)	/* Check boot record signature (always placed at offset 510 even if the sector size is >512) */
   10bf8:	f64a 2355 	movw	r3, #43605	; 0xaa55
   10bfc:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
   10c00:	429a      	cmp	r2, r3
   10c02:	d110      	bne.n	10c26 <check_fs+0x42>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2148
		return 2;

	if ((LD_DWORD(&fs->win[BS_FilSysType]) & 0xFFFFFF) == 0x544146)		/* Check "FAT" string */
   10c04:	f8d4 306a 	ldr.w	r3, [r4, #106]	; 0x6a
   10c08:	4a08      	ldr	r2, [pc, #32]	; (10c2c <check_fs+0x48>)
   10c0a:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
   10c0e:	4293      	cmp	r3, r2
   10c10:	d00a      	beq.n	10c28 <check_fs+0x44>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2150
		return 0;
	if ((LD_DWORD(&fs->win[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
   10c12:	f8d4 0086 	ldr.w	r0, [r4, #134]	; 0x86
   10c16:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2143
		return 3;
   10c1a:	1a80      	subs	r0, r0, r2
   10c1c:	bf18      	it	ne
   10c1e:	2001      	movne	r0, #1
   10c20:	bd10      	pop	{r4, pc}
   10c22:	2003      	movs	r0, #3
   10c24:	bd10      	pop	{r4, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2146
		return 2;
   10c26:	2002      	movs	r0, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2154
		return 0;

	return 1;
}
   10c28:	bd10      	pop	{r4, pc}
   10c2a:	bf00      	nop
   10c2c:	00544146 	.word	0x00544146

00010c30 <find_volume>:
find_volume():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2179
	WORD nrsv;
	FATFS *fs;


	/* Get logical drive number from the path name */
	*rfs = 0;
   10c30:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   10c32:	b5f0      	push	{r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2179
	*rfs = 0;
   10c34:	6003      	str	r3, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   10c36:	b085      	sub	sp, #20
   10c38:	4607      	mov	r7, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2180
	vol = get_ldnumber(path);
   10c3a:	4608      	mov	r0, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   10c3c:	4615      	mov	r5, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2180
	vol = get_ldnumber(path);
   10c3e:	f7ff fed4 	bl	109ea <get_ldnumber>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2181
	if (vol < 0) return FR_INVALID_DRIVE;
   10c42:	1e06      	subs	r6, r0, #0
   10c44:	f2c0 80f1 	blt.w	10e2a <find_volume+0x1fa>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2184

	/* Check if the file system object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the file system object */
   10c48:	4b7d      	ldr	r3, [pc, #500]	; (10e40 <find_volume+0x210>)
   10c4a:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2185
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
   10c4e:	2c00      	cmp	r4, #0
   10c50:	f000 80ed 	beq.w	10e2e <find_volume+0x1fe>
lock_fs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:615
	return ff_req_grant(fs->sobj);
   10c54:	68e0      	ldr	r0, [r4, #12]
   10c56:	f001 fd6f 	bl	12738 <ff_req_grant>
find_volume():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2187

	ENTER_FF(fs);						/* Lock the volume */
   10c5a:	2800      	cmp	r0, #0
   10c5c:	f000 80e9 	beq.w	10e32 <find_volume+0x202>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2188
	*rfs = fs;							/* Return pointer to the file system object */
   10c60:	603c      	str	r4, [r7, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2190

	if (fs->fs_type) {					/* If the volume has been mounted */
   10c62:	7823      	ldrb	r3, [r4, #0]
   10c64:	b16b      	cbz	r3, 10c82 <find_volume+0x52>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2191
		stat = disk_status(fs->drv);
   10c66:	7860      	ldrb	r0, [r4, #1]
   10c68:	f002 fb83 	bl	13372 <disk_status>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2192
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
   10c6c:	07c1      	lsls	r1, r0, #31
   10c6e:	d408      	bmi.n	10c82 <find_volume+0x52>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2193
			if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check write protection if needed */
   10c70:	2d00      	cmp	r5, #0
   10c72:	f000 80b7 	beq.w	10de4 <find_volume+0x1b4>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2193 (discriminator 1)
   10c76:	f010 0004 	ands.w	r0, r0, #4
   10c7a:	d000      	beq.n	10c7e <find_volume+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2194
				return FR_WRITE_PROTECTED;
   10c7c:	200a      	movs	r0, #10
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2325
#if _FS_LOCK			/* Clear file lock semaphores */
	clear_lock(fs);
#endif

	return FR_OK;
}
   10c7e:	b005      	add	sp, #20
   10c80:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2202
	fs->fs_type = 0;					/* Clear the file system object */
   10c82:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2203
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
   10c84:	b2f0      	uxtb	r0, r6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2202
	fs->fs_type = 0;					/* Clear the file system object */
   10c86:	7023      	strb	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2203
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
   10c88:	7060      	strb	r0, [r4, #1]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2204
	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
   10c8a:	f002 fb5f 	bl	1334c <disk_initialize>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2205
	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
   10c8e:	07c2      	lsls	r2, r0, #31
   10c90:	f100 80d1 	bmi.w	10e36 <find_volume+0x206>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2207
	if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check disk write protection if needed */
   10c94:	b10d      	cbz	r5, 10c9a <find_volume+0x6a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2207 (discriminator 1)
   10c96:	0743      	lsls	r3, r0, #29
   10c98:	d4f0      	bmi.n	10c7c <find_volume+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2215
	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
   10c9a:	2100      	movs	r1, #0
   10c9c:	4620      	mov	r0, r4
   10c9e:	f7ff ffa1 	bl	10be4 <check_fs>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2216
	if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
   10ca2:	2801      	cmp	r0, #1
   10ca4:	f040 80ac 	bne.w	10e00 <find_volume+0x1d0>
   10ca8:	4621      	mov	r1, r4
   10caa:	2200      	movs	r2, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2222
			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
   10cac:	f891 31f6 	ldrb.w	r3, [r1, #502]	; 0x1f6
   10cb0:	b10b      	cbz	r3, 10cb6 <find_volume+0x86>
LD_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   10cb2:	f8d1 31fa 	ldr.w	r3, [r1, #506]	; 0x1fa
find_volume():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2222 (discriminator 4)
   10cb6:	f84d 3022 	str.w	r3, [sp, r2, lsl #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2220 (discriminator 4)
		for (i = 0; i < 4; i++) {			/* Get partition offset */
   10cba:	3201      	adds	r2, #1
   10cbc:	2a04      	cmp	r2, #4
   10cbe:	f101 0110 	add.w	r1, r1, #16
   10cc2:	d1f3      	bne.n	10cac <find_volume+0x7c>
   10cc4:	2600      	movs	r6, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2227
			bsect = br[i];
   10cc6:	f85d 5026 	ldr.w	r5, [sp, r6, lsl #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228
			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
   10cca:	2d00      	cmp	r5, #0
   10ccc:	f000 808c 	beq.w	10de8 <find_volume+0x1b8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228 (discriminator 1)
   10cd0:	4629      	mov	r1, r5
   10cd2:	4620      	mov	r0, r4
   10cd4:	f7ff ff86 	bl	10be4 <check_fs>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2229 (discriminator 1)
		} while (!LD2PT(vol) && fmt && ++i < 4);
   10cd8:	2800      	cmp	r0, #0
   10cda:	f040 8086 	bne.w	10dea <find_volume+0x1ba>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2236
	if (LD_WORD(fs->win+BPB_BytsPerSec) != SS(fs))		/* (BPB_BytsPerSec must be equal to the physical sector size) */
   10cde:	f8b4 303f 	ldrh.w	r3, [r4, #63]	; 0x3f
   10ce2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   10ce6:	f040 8089 	bne.w	10dfc <find_volume+0x1cc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2239
	fasize = LD_WORD(fs->win+BPB_FATSz16);				/* Number of sectors per FAT */
   10cea:	f8b4 104a 	ldrh.w	r1, [r4, #74]	; 0x4a
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2240
	if (!fasize) fasize = LD_DWORD(fs->win+BPB_FATSz32);
   10cee:	b901      	cbnz	r1, 10cf2 <find_volume+0xc2>
LD_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
   10cf0:	6da1      	ldr	r1, [r4, #88]	; 0x58
find_volume():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2243
	fs->n_fats = fs->win[BPB_NumFATs];					/* Number of FAT copies */
   10cf2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2241
	fs->fsize = fasize;
   10cf6:	61e1      	str	r1, [r4, #28]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2244
	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
   10cf8:	1e53      	subs	r3, r2, #1
   10cfa:	2b01      	cmp	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2243
	fs->n_fats = fs->win[BPB_NumFATs];					/* Number of FAT copies */
   10cfc:	70e2      	strb	r2, [r4, #3]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2244
	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
   10cfe:	d87d      	bhi.n	10dfc <find_volume+0x1cc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2248
	fs->csize = fs->win[BPB_SecPerClus];				/* Number of sectors per cluster */
   10d00:	f894 6041 	ldrb.w	r6, [r4, #65]	; 0x41
   10d04:	70a6      	strb	r6, [r4, #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2249
	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
   10d06:	2e00      	cmp	r6, #0
   10d08:	d078      	beq.n	10dfc <find_volume+0x1cc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2249 (discriminator 1)
   10d0a:	1e73      	subs	r3, r6, #1
   10d0c:	4233      	tst	r3, r6
   10d0e:	d175      	bne.n	10dfc <find_volume+0x1cc>
LD_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   10d10:	f8b4 e045 	ldrh.w	lr, [r4, #69]	; 0x45
find_volume():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2253
	if (fs->n_rootdir % (SS(fs) / SZ_DIR))				/* (Must be sector aligned) */
   10d14:	f01e 0f0f 	tst.w	lr, #15
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2252
	fs->n_rootdir = LD_WORD(fs->win+BPB_RootEntCnt);	/* Number of root directory entries */
   10d18:	f8a4 e008 	strh.w	lr, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2253
	if (fs->n_rootdir % (SS(fs) / SZ_DIR))				/* (Must be sector aligned) */
   10d1c:	d16e      	bne.n	10dfc <find_volume+0x1cc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2256
	tsect = LD_WORD(fs->win+BPB_TotSec16);				/* Number of sectors on the volume */
   10d1e:	f8b4 3047 	ldrh.w	r3, [r4, #71]	; 0x47
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2257
	if (!tsect) tsect = LD_DWORD(fs->win+BPB_TotSec32);
   10d22:	b903      	cbnz	r3, 10d26 <find_volume+0xf6>
LD_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   10d24:	6d63      	ldr	r3, [r4, #84]	; 0x54
LD_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   10d26:	f8b4 7042 	ldrh.w	r7, [r4, #66]	; 0x42
find_volume():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2260
	if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
   10d2a:	2f00      	cmp	r7, #0
   10d2c:	d066      	beq.n	10dfc <find_volume+0x1cc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2246
	fasize *= fs->n_fats;								/* Number of sectors for FAT area */
   10d2e:	434a      	muls	r2, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2263
	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIR);	/* RSV+FAT+DIR */
   10d30:	eb07 101e 	add.w	r0, r7, lr, lsr #4
   10d34:	4410      	add	r0, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2264
	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
   10d36:	4283      	cmp	r3, r0
   10d38:	d360      	bcc.n	10dfc <find_volume+0x1cc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2265
	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
   10d3a:	1a1b      	subs	r3, r3, r0
   10d3c:	fbb3 f3f6 	udiv	r3, r3, r6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2266
	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
   10d40:	2b00      	cmp	r3, #0
   10d42:	d05b      	beq.n	10dfc <find_volume+0x1cc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2268
	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
   10d44:	f640 76f5 	movw	r6, #4085	; 0xff5
   10d48:	42b3      	cmp	r3, r6
   10d4a:	d95b      	bls.n	10e04 <find_volume+0x1d4>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2269
	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
   10d4c:	f64f 76f5 	movw	r6, #65525	; 0xfff5
   10d50:	42b3      	cmp	r3, r6
   10d52:	bf94      	ite	ls
   10d54:	2602      	movls	r6, #2
   10d56:	2603      	movhi	r6, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2272
	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
   10d58:	3302      	adds	r3, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2274
	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
   10d5a:	442f      	add	r7, r5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2275
	fs->database = bsect + sysect;						/* Data start sector */
   10d5c:	4428      	add	r0, r5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2276
	if (fmt == FS_FAT32) {
   10d5e:	2e03      	cmp	r6, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2272
	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
   10d60:	61a3      	str	r3, [r4, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2273
	fs->volbase = bsect;								/* Volume start sector */
   10d62:	6225      	str	r5, [r4, #32]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2274
	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
   10d64:	6267      	str	r7, [r4, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2275
	fs->database = bsect + sysect;						/* Data start sector */
   10d66:	62e0      	str	r0, [r4, #44]	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2276
	if (fmt == FS_FAT32) {
   10d68:	d14e      	bne.n	10e08 <find_volume+0x1d8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2277
		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
   10d6a:	f1be 0f00 	cmp.w	lr, #0
   10d6e:	d145      	bne.n	10dfc <find_volume+0x1cc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2278
		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
   10d70:	6e22      	ldr	r2, [r4, #96]	; 0x60
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2279
		szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
   10d72:	009b      	lsls	r3, r3, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2278
		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
   10d74:	62a2      	str	r2, [r4, #40]	; 0x28
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2286
	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than needed) */
   10d76:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   10d7a:	ebb1 2f53 	cmp.w	r1, r3, lsr #9
   10d7e:	d33d      	bcc.n	10dfc <find_volume+0x1cc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2291
	fs->last_clust = fs->free_clust = 0xFFFFFFFF;
   10d80:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   10d84:	6163      	str	r3, [r4, #20]
   10d86:	6123      	str	r3, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2294
	fs->fsi_flag = 0x80;
   10d88:	2380      	movs	r3, #128	; 0x80
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2296
	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
   10d8a:	2e03      	cmp	r6, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2294
	fs->fsi_flag = 0x80;
   10d8c:	7163      	strb	r3, [r4, #5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2296
	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
   10d8e:	d122      	bne.n	10dd6 <find_volume+0x1a6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2297
		&& LD_WORD(fs->win+BPB_FSInfo) == 1
   10d90:	f8b4 3064 	ldrh.w	r3, [r4, #100]	; 0x64
   10d94:	2b01      	cmp	r3, #1
   10d96:	d11e      	bne.n	10dd6 <find_volume+0x1a6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2298
		&& move_window(fs, bsect + 1) == FR_OK)
   10d98:	1c69      	adds	r1, r5, #1
   10d9a:	4620      	mov	r0, r4
   10d9c:	f7ff ff08 	bl	10bb0 <move_window>
   10da0:	b9c8      	cbnz	r0, 10dd6 <find_volume+0x1a6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2301
		if (LD_WORD(fs->win+BS_55AA) == 0xAA55	/* Load FSINFO data if available */
   10da2:	f64a 2355 	movw	r3, #43605	; 0xaa55
   10da6:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2300
		fs->fsi_flag = 0;
   10daa:	7160      	strb	r0, [r4, #5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2301
		if (LD_WORD(fs->win+BS_55AA) == 0xAA55	/* Load FSINFO data if available */
   10dac:	429a      	cmp	r2, r3
   10dae:	d112      	bne.n	10dd6 <find_volume+0x1a6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2302
			&& LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252
   10db0:	6b62      	ldr	r2, [r4, #52]	; 0x34
   10db2:	4b24      	ldr	r3, [pc, #144]	; (10e44 <find_volume+0x214>)
   10db4:	429a      	cmp	r2, r3
   10db6:	d10e      	bne.n	10dd6 <find_volume+0x1a6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2303
			&& LD_DWORD(fs->win+FSI_StrucSig) == 0x61417272)
   10db8:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   10dbc:	f8d4 2218 	ldr.w	r2, [r4, #536]	; 0x218
   10dc0:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   10dc4:	3320      	adds	r3, #32
   10dc6:	429a      	cmp	r2, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2306
			fs->free_clust = LD_DWORD(fs->win+FSI_Free_Count);
   10dc8:	bf01      	itttt	eq
   10dca:	f8d4 321c 	ldreq.w	r3, [r4, #540]	; 0x21c
   10dce:	6163      	streq	r3, [r4, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2309
			fs->last_clust = LD_DWORD(fs->win+FSI_Nxt_Free);
   10dd0:	f8d4 3220 	ldreq.w	r3, [r4, #544]	; 0x220
   10dd4:	6123      	streq	r3, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   10dd6:	4a1c      	ldr	r2, [pc, #112]	; (10e48 <find_volume+0x218>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2315
	fs->fs_type = fmt;	/* FAT sub-type */
   10dd8:	7026      	strb	r6, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   10dda:	8813      	ldrh	r3, [r2, #0]
   10ddc:	3301      	adds	r3, #1
   10dde:	b29b      	uxth	r3, r3
   10de0:	8013      	strh	r3, [r2, #0]
   10de2:	80e3      	strh	r3, [r4, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2324
	return FR_OK;
   10de4:	2000      	movs	r0, #0
   10de6:	e74a      	b.n	10c7e <find_volume+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228
			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
   10de8:	2002      	movs	r0, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2229 (discriminator 1)
		} while (!LD2PT(vol) && fmt && ++i < 4);
   10dea:	3601      	adds	r6, #1
   10dec:	2e04      	cmp	r6, #4
   10dee:	f47f af6a 	bne.w	10cc6 <find_volume+0x96>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2231
	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
   10df2:	2803      	cmp	r0, #3
   10df4:	d021      	beq.n	10e3a <find_volume+0x20a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2232
	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
   10df6:	2800      	cmp	r0, #0
   10df8:	f43f af71 	beq.w	10cde <find_volume+0xae>
   10dfc:	200d      	movs	r0, #13
   10dfe:	e73e      	b.n	10c7e <find_volume+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2214
	bsect = 0;
   10e00:	2500      	movs	r5, #0
   10e02:	e7f6      	b.n	10df2 <find_volume+0x1c2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2267
	fmt = FS_FAT12;
   10e04:	2601      	movs	r6, #1
   10e06:	e7a7      	b.n	10d58 <find_volume+0x128>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2281
		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
   10e08:	f1be 0f00 	cmp.w	lr, #0
   10e0c:	d0f6      	beq.n	10dfc <find_volume+0x1cc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   10e0e:	2e02      	cmp	r6, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2282
		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
   10e10:	4417      	add	r7, r2
   10e12:	ea4f 0243 	mov.w	r2, r3, lsl #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   10e16:	bf1c      	itt	ne
   10e18:	18d2      	addne	r2, r2, r3
   10e1a:	f003 0301 	andne.w	r3, r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2282
		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
   10e1e:	62a7      	str	r7, [r4, #40]	; 0x28
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   10e20:	bf0c      	ite	eq
   10e22:	4613      	moveq	r3, r2
   10e24:	eb03 0352 	addne.w	r3, r3, r2, lsr #1
   10e28:	e7a5      	b.n	10d76 <find_volume+0x146>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2181
	if (vol < 0) return FR_INVALID_DRIVE;
   10e2a:	200b      	movs	r0, #11
   10e2c:	e727      	b.n	10c7e <find_volume+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2185
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
   10e2e:	200c      	movs	r0, #12
   10e30:	e725      	b.n	10c7e <find_volume+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2187
	ENTER_FF(fs);						/* Lock the volume */
   10e32:	200f      	movs	r0, #15
   10e34:	e723      	b.n	10c7e <find_volume+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2206
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
   10e36:	2003      	movs	r0, #3
   10e38:	e721      	b.n	10c7e <find_volume+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2231
	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
   10e3a:	2001      	movs	r0, #1
   10e3c:	e71f      	b.n	10c7e <find_volume+0x4e>
   10e3e:	bf00      	nop
   10e40:	2007c31c 	.word	0x2007c31c
   10e44:	41615252 	.word	0x41615252
   10e48:	2007c324 	.word	0x2007c324

00010e4c <validate>:
validate():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2338

static
FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
	void* obj		/* Pointer to the object FIL/DIR to check validity */
)
{
   10e4c:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342
	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */


	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id)
   10e4e:	4604      	mov	r4, r0
   10e50:	b1a8      	cbz	r0, 10e7e <validate+0x32>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 1)
   10e52:	6803      	ldr	r3, [r0, #0]
   10e54:	b19b      	cbz	r3, 10e7e <validate+0x32>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 2)
   10e56:	781a      	ldrb	r2, [r3, #0]
   10e58:	b18a      	cbz	r2, 10e7e <validate+0x32>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 3)
   10e5a:	88d9      	ldrh	r1, [r3, #6]
   10e5c:	8882      	ldrh	r2, [r0, #4]
   10e5e:	4291      	cmp	r1, r2
   10e60:	d10d      	bne.n	10e7e <validate+0x32>
lock_fs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:615
	return ff_req_grant(fs->sobj);
   10e62:	68d8      	ldr	r0, [r3, #12]
   10e64:	f001 fc68 	bl	12738 <ff_req_grant>
validate():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2345
		return FR_INVALID_OBJECT;

	ENTER_FF(fil->fs);		/* Lock file system */
   10e68:	b158      	cbz	r0, 10e82 <validate+0x36>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2347

	if (disk_status(fil->fs->drv) & STA_NOINIT)
   10e6a:	6823      	ldr	r3, [r4, #0]
   10e6c:	7858      	ldrb	r0, [r3, #1]
   10e6e:	f002 fa80 	bl	13372 <disk_status>
   10e72:	f010 0f01 	tst.w	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2350
		return FR_NOT_READY;

	return FR_OK;
   10e76:	bf14      	ite	ne
   10e78:	2003      	movne	r0, #3
   10e7a:	2000      	moveq	r0, #0
   10e7c:	bd10      	pop	{r4, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2343
		return FR_INVALID_OBJECT;
   10e7e:	2009      	movs	r0, #9
   10e80:	bd10      	pop	{r4, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2345
	ENTER_FF(fil->fs);		/* Lock file system */
   10e82:	200f      	movs	r0, #15
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2351
}
   10e84:	bd10      	pop	{r4, pc}

00010e86 <unlock_fs>:
unlock_fs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:625
	if (fs &&
   10e86:	b150      	cbz	r0, 10e9e <unlock_fs+0x18>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:627
		res != FR_INVALID_DRIVE &&
   10e88:	290f      	cmp	r1, #15
   10e8a:	d805      	bhi.n	10e98 <unlock_fs+0x12>
   10e8c:	f44f 431a 	mov.w	r3, #39424	; 0x9a00
   10e90:	fa23 f101 	lsr.w	r1, r3, r1
   10e94:	07cb      	lsls	r3, r1, #31
   10e96:	d402      	bmi.n	10e9e <unlock_fs+0x18>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:630
		ff_rel_grant(fs->sobj);
   10e98:	68c0      	ldr	r0, [r0, #12]
   10e9a:	f001 bc60 	b.w	1275e <ff_rel_grant>
   10e9e:	4770      	bx	lr

00010ea0 <clust2sect>:
clust2sect():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   10ea0:	6983      	ldr	r3, [r0, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:852
	clst -= 2;
   10ea2:	3902      	subs	r1, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   10ea4:	3b02      	subs	r3, #2
   10ea6:	4299      	cmp	r1, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:854
	return clst * fs->csize + fs->database;
   10ea8:	bf3d      	ittte	cc
   10eaa:	7883      	ldrbcc	r3, [r0, #2]
   10eac:	6ac0      	ldrcc	r0, [r0, #44]	; 0x2c
   10eae:	fb01 0003 	mlacc	r0, r1, r3, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   10eb2:	2000      	movcs	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:855
}
   10eb4:	4770      	bx	lr

00010eb6 <get_fat>:
get_fat():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874
	if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
   10eb6:	2901      	cmp	r1, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:869
{
   10eb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   10eba:	4607      	mov	r7, r0
   10ebc:	460c      	mov	r4, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874
	if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
   10ebe:	d94b      	bls.n	10f58 <get_fat+0xa2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874 (discriminator 1)
   10ec0:	6983      	ldr	r3, [r0, #24]
   10ec2:	4299      	cmp	r1, r3
   10ec4:	d248      	bcs.n	10f58 <get_fat+0xa2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:877
	switch (fs->fs_type) {
   10ec6:	7803      	ldrb	r3, [r0, #0]
   10ec8:	2b02      	cmp	r3, #2
   10eca:	d029      	beq.n	10f20 <get_fat+0x6a>
   10ecc:	2b03      	cmp	r3, #3
   10ece:	d034      	beq.n	10f3a <get_fat+0x84>
   10ed0:	2b01      	cmp	r3, #1
   10ed2:	d141      	bne.n	10f58 <get_fat+0xa2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:879
		bc = (UINT)clst; bc += bc / 2;
   10ed4:	eb01 0651 	add.w	r6, r1, r1, lsr #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:880
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   10ed8:	6a41      	ldr	r1, [r0, #36]	; 0x24
   10eda:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   10ede:	f7ff fe67 	bl	10bb0 <move_window>
   10ee2:	b110      	cbz	r0, 10eea <get_fat+0x34>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:900
	return 0xFFFFFFFF;	/* An error occurred at the disk I/O layer */
   10ee4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   10ee8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   10eea:	6a79      	ldr	r1, [r7, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:881
		wc = fs->win[bc % SS(fs)]; bc++;
   10eec:	f3c6 0308 	ubfx	r3, r6, #0, #9
   10ef0:	3601      	adds	r6, #1
   10ef2:	443b      	add	r3, r7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   10ef4:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   10ef8:	4638      	mov	r0, r7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:881
		wc = fs->win[bc % SS(fs)]; bc++;
   10efa:	f893 5034 	ldrb.w	r5, [r3, #52]	; 0x34
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   10efe:	f7ff fe57 	bl	10bb0 <move_window>
   10f02:	2800      	cmp	r0, #0
   10f04:	d1ee      	bne.n	10ee4 <get_fat+0x2e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:883
		wc |= fs->win[bc % SS(fs)] << 8;
   10f06:	f3c6 0608 	ubfx	r6, r6, #0, #9
   10f0a:	443e      	add	r6, r7
   10f0c:	f896 0034 	ldrb.w	r0, [r6, #52]	; 0x34
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:884
		return clst & 1 ? wc >> 4 : (wc & 0xFFF);
   10f10:	07e3      	lsls	r3, r4, #31
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:883
		wc |= fs->win[bc % SS(fs)] << 8;
   10f12:	ea45 2000 	orr.w	r0, r5, r0, lsl #8
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:884
		return clst & 1 ? wc >> 4 : (wc & 0xFFF);
   10f16:	bf4c      	ite	mi
   10f18:	0900      	lsrmi	r0, r0, #4
   10f1a:	f3c0 000b 	ubfxpl	r0, r0, #0, #12
   10f1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:887
		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)))) break;
   10f20:	6a41      	ldr	r1, [r0, #36]	; 0x24
   10f22:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   10f26:	f7ff fe43 	bl	10bb0 <move_window>
   10f2a:	2800      	cmp	r0, #0
   10f2c:	d1da      	bne.n	10ee4 <get_fat+0x2e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:888
		p = &fs->win[clst * 2 % SS(fs)];
   10f2e:	0066      	lsls	r6, r4, #1
   10f30:	f406 76ff 	and.w	r6, r6, #510	; 0x1fe
LD_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
   10f34:	443e      	add	r6, r7
get_fat():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:889
		return LD_WORD(p);
   10f36:	8eb0      	ldrh	r0, [r6, #52]	; 0x34
   10f38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:892
		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)))) break;
   10f3a:	6a41      	ldr	r1, [r0, #36]	; 0x24
   10f3c:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   10f40:	f7ff fe36 	bl	10bb0 <move_window>
   10f44:	2800      	cmp	r0, #0
   10f46:	d1cd      	bne.n	10ee4 <get_fat+0x2e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:893
		p = &fs->win[clst * 4 % SS(fs)];
   10f48:	00a4      	lsls	r4, r4, #2
   10f4a:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
LD_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   10f4e:	443c      	add	r4, r7
get_fat():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:894
		return LD_DWORD(p) & 0x0FFFFFFF;
   10f50:	6b60      	ldr	r0, [r4, #52]	; 0x34
   10f52:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
   10f56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:897
		return 1;
   10f58:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:901
}
   10f5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00010f5c <dir_sdi>:
dir_sdi():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1121
{
   10f5c:	b570      	push	{r4, r5, r6, lr}
   10f5e:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1127
	clst = dp->sclust;		/* Table start cluster (0:root) */
   10f60:	6882      	ldr	r2, [r0, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1121
{
   10f62:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   10f64:	2a01      	cmp	r2, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1126
	dp->index = (WORD)idx;	/* Current index */
   10f66:	80e1      	strh	r1, [r4, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   10f68:	d101      	bne.n	10f6e <dir_sdi+0x12>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1129
		return FR_INT_ERR;
   10f6a:	2002      	movs	r0, #2
   10f6c:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128 (discriminator 1)
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   10f6e:	6803      	ldr	r3, [r0, #0]
   10f70:	6999      	ldr	r1, [r3, #24]
   10f72:	428a      	cmp	r2, r1
   10f74:	d2f9      	bcs.n	10f6a <dir_sdi+0xe>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1130
	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
   10f76:	b9ba      	cbnz	r2, 10fa8 <dir_sdi+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1130 (discriminator 1)
   10f78:	7819      	ldrb	r1, [r3, #0]
   10f7a:	2903      	cmp	r1, #3
   10f7c:	d101      	bne.n	10f82 <dir_sdi+0x26>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1131
		clst = dp->fs->dirbase;
   10f7e:	6a99      	ldr	r1, [r3, #40]	; 0x28
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1133
	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
   10f80:	b999      	cbnz	r1, 10faa <dir_sdi+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1134
		if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
   10f82:	8919      	ldrh	r1, [r3, #8]
   10f84:	428d      	cmp	r5, r1
   10f86:	d2f0      	bcs.n	10f6a <dir_sdi+0xe>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1136
		sect = dp->fs->dirbase;
   10f88:	6a98      	ldr	r0, [r3, #40]	; 0x28
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1149
	dp->clust = clst;	/* Current cluster# */
   10f8a:	60e2      	str	r2, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1150
	if (!sect) return FR_INT_ERR;
   10f8c:	2800      	cmp	r0, #0
   10f8e:	d0ec      	beq.n	10f6a <dir_sdi+0xe>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   10f90:	6823      	ldr	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1151
	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
   10f92:	eb00 1015 	add.w	r0, r0, r5, lsr #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   10f96:	3334      	adds	r3, #52	; 0x34
   10f98:	f005 050f 	and.w	r5, r5, #15
   10f9c:	eb03 1545 	add.w	r5, r3, r5, lsl #5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1151
	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
   10fa0:	6120      	str	r0, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   10fa2:	6165      	str	r5, [r4, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1154
	return FR_OK;
   10fa4:	2000      	movs	r0, #0
   10fa6:	bd70      	pop	{r4, r5, r6, pc}
   10fa8:	4611      	mov	r1, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   10faa:	460a      	mov	r2, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1139
		ic = SS(dp->fs) / SZ_DIR * dp->fs->csize;	/* Entries per cluster */
   10fac:	789e      	ldrb	r6, [r3, #2]
   10fae:	0136      	lsls	r6, r6, #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   10fb0:	42b5      	cmp	r5, r6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   10fb2:	4611      	mov	r1, r2
   10fb4:	6820      	ldr	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   10fb6:	d202      	bcs.n	10fbe <dir_sdi+0x62>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1147
		sect = clust2sect(dp->fs, clst);
   10fb8:	f7ff ff72 	bl	10ea0 <clust2sect>
   10fbc:	e7e5      	b.n	10f8a <dir_sdi+0x2e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   10fbe:	f7ff ff7a 	bl	10eb6 <get_fat>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   10fc2:	1c43      	adds	r3, r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   10fc4:	4602      	mov	r2, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   10fc6:	d007      	beq.n	10fd8 <dir_sdi+0x7c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1143
			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
   10fc8:	2801      	cmp	r0, #1
   10fca:	d9ce      	bls.n	10f6a <dir_sdi+0xe>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1143 (discriminator 1)
   10fcc:	6823      	ldr	r3, [r4, #0]
   10fce:	699b      	ldr	r3, [r3, #24]
   10fd0:	4298      	cmp	r0, r3
   10fd2:	d2ca      	bcs.n	10f6a <dir_sdi+0xe>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1145
			idx -= ic;
   10fd4:	1bad      	subs	r5, r5, r6
   10fd6:	e7eb      	b.n	10fb0 <dir_sdi+0x54>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   10fd8:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1155
}
   10fda:	bd70      	pop	{r4, r5, r6, pc}

00010fdc <put_fat>:
put_fat():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   10fdc:	2901      	cmp	r1, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:916
{
   10fde:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   10fe0:	4605      	mov	r5, r0
   10fe2:	460c      	mov	r4, r1
   10fe4:	4616      	mov	r6, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   10fe6:	d960      	bls.n	110aa <put_fat+0xce>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922 (discriminator 1)
   10fe8:	6983      	ldr	r3, [r0, #24]
   10fea:	4299      	cmp	r1, r3
   10fec:	d25d      	bcs.n	110aa <put_fat+0xce>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:926
		switch (fs->fs_type) {
   10fee:	7803      	ldrb	r3, [r0, #0]
   10ff0:	2b02      	cmp	r3, #2
   10ff2:	d03a      	beq.n	1106a <put_fat+0x8e>
   10ff4:	2b03      	cmp	r3, #3
   10ff6:	d045      	beq.n	11084 <put_fat+0xa8>
   10ff8:	2b01      	cmp	r3, #1
   10ffa:	d154      	bne.n	110a6 <put_fat+0xca>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:928
			bc = (UINT)clst; bc += bc / 2;
   10ffc:	eb01 0751 	add.w	r7, r1, r1, lsr #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:929
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   11000:	6a41      	ldr	r1, [r0, #36]	; 0x24
   11002:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   11006:	f7ff fdd3 	bl	10bb0 <move_window>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:930
			if (res != FR_OK) break;
   1100a:	bb18      	cbnz	r0, 11054 <put_fat+0x78>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:931
			p = &fs->win[bc % SS(fs)];
   1100c:	f3c7 0308 	ubfx	r3, r7, #0, #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:932
			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
   11010:	f014 0401 	ands.w	r4, r4, #1
   11014:	442b      	add	r3, r5
   11016:	bf17      	itett	ne
   11018:	f893 2034 	ldrbne.w	r2, [r3, #52]	; 0x34
   1101c:	b2f2      	uxtbeq	r2, r6
   1101e:	f002 010f 	andne.w	r1, r2, #15
   11022:	0132      	lslne	r2, r6, #4
   11024:	bf1c      	itt	ne
   11026:	f002 02f0 	andne.w	r2, r2, #240	; 0xf0
   1102a:	430a      	orrne	r2, r1
   1102c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:934
			fs->wflag = 1;
   11030:	2301      	movs	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:935
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   11032:	6a69      	ldr	r1, [r5, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:933
			bc++;
   11034:	3701      	adds	r7, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:934
			fs->wflag = 1;
   11036:	712b      	strb	r3, [r5, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:935
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   11038:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   1103c:	4628      	mov	r0, r5
   1103e:	f7ff fdb7 	bl	10bb0 <move_window>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:936
			if (res != FR_OK) break;
   11042:	b938      	cbnz	r0, 11054 <put_fat+0x78>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:937
			p = &fs->win[bc % SS(fs)];
   11044:	f3c7 0708 	ubfx	r7, r7, #0, #9
   11048:	442f      	add	r7, r5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:938
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
   1104a:	b134      	cbz	r4, 1105a <put_fat+0x7e>
   1104c:	f3c6 1607 	ubfx	r6, r6, #4, #8
   11050:	f887 6034 	strb.w	r6, [r7, #52]	; 0x34
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:959
		fs->wflag = 1;
   11054:	2301      	movs	r3, #1
   11056:	712b      	strb	r3, [r5, #4]
   11058:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:938
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
   1105a:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
   1105e:	f3c6 2603 	ubfx	r6, r6, #8, #4
   11062:	f023 030f 	bic.w	r3, r3, #15
   11066:	431e      	orrs	r6, r3
   11068:	e7f2      	b.n	11050 <put_fat+0x74>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:942
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
   1106a:	6a41      	ldr	r1, [r0, #36]	; 0x24
   1106c:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   11070:	f7ff fd9e 	bl	10bb0 <move_window>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:943
			if (res != FR_OK) break;
   11074:	2800      	cmp	r0, #0
   11076:	d1ed      	bne.n	11054 <put_fat+0x78>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:944
			p = &fs->win[clst * 2 % SS(fs)];
   11078:	0064      	lsls	r4, r4, #1
   1107a:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1107e:	442c      	add	r4, r5
put_fat():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:945
			ST_WORD(p, (WORD)val);
   11080:	86a6      	strh	r6, [r4, #52]	; 0x34
   11082:	e7e7      	b.n	11054 <put_fat+0x78>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:949
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
   11084:	6a41      	ldr	r1, [r0, #36]	; 0x24
   11086:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   1108a:	f7ff fd91 	bl	10bb0 <move_window>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:950
			if (res != FR_OK) break;
   1108e:	2800      	cmp	r0, #0
   11090:	d1e0      	bne.n	11054 <put_fat+0x78>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:951
			p = &fs->win[clst * 4 % SS(fs)];
   11092:	00a4      	lsls	r4, r4, #2
   11094:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
   11098:	3434      	adds	r4, #52	; 0x34
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:952
			val |= LD_DWORD(p) & 0xF0000000;
   1109a:	592b      	ldr	r3, [r5, r4]
   1109c:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
   110a0:	431e      	orrs	r6, r3
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   110a2:	512e      	str	r6, [r5, r4]
   110a4:	e7d6      	b.n	11054 <put_fat+0x78>
put_fat():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:957
			res = FR_INT_ERR;
   110a6:	2002      	movs	r0, #2
   110a8:	e7d4      	b.n	11054 <put_fat+0x78>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:923
		res = FR_INT_ERR;
   110aa:	2002      	movs	r0, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:963
}
   110ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000110ae <create_chain>:
create_chain():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1031
{
   110ae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   110b0:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1036
	if (clst == 0) {		/* Create a new chain */
   110b2:	460f      	mov	r7, r1
   110b4:	b971      	cbnz	r1, 110d4 <create_chain+0x26>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1037
		scl = fs->last_clust;			/* Get suggested start point */
   110b6:	6906      	ldr	r6, [r0, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
		if (!scl || scl >= fs->n_fatent) scl = 1;
   110b8:	b1e6      	cbz	r6, 110f4 <create_chain+0x46>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038 (discriminator 2)
   110ba:	6983      	ldr	r3, [r0, #24]
   110bc:	429e      	cmp	r6, r3
   110be:	bf28      	it	cs
   110c0:	2601      	movcs	r6, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
   110c2:	4634      	mov	r4, r6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1051
		if (ncl >= fs->n_fatent) {		/* Check wrap around */
   110c4:	69ab      	ldr	r3, [r5, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1050
		ncl++;							/* Next cluster */
   110c6:	3401      	adds	r4, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1051
		if (ncl >= fs->n_fatent) {		/* Check wrap around */
   110c8:	429c      	cmp	r4, r3
   110ca:	d316      	bcc.n	110fa <create_chain+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1053
			if (ncl > scl) return 0;	/* No free cluster */
   110cc:	2e01      	cmp	r6, #1
   110ce:	d813      	bhi.n	110f8 <create_chain+0x4a>
   110d0:	2400      	movs	r4, #0
   110d2:	e008      	b.n	110e6 <create_chain+0x38>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1041
		cs = get_fat(fs, clst);			/* Check the cluster status */
   110d4:	f7ff feef 	bl	10eb6 <get_fat>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1042
		if (cs < 2) return 1;			/* Invalid value */
   110d8:	2801      	cmp	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1041
		cs = get_fat(fs, clst);			/* Check the cluster status */
   110da:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1042
		if (cs < 2) return 1;			/* Invalid value */
   110dc:	d935      	bls.n	1114a <create_chain+0x9c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1043
		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
   110de:	3001      	adds	r0, #1
   110e0:	d103      	bne.n	110ea <create_chain+0x3c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1052
			ncl = 2;
   110e2:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1077
}
   110e6:	4620      	mov	r0, r4
   110e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1044
		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
   110ea:	69ab      	ldr	r3, [r5, #24]
   110ec:	429c      	cmp	r4, r3
   110ee:	d3fa      	bcc.n	110e6 <create_chain+0x38>
   110f0:	463e      	mov	r6, r7
   110f2:	e7e6      	b.n	110c2 <create_chain+0x14>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
		if (!scl || scl >= fs->n_fatent) scl = 1;
   110f4:	2601      	movs	r6, #1
   110f6:	e7e4      	b.n	110c2 <create_chain+0x14>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1052
			ncl = 2;
   110f8:	2402      	movs	r4, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1055
		cs = get_fat(fs, ncl);			/* Get the cluster status */
   110fa:	4621      	mov	r1, r4
   110fc:	4628      	mov	r0, r5
   110fe:	f7ff feda 	bl	10eb6 <get_fat>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1056
		if (cs == 0) break;				/* Found a free cluster */
   11102:	b130      	cbz	r0, 11112 <create_chain+0x64>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1057
		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
   11104:	1c41      	adds	r1, r0, #1
   11106:	d0ec      	beq.n	110e2 <create_chain+0x34>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1057 (discriminator 1)
   11108:	2801      	cmp	r0, #1
   1110a:	d01e      	beq.n	1114a <create_chain+0x9c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1059
		if (ncl == scl) return 0;		/* No free cluster */
   1110c:	42b4      	cmp	r4, r6
   1110e:	d1d9      	bne.n	110c4 <create_chain+0x16>
   11110:	e7de      	b.n	110d0 <create_chain+0x22>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1062
	res = put_fat(fs, ncl, 0x0FFFFFFF);	/* Mark the new cluster "last link" */
   11112:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
   11116:	4621      	mov	r1, r4
   11118:	4628      	mov	r0, r5
   1111a:	f7ff ff5f 	bl	10fdc <put_fat>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1063
	if (res == FR_OK && clst != 0) {
   1111e:	b990      	cbnz	r0, 11146 <create_chain+0x98>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1063 (discriminator 1)
   11120:	b957      	cbnz	r7, 11138 <create_chain+0x8a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1068
		if (fs->free_clust != 0xFFFFFFFF) {
   11122:	696b      	ldr	r3, [r5, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1067
		fs->last_clust = ncl;			/* Update FSINFO */
   11124:	612c      	str	r4, [r5, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1068
		if (fs->free_clust != 0xFFFFFFFF) {
   11126:	1c5a      	adds	r2, r3, #1
   11128:	d0dd      	beq.n	110e6 <create_chain+0x38>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1069
			fs->free_clust--;
   1112a:	3b01      	subs	r3, #1
   1112c:	616b      	str	r3, [r5, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1070
			fs->fsi_flag |= 1;
   1112e:	796b      	ldrb	r3, [r5, #5]
   11130:	f043 0301 	orr.w	r3, r3, #1
   11134:	716b      	strb	r3, [r5, #5]
   11136:	e7d6      	b.n	110e6 <create_chain+0x38>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1064
		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
   11138:	4622      	mov	r2, r4
   1113a:	4639      	mov	r1, r7
   1113c:	4628      	mov	r0, r5
   1113e:	f7ff ff4d 	bl	10fdc <put_fat>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1066
	if (res == FR_OK) {
   11142:	2800      	cmp	r0, #0
   11144:	d0ed      	beq.n	11122 <create_chain+0x74>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1073
		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
   11146:	2801      	cmp	r0, #1
   11148:	d0cb      	beq.n	110e2 <create_chain+0x34>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1073 (discriminator 2)
   1114a:	2401      	movs	r4, #1
   1114c:	e7cb      	b.n	110e6 <create_chain+0x38>

0001114e <dir_next>:
dir_next():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   1114e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1174
	i = dp->index + 1;
   11152:	88c6      	ldrh	r6, [r0, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   11154:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1174
	i = dp->index + 1;
   11156:	3601      	adds	r6, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   11158:	b2b3      	uxth	r3, r6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   1115a:	4689      	mov	r9, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   1115c:	b913      	cbnz	r3, 11164 <dir_next+0x16>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1176
		return FR_NO_FILE;
   1115e:	2004      	movs	r0, #4
   11160:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175 (discriminator 1)
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   11164:	6903      	ldr	r3, [r0, #16]
   11166:	2b00      	cmp	r3, #0
   11168:	d0f9      	beq.n	1115e <dir_next+0x10>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1178
	if (!(i % (SS(dp->fs) / SZ_DIR))) {	/* Sector changed? */
   1116a:	f016 080f 	ands.w	r8, r6, #15
   1116e:	d107      	bne.n	11180 <dir_next+0x32>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1181
		if (!dp->clust) {		/* Static table */
   11170:	68c1      	ldr	r1, [r0, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1179
		dp->sect++;					/* Next sector */
   11172:	3301      	adds	r3, #1
   11174:	6103      	str	r3, [r0, #16]
   11176:	6800      	ldr	r0, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1181
		if (!dp->clust) {		/* Static table */
   11178:	b959      	cbnz	r1, 11192 <dir_next+0x44>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1182
			if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
   1117a:	8903      	ldrh	r3, [r0, #8]
   1117c:	429e      	cmp	r6, r3
   1117e:	d2ee      	bcs.n	1115e <dir_next+0x10>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1220
	dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
   11180:	6823      	ldr	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1219
	dp->index = (WORD)i;	/* Current index */
   11182:	80e6      	strh	r6, [r4, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1220
	dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
   11184:	3334      	adds	r3, #52	; 0x34
   11186:	eb03 1348 	add.w	r3, r3, r8, lsl #5
   1118a:	6163      	str	r3, [r4, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1222
	return FR_OK;
   1118c:	2000      	movs	r0, #0
   1118e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1186
			if (((i / (SS(dp->fs) / SZ_DIR)) & (dp->fs->csize - 1)) == 0) {	/* Cluster changed? */
   11192:	7887      	ldrb	r7, [r0, #2]
   11194:	3f01      	subs	r7, #1
   11196:	ea17 1716 	ands.w	r7, r7, r6, lsr #4
   1119a:	d1f1      	bne.n	11180 <dir_next+0x32>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1187
				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
   1119c:	f7ff fe8b 	bl	10eb6 <get_fat>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1188
				if (clst <= 1) return FR_INT_ERR;
   111a0:	2801      	cmp	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1187
				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
   111a2:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1188
				if (clst <= 1) return FR_INT_ERR;
   111a4:	d802      	bhi.n	111ac <dir_next+0x5e>
   111a6:	2002      	movs	r0, #2
   111a8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1189
				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
   111ac:	1c42      	adds	r2, r0, #1
   111ae:	d102      	bne.n	111b6 <dir_next+0x68>
   111b0:	2001      	movs	r0, #1
   111b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1190
				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
   111b6:	6820      	ldr	r0, [r4, #0]
   111b8:	6983      	ldr	r3, [r0, #24]
   111ba:	429d      	cmp	r5, r3
   111bc:	d327      	bcc.n	1120e <dir_next+0xc0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1193
					if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT */
   111be:	f1b9 0f00 	cmp.w	r9, #0
   111c2:	d0cc      	beq.n	1115e <dir_next+0x10>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1194
					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
   111c4:	68e1      	ldr	r1, [r4, #12]
   111c6:	f7ff ff72 	bl	110ae <create_chain>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1195
					if (clst == 0) return FR_DENIED;			/* No free cluster */
   111ca:	4605      	mov	r5, r0
   111cc:	2800      	cmp	r0, #0
   111ce:	d031      	beq.n	11234 <dir_next+0xe6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1196
					if (clst == 1) return FR_INT_ERR;
   111d0:	2801      	cmp	r0, #1
   111d2:	d0e8      	beq.n	111a6 <dir_next+0x58>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1197
					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
   111d4:	1c43      	adds	r3, r0, #1
   111d6:	d0eb      	beq.n	111b0 <dir_next+0x62>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1199
					if (sync_window(dp->fs)) return FR_DISK_ERR;/* Flush disk access window */
   111d8:	6820      	ldr	r0, [r4, #0]
   111da:	f7ff fca8 	bl	10b2e <sync_window>
   111de:	4601      	mov	r1, r0
   111e0:	2800      	cmp	r0, #0
   111e2:	d1e5      	bne.n	111b0 <dir_next+0x62>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1200
					mem_set(dp->fs->win, 0, SS(dp->fs));		/* Clear window buffer */
   111e4:	6820      	ldr	r0, [r4, #0]
   111e6:	f44f 7200 	mov.w	r2, #512	; 0x200
   111ea:	3034      	adds	r0, #52	; 0x34
   111ec:	f7ff fbe7 	bl	109be <mem_set>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1201
					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
   111f0:	6822      	ldr	r2, [r4, #0]
   111f2:	4629      	mov	r1, r5
   111f4:	4610      	mov	r0, r2
   111f6:	f7ff fe53 	bl	10ea0 <clust2sect>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1203
						dp->fs->wflag = 1;
   111fa:	f04f 0901 	mov.w	r9, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1201
					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
   111fe:	6310      	str	r0, [r2, #48]	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1202 (discriminator 1)
					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
   11200:	6820      	ldr	r0, [r4, #0]
   11202:	7883      	ldrb	r3, [r0, #2]
   11204:	429f      	cmp	r7, r3
   11206:	d309      	bcc.n	1121c <dir_next+0xce>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1207
					dp->fs->winsect -= c;						/* Rewind window offset */
   11208:	6b03      	ldr	r3, [r0, #48]	; 0x30
   1120a:	1bdf      	subs	r7, r3, r7
   1120c:	6307      	str	r7, [r0, #48]	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1213
				dp->clust = clst;				/* Initialize data for new cluster */
   1120e:	60e5      	str	r5, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1214
				dp->sect = clust2sect(dp->fs, clst);
   11210:	4629      	mov	r1, r5
   11212:	6820      	ldr	r0, [r4, #0]
   11214:	f7ff fe44 	bl	10ea0 <clust2sect>
   11218:	6120      	str	r0, [r4, #16]
   1121a:	e7b1      	b.n	11180 <dir_next+0x32>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1203
						dp->fs->wflag = 1;
   1121c:	f880 9004 	strb.w	r9, [r0, #4]
sync_window():
   11220:	f7ff fc62 	bl	10ae8 <sync_window.part.1>
dir_next():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1204
						if (sync_window(dp->fs)) return FR_DISK_ERR;
   11224:	2800      	cmp	r0, #0
   11226:	d1c3      	bne.n	111b0 <dir_next+0x62>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1205 (discriminator 2)
						dp->fs->winsect++;
   11228:	6822      	ldr	r2, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1202 (discriminator 2)
					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
   1122a:	3701      	adds	r7, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1205 (discriminator 2)
						dp->fs->winsect++;
   1122c:	6b13      	ldr	r3, [r2, #48]	; 0x30
   1122e:	3301      	adds	r3, #1
   11230:	6313      	str	r3, [r2, #48]	; 0x30
   11232:	e7e5      	b.n	11200 <dir_next+0xb2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1195
					if (clst == 0) return FR_DENIED;			/* No free cluster */
   11234:	2007      	movs	r0, #7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1223
}
   11236:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1123a:	Address 0x000000000001123a is out of bounds.


0001123c <dir_find.part.9>:
dir_find():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1490
FRESULT dir_find (
   1123c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1504
	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   11240:	f04f 08ff 	mov.w	r8, #255	; 0xff
   11244:	f64f 77ff 	movw	r7, #65535	; 0xffff
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1490
FRESULT dir_find (
   11248:	4606      	mov	r6, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1504
	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   1124a:	4644      	mov	r4, r8
   1124c:	8407      	strh	r7, [r0, #32]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1507
		res = move_window(dp->fs, dp->sect);
   1124e:	6931      	ldr	r1, [r6, #16]
   11250:	6830      	ldr	r0, [r6, #0]
   11252:	f7ff fcad 	bl	10bb0 <move_window>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1508
		if (res != FR_OK) break;
   11256:	4682      	mov	sl, r0
   11258:	2800      	cmp	r0, #0
   1125a:	d15e      	bne.n	1131a <dir_find.part.9+0xde>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1509
		dir = dp->dir;					/* Ptr to the directory entry of current index */
   1125c:	6975      	ldr	r5, [r6, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1510
		c = dir[DIR_Name];
   1125e:	782b      	ldrb	r3, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1511
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   11260:	2b00      	cmp	r3, #0
   11262:	d076      	beq.n	11352 <dir_find.part.9+0x116>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1514
		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
   11264:	2be5      	cmp	r3, #229	; 0xe5
   11266:	d006      	beq.n	11276 <dir_find.part.9+0x3a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1513
		a = dir[DIR_Attr] & AM_MASK;
   11268:	7ae9      	ldrb	r1, [r5, #11]
   1126a:	f001 023f 	and.w	r2, r1, #63	; 0x3f
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1514
		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
   1126e:	0709      	lsls	r1, r1, #28
   11270:	d503      	bpl.n	1127a <dir_find.part.9+0x3e>
   11272:	2a0f      	cmp	r2, #15
   11274:	d003      	beq.n	1127e <dir_find.part.9+0x42>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1530
				ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   11276:	8437      	strh	r7, [r6, #32]
   11278:	e047      	b.n	1130a <dir_find.part.9+0xce>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1517
			if (a == AM_LFN) {			/* An LFN entry is found */
   1127a:	2a0f      	cmp	r2, #15
   1127c:	d154      	bne.n	11328 <dir_find.part.9+0xec>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1518
				if (dp->lfn) {
   1127e:	f8d6 b01c 	ldr.w	fp, [r6, #28]
   11282:	f1bb 0f00 	cmp.w	fp, #0
   11286:	d041      	beq.n	1130c <dir_find.part.9+0xd0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1519
					if (c & LLE) {		/* Is it start of LFN sequence? */
   11288:	0658      	lsls	r0, r3, #25
   1128a:	d53c      	bpl.n	11306 <dir_find.part.9+0xca>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1521
						c &= ~LLE; ord = c;	/* LFN start order */
   1128c:	f003 04bf 	and.w	r4, r3, #191	; 0xbf
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1522
						dp->lfn_idx = dp->index;	/* Start index of LFN */
   11290:	88f3      	ldrh	r3, [r6, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1520
						sum = dir[LDIR_Chksum];
   11292:	f895 800d 	ldrb.w	r8, [r5, #13]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1522
						dp->lfn_idx = dp->index;	/* Start index of LFN */
   11296:	8433      	strh	r3, [r6, #32]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1525
					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   11298:	7b6b      	ldrb	r3, [r5, #13]
   1129a:	4543      	cmp	r3, r8
   1129c:	d135      	bne.n	1130a <dir_find.part.9+0xce>
cmp_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   1129e:	f895 a000 	ldrb.w	sl, [r5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1319
	s = 0; wc = 1;
   112a2:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   112a4:	f02a 0a40 	bic.w	sl, sl, #64	; 0x40
   112a8:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
   112ac:	f04f 0a0d 	mov.w	sl, #13
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1319
	s = 0; wc = 1;
   112b0:	f04f 0900 	mov.w	r9, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   112b4:	fb0a fa03 	mul.w	sl, sl, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1321
		uc = LD_WORD(dir+LfnOfs[s]);	/* Pick an LFN character from the entry */
   112b8:	4b27      	ldr	r3, [pc, #156]	; (11358 <dir_find.part.9+0x11c>)
   112ba:	f819 2003 	ldrb.w	r2, [r9, r3]
LD_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   112be:	5aaa      	ldrh	r2, [r5, r2]
cmp_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1322
		if (wc) {	/* Last character has not been processed */
   112c0:	b378      	cbz	r0, 11322 <dir_find.part.9+0xe6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1323
			wc = ff_wtoupper(uc);		/* Convert it to upper case */
   112c2:	4610      	mov	r0, r2
   112c4:	f001 fa1a 	bl	126fc <ff_wtoupper>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1324
			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
   112c8:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1323
			wc = ff_wtoupper(uc);		/* Convert it to upper case */
   112cc:	9001      	str	r0, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1324
			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
   112ce:	d81c      	bhi.n	1130a <dir_find.part.9+0xce>
   112d0:	f10a 0201 	add.w	r2, sl, #1
   112d4:	f83b 001a 	ldrh.w	r0, [fp, sl, lsl #1]
   112d8:	9200      	str	r2, [sp, #0]
   112da:	f001 fa0f 	bl	126fc <ff_wtoupper>
   112de:	9901      	ldr	r1, [sp, #4]
   112e0:	4281      	cmp	r1, r0
   112e2:	d112      	bne.n	1130a <dir_find.part.9+0xce>
   112e4:	9a00      	ldr	r2, [sp, #0]
   112e6:	4692      	mov	sl, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1329
	} while (++s < 13);				/* Repeat until all characters in the entry are checked */
   112e8:	f109 0901 	add.w	r9, r9, #1
   112ec:	f1b9 0f0d 	cmp.w	r9, #13
   112f0:	d1e2      	bne.n	112b8 <dir_find.part.9+0x7c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1331
	if ((dir[LDIR_Ord] & LLE) && wc && lfnbuf[i])	/* Last segment matched but different length */
   112f2:	782b      	ldrb	r3, [r5, #0]
   112f4:	0659      	lsls	r1, r3, #25
   112f6:	d503      	bpl.n	11300 <dir_find.part.9+0xc4>
   112f8:	b110      	cbz	r0, 11300 <dir_find.part.9+0xc4>
   112fa:	f83b 301a 	ldrh.w	r3, [fp, sl, lsl #1]
   112fe:	b923      	cbnz	r3, 1130a <dir_find.part.9+0xce>
dir_find():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1525
					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   11300:	3c01      	subs	r4, #1
   11302:	b2e4      	uxtb	r4, r4
   11304:	e002      	b.n	1130c <dir_find.part.9+0xd0>
   11306:	42a3      	cmp	r3, r4
   11308:	d0c6      	beq.n	11298 <dir_find.part.9+0x5c>
   1130a:	24ff      	movs	r4, #255	; 0xff
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1537
		res = dir_next(dp, 0);		/* Next entry */
   1130c:	2100      	movs	r1, #0
   1130e:	4630      	mov	r0, r6
   11310:	f7ff ff1d 	bl	1114e <dir_next>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1538
	} while (res == FR_OK);
   11314:	4682      	mov	sl, r0
   11316:	2800      	cmp	r0, #0
   11318:	d099      	beq.n	1124e <dir_find.part.9+0x12>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1541
}
   1131a:	4650      	mov	r0, sl
   1131c:	b003      	add	sp, #12
   1131e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
cmp_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1327
			if (uc != 0xFFFF) return 0;	/* Check filler */
   11322:	42ba      	cmp	r2, r7
   11324:	d0e0      	beq.n	112e8 <dir_find.part.9+0xac>
   11326:	e7f0      	b.n	1130a <dir_find.part.9+0xce>
dir_find():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1528
				if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
   11328:	b924      	cbnz	r4, 11334 <dir_find.part.9+0xf8>
   1132a:	4628      	mov	r0, r5
   1132c:	f7ff fb4e 	bl	109cc <sum_sfn>
   11330:	4540      	cmp	r0, r8
   11332:	d0f2      	beq.n	1131a <dir_find.part.9+0xde>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1529
				if (!(dp->fn[NS] & NS_LOSS) && !mem_cmp(dir, dp->fn, 11)) break;	/* SFN matched? */
   11334:	69b3      	ldr	r3, [r6, #24]
   11336:	7ada      	ldrb	r2, [r3, #11]
   11338:	07d2      	lsls	r2, r2, #31
   1133a:	d49c      	bmi.n	11276 <dir_find.part.9+0x3a>
   1133c:	f103 000b 	add.w	r0, r3, #11
mem_cmp():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:592
	while (cnt-- && (r = *d++ - *s++) == 0) ;
   11340:	4298      	cmp	r0, r3
   11342:	d0ea      	beq.n	1131a <dir_find.part.9+0xde>
   11344:	f815 1b01 	ldrb.w	r1, [r5], #1
   11348:	f813 2b01 	ldrb.w	r2, [r3], #1
   1134c:	4291      	cmp	r1, r2
   1134e:	d0f7      	beq.n	11340 <dir_find.part.9+0x104>
   11350:	e791      	b.n	11276 <dir_find.part.9+0x3a>
dir_find():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1511
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   11352:	f04f 0a04 	mov.w	sl, #4
   11356:	e7e0      	b.n	1131a <dir_find.part.9+0xde>
   11358:	000210b7 	.word	0x000210b7

0001135c <follow_path>:
follow_path():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   1135c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031
	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
   11360:	780b      	ldrb	r3, [r1, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   11362:	4607      	mov	r7, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031
	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
   11364:	2b2f      	cmp	r3, #47	; 0x2f
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   11366:	4688      	mov	r8, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031
	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
   11368:	d001      	beq.n	1136e <follow_path+0x12>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031 (discriminator 1)
   1136a:	2b5c      	cmp	r3, #92	; 0x5c
   1136c:	d101      	bne.n	11372 <follow_path+0x16>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2032
		path++;
   1136e:	f108 0801 	add.w	r8, r8, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2033
	dp->sclust = 0;							/* Always start from the root directory */
   11372:	2400      	movs	r4, #0
   11374:	60bc      	str	r4, [r7, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2036
	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
   11376:	f898 3000 	ldrb.w	r3, [r8]
   1137a:	2b1f      	cmp	r3, #31
   1137c:	f200 8090 	bhi.w	114a0 <follow_path+0x144>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2037
		res = dir_sdi(dp, 0);
   11380:	4621      	mov	r1, r4
   11382:	4638      	mov	r0, r7
   11384:	f7ff fdea 	bl	10f5c <dir_sdi>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2038
		dp->dir = 0;
   11388:	617c      	str	r4, [r7, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2067
}
   1138a:	b003      	add	sp, #12
   1138c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
create_name():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1838
		lfn[di++] = w;					/* Store the Unicode character */
   11390:	f825 0f02 	strh.w	r0, [r5, #2]!
   11394:	4646      	mov	r6, r8
   11396:	e093      	b.n	114c0 <follow_path+0x164>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1841
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
   11398:	2820      	cmp	r0, #32
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1840
	*path = &p[si];						/* Return pointer to the next segment */
   1139a:	44a0      	add	r8, r4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1841
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
   1139c:	bf34      	ite	cc
   1139e:	2404      	movcc	r4, #4
   113a0:	2400      	movcs	r4, #0
   113a2:	eb0b 0246 	add.w	r2, fp, r6, lsl #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1852
	while (di) {						/* Strip trailing spaces and dots */
   113a6:	2e00      	cmp	r6, #0
   113a8:	f000 80a9 	beq.w	114fe <follow_path+0x1a2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1853
		w = lfn[di-1];
   113ac:	f832 1d02 	ldrh.w	r1, [r2, #-2]!
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1854
		if (w != ' ' && w != '.') break;
   113b0:	2920      	cmp	r1, #32
   113b2:	d002      	beq.n	113ba <follow_path+0x5e>
   113b4:	292e      	cmp	r1, #46	; 0x2e
   113b6:	f040 80a6 	bne.w	11506 <follow_path+0x1aa>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1855
		di--;
   113ba:	3e01      	subs	r6, #1
   113bc:	e7f3      	b.n	113a6 <follow_path+0x4a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1863
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
   113be:	3101      	adds	r1, #1
   113c0:	f83b 2011 	ldrh.w	r2, [fp, r1, lsl #1]
   113c4:	2a20      	cmp	r2, #32
   113c6:	d0fa      	beq.n	113be <follow_path+0x62>
   113c8:	2a2e      	cmp	r2, #46	; 0x2e
   113ca:	d0f8      	beq.n	113be <follow_path+0x62>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1864
	if (si) cf |= NS_LOSS | NS_LFN;
   113cc:	b109      	cbz	r1, 113d2 <follow_path+0x76>
   113ce:	f044 0403 	orr.w	r4, r4, #3
   113d2:	464a      	mov	r2, r9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1865
	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
   113d4:	f832 0d02 	ldrh.w	r0, [r2, #-2]!
   113d8:	282e      	cmp	r0, #46	; 0x2e
   113da:	d001      	beq.n	113e0 <follow_path+0x84>
   113dc:	3e01      	subs	r6, #1
   113de:	d1f9      	bne.n	113d4 <follow_path+0x78>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   113e0:	f04f 0a00 	mov.w	sl, #0
   113e4:	f04f 0908 	mov.w	r9, #8
   113e8:	4655      	mov	r5, sl
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1869
		w = lfn[si++];					/* Get an LFN character */
   113ea:	f83b 0011 	ldrh.w	r0, [fp, r1, lsl #1]
   113ee:	1c4a      	adds	r2, r1, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1870
		if (!w) break;					/* Break on end of the LFN */
   113f0:	2800      	cmp	r0, #0
   113f2:	f000 809f 	beq.w	11534 <follow_path+0x1d8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1871
		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
   113f6:	2820      	cmp	r0, #32
   113f8:	d004      	beq.n	11404 <follow_path+0xa8>
   113fa:	282e      	cmp	r0, #46	; 0x2e
   113fc:	d106      	bne.n	1140c <follow_path+0xb0>
   113fe:	42b2      	cmp	r2, r6
   11400:	f000 808d 	beq.w	1151e <follow_path+0x1c2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1872
			cf |= NS_LOSS | NS_LFN; continue;
   11404:	f044 0403 	orr.w	r4, r4, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   11408:	4611      	mov	r1, r2
   1140a:	e7ee      	b.n	113ea <follow_path+0x8e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1875
		if (i >= ni || si == di) {		/* Extension or end of SFN */
   1140c:	45ca      	cmp	sl, r9
   1140e:	f080 8089 	bcs.w	11524 <follow_path+0x1c8>
   11412:	42b2      	cmp	r2, r6
   11414:	d111      	bne.n	1143a <follow_path+0xde>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1876
			if (ni == 11) {				/* Long extension */
   11416:	f1b9 0f0b 	cmp.w	r9, #11
   1141a:	d106      	bne.n	1142a <follow_path+0xce>
   1141c:	e086      	b.n	1152c <follow_path+0x1d0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1879
			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
   1141e:	42b2      	cmp	r2, r6
   11420:	d003      	beq.n	1142a <follow_path+0xce>
   11422:	f044 0403 	orr.w	r4, r4, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1880
			if (si > di) break;			/* No extension */
   11426:	f200 8085 	bhi.w	11534 <follow_path+0x1d8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1882
			b <<= 2; continue;
   1142a:	00ad      	lsls	r5, r5, #2
   1142c:	b2ed      	uxtb	r5, r5
   1142e:	4632      	mov	r2, r6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1881
			si = di; i = 8; ni = 11;	/* Enter extension section */
   11430:	f04f 090b 	mov.w	r9, #11
   11434:	f04f 0a08 	mov.w	sl, #8
   11438:	e7e6      	b.n	11408 <follow_path+0xac>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1885
		if (w >= 0x80) {				/* Non ASCII character */
   1143a:	287f      	cmp	r0, #127	; 0x7f
   1143c:	d90d      	bls.n	1145a <follow_path+0xfe>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1887
			w = ff_convert(w, 0);		/* Unicode -> OEM code */
   1143e:	2100      	movs	r1, #0
   11440:	9201      	str	r2, [sp, #4]
   11442:	f001 f93d 	bl	126c0 <ff_convert>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1888
			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
   11446:	9a01      	ldr	r2, [sp, #4]
   11448:	b118      	cbz	r0, 11452 <follow_path+0xf6>
   1144a:	4b5d      	ldr	r3, [pc, #372]	; (115c0 <follow_path+0x264>)
   1144c:	4418      	add	r0, r3
   1144e:	f810 0c80 	ldrb.w	r0, [r0, #-128]
   11452:	b280      	uxth	r0, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1892
			cf |= NS_LFN;				/* Force create LFN entry */
   11454:	f044 0402 	orr.w	r4, r4, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1901
			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
   11458:	b138      	cbz	r0, 1146a <follow_path+0x10e>
   1145a:	4b5a      	ldr	r3, [pc, #360]	; (115c4 <follow_path+0x268>)
chk_chr():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:599
	while (*str && *str != chr) str++;
   1145c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   11460:	2900      	cmp	r1, #0
   11462:	f000 809f 	beq.w	115a4 <follow_path+0x248>
   11466:	4281      	cmp	r1, r0
   11468:	d1f8      	bne.n	1145c <follow_path+0x100>
create_name():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1902
				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
   1146a:	205f      	movs	r0, #95	; 0x5f
   1146c:	f044 0403 	orr.w	r4, r4, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   11470:	69b9      	ldr	r1, [r7, #24]
   11472:	f801 000a 	strb.w	r0, [r1, sl]
   11476:	f10a 0a01 	add.w	sl, sl, #1
   1147a:	e7c5      	b.n	11408 <follow_path+0xac>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1905
					b |= 2;
   1147c:	f045 0502 	orr.w	r5, r5, #2
   11480:	e7f6      	b.n	11470 <follow_path+0x114>
follow_path():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2057
			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
   11482:	075a      	lsls	r2, r3, #29
   11484:	d481      	bmi.n	1138a <follow_path+0x2e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2058
			dir = dp->dir;						/* Follow the sub-directory */
   11486:	697a      	ldr	r2, [r7, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2059
			if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
   11488:	7ad3      	ldrb	r3, [r2, #11]
   1148a:	06db      	lsls	r3, r3, #27
   1148c:	d539      	bpl.n	11502 <follow_path+0x1a6>
ld_clust():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   1148e:	6839      	ldr	r1, [r7, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   11490:	8b53      	ldrh	r3, [r2, #26]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   11492:	7809      	ldrb	r1, [r1, #0]
   11494:	2903      	cmp	r1, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   11496:	bf04      	itt	eq
   11498:	8a92      	ldrheq	r2, [r2, #20]
   1149a:	ea43 4302 	orreq.w	r3, r3, r2, lsl #16
follow_path():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2062
			dp->sclust = ld_clust(dp->fs, dir);
   1149e:	60bb      	str	r3, [r7, #8]
create_name():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1817
	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
   114a0:	f898 3000 	ldrb.w	r3, [r8]
   114a4:	4644      	mov	r4, r8
   114a6:	2b2f      	cmp	r3, #47	; 0x2f
   114a8:	f108 0801 	add.w	r8, r8, #1
   114ac:	d0f8      	beq.n	114a0 <follow_path+0x144>
   114ae:	2b5c      	cmp	r3, #92	; 0x5c
   114b0:	d0f6      	beq.n	114a0 <follow_path+0x144>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1819
	si = di = 0;
   114b2:	2600      	movs	r6, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1818
	lfn = dp->lfn;
   114b4:	f8d7 b01c 	ldr.w	fp, [r7, #28]
   114b8:	f104 39ff 	add.w	r9, r4, #4294967295	; 0xffffffff
   114bc:	f1ab 0502 	sub.w	r5, fp, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1821
		w = p[si++];					/* Get a character */
   114c0:	f819 0f01 	ldrb.w	r0, [r9, #1]!
   114c4:	f106 0801 	add.w	r8, r6, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1822
		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
   114c8:	281f      	cmp	r0, #31
   114ca:	f67f af65 	bls.w	11398 <follow_path+0x3c>
   114ce:	282f      	cmp	r0, #47	; 0x2f
   114d0:	f43f af62 	beq.w	11398 <follow_path+0x3c>
   114d4:	285c      	cmp	r0, #92	; 0x5c
   114d6:	f43f af5f 	beq.w	11398 <follow_path+0x3c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1823
		if (di >= _MAX_LFN)				/* Reject too long name */
   114da:	f1b8 0f81 	cmp.w	r8, #129	; 0x81
   114de:	d00e      	beq.n	114fe <follow_path+0x1a2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1833
		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
   114e0:	2101      	movs	r1, #1
   114e2:	f001 f8ed 	bl	126c0 <ff_convert>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1834
		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
   114e6:	b150      	cbz	r0, 114fe <follow_path+0x1a2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1836
		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal characters for LFN */
   114e8:	287f      	cmp	r0, #127	; 0x7f
   114ea:	f63f af51 	bhi.w	11390 <follow_path+0x34>
   114ee:	4936      	ldr	r1, [pc, #216]	; (115c8 <follow_path+0x26c>)
chk_chr():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:599
	while (*str && *str != chr) str++;
   114f0:	f811 2f01 	ldrb.w	r2, [r1, #1]!
   114f4:	2a00      	cmp	r2, #0
   114f6:	f43f af4b 	beq.w	11390 <follow_path+0x34>
   114fa:	4282      	cmp	r2, r0
   114fc:	d1f8      	bne.n	114f0 <follow_path+0x194>
follow_path():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2052
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
   114fe:	2006      	movs	r0, #6
   11500:	e743      	b.n	1138a <follow_path+0x2e>
   11502:	2005      	movs	r0, #5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2066
	return res;
   11504:	e741      	b.n	1138a <follow_path+0x2e>
create_name():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   11506:	2500      	movs	r5, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1862
	mem_set(dp->fn, ' ', 11);
   11508:	2120      	movs	r1, #32
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   1150a:	f82b 5016 	strh.w	r5, [fp, r6, lsl #1]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1862
	mem_set(dp->fn, ' ', 11);
   1150e:	220b      	movs	r2, #11
   11510:	69b8      	ldr	r0, [r7, #24]
   11512:	f7ff fa54 	bl	109be <mem_set>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   11516:	eb0b 0946 	add.w	r9, fp, r6, lsl #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1863
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
   1151a:	4629      	mov	r1, r5
   1151c:	e750      	b.n	113c0 <follow_path+0x64>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1875
		if (i >= ni || si == di) {		/* Extension or end of SFN */
   1151e:	45ca      	cmp	sl, r9
   11520:	f4ff af79 	bcc.w	11416 <follow_path+0xba>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1876
			if (ni == 11) {				/* Long extension */
   11524:	f1b9 0f0b 	cmp.w	r9, #11
   11528:	f47f af79 	bne.w	1141e <follow_path+0xc2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1877
				cf |= NS_LOSS | NS_LFN; break;
   1152c:	f04f 090b 	mov.w	r9, #11
   11530:	f044 0403 	orr.w	r4, r4, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1916
	if (dp->fn[0] == DDE) dp->fn[0] = NDDE;	/* If the first character collides with deleted mark, replace it with 0x05 */
   11534:	69bb      	ldr	r3, [r7, #24]
   11536:	781a      	ldrb	r2, [r3, #0]
   11538:	2ae5      	cmp	r2, #229	; 0xe5
   1153a:	bf04      	itt	eq
   1153c:	2205      	moveq	r2, #5
   1153e:	701a      	strbeq	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1918
	if (ni == 8) b <<= 2;
   11540:	f1b9 0f08 	cmp.w	r9, #8
   11544:	bf04      	itt	eq
   11546:	00ad      	lsleq	r5, r5, #2
   11548:	b2ed      	uxtbeq	r5, r5
   1154a:	f005 030c 	and.w	r3, r5, #12
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1919
	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capitals */
   1154e:	2b0c      	cmp	r3, #12
   11550:	d003      	beq.n	1155a <follow_path+0x1fe>
   11552:	f005 0203 	and.w	r2, r5, #3
   11556:	2a03      	cmp	r2, #3
   11558:	d101      	bne.n	1155e <follow_path+0x202>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1920
		cf |= NS_LFN;
   1155a:	f044 0402 	orr.w	r4, r4, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1921
	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are created */
   1155e:	07a1      	lsls	r1, r4, #30
   11560:	d409      	bmi.n	11576 <follow_path+0x21a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1922
		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
   11562:	f005 0503 	and.w	r5, r5, #3
   11566:	2d01      	cmp	r5, #1
   11568:	bf08      	it	eq
   1156a:	f044 0410 	orreq.w	r4, r4, #16
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1923
		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
   1156e:	2b04      	cmp	r3, #4
   11570:	bf08      	it	eq
   11572:	f044 0408 	orreq.w	r4, r4, #8
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1926
	dp->fn[NS] = cf;	/* SFN is created */
   11576:	69bb      	ldr	r3, [r7, #24]
dir_find():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   11578:	2100      	movs	r1, #0
create_name():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1926
	dp->fn[NS] = cf;	/* SFN is created */
   1157a:	72dc      	strb	r4, [r3, #11]
dir_find():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   1157c:	4638      	mov	r0, r7
   1157e:	f7ff fced 	bl	10f5c <dir_sdi>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1501
	if (res != FR_OK) return res;
   11582:	b910      	cbnz	r0, 1158a <follow_path+0x22e>
   11584:	4638      	mov	r0, r7
   11586:	f7ff fe59 	bl	1123c <dir_find.part.9>
follow_path():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2044
			ns = dp->fn[NS];
   1158a:	69bb      	ldr	r3, [r7, #24]
   1158c:	7adb      	ldrb	r3, [r3, #11]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2045
			if (res != FR_OK) {				/* Failed to find the object */
   1158e:	2800      	cmp	r0, #0
   11590:	f43f af77 	beq.w	11482 <follow_path+0x126>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2046
				if (res == FR_NO_FILE) {	/* Object is not found */
   11594:	2804      	cmp	r0, #4
   11596:	f47f aef8 	bne.w	1138a <follow_path+0x2e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2052
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
   1159a:	f013 0f04 	tst.w	r3, #4
   1159e:	bf08      	it	eq
   115a0:	2005      	moveq	r0, #5
   115a2:	e6f2      	b.n	1138a <follow_path+0x2e>
create_name():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1904
				if (IsUpper(w)) {		/* ASCII large capital */
   115a4:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
   115a8:	2919      	cmp	r1, #25
   115aa:	f67f af67 	bls.w	1147c <follow_path+0x120>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1907
					if (IsLower(w)) {	/* ASCII small capital */
   115ae:	f1a0 0161 	sub.w	r1, r0, #97	; 0x61
   115b2:	2919      	cmp	r1, #25
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1908
						b |= 1; w -= 0x20;
   115b4:	bf9e      	ittt	ls
   115b6:	3820      	subls	r0, #32
   115b8:	f045 0501 	orrls.w	r5, r5, #1
   115bc:	b280      	uxthls	r0, r0
   115be:	e757      	b.n	11470 <follow_path+0x114>
   115c0:	00021037 	.word	0x00021037
   115c4:	00021116 	.word	0x00021116
   115c8:	0002110d 	.word	0x0002110d

000115cc <dir_register>:
dir_register():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1622
	mem_cpy(sn, fn, 12);
   115cc:	220c      	movs	r2, #12
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   115ce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1621
	fn = dp->fn; lfn = dp->lfn;
   115d2:	6986      	ldr	r6, [r0, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   115d4:	b087      	sub	sp, #28
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1621
	fn = dp->fn; lfn = dp->lfn;
   115d6:	69c7      	ldr	r7, [r0, #28]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   115d8:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1622
	mem_cpy(sn, fn, 12);
   115da:	4631      	mov	r1, r6
   115dc:	eb0d 0002 	add.w	r0, sp, r2
   115e0:	f7ff f9d1 	bl	10986 <mem_cpy>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1627
	if (sn[NS] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
   115e4:	f89d 3017 	ldrb.w	r3, [sp, #23]
   115e8:	07db      	lsls	r3, r3, #31
   115ea:	d579      	bpl.n	116e0 <dir_register+0x114>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1628
		fn[NS] = 0; dp->lfn = 0;			/* Find only SFN */
   115ec:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1629
		for (n = 1; n < 100; n++) {
   115ee:	f04f 0901 	mov.w	r9, #1
gen_numname():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1433
				if (sr & 0x10000) sr ^= 0x11021;
   115f2:	f8df 8208 	ldr.w	r8, [pc, #520]	; 117fc <dir_register+0x230>
dir_register():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1628
		fn[NS] = 0; dp->lfn = 0;			/* Find only SFN */
   115f6:	72f3      	strb	r3, [r6, #11]
   115f8:	61e3      	str	r3, [r4, #28]
gen_numname():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1422
	mem_cpy(dst, src, 11);
   115fa:	220b      	movs	r2, #11
   115fc:	a903      	add	r1, sp, #12
   115fe:	4630      	mov	r0, r6
   11600:	f7ff f9c1 	bl	10986 <mem_cpy>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1424
	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
   11604:	f1b9 0f05 	cmp.w	r9, #5
   11608:	d84f      	bhi.n	116aa <dir_register+0xde>
   1160a:	464b      	mov	r3, r9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   1160c:	2207      	movs	r2, #7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1442
		c = (seq % 16) + '0';
   1160e:	f003 000f 	and.w	r0, r3, #15
   11612:	f100 0130 	add.w	r1, r0, #48	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1443
		if (c > '9') c += 7;
   11616:	2939      	cmp	r1, #57	; 0x39
   11618:	bf88      	it	hi
   1161a:	f100 0137 	addhi.w	r1, r0, #55	; 0x37
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1444
		ns[i--] = c;
   1161e:	3a01      	subs	r2, #1
   11620:	a801      	add	r0, sp, #4
   11622:	4410      	add	r0, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1446
	} while (seq);
   11624:	091b      	lsrs	r3, r3, #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1444
		ns[i--] = c;
   11626:	7041      	strb	r1, [r0, #1]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1446
	} while (seq);
   11628:	d1f1      	bne.n	1160e <dir_register+0x42>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1447
	ns[i] = '~';
   1162a:	207e      	movs	r0, #126	; 0x7e
   1162c:	a906      	add	r1, sp, #24
   1162e:	4411      	add	r1, r2
   11630:	f801 0c14 	strb.w	r0, [r1, #-20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1450
	for (j = 0; j < i && dst[j] != ' '; j++) {
   11634:	429a      	cmp	r2, r3
   11636:	d03d      	beq.n	116b4 <dir_register+0xe8>
   11638:	5cf1      	ldrb	r1, [r6, r3]
   1163a:	2920      	cmp	r1, #32
   1163c:	d138      	bne.n	116b0 <dir_register+0xe4>
   1163e:	4433      	add	r3, r6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1457
		dst[j++] = (i < 8) ? ns[i++] : ' ';
   11640:	2a07      	cmp	r2, #7
   11642:	bf8f      	iteee	hi
   11644:	2120      	movhi	r1, #32
   11646:	a906      	addls	r1, sp, #24
   11648:	1889      	addls	r1, r1, r2
   1164a:	f811 1c14 	ldrbls.w	r1, [r1, #-20]
   1164e:	bf98      	it	ls
   11650:	3201      	addls	r2, #1
   11652:	f803 1b01 	strb.w	r1, [r3], #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1458
	} while (j < 8);
   11656:	1b99      	subs	r1, r3, r6
   11658:	2907      	cmp	r1, #7
   1165a:	d9f1      	bls.n	11640 <dir_register+0x74>
dir_find():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   1165c:	2100      	movs	r1, #0
   1165e:	4620      	mov	r0, r4
   11660:	f7ff fc7c 	bl	10f5c <dir_sdi>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1501
	if (res != FR_OK) return res;
   11664:	4605      	mov	r5, r0
   11666:	bba8      	cbnz	r0, 116d4 <dir_register+0x108>
   11668:	4620      	mov	r0, r4
   1166a:	f7ff fde7 	bl	1123c <dir_find.part.9>
dir_register():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1632
			if (res != FR_OK) break;
   1166e:	4605      	mov	r5, r0
   11670:	bb80      	cbnz	r0, 116d4 <dir_register+0x108>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1629 (discriminator 2)
		for (n = 1; n < 100; n++) {
   11672:	f109 0901 	add.w	r9, r9, #1
   11676:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
   1167a:	d1be      	bne.n	115fa <dir_register+0x2e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1634
		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
   1167c:	2507      	movs	r5, #7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1677
}
   1167e:	4628      	mov	r0, r5
   11680:	b007      	add	sp, #28
   11682:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
gen_numname():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   11686:	2110      	movs	r1, #16
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1431
				sr = (sr << 1) + (wc & 1);
   11688:	f002 0501 	and.w	r5, r2, #1
   1168c:	eb05 0343 	add.w	r3, r5, r3, lsl #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1433
				if (sr & 0x10000) sr ^= 0x11021;
   11690:	03dd      	lsls	r5, r3, #15
   11692:	bf48      	it	mi
   11694:	ea83 0308 	eormi.w	r3, r3, r8
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1430
			for (i = 0; i < 16; i++) {
   11698:	3901      	subs	r1, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1432
				wc >>= 1;
   1169a:	ea4f 0252 	mov.w	r2, r2, lsr #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1430
			for (i = 0; i < 16; i++) {
   1169e:	d1f3      	bne.n	11688 <dir_register+0xbc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   116a0:	f830 2f02 	ldrh.w	r2, [r0, #2]!
   116a4:	2a00      	cmp	r2, #0
   116a6:	d1ee      	bne.n	11686 <dir_register+0xba>
   116a8:	e7b0      	b.n	1160c <dir_register+0x40>
   116aa:	1eb8      	subs	r0, r7, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1424
	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
   116ac:	464b      	mov	r3, r9
   116ae:	e7f7      	b.n	116a0 <dir_register+0xd4>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1450
	for (j = 0; j < i && dst[j] != ' '; j++) {
   116b0:	3301      	adds	r3, #1
   116b2:	e7bf      	b.n	11634 <dir_register+0x68>
   116b4:	4613      	mov	r3, r2
   116b6:	e7c2      	b.n	1163e <dir_register+0x72>
dir_register():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1640 (discriminator 3)
		for (n = 0; lfn[n]; n++) ;
   116b8:	3601      	adds	r6, #1
   116ba:	e016      	b.n	116ea <dir_register+0x11e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1643
		nent = 1;
   116bc:	2601      	movs	r6, #1
   116be:	e01c      	b.n	116fa <dir_register+0x12e>
dir_alloc():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1252
				n = 0;					/* Not a blank entry. Restart to search */
   116c0:	4607      	mov	r7, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1254
			res = dir_next(dp, 1);		/* Next entry with table stretch enabled */
   116c2:	2101      	movs	r1, #1
   116c4:	4620      	mov	r0, r4
   116c6:	f7ff fd42 	bl	1114e <dir_next>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1255
		} while (res == FR_OK);
   116ca:	4605      	mov	r5, r0
   116cc:	b1e8      	cbz	r0, 1170a <dir_register+0x13e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1257
	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
   116ce:	2d04      	cmp	r5, #4
   116d0:	d0d4      	beq.n	1167c <dir_register+0xb0>
   116d2:	e7d4      	b.n	1167e <dir_register+0xb2>
dir_register():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1635
		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
   116d4:	2d04      	cmp	r5, #4
   116d6:	d1d2      	bne.n	1167e <dir_register+0xb2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1636
		fn[NS] = sn[NS]; dp->lfn = lfn;
   116d8:	f89d 3017 	ldrb.w	r3, [sp, #23]
   116dc:	72f3      	strb	r3, [r6, #11]
   116de:	61e7      	str	r7, [r4, #28]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1639
	if (sn[NS] & NS_LFN) {			/* When LFN is to be created, allocate entries for an SFN + LFNs. */
   116e0:	f89d 3017 	ldrb.w	r3, [sp, #23]
   116e4:	079b      	lsls	r3, r3, #30
   116e6:	d5e9      	bpl.n	116bc <dir_register+0xf0>
   116e8:	2600      	movs	r6, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1640 (discriminator 1)
		for (n = 0; lfn[n]; n++) ;
   116ea:	f837 3016 	ldrh.w	r3, [r7, r6, lsl #1]
   116ee:	2b00      	cmp	r3, #0
   116f0:	d1e2      	bne.n	116b8 <dir_register+0xec>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1641
		nent = (n + 25) / 13;
   116f2:	230d      	movs	r3, #13
   116f4:	3619      	adds	r6, #25
   116f6:	fbb6 f6f3 	udiv	r6, r6, r3
dir_alloc():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1243
	res = dir_sdi(dp, 0);
   116fa:	2100      	movs	r1, #0
   116fc:	4620      	mov	r0, r4
   116fe:	f7ff fc2d 	bl	10f5c <dir_sdi>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1244
	if (res == FR_OK) {
   11702:	4605      	mov	r5, r0
   11704:	2800      	cmp	r0, #0
   11706:	d1e2      	bne.n	116ce <dir_register+0x102>
   11708:	4607      	mov	r7, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1247
			res = move_window(dp->fs, dp->sect);
   1170a:	6921      	ldr	r1, [r4, #16]
   1170c:	6820      	ldr	r0, [r4, #0]
   1170e:	f7ff fa4f 	bl	10bb0 <move_window>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1248
			if (res != FR_OK) break;
   11712:	4605      	mov	r5, r0
   11714:	2800      	cmp	r0, #0
   11716:	d1da      	bne.n	116ce <dir_register+0x102>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1249
			if (dp->dir[0] == DDE || dp->dir[0] == 0) {	/* Is it a blank entry? */
   11718:	6963      	ldr	r3, [r4, #20]
   1171a:	781b      	ldrb	r3, [r3, #0]
   1171c:	2be5      	cmp	r3, #229	; 0xe5
   1171e:	d001      	beq.n	11724 <dir_register+0x158>
   11720:	2b00      	cmp	r3, #0
   11722:	d1cd      	bne.n	116c0 <dir_register+0xf4>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1250
				if (++n == nent) break;	/* A block of contiguous entries is found */
   11724:	3701      	adds	r7, #1
   11726:	42be      	cmp	r6, r7
   11728:	d1cb      	bne.n	116c2 <dir_register+0xf6>
dir_register():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1647
	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
   1172a:	3e01      	subs	r6, #1
   1172c:	d049      	beq.n	117c2 <dir_register+0x1f6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1648
		res = dir_sdi(dp, dp->index - nent);
   1172e:	88e1      	ldrh	r1, [r4, #6]
   11730:	4620      	mov	r0, r4
   11732:	1b89      	subs	r1, r1, r6
   11734:	f7ff fc12 	bl	10f5c <dir_sdi>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1649
		if (res == FR_OK) {
   11738:	4605      	mov	r5, r0
   1173a:	2800      	cmp	r0, #0
   1173c:	d19f      	bne.n	1167e <dir_register+0xb2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1650
			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
   1173e:	69a0      	ldr	r0, [r4, #24]
   11740:	f7ff f944 	bl	109cc <sum_sfn>
fit_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   11744:	f64f 79ff 	movw	r9, #65535	; 0xffff
dir_register():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1650
			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
   11748:	4607      	mov	r7, r0
fit_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1393
		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
   1174a:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 11800 <dir_register+0x234>
dir_register():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1652
				res = move_window(dp->fs, dp->sect);
   1174e:	6921      	ldr	r1, [r4, #16]
   11750:	6820      	ldr	r0, [r4, #0]
   11752:	f7ff fa2d 	bl	10bb0 <move_window>
   11756:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1653
				if (res != FR_OK) break;
   11758:	2800      	cmp	r0, #0
   1175a:	d190      	bne.n	1167e <dir_register+0xb2>
fit_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1385
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
   1175c:	220f      	movs	r2, #15
dir_register():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1654
				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
   1175e:	6963      	ldr	r3, [r4, #20]
   11760:	f8d4 e01c 	ldr.w	lr, [r4, #28]
fit_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1385
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
   11764:	72da      	strb	r2, [r3, #11]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1389
	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
   11766:	220d      	movs	r2, #13
dir_register():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1654
				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
   11768:	b2f1      	uxtb	r1, r6
fit_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1389
	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
   1176a:	1e4d      	subs	r5, r1, #1
   1176c:	436a      	muls	r2, r5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1390
	s = wc = 0;
   1176e:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1384
	dir[LDIR_Chksum] = sum;			/* Set check sum */
   11770:	735f      	strb	r7, [r3, #13]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1386
	dir[LDIR_Type] = 0;
   11772:	7318      	strb	r0, [r3, #12]
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   11774:	8358      	strh	r0, [r3, #26]
fit_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   11776:	4548      	cmp	r0, r9
   11778:	bf18      	it	ne
   1177a:	f83e 0012 	ldrhne.w	r0, [lr, r2, lsl #1]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1393
		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
   1177e:	f815 c008 	ldrb.w	ip, [r5, r8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1395
	} while (++s < 13);
   11782:	f105 0501 	add.w	r5, r5, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   11786:	bf18      	it	ne
   11788:	3201      	addne	r2, #1
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   1178a:	f823 000c 	strh.w	r0, [r3, ip]
fit_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1394
		if (!wc) wc = 0xFFFF;		/* Padding characters following last character */
   1178e:	2800      	cmp	r0, #0
   11790:	bf08      	it	eq
   11792:	4648      	moveq	r0, r9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1395
	} while (++s < 13);
   11794:	2d0d      	cmp	r5, #13
   11796:	d1ee      	bne.n	11776 <dir_register+0x1aa>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1396
	if (wc == 0xFFFF || !lfnbuf[i]) ord |= LLE;	/* Bottom LFN part is the start of LFN sequence */
   11798:	4548      	cmp	r0, r9
   1179a:	d002      	beq.n	117a2 <dir_register+0x1d6>
   1179c:	f83e 2012 	ldrh.w	r2, [lr, r2, lsl #1]
   117a0:	b90a      	cbnz	r2, 117a6 <dir_register+0x1da>
   117a2:	f041 0140 	orr.w	r1, r1, #64	; 0x40
dir_register():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   117a6:	2201      	movs	r2, #1
fit_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1397
	dir[LDIR_Ord] = ord;			/* Set the LFN order */
   117a8:	7019      	strb	r1, [r3, #0]
dir_register():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   117aa:	6823      	ldr	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1656
				res = dir_next(dp, 0);	/* Next entry */
   117ac:	2100      	movs	r1, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   117ae:	711a      	strb	r2, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1656
				res = dir_next(dp, 0);	/* Next entry */
   117b0:	4620      	mov	r0, r4
   117b2:	f7ff fccc 	bl	1114e <dir_next>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1657
			} while (res == FR_OK && --nent);
   117b6:	4605      	mov	r5, r0
   117b8:	2800      	cmp	r0, #0
   117ba:	f47f af60 	bne.w	1167e <dir_register+0xb2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1657 (discriminator 1)
   117be:	3e01      	subs	r6, #1
   117c0:	d1c5      	bne.n	1174e <dir_register+0x182>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1665
		res = move_window(dp->fs, dp->sect);
   117c2:	6921      	ldr	r1, [r4, #16]
   117c4:	6820      	ldr	r0, [r4, #0]
   117c6:	f7ff f9f3 	bl	10bb0 <move_window>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1666
		if (res == FR_OK) {
   117ca:	4605      	mov	r5, r0
   117cc:	2800      	cmp	r0, #0
   117ce:	f47f af56 	bne.w	1167e <dir_register+0xb2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1667
			mem_set(dp->dir, 0, SZ_DIR);	/* Clean the entry */
   117d2:	2220      	movs	r2, #32
   117d4:	4629      	mov	r1, r5
   117d6:	6960      	ldr	r0, [r4, #20]
   117d8:	f7ff f8f1 	bl	109be <mem_set>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1668
			mem_cpy(dp->dir, dp->fn, 11);	/* Put SFN */
   117dc:	220b      	movs	r2, #11
   117de:	69a1      	ldr	r1, [r4, #24]
   117e0:	6960      	ldr	r0, [r4, #20]
   117e2:	f7ff f8d0 	bl	10986 <mem_cpy>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1670
			dp->dir[DIR_NTres] = dp->fn[NS] & (NS_BODY | NS_EXT);	/* Put NT flag */
   117e6:	69a3      	ldr	r3, [r4, #24]
   117e8:	6962      	ldr	r2, [r4, #20]
   117ea:	7adb      	ldrb	r3, [r3, #11]
   117ec:	f003 0318 	and.w	r3, r3, #24
   117f0:	7313      	strb	r3, [r2, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1672
			dp->fs->wflag = 1;
   117f2:	2201      	movs	r2, #1
   117f4:	6823      	ldr	r3, [r4, #0]
   117f6:	711a      	strb	r2, [r3, #4]
   117f8:	e741      	b.n	1167e <dir_register+0xb2>
   117fa:	bf00      	nop
   117fc:	00011021 	.word	0x00011021
   11800:	000210b7 	.word	0x000210b7

00011804 <dir_read.constprop.11>:
dir_read():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1551
FRESULT dir_read (
   11804:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1559
	BYTE ord = 0xFF, sum = 0xFF;
   11808:	27ff      	movs	r7, #255	; 0xff
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1551
FRESULT dir_read (
   1180a:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1559
	BYTE ord = 0xFF, sum = 0xFF;
   1180c:	463c      	mov	r4, r7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1562
	res = FR_NO_FILE;
   1180e:	2604      	movs	r6, #4
pick_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1358
			if (uc != 0xFFFF) return 0;		/* Check filler */
   11810:	f64f 79ff 	movw	r9, #65535	; 0xffff
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1353
		uc = LD_WORD(dir+LfnOfs[s]);		/* Pick an LFN character from the entry */
   11814:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 118e8 <dir_read.constprop.11+0xe4>
dir_read():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1563
	while (dp->sect) {
   11818:	6929      	ldr	r1, [r5, #16]
   1181a:	b911      	cbnz	r1, 11822 <dir_read.constprop.11+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1596
	if (res != FR_OK) dp->sect = 0;
   1181c:	2e00      	cmp	r6, #0
   1181e:	d058      	beq.n	118d2 <dir_read.constprop.11+0xce>
   11820:	e04c      	b.n	118bc <dir_read.constprop.11+0xb8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1564
		res = move_window(dp->fs, dp->sect);
   11822:	6828      	ldr	r0, [r5, #0]
   11824:	f7ff f9c4 	bl	10bb0 <move_window>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1565
		if (res != FR_OK) break;
   11828:	4606      	mov	r6, r0
   1182a:	2800      	cmp	r0, #0
   1182c:	d146      	bne.n	118bc <dir_read.constprop.11+0xb8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1566
		dir = dp->dir;					/* Ptr to the directory entry of current index */
   1182e:	6968      	ldr	r0, [r5, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1567
		c = dir[DIR_Name];
   11830:	7803      	ldrb	r3, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1568
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   11832:	2b00      	cmp	r3, #0
   11834:	d055      	beq.n	118e2 <dir_read.constprop.11+0xde>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1571
		if (c == DDE || (!_FS_RPATH && c == '.') || (int)(a == AM_VOL) != vol) {	/* An entry without valid data */
   11836:	2be5      	cmp	r3, #229	; 0xe5
   11838:	d038      	beq.n	118ac <dir_read.constprop.11+0xa8>
   1183a:	2b2e      	cmp	r3, #46	; 0x2e
   1183c:	d036      	beq.n	118ac <dir_read.constprop.11+0xa8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1569
		a = dir[DIR_Attr] & AM_MASK;
   1183e:	7ac2      	ldrb	r2, [r0, #11]
   11840:	f002 023f 	and.w	r2, r2, #63	; 0x3f
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1571
		if (c == DDE || (!_FS_RPATH && c == '.') || (int)(a == AM_VOL) != vol) {	/* An entry without valid data */
   11844:	2a08      	cmp	r2, #8
   11846:	d031      	beq.n	118ac <dir_read.constprop.11+0xa8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1574
			if (a == AM_LFN) {			/* An LFN entry is found */
   11848:	2a0f      	cmp	r2, #15
   1184a:	d13d      	bne.n	118c8 <dir_read.constprop.11+0xc4>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1575
				if (c & LLE) {			/* Is it start of LFN sequence? */
   1184c:	0659      	lsls	r1, r3, #25
   1184e:	d52b      	bpl.n	118a8 <dir_read.constprop.11+0xa4>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1577
					c &= ~LLE; ord = c;
   11850:	f003 04bf 	and.w	r4, r3, #191	; 0xbf
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1578
					dp->lfn_idx = dp->index;
   11854:	88eb      	ldrh	r3, [r5, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1576
					sum = dir[LDIR_Chksum];
   11856:	7b47      	ldrb	r7, [r0, #13]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1578
					dp->lfn_idx = dp->index;
   11858:	842b      	strh	r3, [r5, #32]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1581
				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   1185a:	7b43      	ldrb	r3, [r0, #13]
   1185c:	42bb      	cmp	r3, r7
   1185e:	d125      	bne.n	118ac <dir_read.constprop.11+0xa8>
pick_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1349
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
   11860:	7803      	ldrb	r3, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1351
	s = 0; wc = 1;
   11862:	f04f 0e01 	mov.w	lr, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1349
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
   11866:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1186a:	1e5a      	subs	r2, r3, #1
   1186c:	230d      	movs	r3, #13
   1186e:	4353      	muls	r3, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1351
	s = 0; wc = 1;
   11870:	2200      	movs	r2, #0
dir_read():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1581
				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   11872:	69ee      	ldr	r6, [r5, #28]
pick_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1353
		uc = LD_WORD(dir+LfnOfs[s]);		/* Pick an LFN character from the entry */
   11874:	f812 1008 	ldrb.w	r1, [r2, r8]
LD_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   11878:	5a41      	ldrh	r1, [r0, r1]
pick_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1354
		if (wc) {	/* Last character has not been processed */
   1187a:	f1be 0f00 	cmp.w	lr, #0
   1187e:	d020      	beq.n	118c2 <dir_read.constprop.11+0xbe>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1355
			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
   11880:	2b7f      	cmp	r3, #127	; 0x7f
   11882:	d813      	bhi.n	118ac <dir_read.constprop.11+0xa8>
LD_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
   11884:	468e      	mov	lr, r1
pick_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1356
			lfnbuf[i++] = wc = uc;			/* Store it */
   11886:	f826 1013 	strh.w	r1, [r6, r3, lsl #1]
   1188a:	3301      	adds	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1360
	} while (++s < 13);						/* Read all character in the entry */
   1188c:	3201      	adds	r2, #1
   1188e:	2a0d      	cmp	r2, #13
   11890:	d1f0      	bne.n	11874 <dir_read.constprop.11+0x70>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1362
	if (dir[LDIR_Ord] & LLE) {				/* Put terminator if it is the last LFN part */
   11892:	7802      	ldrb	r2, [r0, #0]
   11894:	0652      	lsls	r2, r2, #25
   11896:	d504      	bpl.n	118a2 <dir_read.constprop.11+0x9e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1363
		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
   11898:	2b7f      	cmp	r3, #127	; 0x7f
   1189a:	d807      	bhi.n	118ac <dir_read.constprop.11+0xa8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1364
		lfnbuf[i] = 0;
   1189c:	2200      	movs	r2, #0
   1189e:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
dir_read():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1581
				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   118a2:	3c01      	subs	r4, #1
   118a4:	b2e4      	uxtb	r4, r4
   118a6:	e002      	b.n	118ae <dir_read.constprop.11+0xaa>
   118a8:	42a3      	cmp	r3, r4
   118aa:	d0d6      	beq.n	1185a <dir_read.constprop.11+0x56>
   118ac:	24ff      	movs	r4, #255	; 0xff
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1592
		res = dir_next(dp, 0);				/* Next entry */
   118ae:	2100      	movs	r1, #0
   118b0:	4628      	mov	r0, r5
   118b2:	f7ff fc4c 	bl	1114e <dir_next>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1593
		if (res != FR_OK) break;
   118b6:	4606      	mov	r6, r0
   118b8:	2800      	cmp	r0, #0
   118ba:	d0ad      	beq.n	11818 <dir_read.constprop.11+0x14>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1596
	if (res != FR_OK) dp->sect = 0;
   118bc:	2300      	movs	r3, #0
   118be:	612b      	str	r3, [r5, #16]
   118c0:	e008      	b.n	118d4 <dir_read.constprop.11+0xd0>
pick_lfn():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1358
			if (uc != 0xFFFF) return 0;		/* Check filler */
   118c2:	4549      	cmp	r1, r9
   118c4:	d0e2      	beq.n	1188c <dir_read.constprop.11+0x88>
   118c6:	e7f1      	b.n	118ac <dir_read.constprop.11+0xa8>
dir_read():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1583
				if (ord || sum != sum_sfn(dir))	/* Is there a valid LFN? */
   118c8:	b93c      	cbnz	r4, 118da <dir_read.constprop.11+0xd6>
   118ca:	f7ff f87f 	bl	109cc <sum_sfn>
   118ce:	42b8      	cmp	r0, r7
   118d0:	d103      	bne.n	118da <dir_read.constprop.11+0xd6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1568
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   118d2:	2600      	movs	r6, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1599
}
   118d4:	4630      	mov	r0, r6
   118d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1584
					dp->lfn_idx = 0xFFFF;		/* It has no LFN. */
   118da:	f64f 73ff 	movw	r3, #65535	; 0xffff
   118de:	842b      	strh	r3, [r5, #32]
   118e0:	e7f8      	b.n	118d4 <dir_read.constprop.11+0xd0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1568
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   118e2:	2604      	movs	r6, #4
   118e4:	e7ea      	b.n	118bc <dir_read.constprop.11+0xb8>
   118e6:	bf00      	nop
   118e8:	000210b7 	.word	0x000210b7

000118ec <remove_chain>:
remove_chain():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   118ec:	2901      	cmp	r1, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:978
{
   118ee:	b570      	push	{r4, r5, r6, lr}
   118f0:	4604      	mov	r4, r0
   118f2:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   118f4:	d801      	bhi.n	118fa <remove_chain+0xe>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:986
		res = FR_INT_ERR;
   118f6:	2002      	movs	r0, #2
   118f8:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985 (discriminator 1)
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   118fa:	6983      	ldr	r3, [r0, #24]
   118fc:	4299      	cmp	r1, r3
   118fe:	d2fa      	bcs.n	118f6 <remove_chain+0xa>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:990
		while (clst < fs->n_fatent) {			/* Not a last link? */
   11900:	69a3      	ldr	r3, [r4, #24]
   11902:	429d      	cmp	r5, r3
   11904:	d205      	bcs.n	11912 <remove_chain+0x26>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:991
			nxt = get_fat(fs, clst);			/* Get cluster status */
   11906:	4629      	mov	r1, r5
   11908:	4620      	mov	r0, r4
   1190a:	f7ff fad4 	bl	10eb6 <get_fat>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:992
			if (nxt == 0) break;				/* Empty cluster? */
   1190e:	4606      	mov	r6, r0
   11910:	b908      	cbnz	r0, 11916 <remove_chain+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:986
		res = FR_INT_ERR;
   11912:	2000      	movs	r0, #0
   11914:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:993
			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
   11916:	2801      	cmp	r0, #1
   11918:	d0ed      	beq.n	118f6 <remove_chain+0xa>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:994
			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
   1191a:	1c41      	adds	r1, r0, #1
   1191c:	d010      	beq.n	11940 <remove_chain+0x54>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:995
			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
   1191e:	2200      	movs	r2, #0
   11920:	4629      	mov	r1, r5
   11922:	4620      	mov	r0, r4
   11924:	f7ff fb5a 	bl	10fdc <put_fat>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:996
			if (res != FR_OK) break;
   11928:	b958      	cbnz	r0, 11942 <remove_chain+0x56>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:997
			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSINFO */
   1192a:	6963      	ldr	r3, [r4, #20]
   1192c:	1c5a      	adds	r2, r3, #1
   1192e:	d005      	beq.n	1193c <remove_chain+0x50>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:998
				fs->free_clust++;
   11930:	3301      	adds	r3, #1
   11932:	6163      	str	r3, [r4, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:999
				fs->fsi_flag |= 1;
   11934:	7963      	ldrb	r3, [r4, #5]
   11936:	f043 0301 	orr.w	r3, r3, #1
   1193a:	7163      	strb	r3, [r4, #5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:978
{
   1193c:	4635      	mov	r5, r6
   1193e:	e7df      	b.n	11900 <remove_chain+0x14>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:994
			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
   11940:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1016
}
   11942:	bd70      	pop	{r4, r5, r6, pc}

00011944 <f_mount>:
f_mount():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2373
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
   11944:	b5f0      	push	{r4, r5, r6, r7, lr}
   11946:	b085      	sub	sp, #20
   11948:	9001      	str	r0, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2377
	FATFS *cfs;
	int vol;
	FRESULT res;
	const TCHAR *rp = path;
   1194a:	a804      	add	r0, sp, #16
   1194c:	f840 1d04 	str.w	r1, [r0, #-4]!
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2373
{
   11950:	9100      	str	r1, [sp, #0]
   11952:	4616      	mov	r6, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2380


	vol = get_ldnumber(&rp);
   11954:	f7ff f849 	bl	109ea <get_ldnumber>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2381
	if (vol < 0) return FR_INVALID_DRIVE;
   11958:	1e05      	subs	r5, r0, #0
   1195a:	db2a      	blt.n	119b2 <f_mount+0x6e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2382
	cfs = FatFs[vol];					/* Pointer to fs object */
   1195c:	4f17      	ldr	r7, [pc, #92]	; (119bc <f_mount+0x78>)
   1195e:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2384

	if (cfs) {
   11962:	b14c      	cbz	r4, 11978 <f_mount+0x34>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2389
#if _FS_LOCK
		clear_lock(cfs);
#endif
#if _FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
   11964:	68e0      	ldr	r0, [r4, #12]
   11966:	f000 fee5 	bl	12734 <ff_del_syncobj>
   1196a:	b918      	cbnz	r0, 11974 <f_mount+0x30>
   1196c:	2402      	movs	r4, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2406

	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */

	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
	LEAVE_FF(fs, res);
}
   1196e:	4620      	mov	r0, r4
   11970:	b005      	add	sp, #20
   11972:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2391
		cfs->fs_type = 0;				/* Clear old fs object */
   11974:	2300      	movs	r3, #0
   11976:	7023      	strb	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2394
	if (fs) {
   11978:	9901      	ldr	r1, [sp, #4]
   1197a:	b989      	cbnz	r1, 119a0 <f_mount+0x5c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2400
	FatFs[vol] = fs;					/* Register new fs object */
   1197c:	9c01      	ldr	r4, [sp, #4]
   1197e:	f847 4025 	str.w	r4, [r7, r5, lsl #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
   11982:	2c00      	cmp	r4, #0
   11984:	d0f3      	beq.n	1196e <f_mount+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402 (discriminator 2)
   11986:	2e01      	cmp	r6, #1
   11988:	d115      	bne.n	119b6 <f_mount+0x72>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2404
	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
   1198a:	4669      	mov	r1, sp
   1198c:	2200      	movs	r2, #0
   1198e:	a801      	add	r0, sp, #4
   11990:	f7ff f94e 	bl	10c30 <find_volume>
   11994:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2405
	LEAVE_FF(fs, res);
   11996:	4601      	mov	r1, r0
   11998:	9801      	ldr	r0, [sp, #4]
   1199a:	f7ff fa74 	bl	10e86 <unlock_fs>
   1199e:	e7e6      	b.n	1196e <f_mount+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2395
		fs->fs_type = 0;				/* Clear new fs object */
   119a0:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2397
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
   119a2:	b2e8      	uxtb	r0, r5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2395
		fs->fs_type = 0;				/* Clear new fs object */
   119a4:	f801 3b0c 	strb.w	r3, [r1], #12
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2397
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
   119a8:	f000 feba 	bl	12720 <ff_cre_syncobj>
   119ac:	2800      	cmp	r0, #0
   119ae:	d0dd      	beq.n	1196c <f_mount+0x28>
   119b0:	e7e4      	b.n	1197c <f_mount+0x38>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2381
	if (vol < 0) return FR_INVALID_DRIVE;
   119b2:	240b      	movs	r4, #11
   119b4:	e7db      	b.n	1196e <f_mount+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
   119b6:	2400      	movs	r4, #0
   119b8:	e7d9      	b.n	1196e <f_mount+0x2a>
   119ba:	bf00      	nop
   119bc:	2007c31c 	.word	0x2007c31c

000119c0 <f_open>:
f_open():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2420
FRESULT f_open (
	FIL* fp,			/* Pointer to the blank file object */
	const TCHAR* path,	/* Pointer to the file name */
	BYTE mode			/* Access mode and file open mode flags */
)
{
   119c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   119c4:	b0d1      	sub	sp, #324	; 0x144
   119c6:	9101      	str	r1, [sp, #4]
   119c8:	4690      	mov	r8, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2427
	DIR dj;
	BYTE *dir;
	DEF_NAMEBUF;


	if (!fp) return FR_INVALID_OBJECT;
   119ca:	4606      	mov	r6, r0
   119cc:	2800      	cmp	r0, #0
   119ce:	f000 808c 	beq.w	11aea <f_open+0x12a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2428
	fp->fs = 0;			/* Clear file object */
   119d2:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2433

	/* Get logical drive number */
#if !_FS_READONLY
	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
   119d4:	f002 021e 	and.w	r2, r2, #30
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2428
	fp->fs = 0;			/* Clear file object */
   119d8:	6003      	str	r3, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2433
	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
   119da:	a901      	add	r1, sp, #4
   119dc:	a806      	add	r0, sp, #24
   119de:	f7ff f927 	bl	10c30 <find_volume>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2438
#else
	mode &= FA_READ;
	res = find_volume(&dj.fs, &path, 0);
#endif
	if (res == FR_OK) {
   119e2:	4605      	mov	r5, r0
   119e4:	2800      	cmp	r0, #0
   119e6:	d174      	bne.n	11ad2 <f_open+0x112>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   119e8:	ab03      	add	r3, sp, #12
   119ea:	930c      	str	r3, [sp, #48]	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   119ec:	9901      	ldr	r1, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   119ee:	ab0f      	add	r3, sp, #60	; 0x3c
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   119f0:	a806      	add	r0, sp, #24
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   119f2:	930d      	str	r3, [sp, #52]	; 0x34
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   119f4:	f7ff fcb2 	bl	1135c <follow_path>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2441
		dir = dj.dir;
   119f8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2443
#if !_FS_READONLY	/* R/W configuration */
		if (res == FR_OK) {
   119fa:	b910      	cbnz	r0, 11a02 <f_open+0x42>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2445
			if (!dir)	/* Default directory itself */
				res = FR_INVALID_NAME;
   119fc:	2c00      	cmp	r4, #0
   119fe:	bf08      	it	eq
   11a00:	2006      	moveq	r0, #6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2452
			else
				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
#endif
		}
		/* Create or Open a file */
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
   11a02:	f018 0f1c 	tst.w	r8, #28
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2432
	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
   11a06:	f008 071f 	and.w	r7, r8, #31
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2452
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
   11a0a:	d03d      	beq.n	11a88 <f_open+0xc8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2455
			DWORD dw, cl;

			if (res != FR_OK) {					/* No file, create new */
   11a0c:	b398      	cbz	r0, 11a76 <f_open+0xb6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2456
				if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
   11a0e:	2804      	cmp	r0, #4
   11a10:	d102      	bne.n	11a18 <f_open+0x58>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2460
#if _FS_LOCK
					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
#else
					res = dir_register(&dj);
   11a12:	a806      	add	r0, sp, #24
   11a14:	f7ff fdda 	bl	115cc <dir_register>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2462
#endif
				mode |= FA_CREATE_ALWAYS;		/* File is created */
   11a18:	f047 0708 	orr.w	r7, r7, #8
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2473
				} else {
					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
						res = FR_EXIST;
				}
			}
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
   11a1c:	bb48      	cbnz	r0, 11a72 <f_open+0xb2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2463
				dir = dj.dir;					/* New entry */
   11a1e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2473 (discriminator 1)
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
   11a20:	0738      	lsls	r0, r7, #28
   11a22:	d53b      	bpl.n	11a9c <f_open+0xdc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2474
				dw = get_fattime();				/* Created time */
   11a24:	f001 fcfe 	bl	13424 <get_fattime>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2476
				ST_DWORD(dir+DIR_CrtTime, dw);
				dir[DIR_Attr] = 0;				/* Reset attribute */
   11a28:	2300      	movs	r3, #0
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   11a2a:	f8c4 000e 	str.w	r0, [r4, #14]
f_open():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2478
				ST_DWORD(dir+DIR_FileSize, 0);	/* size = 0 */
				cl = ld_clust(dj.fs, dir);		/* Get start cluster */
   11a2e:	9806      	ldr	r0, [sp, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2476
				dir[DIR_Attr] = 0;				/* Reset attribute */
   11a30:	72e3      	strb	r3, [r4, #11]
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   11a32:	61e3      	str	r3, [r4, #28]
ld_clust():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   11a34:	7802      	ldrb	r2, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   11a36:	f8b4 801a 	ldrh.w	r8, [r4, #26]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   11a3a:	2a03      	cmp	r2, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   11a3c:	bf08      	it	eq
   11a3e:	8aa2      	ldrheq	r2, [r4, #20]
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   11a40:	8363      	strh	r3, [r4, #26]
   11a42:	82a3      	strh	r3, [r4, #20]
f_open():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2480
				st_clust(dir, 0);				/* cluster = 0 */
				dj.fs->wflag = 1;
   11a44:	f04f 0301 	mov.w	r3, #1
ld_clust():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   11a48:	bf08      	it	eq
   11a4a:	ea48 4802 	orreq.w	r8, r8, r2, lsl #16
f_open():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2480
				dj.fs->wflag = 1;
   11a4e:	7103      	strb	r3, [r0, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2481
				if (cl) {						/* Remove the cluster chain if exist */
   11a50:	f1b8 0f00 	cmp.w	r8, #0
   11a54:	d022      	beq.n	11a9c <f_open+0xdc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2483
					dw = dj.fs->winsect;
					res = remove_chain(dj.fs, cl);
   11a56:	4641      	mov	r1, r8
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2482
					dw = dj.fs->winsect;
   11a58:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2483
					res = remove_chain(dj.fs, cl);
   11a5c:	f7ff ff46 	bl	118ec <remove_chain>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2484
					if (res == FR_OK) {
   11a60:	b938      	cbnz	r0, 11a72 <f_open+0xb2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2485
						dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
   11a62:	9806      	ldr	r0, [sp, #24]
   11a64:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
   11a68:	6103      	str	r3, [r0, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2486
						res = move_window(dj.fs, dw);
   11a6a:	4649      	mov	r1, r9
   11a6c:	f7ff f8a0 	bl	10bb0 <move_window>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2501
					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
						res = FR_DENIED;
				}
			}
		}
		if (res == FR_OK) {
   11a70:	b1a0      	cbz	r0, 11a9c <f_open+0xdc>
   11a72:	4605      	mov	r5, r0
   11a74:	e02d      	b.n	11ad2 <f_open+0x112>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2466
				if (dir[DIR_Attr] & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
   11a76:	7ae3      	ldrb	r3, [r4, #11]
   11a78:	f013 0f11 	tst.w	r3, #17
   11a7c:	d133      	bne.n	11ae6 <f_open+0x126>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2469
					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
   11a7e:	f018 0f04 	tst.w	r8, #4
   11a82:	d0cd      	beq.n	11a20 <f_open+0x60>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2470
						res = FR_EXIST;
   11a84:	2508      	movs	r5, #8
   11a86:	e024      	b.n	11ad2 <f_open+0x112>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2492
			if (res == FR_OK) {					/* Follow succeeded */
   11a88:	2800      	cmp	r0, #0
   11a8a:	d1f2      	bne.n	11a72 <f_open+0xb2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2493
				if (dir[DIR_Attr] & AM_DIR) {	/* It is a directory */
   11a8c:	7ae3      	ldrb	r3, [r4, #11]
   11a8e:	06d9      	lsls	r1, r3, #27
   11a90:	d427      	bmi.n	11ae2 <f_open+0x122>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2496
					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
   11a92:	f018 0f02 	tst.w	r8, #2
   11a96:	d001      	beq.n	11a9c <f_open+0xdc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2496 (discriminator 1)
   11a98:	07da      	lsls	r2, r3, #31
   11a9a:	d424      	bmi.n	11ae6 <f_open+0x126>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2502
			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
   11a9c:	073b      	lsls	r3, r7, #28
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
				mode |= FA__WRITTEN;
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   11a9e:	9b06      	ldr	r3, [sp, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2503
				mode |= FA__WRITTEN;
   11aa0:	bf48      	it	mi
   11aa2:	f047 0720 	orrmi.w	r7, r7, #32
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   11aa6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2526
		}
#endif
		FREE_BUF();

		if (res == FR_OK) {
			fp->flag = mode;					/* File access mode */
   11aa8:	71b7      	strb	r7, [r6, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   11aaa:	61f2      	str	r2, [r6, #28]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2527
			fp->err = 0;						/* Clear error flag */
   11aac:	2200      	movs	r2, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2505
			fp->dir_ptr = dir;
   11aae:	6234      	str	r4, [r6, #32]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2527
			fp->err = 0;						/* Clear error flag */
   11ab0:	71f2      	strb	r2, [r6, #7]
ld_clust():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   11ab2:	7819      	ldrb	r1, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   11ab4:	8b62      	ldrh	r2, [r4, #26]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   11ab6:	2903      	cmp	r1, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   11ab8:	bf04      	itt	eq
   11aba:	8aa1      	ldrheq	r1, [r4, #20]
   11abc:	ea42 4201 	orreq.w	r2, r2, r1, lsl #16
f_open():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2528
			fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
   11ac0:	6132      	str	r2, [r6, #16]
LD_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11ac2:	69e2      	ldr	r2, [r4, #28]
f_open():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2535
			fp->fptr = 0;						/* File pointer */
			fp->dsect = 0;
#if _USE_FASTSEEK
			fp->cltbl = 0;						/* Normal seek mode */
#endif
			fp->fs = dj.fs;	 					/* Validate file object */
   11ac4:	6033      	str	r3, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2529
			fp->fsize = LD_DWORD(dir+DIR_FileSize);	/* File size */
   11ac6:	60f2      	str	r2, [r6, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2530
			fp->fptr = 0;						/* File pointer */
   11ac8:	2200      	movs	r2, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2536
			fp->id = fp->fs->id;
   11aca:	88db      	ldrh	r3, [r3, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2530
			fp->fptr = 0;						/* File pointer */
   11acc:	60b2      	str	r2, [r6, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2531
			fp->dsect = 0;
   11ace:	61b2      	str	r2, [r6, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2536
			fp->id = fp->fs->id;
   11ad0:	80b3      	strh	r3, [r6, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2540
		}
	}

	LEAVE_FF(dj.fs, res);
   11ad2:	4629      	mov	r1, r5
   11ad4:	9806      	ldr	r0, [sp, #24]
   11ad6:	f7ff f9d6 	bl	10e86 <unlock_fs>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2541
}
   11ada:	4628      	mov	r0, r5
   11adc:	b051      	add	sp, #324	; 0x144
   11ade:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2494
					res = FR_NO_FILE;
   11ae2:	2504      	movs	r5, #4
   11ae4:	e7f5      	b.n	11ad2 <f_open+0x112>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2467
					res = FR_DENIED;
   11ae6:	2507      	movs	r5, #7
   11ae8:	e7f3      	b.n	11ad2 <f_open+0x112>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2427
	if (!fp) return FR_INVALID_OBJECT;
   11aea:	2509      	movs	r5, #9
   11aec:	e7f5      	b.n	11ada <f_open+0x11a>

00011aee <f_read>:
f_read():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2556
	FIL* fp, 		/* Pointer to the file object */
	void* buff,		/* Pointer to data buffer */
	UINT btr,		/* Number of bytes to read */
	UINT* br		/* Pointer to number of bytes read */
)
{
   11aee:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11af2:	469b      	mov	fp, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2563
	DWORD clst, sect, remain;
	UINT rcnt, cc;
	BYTE csect, *rbuff = (BYTE*)buff;


	*br = 0;	/* Clear read byte counter */
   11af4:	2300      	movs	r3, #0
   11af6:	f8cb 3000 	str.w	r3, [fp]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2556
{
   11afa:	4604      	mov	r4, r0
   11afc:	4689      	mov	r9, r1
   11afe:	4616      	mov	r6, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2565

	res = validate(fp);							/* Check validity */
   11b00:	f7ff f9a4 	bl	10e4c <validate>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2566
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   11b04:	4605      	mov	r5, r0
   11b06:	b110      	cbz	r0, 11b0e <f_read+0x20>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
						ABORT(fp->fs, FR_DISK_ERR);
					fp->flag &= ~FA__DIRTY;
				}
#endif
				if (disk_read(fp->fs->drv, fp->buf, sect, 1))	/* Fill sector cache */
					ABORT(fp->fs, FR_DISK_ERR);
   11b08:	4629      	mov	r1, r5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
#else
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
#endif
	}

	LEAVE_FF(fp->fs, FR_OK);
   11b0a:	6820      	ldr	r0, [r4, #0]
   11b0c:	e04a      	b.n	11ba4 <f_read+0xb6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2567
	if (fp->err)								/* Check error */
   11b0e:	79e1      	ldrb	r1, [r4, #7]
   11b10:	b139      	cbz	r1, 11b22 <f_read+0x34>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2568
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   11b12:	6820      	ldr	r0, [r4, #0]
   11b14:	f7ff f9b7 	bl	10e86 <unlock_fs>
   11b18:	79e5      	ldrb	r5, [r4, #7]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2641
}
   11b1a:	4628      	mov	r0, r5
   11b1c:	b003      	add	sp, #12
   11b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2569
	if (!(fp->flag & FA_READ)) 					/* Check access mode */
   11b22:	79a3      	ldrb	r3, [r4, #6]
   11b24:	07d8      	lsls	r0, r3, #31
   11b26:	d405      	bmi.n	11b34 <f_read+0x46>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2570
		LEAVE_FF(fp->fs, FR_DENIED);
   11b28:	2107      	movs	r1, #7
   11b2a:	6820      	ldr	r0, [r4, #0]
   11b2c:	f7ff f9ab 	bl	10e86 <unlock_fs>
   11b30:	2507      	movs	r5, #7
   11b32:	e7f2      	b.n	11b1a <f_read+0x2c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2571
	remain = fp->fsize - fp->fptr;
   11b34:	68e3      	ldr	r3, [r4, #12]
   11b36:	68a7      	ldr	r7, [r4, #8]
   11b38:	1bdf      	subs	r7, r3, r7
   11b3a:	42b7      	cmp	r7, r6
   11b3c:	bf28      	it	cs
   11b3e:	4637      	movcs	r7, r6
   11b40:	f104 0324 	add.w	r3, r4, #36	; 0x24
   11b44:	9300      	str	r3, [sp, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2574
	for ( ;  btr;								/* Repeat until all data read */
   11b46:	b90f      	cbnz	r7, 11b4c <f_read+0x5e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
	LEAVE_FF(fp->fs, FR_OK);
   11b48:	4639      	mov	r1, r7
   11b4a:	e7de      	b.n	11b0a <f_read+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2576
		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
   11b4c:	68a2      	ldr	r2, [r4, #8]
   11b4e:	f3c2 0308 	ubfx	r3, r2, #0, #9
   11b52:	2b00      	cmp	r3, #0
   11b54:	d174      	bne.n	11c40 <f_read+0x152>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2577
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
   11b56:	6820      	ldr	r0, [r4, #0]
   11b58:	7883      	ldrb	r3, [r0, #2]
   11b5a:	3b01      	subs	r3, #1
   11b5c:	ea03 2352 	and.w	r3, r3, r2, lsr #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2578
			if (!csect) {						/* On the cluster boundary? */
   11b60:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
   11b64:	d111      	bne.n	11b8a <f_read+0x9c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2579
				if (fp->fptr == 0) {			/* On the top of the file? */
   11b66:	b92a      	cbnz	r2, 11b74 <f_read+0x86>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2580
					clst = fp->sclust;			/* Follow from the origin */
   11b68:	6920      	ldr	r0, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2589
				if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
   11b6a:	2801      	cmp	r0, #1
   11b6c:	d808      	bhi.n	11b80 <f_read+0x92>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2589 (discriminator 1)
   11b6e:	2502      	movs	r5, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
					ABORT(fp->fs, FR_DISK_ERR);
   11b70:	71e5      	strb	r5, [r4, #7]
   11b72:	e7c9      	b.n	11b08 <f_read+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2587
						clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
   11b74:	6961      	ldr	r1, [r4, #20]
   11b76:	9301      	str	r3, [sp, #4]
   11b78:	f7ff f99d 	bl	10eb6 <get_fat>
   11b7c:	9b01      	ldr	r3, [sp, #4]
   11b7e:	e7f4      	b.n	11b6a <f_read+0x7c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2590
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   11b80:	1c41      	adds	r1, r0, #1
   11b82:	d101      	bne.n	11b88 <f_read+0x9a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
					ABORT(fp->fs, FR_DISK_ERR);
   11b84:	2501      	movs	r5, #1
   11b86:	e7f3      	b.n	11b70 <f_read+0x82>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2591
				fp->clust = clst;				/* Update current cluster */
   11b88:	6160      	str	r0, [r4, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2593
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
   11b8a:	f8d4 a000 	ldr.w	sl, [r4]
   11b8e:	6961      	ldr	r1, [r4, #20]
   11b90:	4650      	mov	r0, sl
   11b92:	9301      	str	r3, [sp, #4]
   11b94:	f7ff f984 	bl	10ea0 <clust2sect>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2594
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
   11b98:	9b01      	ldr	r3, [sp, #4]
   11b9a:	b930      	cbnz	r0, 11baa <f_read+0xbc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2594 (discriminator 1)
   11b9c:	2502      	movs	r5, #2
   11b9e:	4650      	mov	r0, sl
   11ba0:	4629      	mov	r1, r5
   11ba2:	71e5      	strb	r5, [r4, #7]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
	LEAVE_FF(fp->fs, FR_OK);
   11ba4:	f7ff f96f 	bl	10e86 <unlock_fs>
   11ba8:	e7b7      	b.n	11b1a <f_read+0x2c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2597
			if (cc) {							/* Read maximum contiguous sectors directly */
   11baa:	0a7e      	lsrs	r6, r7, #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2595
			sect += csect;
   11bac:	eb00 0803 	add.w	r8, r0, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2597
			if (cc) {							/* Read maximum contiguous sectors directly */
   11bb0:	d029      	beq.n	11c06 <f_read+0x118>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2598
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
   11bb2:	f89a 2002 	ldrb.w	r2, [sl, #2]
   11bb6:	1999      	adds	r1, r3, r6
   11bb8:	4291      	cmp	r1, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2599
					cc = fp->fs->csize - csect;
   11bba:	bf88      	it	hi
   11bbc:	1ad6      	subhi	r6, r2, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2600
				if (disk_read(fp->fs->drv, rbuff, sect, cc))
   11bbe:	b2f3      	uxtb	r3, r6
   11bc0:	4642      	mov	r2, r8
   11bc2:	4649      	mov	r1, r9
   11bc4:	f89a 0001 	ldrb.w	r0, [sl, #1]
   11bc8:	f001 fbdb 	bl	13382 <disk_read>
   11bcc:	2800      	cmp	r0, #0
   11bce:	d1d9      	bne.n	11b84 <f_read+0x96>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2607
				if ((fp->flag & FA__DIRTY) && fp->dsect - sect < cc)
   11bd0:	79a3      	ldrb	r3, [r4, #6]
   11bd2:	065a      	lsls	r2, r3, #25
   11bd4:	d50b      	bpl.n	11bee <f_read+0x100>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2607 (discriminator 1)
   11bd6:	69a0      	ldr	r0, [r4, #24]
   11bd8:	eba0 0008 	sub.w	r0, r0, r8
   11bdc:	4286      	cmp	r6, r0
   11bde:	d906      	bls.n	11bee <f_read+0x100>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2608
					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf, SS(fp->fs));
   11be0:	f44f 7200 	mov.w	r2, #512	; 0x200
   11be4:	9900      	ldr	r1, [sp, #0]
   11be6:	eb09 2040 	add.w	r0, r9, r0, lsl #9
   11bea:	f7fe fecc 	bl	10986 <mem_cpy>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2611
				rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
   11bee:	0276      	lsls	r6, r6, #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2575
		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
   11bf0:	68a3      	ldr	r3, [r4, #8]
   11bf2:	44b1      	add	r9, r6
   11bf4:	4433      	add	r3, r6
   11bf6:	60a3      	str	r3, [r4, #8]
   11bf8:	f8db 3000 	ldr.w	r3, [fp]
   11bfc:	1bbf      	subs	r7, r7, r6
   11bfe:	4433      	add	r3, r6
   11c00:	f8cb 3000 	str.w	r3, [fp]
   11c04:	e79f      	b.n	11b46 <f_read+0x58>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2615
			if (fp->dsect != sect) {			/* Load data sector if not in cache */
   11c06:	69a2      	ldr	r2, [r4, #24]
   11c08:	4590      	cmp	r8, r2
   11c0a:	d017      	beq.n	11c3c <f_read+0x14e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2617
				if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
   11c0c:	79a3      	ldrb	r3, [r4, #6]
   11c0e:	065b      	lsls	r3, r3, #25
   11c10:	d50b      	bpl.n	11c2a <f_read+0x13c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2618
					if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   11c12:	2301      	movs	r3, #1
   11c14:	9900      	ldr	r1, [sp, #0]
   11c16:	f89a 0001 	ldrb.w	r0, [sl, #1]
   11c1a:	f001 fbce 	bl	133ba <disk_write>
   11c1e:	2800      	cmp	r0, #0
   11c20:	d1b0      	bne.n	11b84 <f_read+0x96>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2620
					fp->flag &= ~FA__DIRTY;
   11c22:	79a3      	ldrb	r3, [r4, #6]
   11c24:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   11c28:	71a3      	strb	r3, [r4, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2623
				if (disk_read(fp->fs->drv, fp->buf, sect, 1))	/* Fill sector cache */
   11c2a:	6820      	ldr	r0, [r4, #0]
   11c2c:	2301      	movs	r3, #1
   11c2e:	4642      	mov	r2, r8
   11c30:	9900      	ldr	r1, [sp, #0]
   11c32:	7840      	ldrb	r0, [r0, #1]
   11c34:	f001 fba5 	bl	13382 <disk_read>
   11c38:	2800      	cmp	r0, #0
   11c3a:	d1a3      	bne.n	11b84 <f_read+0x96>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2627
			fp->dsect = sect;
   11c3c:	f8c4 8018 	str.w	r8, [r4, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2629
		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
   11c40:	68a1      	ldr	r1, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2636
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
   11c42:	4648      	mov	r0, r9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2629
		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
   11c44:	f3c1 0108 	ubfx	r1, r1, #0, #9
   11c48:	f5c1 7600 	rsb	r6, r1, #512	; 0x200
   11c4c:	42be      	cmp	r6, r7
   11c4e:	bf28      	it	cs
   11c50:	463e      	movcs	r6, r7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2636
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
   11c52:	3124      	adds	r1, #36	; 0x24
   11c54:	4632      	mov	r2, r6
   11c56:	4421      	add	r1, r4
   11c58:	f7fe fe95 	bl	10986 <mem_cpy>
   11c5c:	e7c8      	b.n	11bf0 <f_read+0x102>

00011c5e <f_write>:
f_write():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2657
	FIL* fp,			/* Pointer to the file object */
	const void *buff,	/* Pointer to the data to be written */
	UINT btw,			/* Number of bytes to write */
	UINT* bw			/* Pointer to number of bytes written */
)
{
   11c5e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c62:	469b      	mov	fp, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2665
	UINT wcnt, cc;
	const BYTE *wbuff = (const BYTE*)buff;
	BYTE csect;


	*bw = 0;	/* Clear write byte counter */
   11c64:	2300      	movs	r3, #0
   11c66:	f8cb 3000 	str.w	r3, [fp]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2657
{
   11c6a:	4604      	mov	r4, r0
   11c6c:	4689      	mov	r9, r1
   11c6e:	4690      	mov	r8, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2667

	res = validate(fp);						/* Check validity */
   11c70:	f7ff f8ec 	bl	10e4c <validate>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2668
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   11c74:	4605      	mov	r5, r0
   11c76:	b110      	cbz	r0, 11c7e <f_write+0x20>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
			}
#else
			if (fp->dsect != sect) {		/* Fill sector cache with file data */
				if (fp->fptr < fp->fsize &&
					disk_read(fp->fs->drv, fp->buf, sect, 1))
						ABORT(fp->fs, FR_DISK_ERR);
   11c78:	4629      	mov	r1, r5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	}

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
	fp->flag |= FA__WRITTEN;						/* Set file change flag */

	LEAVE_FF(fp->fs, FR_OK);
   11c7a:	6820      	ldr	r0, [r4, #0]
   11c7c:	e068      	b.n	11d50 <f_write+0xf2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2669
	if (fp->err)							/* Check error */
   11c7e:	79e1      	ldrb	r1, [r4, #7]
   11c80:	b139      	cbz	r1, 11c92 <f_write+0x34>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2670
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   11c82:	6820      	ldr	r0, [r4, #0]
   11c84:	f7ff f8ff 	bl	10e86 <unlock_fs>
   11c88:	79e5      	ldrb	r5, [r4, #7]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2764
}
   11c8a:	4628      	mov	r0, r5
   11c8c:	b003      	add	sp, #12
   11c8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2671
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
   11c92:	79a3      	ldrb	r3, [r4, #6]
   11c94:	0799      	lsls	r1, r3, #30
   11c96:	d405      	bmi.n	11ca4 <f_write+0x46>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2672
		LEAVE_FF(fp->fs, FR_DENIED);
   11c98:	2107      	movs	r1, #7
   11c9a:	6820      	ldr	r0, [r4, #0]
   11c9c:	f7ff f8f3 	bl	10e86 <unlock_fs>
   11ca0:	2507      	movs	r5, #7
   11ca2:	e7f2      	b.n	11c8a <f_write+0x2c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2673
	if (fp->fptr + btw < fp->fptr) btw = 0;	/* File size cannot reach 4GB */
   11ca4:	68a3      	ldr	r3, [r4, #8]
   11ca6:	eb13 0f08 	cmn.w	r3, r8
   11caa:	d205      	bcs.n	11cb8 <f_write+0x5a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2741
					disk_read(fp->fs->drv, fp->buf, sect, 1))
   11cac:	f104 0324 	add.w	r3, r4, #36	; 0x24
   11cb0:	9301      	str	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2675
	for ( ;  btw;							/* Repeat until all data written */
   11cb2:	f1b8 0f00 	cmp.w	r8, #0
   11cb6:	d10a      	bne.n	11cce <f_write+0x70>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2760
	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
   11cb8:	68a3      	ldr	r3, [r4, #8]
   11cba:	68e2      	ldr	r2, [r4, #12]
   11cbc:	4293      	cmp	r3, r2
   11cbe:	f200 80a2 	bhi.w	11e06 <f_write+0x1a8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2761
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
   11cc2:	79a3      	ldrb	r3, [r4, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	LEAVE_FF(fp->fs, FR_OK);
   11cc4:	2100      	movs	r1, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2761
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
   11cc6:	f043 0320 	orr.w	r3, r3, #32
   11cca:	71a3      	strb	r3, [r4, #6]
   11ccc:	e7d5      	b.n	11c7a <f_write+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2677
		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
   11cce:	68a2      	ldr	r2, [r4, #8]
   11cd0:	f3c2 0308 	ubfx	r3, r2, #0, #9
   11cd4:	2b00      	cmp	r3, #0
   11cd6:	f040 8083 	bne.w	11de0 <f_write+0x182>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2678
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
   11cda:	6820      	ldr	r0, [r4, #0]
   11cdc:	7883      	ldrb	r3, [r0, #2]
   11cde:	3b01      	subs	r3, #1
   11ce0:	ea03 2352 	and.w	r3, r3, r2, lsr #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2679
			if (!csect) {					/* On the cluster boundary? */
   11ce4:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
   11ce8:	9300      	str	r3, [sp, #0]
   11cea:	d116      	bne.n	11d1a <f_write+0xbc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2680
				if (fp->fptr == 0) {		/* On the top of the file? */
   11cec:	b95a      	cbnz	r2, 11d06 <f_write+0xa8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2681
					clst = fp->sclust;		/* Follow from the origin */
   11cee:	6921      	ldr	r1, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2682
					if (clst == 0)			/* When no cluster is allocated, */
   11cf0:	b921      	cbnz	r1, 11cfc <f_write+0x9e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2690
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
   11cf2:	f7ff f9dc 	bl	110ae <create_chain>
   11cf6:	4601      	mov	r1, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2692
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
   11cf8:	2800      	cmp	r0, #0
   11cfa:	d0dd      	beq.n	11cb8 <f_write+0x5a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2693
				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   11cfc:	2901      	cmp	r1, #1
   11cfe:	d104      	bne.n	11d0a <f_write+0xac>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2693 (discriminator 1)
   11d00:	2502      	movs	r5, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
						ABORT(fp->fs, FR_DISK_ERR);
   11d02:	71e5      	strb	r5, [r4, #7]
   11d04:	e7b8      	b.n	11c78 <f_write+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2690
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
   11d06:	6961      	ldr	r1, [r4, #20]
   11d08:	e7f3      	b.n	11cf2 <f_write+0x94>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2694
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   11d0a:	1c4a      	adds	r2, r1, #1
   11d0c:	d101      	bne.n	11d12 <f_write+0xb4>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
						ABORT(fp->fs, FR_DISK_ERR);
   11d0e:	2501      	movs	r5, #1
   11d10:	e7f7      	b.n	11d02 <f_write+0xa4>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696
				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
   11d12:	6923      	ldr	r3, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2695
				fp->clust = clst;			/* Update current cluster */
   11d14:	6161      	str	r1, [r4, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696
				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
   11d16:	b903      	cbnz	r3, 11d1a <f_write+0xbc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696 (discriminator 1)
   11d18:	6121      	str	r1, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2702
			if (fp->flag & FA__DIRTY) {		/* Write-back sector cache */
   11d1a:	79a3      	ldrb	r3, [r4, #6]
   11d1c:	065b      	lsls	r3, r3, #25
   11d1e:	d50c      	bpl.n	11d3a <f_write+0xdc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2703
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   11d20:	6820      	ldr	r0, [r4, #0]
   11d22:	2301      	movs	r3, #1
   11d24:	69a2      	ldr	r2, [r4, #24]
   11d26:	9901      	ldr	r1, [sp, #4]
   11d28:	7840      	ldrb	r0, [r0, #1]
   11d2a:	f001 fb46 	bl	133ba <disk_write>
   11d2e:	2800      	cmp	r0, #0
   11d30:	d1ed      	bne.n	11d0e <f_write+0xb0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2705
				fp->flag &= ~FA__DIRTY;
   11d32:	79a3      	ldrb	r3, [r4, #6]
   11d34:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   11d38:	71a3      	strb	r3, [r4, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2708
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
   11d3a:	f8d4 a000 	ldr.w	sl, [r4]
   11d3e:	6961      	ldr	r1, [r4, #20]
   11d40:	4650      	mov	r0, sl
   11d42:	f7ff f8ad 	bl	10ea0 <clust2sect>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2709
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
   11d46:	b930      	cbnz	r0, 11d56 <f_write+0xf8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2709 (discriminator 1)
   11d48:	2502      	movs	r5, #2
   11d4a:	4650      	mov	r0, sl
   11d4c:	4629      	mov	r1, r5
   11d4e:	71e5      	strb	r5, [r4, #7]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	LEAVE_FF(fp->fs, FR_OK);
   11d50:	f7ff f899 	bl	10e86 <unlock_fs>
   11d54:	e799      	b.n	11c8a <f_write+0x2c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2710
			sect += csect;
   11d56:	9b00      	ldr	r3, [sp, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2712
			if (cc) {						/* Write maximum contiguous sectors directly */
   11d58:	ea5f 2658 	movs.w	r6, r8, lsr #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2710
			sect += csect;
   11d5c:	eb00 0703 	add.w	r7, r0, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2712
			if (cc) {						/* Write maximum contiguous sectors directly */
   11d60:	d02d      	beq.n	11dbe <f_write+0x160>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2713
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
   11d62:	9a00      	ldr	r2, [sp, #0]
   11d64:	f89a 3002 	ldrb.w	r3, [sl, #2]
   11d68:	4432      	add	r2, r6
   11d6a:	429a      	cmp	r2, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2714
					cc = fp->fs->csize - csect;
   11d6c:	bf88      	it	hi
   11d6e:	9a00      	ldrhi	r2, [sp, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2715
				if (disk_write(fp->fs->drv, wbuff, sect, cc))
   11d70:	4649      	mov	r1, r9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2714
					cc = fp->fs->csize - csect;
   11d72:	bf88      	it	hi
   11d74:	1a9e      	subhi	r6, r3, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2715
				if (disk_write(fp->fs->drv, wbuff, sect, cc))
   11d76:	b2f3      	uxtb	r3, r6
   11d78:	463a      	mov	r2, r7
   11d7a:	f89a 0001 	ldrb.w	r0, [sl, #1]
   11d7e:	f001 fb1c 	bl	133ba <disk_write>
   11d82:	2800      	cmp	r0, #0
   11d84:	d1c3      	bne.n	11d0e <f_write+0xb0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2724
				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write */
   11d86:	69a1      	ldr	r1, [r4, #24]
   11d88:	1bc9      	subs	r1, r1, r7
   11d8a:	428e      	cmp	r6, r1
   11d8c:	d90a      	bls.n	11da4 <f_write+0x146>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2725
					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
   11d8e:	f44f 7200 	mov.w	r2, #512	; 0x200
   11d92:	eb09 2141 	add.w	r1, r9, r1, lsl #9
   11d96:	9801      	ldr	r0, [sp, #4]
   11d98:	f7fe fdf5 	bl	10986 <mem_cpy>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2726
					fp->flag &= ~FA__DIRTY;
   11d9c:	79a3      	ldrb	r3, [r4, #6]
   11d9e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   11da2:	71a3      	strb	r3, [r4, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2730
				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
   11da4:	0276      	lsls	r6, r6, #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2676
		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
   11da6:	68a3      	ldr	r3, [r4, #8]
   11da8:	44b1      	add	r9, r6
   11daa:	4433      	add	r3, r6
   11dac:	60a3      	str	r3, [r4, #8]
   11dae:	f8db 3000 	ldr.w	r3, [fp]
   11db2:	eba8 0806 	sub.w	r8, r8, r6
   11db6:	4433      	add	r3, r6
   11db8:	f8cb 3000 	str.w	r3, [fp]
   11dbc:	e779      	b.n	11cb2 <f_write+0x54>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2739
			if (fp->dsect != sect) {		/* Fill sector cache with file data */
   11dbe:	69a3      	ldr	r3, [r4, #24]
   11dc0:	429f      	cmp	r7, r3
   11dc2:	d00c      	beq.n	11dde <f_write+0x180>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2740
				if (fp->fptr < fp->fsize &&
   11dc4:	68a2      	ldr	r2, [r4, #8]
   11dc6:	68e3      	ldr	r3, [r4, #12]
   11dc8:	429a      	cmp	r2, r3
   11dca:	d208      	bcs.n	11dde <f_write+0x180>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2741 (discriminator 1)
					disk_read(fp->fs->drv, fp->buf, sect, 1))
   11dcc:	2301      	movs	r3, #1
   11dce:	463a      	mov	r2, r7
   11dd0:	9901      	ldr	r1, [sp, #4]
   11dd2:	f89a 0001 	ldrb.w	r0, [sl, #1]
   11dd6:	f001 fad4 	bl	13382 <disk_read>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2740 (discriminator 1)
				if (fp->fptr < fp->fsize &&
   11dda:	2800      	cmp	r0, #0
   11ddc:	d197      	bne.n	11d0e <f_write+0xb0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2745
			fp->dsect = sect;
   11dde:	61a7      	str	r7, [r4, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2747
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
   11de0:	68a0      	ldr	r0, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2755
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
   11de2:	4649      	mov	r1, r9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2747
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
   11de4:	f3c0 0008 	ubfx	r0, r0, #0, #9
   11de8:	f5c0 7600 	rsb	r6, r0, #512	; 0x200
   11dec:	4546      	cmp	r6, r8
   11dee:	bf28      	it	cs
   11df0:	4646      	movcs	r6, r8
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2755
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
   11df2:	3024      	adds	r0, #36	; 0x24
   11df4:	4632      	mov	r2, r6
   11df6:	4420      	add	r0, r4
   11df8:	f7fe fdc5 	bl	10986 <mem_cpy>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2756
		fp->flag |= FA__DIRTY;
   11dfc:	79a3      	ldrb	r3, [r4, #6]
   11dfe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   11e02:	71a3      	strb	r3, [r4, #6]
   11e04:	e7cf      	b.n	11da6 <f_write+0x148>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2760 (discriminator 1)
	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
   11e06:	60e3      	str	r3, [r4, #12]
   11e08:	e75b      	b.n	11cc2 <f_write+0x64>

00011e0a <f_sync>:
f_sync():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2776
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL* fp		/* Pointer to the file object */
)
{
   11e0a:	b570      	push	{r4, r5, r6, lr}
   11e0c:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2782
	FRESULT res;
	DWORD tm;
	BYTE *dir;


	res = validate(fp);					/* Check validity of the object */
   11e0e:	f7ff f81d 	bl	10e4c <validate>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2783
	if (res == FR_OK) {
   11e12:	4605      	mov	r5, r0
   11e14:	2800      	cmp	r0, #0
   11e16:	d138      	bne.n	11e8a <f_sync+0x80>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2784
		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
   11e18:	79a3      	ldrb	r3, [r4, #6]
   11e1a:	069a      	lsls	r2, r3, #26
   11e1c:	d535      	bpl.n	11e8a <f_sync+0x80>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2787
			/* Write-back dirty buffer */
#if !_FS_TINY
			if (fp->flag & FA__DIRTY) {
   11e1e:	065b      	lsls	r3, r3, #25
   11e20:	d513      	bpl.n	11e4a <f_sync+0x40>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2788
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   11e22:	6820      	ldr	r0, [r4, #0]
   11e24:	2301      	movs	r3, #1
   11e26:	69a2      	ldr	r2, [r4, #24]
   11e28:	f104 0124 	add.w	r1, r4, #36	; 0x24
   11e2c:	7840      	ldrb	r0, [r0, #1]
   11e2e:	f001 fac4 	bl	133ba <disk_write>
   11e32:	b130      	cbz	r0, 11e42 <f_sync+0x38>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2789
					LEAVE_FF(fp->fs, FR_DISK_ERR);
   11e34:	2101      	movs	r1, #1
   11e36:	6820      	ldr	r0, [r4, #0]
   11e38:	f7ff f825 	bl	10e86 <unlock_fs>
   11e3c:	2501      	movs	r5, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2811
			}
		}
	}

	LEAVE_FF(fp->fs, res);
}
   11e3e:	4628      	mov	r0, r5
   11e40:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2790
				fp->flag &= ~FA__DIRTY;
   11e42:	79a3      	ldrb	r3, [r4, #6]
   11e44:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   11e48:	71a3      	strb	r3, [r4, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2794
			res = move_window(fp->fs, fp->dir_sect);
   11e4a:	69e1      	ldr	r1, [r4, #28]
   11e4c:	6820      	ldr	r0, [r4, #0]
   11e4e:	f7fe feaf 	bl	10bb0 <move_window>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2795
			if (res == FR_OK) {
   11e52:	4605      	mov	r5, r0
   11e54:	b9c8      	cbnz	r0, 11e8a <f_sync+0x80>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2796
				dir = fp->dir_ptr;
   11e56:	6a26      	ldr	r6, [r4, #32]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2797
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
   11e58:	7af3      	ldrb	r3, [r6, #11]
   11e5a:	f043 0320 	orr.w	r3, r3, #32
   11e5e:	72f3      	strb	r3, [r6, #11]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2798
				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
   11e60:	68e3      	ldr	r3, [r4, #12]
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   11e62:	61f3      	str	r3, [r6, #28]
f_sync():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2799
				st_clust(dir, fp->sclust);					/* Update start cluster */
   11e64:	6923      	ldr	r3, [r4, #16]
st_clust():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1292
	ST_WORD(dir+DIR_FstClusLO, cl);
   11e66:	8373      	strh	r3, [r6, #26]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1293
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   11e68:	0c1b      	lsrs	r3, r3, #16
   11e6a:	82b3      	strh	r3, [r6, #20]
f_sync():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2800
				tm = get_fattime();							/* Update updated time */
   11e6c:	f001 fada 	bl	13424 <get_fattime>
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   11e70:	8275      	strh	r5, [r6, #18]
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   11e72:	f8c6 0016 	str.w	r0, [r6, #22]
f_sync():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2803
				fp->flag &= ~FA__WRITTEN;
   11e76:	79a3      	ldrb	r3, [r4, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2804
				fp->fs->wflag = 1;
   11e78:	6820      	ldr	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2803
				fp->flag &= ~FA__WRITTEN;
   11e7a:	f023 0320 	bic.w	r3, r3, #32
   11e7e:	71a3      	strb	r3, [r4, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2804
				fp->fs->wflag = 1;
   11e80:	2301      	movs	r3, #1
   11e82:	7103      	strb	r3, [r0, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2805
				res = sync_fs(fp->fs);
   11e84:	f7fe fe5a 	bl	10b3c <sync_fs>
   11e88:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2810
	LEAVE_FF(fp->fs, res);
   11e8a:	4629      	mov	r1, r5
   11e8c:	6820      	ldr	r0, [r4, #0]
   11e8e:	f7fe fffa 	bl	10e86 <unlock_fs>
   11e92:	e7d4      	b.n	11e3e <f_sync+0x34>

00011e94 <f_close>:
f_close():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2825
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL *fp		/* Pointer to the file object to be closed */
)
{
   11e94:	b538      	push	{r3, r4, r5, lr}
   11e96:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2830
	FRESULT res;


#if !_FS_READONLY
	res = f_sync(fp);					/* Flush cached data */
   11e98:	f7ff ffb7 	bl	11e0a <f_sync>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2831
	if (res == FR_OK)
   11e9c:	4604      	mov	r4, r0
   11e9e:	b948      	cbnz	r0, 11eb4 <f_close+0x20>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2834
#endif
	{
		res = validate(fp);				/* Lock volume */
   11ea0:	4628      	mov	r0, r5
   11ea2:	f7fe ffd3 	bl	10e4c <validate>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2835
		if (res == FR_OK) {
   11ea6:	4604      	mov	r4, r0
   11ea8:	b920      	cbnz	r0, 11eb4 <f_close+0x20>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2837
#if _FS_REENTRANT
			FATFS *fs = fp->fs;
   11eaa:	6828      	ldr	r0, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2845
			res = dec_lock(fp->lockid);	/* Decrement file open counter */
			if (res == FR_OK)
#endif
				fp->fs = 0;				/* Invalidate file object */
#if _FS_REENTRANT
			unlock_fs(fs, FR_OK);		/* Unlock volume */
   11eac:	4621      	mov	r1, r4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2843
				fp->fs = 0;				/* Invalidate file object */
   11eae:	602c      	str	r4, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2845
			unlock_fs(fs, FR_OK);		/* Unlock volume */
   11eb0:	f7fe ffe9 	bl	10e86 <unlock_fs>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2850
#endif
		}
	}
	return res;
}
   11eb4:	4620      	mov	r0, r4
   11eb6:	bd38      	pop	{r3, r4, r5, pc}

00011eb8 <f_lseek>:
f_lseek():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2998

FRESULT f_lseek (
	FIL* fp,		/* Pointer to the file object */
	DWORD ofs		/* File pointer from top of file */
)
{
   11eb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   11eba:	4604      	mov	r4, r0
   11ebc:	460e      	mov	r6, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3002
	FRESULT res;


	res = validate(fp);					/* Check validity of the object */
   11ebe:	f7fe ffc5 	bl	10e4c <validate>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3003
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   11ec2:	4605      	mov	r5, r0
   11ec4:	b110      	cbz	r0, 11ecc <f_lseek+0x14>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
					ABORT(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1))	/* Fill sector cache */
				ABORT(fp->fs, FR_DISK_ERR);
   11ec6:	4629      	mov	r1, r5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
			fp->flag |= FA__WRITTEN;
		}
#endif
	}

	LEAVE_FF(fp->fs, res);
   11ec8:	6820      	ldr	r0, [r4, #0]
   11eca:	e06a      	b.n	11fa2 <f_lseek+0xea>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3004
	if (fp->err)						/* Check error */
   11ecc:	79e1      	ldrb	r1, [r4, #7]
   11ece:	b129      	cbz	r1, 11edc <f_lseek+0x24>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3005
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   11ed0:	6820      	ldr	r0, [r4, #0]
   11ed2:	f7fe ffd8 	bl	10e86 <unlock_fs>
   11ed6:	79e5      	ldrb	r5, [r4, #7]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3143
}
   11ed8:	4628      	mov	r0, r5
   11eda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3068
		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
   11edc:	68e3      	ldr	r3, [r4, #12]
   11ede:	42b3      	cmp	r3, r6
   11ee0:	d204      	bcs.n	11eec <f_lseek+0x34>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3070
			 && !(fp->flag & FA_WRITE)
   11ee2:	79a2      	ldrb	r2, [r4, #6]
   11ee4:	f012 0f02 	tst.w	r2, #2
   11ee8:	bf08      	it	eq
   11eea:	461e      	moveq	r6, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   11eec:	2200      	movs	r2, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3074
		ifptr = fp->fptr;
   11eee:	68a3      	ldr	r3, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   11ef0:	60a2      	str	r2, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3076
		if (ofs) {
   11ef2:	2e00      	cmp	r6, #0
   11ef4:	d130      	bne.n	11f58 <f_lseek+0xa0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3135
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
   11ef6:	68a3      	ldr	r3, [r4, #8]
   11ef8:	68e2      	ldr	r2, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
	LEAVE_FF(fp->fs, res);
   11efa:	2100      	movs	r1, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3135
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
   11efc:	4293      	cmp	r3, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3136
			fp->fsize = fp->fptr;
   11efe:	bf81      	itttt	hi
   11f00:	60e3      	strhi	r3, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3137
			fp->flag |= FA__WRITTEN;
   11f02:	79a3      	ldrbhi	r3, [r4, #6]
   11f04:	f043 0320 	orrhi.w	r3, r3, #32
   11f08:	71a3      	strbhi	r3, [r4, #6]
   11f0a:	e7dd      	b.n	11ec8 <f_lseek+0x10>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   11f0c:	2600      	movs	r6, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3120
		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
   11f0e:	68a3      	ldr	r3, [r4, #8]
   11f10:	f3c3 0308 	ubfx	r3, r3, #0, #9
   11f14:	2b00      	cmp	r3, #0
   11f16:	d0ee      	beq.n	11ef6 <f_lseek+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3120 (discriminator 1)
   11f18:	69a2      	ldr	r2, [r4, #24]
   11f1a:	4296      	cmp	r6, r2
   11f1c:	d0eb      	beq.n	11ef6 <f_lseek+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3123
			if (fp->flag & FA__DIRTY) {			/* Write-back dirty sector cache */
   11f1e:	79a3      	ldrb	r3, [r4, #6]
   11f20:	f104 0724 	add.w	r7, r4, #36	; 0x24
   11f24:	f013 0f40 	tst.w	r3, #64	; 0x40
   11f28:	d00b      	beq.n	11f42 <f_lseek+0x8a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3124
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   11f2a:	6820      	ldr	r0, [r4, #0]
   11f2c:	2301      	movs	r3, #1
   11f2e:	4639      	mov	r1, r7
   11f30:	7840      	ldrb	r0, [r0, #1]
   11f32:	f001 fa42 	bl	133ba <disk_write>
   11f36:	2800      	cmp	r0, #0
   11f38:	d142      	bne.n	11fc0 <f_lseek+0x108>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3126
				fp->flag &= ~FA__DIRTY;
   11f3a:	79a3      	ldrb	r3, [r4, #6]
   11f3c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   11f40:	71a3      	strb	r3, [r4, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3129
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1))	/* Fill sector cache */
   11f42:	6820      	ldr	r0, [r4, #0]
   11f44:	2301      	movs	r3, #1
   11f46:	4632      	mov	r2, r6
   11f48:	4639      	mov	r1, r7
   11f4a:	7840      	ldrb	r0, [r0, #1]
   11f4c:	f001 fa19 	bl	13382 <disk_read>
   11f50:	2800      	cmp	r0, #0
   11f52:	d135      	bne.n	11fc0 <f_lseek+0x108>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3132
			fp->dsect = nsect;
   11f54:	61a6      	str	r6, [r4, #24]
   11f56:	e7ce      	b.n	11ef6 <f_lseek+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3077
			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
   11f58:	6820      	ldr	r0, [r4, #0]
   11f5a:	7887      	ldrb	r7, [r0, #2]
   11f5c:	027f      	lsls	r7, r7, #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3078
			if (ifptr > 0 &&
   11f5e:	b31b      	cbz	r3, 11fa8 <f_lseek+0xf0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3079 (discriminator 1)
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
   11f60:	3b01      	subs	r3, #1
   11f62:	1e72      	subs	r2, r6, #1
   11f64:	fbb2 f2f7 	udiv	r2, r2, r7
   11f68:	fbb3 f1f7 	udiv	r1, r3, r7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3078 (discriminator 1)
			if (ifptr > 0 &&
   11f6c:	428a      	cmp	r2, r1
   11f6e:	d31b      	bcc.n	11fa8 <f_lseek+0xf0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3080
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
   11f70:	427a      	negs	r2, r7
   11f72:	4013      	ands	r3, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3082
				clst = fp->clust;
   11f74:	6961      	ldr	r1, [r4, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3080
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
   11f76:	60a3      	str	r3, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3081
				ofs -= fp->fptr;
   11f78:	1af6      	subs	r6, r6, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3095
			if (clst != 0) {
   11f7a:	2900      	cmp	r1, #0
   11f7c:	d0c6      	beq.n	11f0c <f_lseek+0x54>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3096
				while (ofs > bcs) {						/* Cluster following loop */
   11f7e:	42be      	cmp	r6, r7
   11f80:	d823      	bhi.n	11fca <f_lseek+0x112>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3112
				fp->fptr += ofs;
   11f82:	68a3      	ldr	r3, [r4, #8]
   11f84:	4433      	add	r3, r6
   11f86:	60a3      	str	r3, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3113
				if (ofs % SS(fp->fs)) {
   11f88:	f3c6 0308 	ubfx	r3, r6, #0, #9
   11f8c:	2b00      	cmp	r3, #0
   11f8e:	d0bd      	beq.n	11f0c <f_lseek+0x54>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3114
					nsect = clust2sect(fp->fs, clst);	/* Current sector */
   11f90:	6822      	ldr	r2, [r4, #0]
   11f92:	4610      	mov	r0, r2
   11f94:	f7fe ff84 	bl	10ea0 <clust2sect>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3115
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
   11f98:	bb90      	cbnz	r0, 12000 <f_lseek+0x148>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3115 (discriminator 1)
   11f9a:	2502      	movs	r5, #2
   11f9c:	4610      	mov	r0, r2
   11f9e:	4629      	mov	r1, r5
   11fa0:	71e5      	strb	r5, [r4, #7]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
	LEAVE_FF(fp->fs, res);
   11fa2:	f7fe ff70 	bl	10e86 <unlock_fs>
   11fa6:	e797      	b.n	11ed8 <f_lseek+0x20>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3084
				clst = fp->sclust;						/* start from the first cluster */
   11fa8:	6921      	ldr	r1, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3086
				if (clst == 0) {						/* If no cluster chain, create a new chain */
   11faa:	b961      	cbnz	r1, 11fc6 <f_lseek+0x10e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3087
					clst = create_chain(fp->fs, 0);
   11fac:	f7ff f87f 	bl	110ae <create_chain>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3088
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   11fb0:	2801      	cmp	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3087
					clst = create_chain(fp->fs, 0);
   11fb2:	4601      	mov	r1, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3088
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   11fb4:	d102      	bne.n	11fbc <f_lseek+0x104>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107 (discriminator 3)
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
   11fb6:	2502      	movs	r5, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
				ABORT(fp->fs, FR_DISK_ERR);
   11fb8:	71e5      	strb	r5, [r4, #7]
   11fba:	e784      	b.n	11ec6 <f_lseek+0xe>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3089
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   11fbc:	3001      	adds	r0, #1
   11fbe:	d101      	bne.n	11fc4 <f_lseek+0x10c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
				ABORT(fp->fs, FR_DISK_ERR);
   11fc0:	2501      	movs	r5, #1
   11fc2:	e7f9      	b.n	11fb8 <f_lseek+0x100>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3090
					fp->sclust = clst;
   11fc4:	6121      	str	r1, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3093
				fp->clust = clst;
   11fc6:	6161      	str	r1, [r4, #20]
   11fc8:	e7d7      	b.n	11f7a <f_lseek+0xc2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3098
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
   11fca:	79a3      	ldrb	r3, [r4, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3099
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
   11fcc:	6820      	ldr	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3098
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
   11fce:	079a      	lsls	r2, r3, #30
   11fd0:	d505      	bpl.n	11fde <f_lseek+0x126>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3099
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
   11fd2:	f7ff f86c 	bl	110ae <create_chain>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3100
						if (clst == 0) {				/* When disk gets full, clip file size */
   11fd6:	4601      	mov	r1, r0
   11fd8:	b920      	cbnz	r0, 11fe4 <f_lseek+0x12c>
   11fda:	463e      	mov	r6, r7
   11fdc:	e7d1      	b.n	11f82 <f_lseek+0xca>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3105
						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
   11fde:	f7fe ff6a 	bl	10eb6 <get_fat>
   11fe2:	4601      	mov	r1, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3106
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   11fe4:	1c4b      	adds	r3, r1, #1
   11fe6:	d0eb      	beq.n	11fc0 <f_lseek+0x108>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
   11fe8:	2901      	cmp	r1, #1
   11fea:	d9e4      	bls.n	11fb6 <f_lseek+0xfe>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107 (discriminator 2)
   11fec:	6823      	ldr	r3, [r4, #0]
   11fee:	699b      	ldr	r3, [r3, #24]
   11ff0:	4299      	cmp	r1, r3
   11ff2:	d2e0      	bcs.n	11fb6 <f_lseek+0xfe>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3109
					fp->fptr += bcs;
   11ff4:	68a3      	ldr	r3, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3108
					fp->clust = clst;
   11ff6:	6161      	str	r1, [r4, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3109
					fp->fptr += bcs;
   11ff8:	443b      	add	r3, r7
   11ffa:	60a3      	str	r3, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3110
					ofs -= bcs;
   11ffc:	1bf6      	subs	r6, r6, r7
   11ffe:	e7be      	b.n	11f7e <f_lseek+0xc6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3116
					nsect += ofs / SS(fp->fs);
   12000:	eb00 2656 	add.w	r6, r0, r6, lsr #9
   12004:	e783      	b.n	11f0e <f_lseek+0x56>

00012006 <f_opendir>:
f_opendir():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3156

FRESULT f_opendir (
	DIR* dp,			/* Pointer to directory object to create */
	const TCHAR* path	/* Pointer to the directory path */
)
{
   12006:	b530      	push	{r4, r5, lr}
   12008:	b0c9      	sub	sp, #292	; 0x124
   1200a:	9101      	str	r1, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3162
	FRESULT res;
	FATFS* fs;
	DEF_NAMEBUF;


	if (!dp) return FR_INVALID_OBJECT;
   1200c:	4605      	mov	r5, r0
   1200e:	2800      	cmp	r0, #0
   12010:	d037      	beq.n	12082 <f_opendir+0x7c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3165

	/* Get logical drive number */
	res = find_volume(&fs, &path, 0);
   12012:	2200      	movs	r2, #0
   12014:	a901      	add	r1, sp, #4
   12016:	a803      	add	r0, sp, #12
   12018:	f7fe fe0a 	bl	10c30 <find_volume>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3166
	if (res == FR_OK) {
   1201c:	4604      	mov	r4, r0
   1201e:	b988      	cbnz	r0, 12044 <f_opendir+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3167
		dp->fs = fs;
   12020:	9b03      	ldr	r3, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3169
		INIT_BUF(*dp);
		res = follow_path(dp, path);			/* Follow the path to the directory */
   12022:	9901      	ldr	r1, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3167
		dp->fs = fs;
   12024:	602b      	str	r3, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3168
		INIT_BUF(*dp);
   12026:	ab04      	add	r3, sp, #16
   12028:	61ab      	str	r3, [r5, #24]
   1202a:	ab07      	add	r3, sp, #28
   1202c:	61eb      	str	r3, [r5, #28]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3169
		res = follow_path(dp, path);			/* Follow the path to the directory */
   1202e:	4628      	mov	r0, r5
   12030:	f7ff f994 	bl	1135c <follow_path>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3171
		FREE_BUF();
		if (res == FR_OK) {						/* Follow completed */
   12034:	4604      	mov	r4, r0
   12036:	bb30      	cbnz	r0, 12086 <f_opendir+0x80>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3172
			if (dp->dir) {						/* It is not the origin directory itself */
   12038:	696b      	ldr	r3, [r5, #20]
   1203a:	b17b      	cbz	r3, 1205c <f_opendir+0x56>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3173
				if (dp->dir[DIR_Attr] & AM_DIR)	/* The object is a sub directory */
   1203c:	7ada      	ldrb	r2, [r3, #11]
   1203e:	06d2      	lsls	r2, r2, #27
   12040:	d403      	bmi.n	1204a <f_opendir+0x44>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3176
					dp->sclust = ld_clust(fs, dp->dir);
				else							/* The object is a file */
					res = FR_NO_PATH;
   12042:	2405      	movs	r4, #5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3196 (discriminator 1)
#endif
			}
		}
		if (res == FR_NO_FILE) res = FR_NO_PATH;
	}
	if (res != FR_OK) dp->fs = 0;		/* Invalidate the directory object if function faild */
   12044:	2300      	movs	r3, #0
   12046:	602b      	str	r3, [r5, #0]
   12048:	e014      	b.n	12074 <f_opendir+0x6e>
ld_clust():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   1204a:	9903      	ldr	r1, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   1204c:	8b5a      	ldrh	r2, [r3, #26]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   1204e:	7809      	ldrb	r1, [r1, #0]
   12050:	2903      	cmp	r1, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12052:	bf04      	itt	eq
   12054:	8a9b      	ldrheq	r3, [r3, #20]
   12056:	ea42 4203 	orreq.w	r2, r2, r3, lsl #16
f_opendir():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3174
					dp->sclust = ld_clust(fs, dp->dir);
   1205a:	60aa      	str	r2, [r5, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3179
				dp->id = fs->id;
   1205c:	9b03      	ldr	r3, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   1205e:	2100      	movs	r1, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3179
				dp->id = fs->id;
   12060:	88db      	ldrh	r3, [r3, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   12062:	4628      	mov	r0, r5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3179
				dp->id = fs->id;
   12064:	80ab      	strh	r3, [r5, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   12066:	f7fe ff79 	bl	10f5c <dir_sdi>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3194
		if (res == FR_NO_FILE) res = FR_NO_PATH;
   1206a:	2804      	cmp	r0, #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   1206c:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3194
		if (res == FR_NO_FILE) res = FR_NO_PATH;
   1206e:	d0e8      	beq.n	12042 <f_opendir+0x3c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3196
	if (res != FR_OK) dp->fs = 0;		/* Invalidate the directory object if function faild */
   12070:	2c00      	cmp	r4, #0
   12072:	d1e7      	bne.n	12044 <f_opendir+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3198

	LEAVE_FF(fs, res);
   12074:	4621      	mov	r1, r4
   12076:	9803      	ldr	r0, [sp, #12]
   12078:	f7fe ff05 	bl	10e86 <unlock_fs>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3199
}
   1207c:	4620      	mov	r0, r4
   1207e:	b049      	add	sp, #292	; 0x124
   12080:	bd30      	pop	{r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3162
	if (!dp) return FR_INVALID_OBJECT;
   12082:	2409      	movs	r4, #9
   12084:	e7fa      	b.n	1207c <f_opendir+0x76>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3194
		if (res == FR_NO_FILE) res = FR_NO_PATH;
   12086:	2804      	cmp	r0, #4
   12088:	d0db      	beq.n	12042 <f_opendir+0x3c>
   1208a:	e7db      	b.n	12044 <f_opendir+0x3e>

0001208c <f_closedir>:
f_closedir():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3211
/*-----------------------------------------------------------------------*/

FRESULT f_closedir (
	DIR *dp		/* Pointer to the directory object to be closed */
)
{
   1208c:	b538      	push	{r3, r4, r5, lr}
   1208e:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3215
	FRESULT res;


	res = validate(dp);
   12090:	f7fe fedc 	bl	10e4c <validate>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3216
	if (res == FR_OK) {
   12094:	4604      	mov	r4, r0
   12096:	b920      	cbnz	r0, 120a2 <f_closedir+0x16>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3218
#if _FS_REENTRANT
		FATFS *fs = dp->fs;
   12098:	6828      	ldr	r0, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3227
			res = dec_lock(dp->lockid);
		if (res == FR_OK)
#endif
			dp->fs = 0;				/* Invalidate directory object */
#if _FS_REENTRANT
		unlock_fs(fs, FR_OK);		/* Unlock volume */
   1209a:	4621      	mov	r1, r4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3225
			dp->fs = 0;				/* Invalidate directory object */
   1209c:	602c      	str	r4, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3227
		unlock_fs(fs, FR_OK);		/* Unlock volume */
   1209e:	f7fe fef2 	bl	10e86 <unlock_fs>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3231
#endif
	}
	return res;
}
   120a2:	4620      	mov	r0, r4
   120a4:	bd38      	pop	{r3, r4, r5, pc}

000120a6 <f_readdir>:
f_readdir():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3244

FRESULT f_readdir (
	DIR* dp,			/* Pointer to the open directory object */
	FILINFO* fno		/* Pointer to file information to return */
)
{
   120a6:	b570      	push	{r4, r5, r6, lr}
   120a8:	b0c4      	sub	sp, #272	; 0x110
   120aa:	4604      	mov	r4, r0
   120ac:	460e      	mov	r6, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3249
	FRESULT res;
	DEF_NAMEBUF;


	res = validate(dp);						/* Check validity of the object */
   120ae:	f7fe fecd 	bl	10e4c <validate>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3250
	if (res == FR_OK) {
   120b2:	4605      	mov	r5, r0
   120b4:	b9e0      	cbnz	r0, 120f0 <f_readdir+0x4a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3251
		if (!fno) {
   120b6:	b92e      	cbnz	r6, 120c4 <f_readdir+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3252
			res = dir_sdi(dp, 0);			/* Rewind the directory object */
   120b8:	4601      	mov	r1, r0
   120ba:	4620      	mov	r0, r4
   120bc:	f7fe ff4e 	bl	10f5c <dir_sdi>
   120c0:	4605      	mov	r5, r0
   120c2:	e015      	b.n	120f0 <f_readdir+0x4a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3254
		} else {
			INIT_BUF(*dp);
   120c4:	ab03      	add	r3, sp, #12
   120c6:	f8c4 d018 	str.w	sp, [r4, #24]
   120ca:	61e3      	str	r3, [r4, #28]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3255
			res = dir_read(dp, 0);			/* Read an item */
   120cc:	4620      	mov	r0, r4
   120ce:	f7ff fb99 	bl	11804 <dir_read.constprop.11>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3256
			if (res == FR_NO_FILE) {		/* Reached end of directory */
   120d2:	2804      	cmp	r0, #4
   120d4:	d113      	bne.n	120fe <f_readdir+0x58>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3257
				dp->sect = 0;
   120d6:	6125      	str	r5, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3261
				res = FR_OK;
			}
			if (res == FR_OK) {				/* A valid entry is found */
				get_fileinfo(dp, fno);		/* Get the object information */
   120d8:	4631      	mov	r1, r6
   120da:	4620      	mov	r0, r4
   120dc:	f7fe fca2 	bl	10a24 <get_fileinfo>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3262
				res = dir_next(dp, 0);		/* Increment index for next */
   120e0:	2100      	movs	r1, #0
   120e2:	4620      	mov	r0, r4
   120e4:	f7ff f833 	bl	1114e <dir_next>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3263
				if (res == FR_NO_FILE) {
   120e8:	2804      	cmp	r0, #4
   120ea:	d1e9      	bne.n	120c0 <f_readdir+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3264
					dp->sect = 0;
   120ec:	2300      	movs	r3, #0
   120ee:	6123      	str	r3, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3272
			}
			FREE_BUF();
		}
	}

	LEAVE_FF(dp->fs, res);
   120f0:	6820      	ldr	r0, [r4, #0]
   120f2:	4629      	mov	r1, r5
   120f4:	f7fe fec7 	bl	10e86 <unlock_fs>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3273
}
   120f8:	4628      	mov	r0, r5
   120fa:	b044      	add	sp, #272	; 0x110
   120fc:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3260
			if (res == FR_OK) {				/* A valid entry is found */
   120fe:	2800      	cmp	r0, #0
   12100:	d1de      	bne.n	120c0 <f_readdir+0x1a>
   12102:	e7e9      	b.n	120d8 <f_readdir+0x32>

00012104 <f_getfree>:
f_getfree():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3322
FRESULT f_getfree (
	const TCHAR* path,	/* Path name of the logical drive number */
	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
)
{
   12104:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   12108:	4614      	mov	r4, r2
   1210a:	ab02      	add	r3, sp, #8
   1210c:	f843 0d04 	str.w	r0, [r3, #-4]!
   12110:	4688      	mov	r8, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3331
	UINT i;
	BYTE fat, *p;


	/* Get logical drive number */
	res = find_volume(fatfs, &path, 0);
   12112:	4620      	mov	r0, r4
   12114:	2200      	movs	r2, #0
   12116:	4619      	mov	r1, r3
   12118:	f7fe fd8a 	bl	10c30 <find_volume>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3332
	fs = *fatfs;
   1211c:	6824      	ldr	r4, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3333
	if (res == FR_OK) {
   1211e:	4605      	mov	r5, r0
   12120:	b930      	cbnz	r0, 12130 <f_getfree+0x2c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3335
		/* If free_clust is valid, return it without full cluster scan */
		if (fs->free_clust <= fs->n_fatent - 2) {
   12122:	69a7      	ldr	r7, [r4, #24]
   12124:	6963      	ldr	r3, [r4, #20]
   12126:	1eba      	subs	r2, r7, #2
   12128:	4293      	cmp	r3, r2
   1212a:	d809      	bhi.n	12140 <f_getfree+0x3c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3336
			*nclst = fs->free_clust;
   1212c:	f8c8 3000 	str.w	r3, [r8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3374
			fs->free_clust = n;
			fs->fsi_flag |= 1;
			*nclst = n;
		}
	}
	LEAVE_FF(fs, res);
   12130:	4620      	mov	r0, r4
   12132:	4629      	mov	r1, r5
   12134:	f7fe fea7 	bl	10e86 <unlock_fs>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3375
}
   12138:	4628      	mov	r0, r5
   1213a:	b002      	add	sp, #8
   1213c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3339
			fat = fs->fs_type;
   12140:	f894 9000 	ldrb.w	r9, [r4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3341
			if (fat == FS_FAT12) {
   12144:	f1b9 0f01 	cmp.w	r9, #1
   12148:	d117      	bne.n	1217a <f_getfree+0x76>
   1214a:	2702      	movs	r7, #2
   1214c:	4606      	mov	r6, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3344
					stat = get_fat(fs, clst);
   1214e:	4639      	mov	r1, r7
   12150:	4620      	mov	r0, r4
   12152:	f7fe feb0 	bl	10eb6 <get_fat>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3345
					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
   12156:	1c43      	adds	r3, r0, #1
   12158:	d032      	beq.n	121c0 <f_getfree+0xbc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3346
					if (stat == 1) { res = FR_INT_ERR; break; }
   1215a:	2801      	cmp	r0, #1
   1215c:	d032      	beq.n	121c4 <f_getfree+0xc0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3347
					if (stat == 0) n++;
   1215e:	b900      	cbnz	r0, 12162 <f_getfree+0x5e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3347 (discriminator 1)
   12160:	3601      	adds	r6, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3348
				} while (++clst < fs->n_fatent);
   12162:	69a3      	ldr	r3, [r4, #24]
   12164:	3701      	adds	r7, #1
   12166:	429f      	cmp	r7, r3
   12168:	d3f1      	bcc.n	1214e <f_getfree+0x4a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3370
			fs->fsi_flag |= 1;
   1216a:	7963      	ldrb	r3, [r4, #5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3369
			fs->free_clust = n;
   1216c:	6166      	str	r6, [r4, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3370
			fs->fsi_flag |= 1;
   1216e:	f043 0301 	orr.w	r3, r3, #1
   12172:	7163      	strb	r3, [r4, #5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3371
			*nclst = n;
   12174:	f8c8 6000 	str.w	r6, [r8]
   12178:	e7da      	b.n	12130 <f_getfree+0x2c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3352
				i = 0; p = 0;
   1217a:	4603      	mov	r3, r0
   1217c:	4602      	mov	r2, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3340
			n = 0;
   1217e:	4606      	mov	r6, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3351
				sect = fs->fatbase;
   12180:	6a61      	ldr	r1, [r4, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3354
					if (!i) {
   12182:	b952      	cbnz	r2, 1219a <f_getfree+0x96>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   12184:	4620      	mov	r0, r4
   12186:	f101 0a01 	add.w	sl, r1, #1
   1218a:	f7fe fd11 	bl	10bb0 <move_window>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3356
						if (res != FR_OK) break;
   1218e:	b9d8      	cbnz	r0, 121c8 <f_getfree+0xc4>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   12190:	4651      	mov	r1, sl
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3358
						i = SS(fs);
   12192:	f44f 7200 	mov.w	r2, #512	; 0x200
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3357
						p = fs->win;
   12196:	f104 0334 	add.w	r3, r4, #52	; 0x34
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3360
					if (fat == FS_FAT16) {
   1219a:	f1b9 0f02 	cmp.w	r9, #2
   1219e:	d107      	bne.n	121b0 <f_getfree+0xac>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3361
						if (LD_WORD(p) == 0) n++;
   121a0:	8818      	ldrh	r0, [r3, #0]
   121a2:	b900      	cbnz	r0, 121a6 <f_getfree+0xa2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3361 (discriminator 1)
   121a4:	3601      	adds	r6, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3362
						p += 2; i -= 2;
   121a6:	3302      	adds	r3, #2
   121a8:	3a02      	subs	r2, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3367
				} while (--clst);
   121aa:	3f01      	subs	r7, #1
   121ac:	d1e9      	bne.n	12182 <f_getfree+0x7e>
   121ae:	e7dc      	b.n	1216a <f_getfree+0x66>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3364
						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
   121b0:	6818      	ldr	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3365
						p += 4; i -= 4;
   121b2:	3a04      	subs	r2, #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3364
						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
   121b4:	f030 4070 	bics.w	r0, r0, #4026531840	; 0xf0000000
   121b8:	bf08      	it	eq
   121ba:	3601      	addeq	r6, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3365
						p += 4; i -= 4;
   121bc:	3304      	adds	r3, #4
   121be:	e7f4      	b.n	121aa <f_getfree+0xa6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3345
					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
   121c0:	2501      	movs	r5, #1
   121c2:	e7d2      	b.n	1216a <f_getfree+0x66>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3346
					if (stat == 1) { res = FR_INT_ERR; break; }
   121c4:	2502      	movs	r5, #2
   121c6:	e7d0      	b.n	1216a <f_getfree+0x66>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   121c8:	4605      	mov	r5, r0
   121ca:	e7ce      	b.n	1216a <f_getfree+0x66>

000121cc <f_mkfs>:
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3981
FRESULT f_mkfs (
	const TCHAR* path,	/* Logical drive number */
	BYTE sfd,			/* Partitioning rule 0:FDISK, 1:SFD */
	UINT au				/* Allocation unit [bytes] */
)
{
   121cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121d0:	b089      	sub	sp, #36	; 0x24
   121d2:	ab08      	add	r3, sp, #32
   121d4:	f843 0d0c 	str.w	r0, [r3, #-12]!
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3995
	FATFS *fs;
	DSTATUS stat;


	/* Check mounted drive and clear work area */
	vol = get_ldnumber(&path);
   121d8:	4618      	mov	r0, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3981
{
   121da:	460e      	mov	r6, r1
   121dc:	4615      	mov	r5, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3995
	vol = get_ldnumber(&path);
   121de:	f7fe fc04 	bl	109ea <get_ldnumber>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3996
	if (vol < 0) return FR_INVALID_DRIVE;
   121e2:	2800      	cmp	r0, #0
   121e4:	f2c0 81f7 	blt.w	125d6 <f_mkfs+0x40a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3997
	if (sfd > 1) return FR_INVALID_PARAMETER;
   121e8:	2e01      	cmp	r6, #1
   121ea:	f200 81f6 	bhi.w	125da <f_mkfs+0x40e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3998
	if (au & (au - 1)) return FR_INVALID_PARAMETER;
   121ee:	1e6b      	subs	r3, r5, #1
   121f0:	402b      	ands	r3, r5
   121f2:	9302      	str	r3, [sp, #8]
   121f4:	f040 81f1 	bne.w	125da <f_mkfs+0x40e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3999
	fs = FatFs[vol];
   121f8:	4b50      	ldr	r3, [pc, #320]	; (1233c <f_mkfs+0x170>)
   121fa:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4000
	if (!fs) return FR_NOT_ENABLED;
   121fe:	2c00      	cmp	r4, #0
   12200:	f000 81ed 	beq.w	125de <f_mkfs+0x412>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4001
	fs->fs_type = 0;
   12204:	f89d 3008 	ldrb.w	r3, [sp, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4002
	pdrv = LD2PD(vol);	/* Physical drive */
   12208:	b2c7      	uxtb	r7, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4001
	fs->fs_type = 0;
   1220a:	7023      	strb	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4006
	part = LD2PT(vol);	/* Partition (0:auto detect, 1-4:get from partition table)*/

	/* Get disk statics */
	stat = disk_initialize(pdrv);
   1220c:	4638      	mov	r0, r7
   1220e:	f001 f89d 	bl	1334c <disk_initialize>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4007
	if (stat & STA_NOINIT) return FR_NOT_READY;
   12212:	07c2      	lsls	r2, r0, #31
   12214:	f100 81e5 	bmi.w	125e2 <f_mkfs+0x416>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4008
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
   12218:	0743      	lsls	r3, r0, #29
   1221a:	f100 81e4 	bmi.w	125e6 <f_mkfs+0x41a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4023
		if (!tbl[4]) return FR_MKFS_ABORTED;	/* No partition? */
		b_vol = LD_DWORD(tbl+8);	/* Volume start sector */
		n_vol = LD_DWORD(tbl+12);	/* Volume size */
	} else {
		/* Create a partition in this function */
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
   1221e:	aa07      	add	r2, sp, #28
   12220:	2101      	movs	r1, #1
   12222:	4638      	mov	r0, r7
   12224:	f001 f8e5 	bl	133f2 <disk_ioctl>
   12228:	b118      	cbz	r0, 12232 <f_mkfs+0x66>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4024
			return FR_DISK_ERR;
   1222a:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4212
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR+7) */
	}

	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
}
   1222c:	b009      	add	sp, #36	; 0x24
   1222e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4023 (discriminator 1)
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
   12232:	9907      	ldr	r1, [sp, #28]
   12234:	297f      	cmp	r1, #127	; 0x7f
   12236:	d9f8      	bls.n	1222a <f_mkfs+0x5e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4025
		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
   12238:	2e00      	cmp	r6, #0
   1223a:	bf14      	ite	ne
   1223c:	f04f 0a00 	movne.w	sl, #0
   12240:	f04f 0a3f 	moveq.w	sl, #63	; 0x3f
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4026
		n_vol -= b_vol;				/* Volume size */
   12244:	eba1 010a 	sub.w	r1, r1, sl
   12248:	9107      	str	r1, [sp, #28]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4029
	if (!au) {				/* AU auto selection */
   1224a:	b95d      	cbnz	r5, 12264 <f_mkfs+0x98>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4030
		vs = n_vol / (2000 / (SS(fs) / 512));
   1224c:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
   12250:	fbb1 f3f3 	udiv	r3, r1, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031
		for (i = 0; vs < vst[i]; i++) ;
   12254:	483a      	ldr	r0, [pc, #232]	; (12340 <f_mkfs+0x174>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031 (discriminator 1)
   12256:	f830 2015 	ldrh.w	r2, [r0, r5, lsl #1]
   1225a:	4293      	cmp	r3, r2
   1225c:	d318      	bcc.n	12290 <f_mkfs+0xc4>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4032
		au = cst[i];
   1225e:	4b39      	ldr	r3, [pc, #228]	; (12344 <f_mkfs+0x178>)
   12260:	f833 5015 	ldrh.w	r5, [r3, r5, lsl #1]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4035
	if (au == 0) au = 1;
   12264:	0a6d      	lsrs	r5, r5, #9
   12266:	d015      	beq.n	12294 <f_mkfs+0xc8>
   12268:	2d80      	cmp	r5, #128	; 0x80
   1226a:	bf28      	it	cs
   1226c:	2580      	movcs	r5, #128	; 0x80
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4039
	n_clst = n_vol / au;
   1226e:	fbb1 f3f5 	udiv	r3, r1, r5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4041
	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
   12272:	f640 72f5 	movw	r2, #4085	; 0xff5
   12276:	4293      	cmp	r3, r2
   12278:	f240 81f8 	bls.w	1266c <f_mkfs+0x4a0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4042
	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
   1227c:	f64f 72f5 	movw	r2, #65525	; 0xfff5
   12280:	4293      	cmp	r3, r2
   12282:	f200 81b2 	bhi.w	125ea <f_mkfs+0x41e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4050
		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
   12286:	3302      	adds	r3, #2
   12288:	005b      	lsls	r3, r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4041
	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
   1228a:	f04f 0802 	mov.w	r8, #2
   1228e:	e1f4      	b.n	1267a <f_mkfs+0x4ae>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031 (discriminator 3)
		for (i = 0; vs < vst[i]; i++) ;
   12290:	3501      	adds	r5, #1
   12292:	e7e0      	b.n	12256 <f_mkfs+0x8a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4035
	if (au == 0) au = 1;
   12294:	2501      	movs	r5, #1
   12296:	e7ea      	b.n	1226e <f_mkfs+0xa2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061
	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &n) != RES_OK || !n || n > 32768) n = 1;
   12298:	aa06      	add	r2, sp, #24
   1229a:	2103      	movs	r1, #3
   1229c:	4638      	mov	r0, r7
   1229e:	f001 f8a8 	bl	133f2 <disk_ioctl>
   122a2:	b920      	cbnz	r0, 122ae <f_mkfs+0xe2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061 (discriminator 2)
   122a4:	9b06      	ldr	r3, [sp, #24]
   122a6:	3b01      	subs	r3, #1
   122a8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   122ac:	d301      	bcc.n	122b2 <f_mkfs+0xe6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061 (discriminator 5)
   122ae:	2301      	movs	r3, #1
   122b0:	9306      	str	r3, [sp, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4062
	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
   122b2:	9a06      	ldr	r2, [sp, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4064
	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
   122b4:	f1b8 0f03 	cmp.w	r8, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4062
	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
   122b8:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
   122bc:	444b      	add	r3, r9
   122be:	f1c2 0200 	rsb	r2, r2, #0
   122c2:	ea03 0302 	and.w	r3, r3, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4063
	n = (n - b_data) / N_FATS;
   122c6:	eba3 0309 	sub.w	r3, r3, r9
   122ca:	9306      	str	r3, [sp, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4064
	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
   122cc:	d122      	bne.n	12314 <f_mkfs+0x148>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4066
		b_fat += n;
   122ce:	9a01      	ldr	r2, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4065
		n_rsv += n;
   122d0:	449b      	add	fp, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4066
		b_fat += n;
   122d2:	441a      	add	r2, r3
   122d4:	9201      	str	r2, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4072
	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
   122d6:	9a07      	ldr	r2, [sp, #28]
   122d8:	9900      	ldr	r1, [sp, #0]
   122da:	eba2 030b 	sub.w	r3, r2, fp
   122de:	1a5b      	subs	r3, r3, r1
   122e0:	9903      	ldr	r1, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073
	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
   122e2:	f1b8 0f02 	cmp.w	r8, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4072
	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
   122e6:	eba3 0301 	sub.w	r3, r3, r1
   122ea:	fbb3 f3f5 	udiv	r3, r3, r5
   122ee:	9304      	str	r3, [sp, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073
	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
   122f0:	d114      	bne.n	1231c <f_mkfs+0x150>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073 (discriminator 1)
   122f2:	f640 73f5 	movw	r3, #4085	; 0xff5
   122f6:	9904      	ldr	r1, [sp, #16]
   122f8:	4299      	cmp	r1, r3
   122fa:	f240 81d5 	bls.w	126a8 <f_mkfs+0x4dc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4084
			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
   122fe:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   12302:	bf34      	ite	cc
   12304:	f04f 0904 	movcc.w	r9, #4
   12308:	f04f 0906 	movcs.w	r9, #6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096
		if (sfd) {	/* No partition table (SFD) */
   1230c:	b34e      	cbz	r6, 12362 <f_mkfs+0x196>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   1230e:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   12312:	e05d      	b.n	123d0 <f_mkfs+0x204>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4068
		n_fat += n;
   12314:	9a00      	ldr	r2, [sp, #0]
   12316:	441a      	add	r2, r3
   12318:	9200      	str	r2, [sp, #0]
   1231a:	e7dc      	b.n	122d6 <f_mkfs+0x10a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4074
		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
   1231c:	f1b8 0f03 	cmp.w	r8, #3
   12320:	d112      	bne.n	12348 <f_mkfs+0x17c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4074 (discriminator 1)
   12322:	f64f 73f5 	movw	r3, #65525	; 0xfff5
   12326:	9a04      	ldr	r2, [sp, #16]
   12328:	429a      	cmp	r2, r3
   1232a:	f240 81bd 	bls.w	126a8 <f_mkfs+0x4dc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096
		if (sfd) {	/* No partition table (SFD) */
   1232e:	2e00      	cmp	r6, #0
   12330:	f040 8167 	bne.w	12602 <f_mkfs+0x436>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4079
		sys = 0x0C;		/* FAT32X */
   12334:	f04f 090c 	mov.w	r9, #12
   12338:	e013      	b.n	12362 <f_mkfs+0x196>
   1233a:	bf00      	nop
   1233c:	2007c31c 	.word	0x2007c31c
   12340:	0002111e 	.word	0x0002111e
   12344:	000210c4 	.word	0x000210c4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4081
		if (fmt == FS_FAT12 && n_vol < 0x10000) {
   12348:	f1b8 0f01 	cmp.w	r8, #1
   1234c:	d1d7      	bne.n	122fe <f_mkfs+0x132>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4084 (discriminator 1)
			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
   1234e:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   12352:	bf34      	ite	cc
   12354:	f04f 0901 	movcc.w	r9, #1
   12358:	f04f 0906 	movcs.w	r9, #6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096 (discriminator 1)
		if (sfd) {	/* No partition table (SFD) */
   1235c:	2e00      	cmp	r6, #0
   1235e:	f040 816b 	bne.w	12638 <f_mkfs+0x46c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4099
			mem_set(fs->win, 0, SS(fs));
   12362:	f104 0634 	add.w	r6, r4, #52	; 0x34
   12366:	f44f 7200 	mov.w	r2, #512	; 0x200
   1236a:	2100      	movs	r1, #0
   1236c:	4630      	mov	r0, r6
   1236e:	f7fe fb26 	bl	109be <mem_set>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4105
			tbl[5] = 254;					/* Partition end head */
   12372:	21fe      	movs	r1, #254	; 0xfe
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   12374:	f643 60c1 	movw	r0, #16065	; 0x3ec1
   12378:	f8dd e01c 	ldr.w	lr, [sp, #28]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4105
			tbl[5] = 254;					/* Partition end head */
   1237c:	f884 11f7 	strb.w	r1, [r4, #503]	; 0x1f7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   12380:	eb0a 010e 	add.w	r1, sl, lr
   12384:	fbb1 f1f0 	udiv	r1, r1, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4107
			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
   12388:	0888      	lsrs	r0, r1, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   1238a:	9106      	str	r1, [sp, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4108
			tbl[7] = (BYTE)n;				/* End cylinder */
   1238c:	f884 11f9 	strb.w	r1, [r4, #505]	; 0x1f9
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   12390:	213f      	movs	r1, #63	; 0x3f
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4101
			tbl[1] = 1;						/* Partition start head */
   12392:	2301      	movs	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4103
			tbl[3] = 0;						/* Partition start cylinder */
   12394:	2200      	movs	r2, #0
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   12396:	f8c4 11fa 	str.w	r1, [r4, #506]	; 0x1fa
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1239a:	f64a 2155 	movw	r1, #43605	; 0xaa55
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4107
			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
   1239e:	f040 003f 	orr.w	r0, r0, #63	; 0x3f
   123a2:	f884 01f8 	strb.w	r0, [r4, #504]	; 0x1f8
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   123a6:	f8a4 1232 	strh.w	r1, [r4, #562]	; 0x232
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4101
			tbl[1] = 1;						/* Partition start head */
   123aa:	f884 31f3 	strb.w	r3, [r4, #499]	; 0x1f3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4102
			tbl[2] = 1;						/* Partition start sector */
   123ae:	f884 31f4 	strb.w	r3, [r4, #500]	; 0x1f4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4103
			tbl[3] = 0;						/* Partition start cylinder */
   123b2:	f884 21f5 	strb.w	r2, [r4, #501]	; 0x1f5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4104
			tbl[4] = sys;					/* System type */
   123b6:	f884 91f6 	strb.w	r9, [r4, #502]	; 0x1f6
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   123ba:	f8c4 e1fe 	str.w	lr, [r4, #510]	; 0x1fe
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4112
			if (disk_write(pdrv, fs->win, 0, 1))	/* Write it to the MBR */
   123be:	4631      	mov	r1, r6
   123c0:	4638      	mov	r0, r7
   123c2:	f000 fffa 	bl	133ba <disk_write>
   123c6:	2800      	cmp	r0, #0
   123c8:	f47f af2f 	bne.w	1222a <f_mkfs+0x5e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4114
			md = 0xF8;
   123cc:	f04f 09f8 	mov.w	r9, #248	; 0xf8
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   123d0:	f104 0634 	add.w	r6, r4, #52	; 0x34
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   123d4:	f44f 7200 	mov.w	r2, #512	; 0x200
   123d8:	2100      	movs	r1, #0
   123da:	4630      	mov	r0, r6
   123dc:	f7fe faef 	bl	109be <mem_set>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   123e0:	220b      	movs	r2, #11
   123e2:	49b2      	ldr	r1, [pc, #712]	; (126ac <f_mkfs+0x4e0>)
   123e4:	4630      	mov	r0, r6
   123e6:	f7fe face 	bl	10986 <mem_cpy>
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   123ea:	f44f 7300 	mov.w	r3, #512	; 0x200
   123ee:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   123f2:	2301      	movs	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   123f4:	f1b8 0f03 	cmp.w	r8, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   123f8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   123fc:	9b02      	ldr	r3, [sp, #8]
   123fe:	bf18      	it	ne
   12400:	f44f 7300 	movne.w	r3, #512	; 0x200
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   12404:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   12408:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   1240c:	9302      	str	r3, [sp, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4128 (discriminator 4)
	ST_WORD(tbl+BPB_RootEntCnt, i);
   1240e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4134 (discriminator 4)
	tbl[BPB_Media] = md;					/* Media descriptor */
   12412:	f884 9049 	strb.w	r9, [r4, #73]	; 0x49
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4128 (discriminator 4)
	ST_WORD(tbl+BPB_RootEntCnt, i);
   12416:	f8a4 3045 	strh.w	r3, [r4, #69]	; 0x45
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4129 (discriminator 4)
	if (n_vol < 0x10000) {					/* Number of total sectors */
   1241a:	9b07      	ldr	r3, [sp, #28]
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338 (discriminator 4)
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   1241c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4129 (discriminator 4)
   12420:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4130 (discriminator 4)
		ST_WORD(tbl+BPB_TotSec16, n_vol);
   12424:	bf34      	ite	cc
   12426:	f8a4 3047 	strhcc.w	r3, [r4, #71]	; 0x47
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338 (discriminator 4)
   1242a:	6563      	strcs	r3, [r4, #84]	; 0x54
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337 (discriminator 4)
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1242c:	233f      	movs	r3, #63	; 0x3f
   1242e:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
   12432:	23ff      	movs	r3, #255	; 0xff
   12434:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4138 (discriminator 4)
	n = get_fattime();						/* Use current time as VSN */
   12438:	f000 fff4 	bl	13424 <get_fattime>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4139 (discriminator 4)
	if (fmt == FS_FAT32) {
   1243c:	f1b8 0f03 	cmp.w	r8, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4138 (discriminator 4)
	n = get_fattime();						/* Use current time as VSN */
   12440:	9006      	str	r0, [sp, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4139 (discriminator 4)
	if (fmt == FS_FAT32) {
   12442:	f040 809c 	bne.w	1257e <f_mkfs+0x3b2>
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   12446:	9b00      	ldr	r3, [sp, #0]
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   12448:	2213      	movs	r2, #19
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   1244a:	65a3      	str	r3, [r4, #88]	; 0x58
   1244c:	2302      	movs	r3, #2
   1244e:	6623      	str	r3, [r4, #96]	; 0x60
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   12450:	2301      	movs	r3, #1
   12452:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
   12456:	2306      	movs	r3, #6
   12458:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4145
		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
   1245c:	2380      	movs	r3, #128	; 0x80
   1245e:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4146
		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
   12462:	2329      	movs	r3, #41	; 0x29
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   12464:	4992      	ldr	r1, [pc, #584]	; (126b0 <f_mkfs+0x4e4>)
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   12466:	f8c4 0077 	str.w	r0, [r4, #119]	; 0x77
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4146
		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
   1246a:	f884 3076 	strb.w	r3, [r4, #118]	; 0x76
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   1246e:	f104 007b 	add.w	r0, r4, #123	; 0x7b
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   12472:	f7fe fa88 	bl	10986 <mem_cpy>
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   12476:	f64a 2355 	movw	r3, #43605	; 0xaa55
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4156
	if (disk_write(pdrv, tbl, b_vol, 1))	/* Write it to the VBR sector */
   1247a:	4652      	mov	r2, sl
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   1247c:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4156
   12480:	4631      	mov	r1, r6
   12482:	2301      	movs	r3, #1
   12484:	4638      	mov	r0, r7
   12486:	f000 ff98 	bl	133ba <disk_write>
   1248a:	2800      	cmp	r0, #0
   1248c:	f47f aecd 	bne.w	1222a <f_mkfs+0x5e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4158
	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR+6) */
   12490:	f1b8 0f03 	cmp.w	r8, #3
   12494:	d106      	bne.n	124a4 <f_mkfs+0x2d8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4159
		disk_write(pdrv, tbl, b_vol + 6, 1);
   12496:	2301      	movs	r3, #1
   12498:	f10a 0206 	add.w	r2, sl, #6
   1249c:	4631      	mov	r1, r6
   1249e:	4638      	mov	r0, r7
   124a0:	f000 ff8b 	bl	133ba <disk_write>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4164 (discriminator 1)
		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
   124a4:	f44f 7200 	mov.w	r2, #512	; 0x200
   124a8:	2100      	movs	r1, #0
   124aa:	4630      	mov	r0, r6
   124ac:	f7fe fa87 	bl	109be <mem_set>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4166 (discriminator 1)
		if (fmt != FS_FAT32) {
   124b0:	f1b8 0f03 	cmp.w	r8, #3
   124b4:	d074      	beq.n	125a0 <f_mkfs+0x3d4>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4167
			n |= (fmt == FS_FAT12) ? 0x00FFFF00 : 0xFFFFFF00;
   124b6:	f1b8 0f01 	cmp.w	r8, #1
   124ba:	4b7e      	ldr	r3, [pc, #504]	; (126b4 <f_mkfs+0x4e8>)
   124bc:	bf18      	it	ne
   124be:	f06f 03ff 	mvnne.w	r3, #255	; 0xff
   124c2:	ea43 0309 	orr.w	r3, r3, r9
   124c6:	9306      	str	r3, [sp, #24]
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   124c8:	6363      	str	r3, [r4, #52]	; 0x34
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4175
		if (disk_write(pdrv, tbl, wsect++, 1))
   124ca:	9b01      	ldr	r3, [sp, #4]
   124cc:	4631      	mov	r1, r6
   124ce:	f103 0901 	add.w	r9, r3, #1
   124d2:	9a01      	ldr	r2, [sp, #4]
   124d4:	2301      	movs	r3, #1
   124d6:	4638      	mov	r0, r7
   124d8:	f000 ff6f 	bl	133ba <disk_write>
   124dc:	4601      	mov	r1, r0
   124de:	2800      	cmp	r0, #0
   124e0:	f47f aea3 	bne.w	1222a <f_mkfs+0x5e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4177
		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
   124e4:	f44f 7200 	mov.w	r2, #512	; 0x200
   124e8:	4630      	mov	r0, r6
   124ea:	f7fe fa68 	bl	109be <mem_set>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   124ee:	2301      	movs	r3, #1
   124f0:	9306      	str	r3, [sp, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 1)
   124f2:	9b06      	ldr	r3, [sp, #24]
   124f4:	9a00      	ldr	r2, [sp, #0]
   124f6:	429a      	cmp	r2, r3
   124f8:	d85d      	bhi.n	125b6 <f_mkfs+0x3ea>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4185 (discriminator 2)
	i = (fmt == FS_FAT32) ? au : (UINT)n_dir;
   124fa:	9b03      	ldr	r3, [sp, #12]
   124fc:	464a      	mov	r2, r9
   124fe:	f1b8 0f03 	cmp.w	r8, #3
   12502:	bf18      	it	ne
   12504:	461d      	movne	r5, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189 (discriminator 2)
	} while (--i);
   12506:	444d      	add	r5, r9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4187
		if (disk_write(pdrv, tbl, wsect++, 1))
   12508:	2301      	movs	r3, #1
   1250a:	4631      	mov	r1, r6
   1250c:	4638      	mov	r0, r7
   1250e:	f102 0b01 	add.w	fp, r2, #1
   12512:	f000 ff52 	bl	133ba <disk_write>
   12516:	2800      	cmp	r0, #0
   12518:	f47f ae87 	bne.w	1222a <f_mkfs+0x5e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189
	} while (--i);
   1251c:	45ab      	cmp	fp, r5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4187
		if (disk_write(pdrv, tbl, wsect++, 1))
   1251e:	465a      	mov	r2, fp
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189
	} while (--i);
   12520:	d1f2      	bne.n	12508 <f_mkfs+0x33c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4201
	if (fmt == FS_FAT32) {
   12522:	f1b8 0f03 	cmp.w	r8, #3
   12526:	d121      	bne.n	1256c <f_mkfs+0x3a0>
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   12528:	4b63      	ldr	r3, [pc, #396]	; (126b8 <f_mkfs+0x4ec>)
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   1252a:	4631      	mov	r1, r6
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   1252c:	6363      	str	r3, [r4, #52]	; 0x34
   1252e:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   12532:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   12536:	3320      	adds	r3, #32
   12538:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4204
		ST_DWORD(tbl+FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
   1253c:	9b04      	ldr	r3, [sp, #16]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   1253e:	4638      	mov	r0, r7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4204
		ST_DWORD(tbl+FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
   12540:	3b01      	subs	r3, #1
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   12542:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
   12546:	2302      	movs	r3, #2
   12548:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1254c:	f64a 2355 	movw	r3, #43605	; 0xaa55
   12550:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   12554:	2301      	movs	r3, #1
   12556:	eb0a 0203 	add.w	r2, sl, r3
   1255a:	f000 ff2e 	bl	133ba <disk_write>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4208
		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR+7) */
   1255e:	2301      	movs	r3, #1
   12560:	f10a 0207 	add.w	r2, sl, #7
   12564:	4631      	mov	r1, r6
   12566:	4638      	mov	r0, r7
   12568:	f000 ff27 	bl	133ba <disk_write>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4211
	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
   1256c:	2200      	movs	r2, #0
   1256e:	4638      	mov	r0, r7
   12570:	4611      	mov	r1, r2
   12572:	f000 ff3e 	bl	133f2 <disk_ioctl>
   12576:	3000      	adds	r0, #0
   12578:	bf18      	it	ne
   1257a:	2001      	movne	r0, #1
   1257c:	e656      	b.n	1222c <f_mkfs+0x60>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4150
		ST_WORD(tbl+BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
   1257e:	f8bd 3000 	ldrh.w	r3, [sp]
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   12582:	f8c4 005b 	str.w	r0, [r4, #91]	; 0x5b
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4150
   12586:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4151
		tbl[BS_DrvNum] = 0x80;				/* Drive number */
   1258a:	2380      	movs	r3, #128	; 0x80
   1258c:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4152
		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
   12590:	2329      	movs	r3, #41	; 0x29
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   12592:	2213      	movs	r2, #19
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4152
		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
   12594:	f884 305a 	strb.w	r3, [r4, #90]	; 0x5a
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   12598:	4948      	ldr	r1, [pc, #288]	; (126bc <f_mkfs+0x4f0>)
   1259a:	f104 005f 	add.w	r0, r4, #95	; 0x5f
   1259e:	e768      	b.n	12472 <f_mkfs+0x2a6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4170
			n |= 0xFFFFFF00;
   125a0:	f069 03ff 	orn	r3, r9, #255	; 0xff
   125a4:	9306      	str	r3, [sp, #24]
ST_DWORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   125a6:	6363      	str	r3, [r4, #52]	; 0x34
   125a8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   125ac:	63a3      	str	r3, [r4, #56]	; 0x38
   125ae:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
   125b2:	63e3      	str	r3, [r4, #60]	; 0x3c
   125b4:	e789      	b.n	124ca <f_mkfs+0x2fe>
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4179
			if (disk_write(pdrv, tbl, wsect++, 1))
   125b6:	2301      	movs	r3, #1
   125b8:	464a      	mov	r2, r9
   125ba:	4631      	mov	r1, r6
   125bc:	4638      	mov	r0, r7
   125be:	f109 0b01 	add.w	fp, r9, #1
   125c2:	f000 fefa 	bl	133ba <disk_write>
   125c6:	2800      	cmp	r0, #0
   125c8:	f47f ae2f 	bne.w	1222a <f_mkfs+0x5e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 2)
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   125cc:	9b06      	ldr	r3, [sp, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4179 (discriminator 2)
			if (disk_write(pdrv, tbl, wsect++, 1))
   125ce:	46d9      	mov	r9, fp
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 2)
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   125d0:	3301      	adds	r3, #1
   125d2:	9306      	str	r3, [sp, #24]
   125d4:	e78d      	b.n	124f2 <f_mkfs+0x326>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3996
	if (vol < 0) return FR_INVALID_DRIVE;
   125d6:	200b      	movs	r0, #11
   125d8:	e628      	b.n	1222c <f_mkfs+0x60>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3997
	if (sfd > 1) return FR_INVALID_PARAMETER;
   125da:	2013      	movs	r0, #19
   125dc:	e626      	b.n	1222c <f_mkfs+0x60>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4000
	if (!fs) return FR_NOT_ENABLED;
   125de:	200c      	movs	r0, #12
   125e0:	e624      	b.n	1222c <f_mkfs+0x60>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4007
	if (stat & STA_NOINIT) return FR_NOT_READY;
   125e2:	2003      	movs	r0, #3
   125e4:	e622      	b.n	1222c <f_mkfs+0x60>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4008
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
   125e6:	200a      	movs	r0, #10
   125e8:	e620      	b.n	1222c <f_mkfs+0x60>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4046
		n_fat = ((n_clst * 4) + 8 + SS(fs) - 1) / SS(fs);
   125ea:	009b      	lsls	r3, r3, #2
   125ec:	f203 2307 	addw	r3, r3, #519	; 0x207
   125f0:	0a5b      	lsrs	r3, r3, #9
   125f2:	9300      	str	r3, [sp, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4048
		n_dir = 0;
   125f4:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4042
	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
   125f6:	f04f 0803 	mov.w	r8, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4048
		n_dir = 0;
   125fa:	9303      	str	r3, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4047
		n_rsv = 32;
   125fc:	f04f 0b20 	mov.w	fp, #32
   12600:	e043      	b.n	1268a <f_mkfs+0x4be>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   12602:	f104 0634 	add.w	r6, r4, #52	; 0x34
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   12606:	f44f 7200 	mov.w	r2, #512	; 0x200
   1260a:	2100      	movs	r1, #0
   1260c:	4630      	mov	r0, r6
   1260e:	f7fe f9d6 	bl	109be <mem_set>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   12612:	220b      	movs	r2, #11
   12614:	4925      	ldr	r1, [pc, #148]	; (126ac <f_mkfs+0x4e0>)
   12616:	4630      	mov	r0, r6
   12618:	f7fe f9b5 	bl	10986 <mem_cpy>
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1261c:	f44f 7300 	mov.w	r3, #512	; 0x200
   12620:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   12624:	2301      	movs	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   12626:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   1262a:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   1262e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   12632:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   12636:	e6ea      	b.n	1240e <f_mkfs+0x242>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   12638:	f104 0634 	add.w	r6, r4, #52	; 0x34
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   1263c:	f44f 7200 	mov.w	r2, #512	; 0x200
   12640:	2100      	movs	r1, #0
   12642:	4630      	mov	r0, r6
   12644:	f7fe f9bb 	bl	109be <mem_set>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   12648:	220b      	movs	r2, #11
   1264a:	4918      	ldr	r1, [pc, #96]	; (126ac <f_mkfs+0x4e0>)
   1264c:	4630      	mov	r0, r6
   1264e:	f7fe f99a 	bl	10986 <mem_cpy>
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   12652:	f44f 7300 	mov.w	r3, #512	; 0x200
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   12656:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
ST_WORD():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   1265a:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
f_mkfs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   1265e:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   12662:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   12666:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   1266a:	e6cf      	b.n	1240c <f_mkfs+0x240>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4040
	fmt = FS_FAT12;
   1266c:	f04f 0801 	mov.w	r8, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4050
		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
   12670:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   12674:	3301      	adds	r3, #1
   12676:	085b      	lsrs	r3, r3, #1
   12678:	3303      	adds	r3, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4051 (discriminator 4)
		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
   1267a:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   1267e:	0a5b      	lsrs	r3, r3, #9
   12680:	9300      	str	r3, [sp, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4053 (discriminator 4)
		n_dir = (DWORD)N_ROOTDIR * SZ_DIR / SS(fs);
   12682:	2320      	movs	r3, #32
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4052 (discriminator 4)
		n_rsv = 1;
   12684:	f04f 0b01 	mov.w	fp, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4053 (discriminator 4)
		n_dir = (DWORD)N_ROOTDIR * SZ_DIR / SS(fs);
   12688:	9303      	str	r3, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4055
	b_fat = b_vol + n_rsv;				/* FAT area start sector */
   1268a:	eb0b 030a 	add.w	r3, fp, sl
   1268e:	9301      	str	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4057
	b_data = b_dir + n_dir;				/* Data area start sector */
   12690:	9a03      	ldr	r2, [sp, #12]
   12692:	9b00      	ldr	r3, [sp, #0]
   12694:	eb03 0902 	add.w	r9, r3, r2
   12698:	9b01      	ldr	r3, [sp, #4]
   1269a:	4499      	add	r9, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4058
	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
   1269c:	eba5 030a 	sub.w	r3, r5, sl
   126a0:	444b      	add	r3, r9
   126a2:	4299      	cmp	r1, r3
   126a4:	f4bf adf8 	bcs.w	12298 <f_mkfs+0xcc>
   126a8:	200e      	movs	r0, #14
   126aa:	e5bf      	b.n	1222c <f_mkfs+0x60>
   126ac:	000210da 	.word	0x000210da
   126b0:	000210e6 	.word	0x000210e6
   126b4:	00ffff00 	.word	0x00ffff00
   126b8:	41615252 	.word	0x41615252
   126bc:	000210fa 	.word	0x000210fa

000126c0 <ff_convert>:
ff_convert():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:509
)
{
	WCHAR c;


	if (src < 0x80) {	/* ASCII */
   126c0:	287f      	cmp	r0, #127	; 0x7f
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:505
{
   126c2:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:509
	if (src < 0x80) {	/* ASCII */
   126c4:	d916      	bls.n	126f4 <ff_convert+0x34>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:513
		c = src;

	} else {
		if (dir) {		/* OEMCP to Unicode */
   126c6:	b131      	cbz	r1, 126d6 <ff_convert+0x16>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514
			c = (src >= 0x100) ? 0 : Tbl[src - 0x80];
   126c8:	28ff      	cmp	r0, #255	; 0xff
   126ca:	d812      	bhi.n	126f2 <ff_convert+0x32>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514 (discriminator 1)
   126cc:	4b0a      	ldr	r3, [pc, #40]	; (126f8 <ff_convert+0x38>)
   126ce:	3880      	subs	r0, #128	; 0x80
   126d0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
   126d4:	bd10      	pop	{r4, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:518

		} else {		/* Unicode to OEMCP */
			for (c = 0; c < 0x80; c++) {
				if (src == Tbl[c]) break;
   126d6:	4a08      	ldr	r2, [pc, #32]	; (126f8 <ff_convert+0x38>)
   126d8:	f832 4011 	ldrh.w	r4, [r2, r1, lsl #1]
   126dc:	b28b      	uxth	r3, r1
   126de:	4284      	cmp	r4, r0
   126e0:	d003      	beq.n	126ea <ff_convert+0x2a>
   126e2:	3101      	adds	r1, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:517 (discriminator 2)
			for (c = 0; c < 0x80; c++) {
   126e4:	2980      	cmp	r1, #128	; 0x80
   126e6:	d1f7      	bne.n	126d8 <ff_convert+0x18>
   126e8:	460b      	mov	r3, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:520
			}
			c = (c + 0x80) & 0xFF;
   126ea:	f103 0080 	add.w	r0, r3, #128	; 0x80
   126ee:	b2c0      	uxtb	r0, r0
   126f0:	bd10      	pop	{r4, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514
			c = (src >= 0x100) ? 0 : Tbl[src - 0x80];
   126f2:	2000      	movs	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:525
		}
	}

	return c;
}
   126f4:	bd10      	pop	{r4, pc}
   126f6:	bf00      	nop
   126f8:	00021134 	.word	0x00021134

000126fc <ff_wtoupper>:
ff_wtoupper():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537
	static const WCHAR tbl_lower[] = { 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0xA1, 0x00A2, 0x00A3, 0x00A5, 0x00AC, 0x00AF, 0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x0FF, 0x101, 0x103, 0x105, 0x107, 0x109, 0x10B, 0x10D, 0x10F, 0x111, 0x113, 0x115, 0x117, 0x119, 0x11B, 0x11D, 0x11F, 0x121, 0x123, 0x125, 0x127, 0x129, 0x12B, 0x12D, 0x12F, 0x131, 0x133, 0x135, 0x137, 0x13A, 0x13C, 0x13E, 0x140, 0x142, 0x144, 0x146, 0x148, 0x14B, 0x14D, 0x14F, 0x151, 0x153, 0x155, 0x157, 0x159, 0x15B, 0x15D, 0x15F, 0x161, 0x163, 0x165, 0x167, 0x169, 0x16B, 0x16D, 0x16F, 0x171, 0x173, 0x175, 0x177, 0x17A, 0x17C, 0x17E, 0x192, 0x3B1, 0x3B2, 0x3B3, 0x3B4, 0x3B5, 0x3B6, 0x3B7, 0x3B8, 0x3B9, 0x3BA, 0x3BB, 0x3BC, 0x3BD, 0x3BE, 0x3BF, 0x3C0, 0x3C1, 0x3C3, 0x3C4, 0x3C5, 0x3C6, 0x3C7, 0x3C8, 0x3C9, 0x3CA, 0x430, 0x431, 0x432, 0x433, 0x434, 0x435, 0x436, 0x437, 0x438, 0x439, 0x43A, 0x43B, 0x43C, 0x43D, 0x43E, 0x43F, 0x440, 0x441, 0x442, 0x443, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44A, 0x44B, 0x44C, 0x44D, 0x44E, 0x44F, 0x451, 0x452, 0x453, 0x454, 0x455, 0x456, 0x457, 0x458, 0x459, 0x45A, 0x45B, 0x45C, 0x45E, 0x45F, 0x2170, 0x2171, 0x2172, 0x2173, 0x2174, 0x2175, 0x2176, 0x2177, 0x2178, 0x2179, 0x217A, 0x217B, 0x217C, 0x217D, 0x217E, 0x217F, 0xFF41, 0xFF42, 0xFF43, 0xFF44, 0xFF45, 0xFF46, 0xFF47, 0xFF48, 0xFF49, 0xFF4A, 0xFF4B, 0xFF4C, 0xFF4D, 0xFF4E, 0xFF4F, 0xFF50, 0xFF51, 0xFF52, 0xFF53, 0xFF54, 0xFF55, 0xFF56, 0xFF57, 0xFF58, 0xFF59, 0xFF5A, 0 };
	static const WCHAR tbl_upper[] = { 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x21, 0xFFE0, 0xFFE1, 0xFFE5, 0xFFE2, 0xFFE3, 0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0x178, 0x100, 0x102, 0x104, 0x106, 0x108, 0x10A, 0x10C, 0x10E, 0x110, 0x112, 0x114, 0x116, 0x118, 0x11A, 0x11C, 0x11E, 0x120, 0x122, 0x124, 0x126, 0x128, 0x12A, 0x12C, 0x12E, 0x130, 0x132, 0x134, 0x136, 0x139, 0x13B, 0x13D, 0x13F, 0x141, 0x143, 0x145, 0x147, 0x14A, 0x14C, 0x14E, 0x150, 0x152, 0x154, 0x156, 0x158, 0x15A, 0x15C, 0x15E, 0x160, 0x162, 0x164, 0x166, 0x168, 0x16A, 0x16C, 0x16E, 0x170, 0x172, 0x174, 0x176, 0x179, 0x17B, 0x17D, 0x191, 0x391, 0x392, 0x393, 0x394, 0x395, 0x396, 0x397, 0x398, 0x399, 0x39A, 0x39B, 0x39C, 0x39D, 0x39E, 0x39F, 0x3A0, 0x3A1, 0x3A3, 0x3A4, 0x3A5, 0x3A6, 0x3A7, 0x3A8, 0x3A9, 0x3AA, 0x410, 0x411, 0x412, 0x413, 0x414, 0x415, 0x416, 0x417, 0x418, 0x419, 0x41A, 0x41B, 0x41C, 0x41D, 0x41E, 0x41F, 0x420, 0x421, 0x422, 0x423, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42A, 0x42B, 0x42C, 0x42D, 0x42E, 0x42F, 0x401, 0x402, 0x403, 0x404, 0x405, 0x406, 0x407, 0x408, 0x409, 0x40A, 0x40B, 0x40C, 0x40E, 0x40F, 0x2160, 0x2161, 0x2162, 0x2163, 0x2164, 0x2165, 0x2166, 0x2167, 0x2168, 0x2169, 0x216A, 0x216B, 0x216C, 0x216D, 0x216E, 0x216F, 0xFF21, 0xFF22, 0xFF23, 0xFF24, 0xFF25, 0xFF26, 0xFF27, 0xFF28, 0xFF29, 0xFF2A, 0xFF2B, 0xFF2C, 0xFF2D, 0xFF2E, 0xFF2F, 0xFF30, 0xFF31, 0xFF32, 0xFF33, 0xFF34, 0xFF35, 0xFF36, 0xFF37, 0xFF38, 0xFF39, 0xFF3A, 0 };
	int i;


	for (i = 0; tbl_lower[i] && chr != tbl_lower[i]; i++) ;
   126fc:	2300      	movs	r3, #0
   126fe:	4906      	ldr	r1, [pc, #24]	; (12718 <ff_wtoupper+0x1c>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 1)
   12700:	f831 2013 	ldrh.w	r2, [r1, r3, lsl #1]
   12704:	b122      	cbz	r2, 12710 <ff_wtoupper+0x14>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 3)
   12706:	4282      	cmp	r2, r0
   12708:	d103      	bne.n	12712 <ff_wtoupper+0x16>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:539

	return tbl_lower[i] ? tbl_upper[i] : chr;
   1270a:	4a04      	ldr	r2, [pc, #16]	; (1271c <ff_wtoupper+0x20>)
   1270c:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:540
}
   12710:	4770      	bx	lr
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 4)
	for (i = 0; tbl_lower[i] && chr != tbl_lower[i]; i++) ;
   12712:	3301      	adds	r3, #1
   12714:	e7f4      	b.n	12700 <ff_wtoupper+0x4>
   12716:	bf00      	nop
   12718:	00021234 	.word	0x00021234
   1271c:	00021414 	.word	0x00021414

00012720 <ff_cre_syncobj>:
ff_cre_syncobj():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:31

int ff_cre_syncobj (	/* TRUE:Function succeeded, FALSE:Could not create due to any error */
	BYTE vol,			/* Corresponding logical drive being processed */
	_SYNC_t *sobj		/* Pointer to return the created sync object */
)
{
   12720:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:34
	int ret;

	*sobj = xSemaphoreCreateMutex();			/* FreeRTOS */
   12722:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:31
{
   12724:	460c      	mov	r4, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:34
	*sobj = xSemaphoreCreateMutex();			/* FreeRTOS */
   12726:	f004 f8dd 	bl	168e4 <xQueueCreateMutex>
   1272a:	6020      	str	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:41

	// Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetMutexName(*sobj, "FATFS Mutex");

	return ret;
}
   1272c:	3000      	adds	r0, #0
   1272e:	bf18      	it	ne
   12730:	2001      	movne	r0, #1
   12732:	bd10      	pop	{r4, pc}

00012734 <ff_del_syncobj>:
ff_del_syncobj():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:60
)
{
	int ret;
	ret = __true;					/* FreeRTOS (nothing to do) */
	return ret;
}
   12734:	2001      	movs	r0, #1
   12736:	4770      	bx	lr

00012738 <ff_req_grant>:
ff_req_grant():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:74
*/

int ff_req_grant (	/* TRUE:Got a grant to access the volume, FALSE:Could not get a grant */
	_SYNC_t sobj	/* Sync object to wait */
)
{
   12738:	b510      	push	{r4, lr}
   1273a:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:77
	int ret = __true;

    if(taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   1273c:	f004 fe98 	bl	17470 <xTaskGetSchedulerState>
   12740:	2802      	cmp	r0, #2
   12742:	d10a      	bne.n	1275a <ff_req_grant+0x22>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:79
    {
        ret = (xSemaphoreTake(sobj, _FS_TIMEOUT) == pdTRUE) ? __true : __false;	/* FreeRTOS */
   12744:	2300      	movs	r3, #0
   12746:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1274a:	4619      	mov	r1, r3
   1274c:	4620      	mov	r0, r4
   1274e:	f004 f94f 	bl	169f0 <xQueueGenericReceive>
   12752:	1e43      	subs	r3, r0, #1
   12754:	4258      	negs	r0, r3
   12756:	4158      	adcs	r0, r3
   12758:	bd10      	pop	{r4, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:75
	int ret = __true;
   1275a:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:83
    }

	return ret;
}
   1275c:	bd10      	pop	{r4, pc}

0001275e <ff_rel_grant>:
ff_rel_grant():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:96
*/

void ff_rel_grant (
	_SYNC_t sobj	/* Sync object to be signaled */
)
{
   1275e:	b510      	push	{r4, lr}
   12760:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:97
    if(taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   12762:	f004 fe85 	bl	17470 <xTaskGetSchedulerState>
   12766:	2802      	cmp	r0, #2
   12768:	d107      	bne.n	1277a <ff_rel_grant+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:99
    {
        xSemaphoreGive(sobj);	/* FreeRTOS */
   1276a:	2300      	movs	r3, #0
   1276c:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:101
    }
}
   1276e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:99
        xSemaphoreGive(sobj);	/* FreeRTOS */
   12772:	461a      	mov	r2, r3
   12774:	4619      	mov	r1, r3
   12776:	f004 b833 	b.w	167e0 <xQueueGenericSend>
   1277a:	bd10      	pop	{r4, pc}

0001277c <flash_get_mem_size_bytes()>:
_ZL24flash_get_mem_size_bytesv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:123


/** @{ Private Functions used at this file */
static uint32_t flash_get_mem_size_bytes(void)
{
    switch (g_flash_capacity) {
   1277c:	4b05      	ldr	r3, [pc, #20]	; (12794 <flash_get_mem_size_bytes()+0x18>)
   1277e:	781b      	ldrb	r3, [r3, #0]
   12780:	3b25      	subs	r3, #37	; 0x25
   12782:	b2db      	uxtb	r3, r3
   12784:	2b03      	cmp	r3, #3
   12786:	bf9a      	itte	ls
   12788:	4a03      	ldrls	r2, [pc, #12]	; (12798 <flash_get_mem_size_bytes()+0x1c>)
   1278a:	f852 0023 	ldrls.w	r0, [r2, r3, lsl #2]
   1278e:	2000      	movhi	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:130
        case flash_cap_16mbit : return (16/8 * 1024 * 1024);
        case flash_cap_32mbit : return (32/8 * 1024 * 1024);
        case flash_cap_64mbit : return (64/8 * 1024 * 1024);
        default: return 0;
    }
}
   12790:	4770      	bx	lr
   12792:	bf00      	nop
   12794:	2007c32c 	.word	0x2007c32c
   12798:	000215fc 	.word	0x000215fc

0001279c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>:
_ZL37flash_perform_page_io_of_fatfs_sectorPFvPhmmES_m():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
static void flash_perform_page_io_of_fatfs_sector(flash_io_func_t func, uint8_t* pData, uint32_t addr)
{
    const uint32_t halfsector = FLASH_SECTOR_SIZE / 2;

    /* simplest case when page size matches our sector size */
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   1279c:	4b1b      	ldr	r3, [pc, #108]	; (1280c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x70>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   1279e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   127a2:	881d      	ldrh	r5, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   127a4:	4606      	mov	r6, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   127a6:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   127aa:	460f      	mov	r7, r1
   127ac:	4614      	mov	r4, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   127ae:	d103      	bne.n	127b8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:214
        func(pData, addr, FLASH_SECTOR_SIZE);
   127b0:	462a      	mov	r2, r5
   127b2:	4621      	mov	r1, r4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:226
    /* If pages are 528 bytes, we need to calculate the real address here */
    else if (FLASH_PAGESIZE_528 == g_flash_pagesize) {
        const uint32_t pagenum = (addr / FLASH_SECTOR_SIZE);
        /* 528 byte page requires 10 address bits, then 12 page number bits, and 2 dummy bits */
        addr = (pagenum << (FLASH_PAGENUM_BIT_OFFSET + 1));
        func(pData, addr, FLASH_SECTOR_SIZE);
   127b4:	4638      	mov	r0, r7
   127b6:	e00b      	b.n	127d0 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x34>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:217
    else if (halfsector == g_flash_pagesize) {
   127b8:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
   127bc:	d10c      	bne.n	127d8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x3c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:218
        func(pData, addr, halfsector);
   127be:	462a      	mov	r2, r5
   127c0:	4621      	mov	r1, r4
   127c2:	4638      	mov	r0, r7
   127c4:	47b0      	blx	r6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:219
        func((pData + halfsector), (addr + halfsector), halfsector);
   127c6:	462a      	mov	r2, r5
   127c8:	f504 7180 	add.w	r1, r4, #256	; 0x100
   127cc:	f507 7080 	add.w	r0, r7, #256	; 0x100
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236

        addr = (pagenum + 0) << FLASH_PAGENUM_BIT_OFFSET;
        func(pData, addr, halfsector);

        addr = (pagenum + 1) << FLASH_PAGENUM_BIT_OFFSET;
        func((pData + halfsector), addr, halfsector);
   127d0:	4633      	mov	r3, r6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:238
    }
}
   127d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   127d6:	4718      	bx	r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:222
    else if (FLASH_PAGESIZE_528 == g_flash_pagesize) {
   127d8:	f5b5 7f04 	cmp.w	r5, #528	; 0x210
   127dc:	d104      	bne.n	127e8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:223
        const uint32_t pagenum = (addr / FLASH_SECTOR_SIZE);
   127de:	0a51      	lsrs	r1, r2, #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:226
        func(pData, addr, FLASH_SECTOR_SIZE);
   127e0:	0289      	lsls	r1, r1, #10
   127e2:	f44f 7200 	mov.w	r2, #512	; 0x200
   127e6:	e7e5      	b.n	127b4 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x18>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:229
    else if (FLASH_PAGESIZE_264 == g_flash_pagesize) {
   127e8:	f5b5 7f84 	cmp.w	r5, #264	; 0x108
   127ec:	d10b      	bne.n	12806 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x6a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:230
        const uint32_t pagenum = (addr / halfsector);
   127ee:	0a14      	lsrs	r4, r2, #8
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:233
        func(pData, addr, halfsector);
   127f0:	0261      	lsls	r1, r4, #9
   127f2:	f44f 7280 	mov.w	r2, #256	; 0x100
   127f6:	4638      	mov	r0, r7
   127f8:	47b0      	blx	r6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   127fa:	f44f 7280 	mov.w	r2, #256	; 0x100
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:235
        addr = (pagenum + 1) << FLASH_PAGENUM_BIT_OFFSET;
   127fe:	3401      	adds	r4, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   12800:	0261      	lsls	r1, r4, #9
   12802:	18b8      	adds	r0, r7, r2
   12804:	e7e4      	b.n	127d0 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x34>
   12806:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1280a:	bf00      	nop
   1280c:	2007c32e 	.word	0x2007c32e

00012810 <ssp1_exchange_data>:
ssp1_exchange_data():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:74
/**
 * Writes a byte to the SPI FIFO
 * @warning YOU MUST ENSURE SPI IS NOT BUSY before calling this function
 */
static inline void ssp1_exchange_data(void* data, int len)
{
   12810:	b510      	push	{r4, lr}
   12812:	4b29      	ldr	r3, [pc, #164]	; (128b8 <ssp1_exchange_data+0xa8>)
ssp_exchange_data():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:94
    const int spi_half_fifo_size = spi_fifo_size / 2;

    char *dataOut = (char*)data;
    char *dataIn = (char*)data;

    while (len > 0) {
   12814:	2900      	cmp	r1, #0
   12816:	dd4d      	ble.n	128b4 <ssp1_exchange_data+0xa4>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:95
        if (len >= spi_fifo_size) {
   12818:	2907      	cmp	r1, #7
   1281a:	7802      	ldrb	r2, [r0, #0]
   1281c:	dd29      	ble.n	12872 <ssp1_exchange_data+0x62>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:96
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1281e:	609a      	str	r2, [r3, #8]
   12820:	7842      	ldrb	r2, [r0, #1]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:100
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;

            /* Pick up half the transmitted bytes as soon as RX fifo is half full */
            len -= spi_fifo_size;
   12822:	3908      	subs	r1, #8
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:96
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   12824:	609a      	str	r2, [r3, #8]
   12826:	7882      	ldrb	r2, [r0, #2]
   12828:	609a      	str	r2, [r3, #8]
   1282a:	78c2      	ldrb	r2, [r0, #3]
   1282c:	609a      	str	r2, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:97
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1282e:	7902      	ldrb	r2, [r0, #4]
   12830:	609a      	str	r2, [r3, #8]
   12832:	7942      	ldrb	r2, [r0, #5]
   12834:	609a      	str	r2, [r3, #8]
   12836:	7982      	ldrb	r2, [r0, #6]
   12838:	609a      	str	r2, [r3, #8]
   1283a:	79c4      	ldrb	r4, [r0, #7]
   1283c:	f100 0208 	add.w	r2, r0, #8
   12840:	609c      	str	r4, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:101
            while (!(pSSP->RIS & rx_fifo_half_full_bitmask));
   12842:	699c      	ldr	r4, [r3, #24]
   12844:	0764      	lsls	r4, r4, #29
   12846:	d5fc      	bpl.n	12842 <ssp1_exchange_data+0x32>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:102
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   12848:	689c      	ldr	r4, [r3, #8]
   1284a:	7004      	strb	r4, [r0, #0]
   1284c:	689c      	ldr	r4, [r3, #8]
   1284e:	7044      	strb	r4, [r0, #1]
   12850:	689c      	ldr	r4, [r3, #8]
   12852:	7084      	strb	r4, [r0, #2]
   12854:	689c      	ldr	r4, [r3, #8]
   12856:	70c4      	strb	r4, [r0, #3]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:105

            /* Pick up the rest of the half after SSP is fully done */
            while(pSSP->SR & spi_busy_bitmask);
   12858:	68dc      	ldr	r4, [r3, #12]
   1285a:	06e4      	lsls	r4, r4, #27
   1285c:	d4fc      	bmi.n	12858 <ssp1_exchange_data+0x48>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:106
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   1285e:	689c      	ldr	r4, [r3, #8]
   12860:	7104      	strb	r4, [r0, #4]
   12862:	689c      	ldr	r4, [r3, #8]
   12864:	7144      	strb	r4, [r0, #5]
   12866:	689c      	ldr	r4, [r3, #8]
   12868:	7184      	strb	r4, [r0, #6]
   1286a:	689c      	ldr	r4, [r3, #8]
   1286c:	71c4      	strb	r4, [r0, #7]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:109
        }
        else if (len >= spi_half_fifo_size) {
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1286e:	4610      	mov	r0, r2
   12870:	e7d0      	b.n	12814 <ssp1_exchange_data+0x4>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:108
        else if (len >= spi_half_fifo_size) {
   12872:	2903      	cmp	r1, #3
   12874:	dd14      	ble.n	128a0 <ssp1_exchange_data+0x90>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:109
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   12876:	609a      	str	r2, [r3, #8]
   12878:	7842      	ldrb	r2, [r0, #1]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:110
            len -= spi_half_fifo_size;
   1287a:	3904      	subs	r1, #4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:109
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1287c:	609a      	str	r2, [r3, #8]
   1287e:	7882      	ldrb	r2, [r0, #2]
   12880:	609a      	str	r2, [r3, #8]
   12882:	78c4      	ldrb	r4, [r0, #3]
   12884:	1d02      	adds	r2, r0, #4
   12886:	609c      	str	r4, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            while(pSSP->SR & spi_busy_bitmask);
   12888:	68dc      	ldr	r4, [r3, #12]
   1288a:	06e4      	lsls	r4, r4, #27
   1288c:	d4fc      	bmi.n	12888 <ssp1_exchange_data+0x78>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:112
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   1288e:	689c      	ldr	r4, [r3, #8]
   12890:	7004      	strb	r4, [r0, #0]
   12892:	689c      	ldr	r4, [r3, #8]
   12894:	7044      	strb	r4, [r0, #1]
   12896:	689c      	ldr	r4, [r3, #8]
   12898:	7084      	strb	r4, [r0, #2]
   1289a:	689c      	ldr	r4, [r3, #8]
   1289c:	70c4      	strb	r4, [r0, #3]
   1289e:	e7e6      	b.n	1286e <ssp1_exchange_data+0x5e>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:115
        }
        else {
            pSSP->DR = *dataOut++;
   128a0:	1c44      	adds	r4, r0, #1
   128a2:	609a      	str	r2, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:116
            --len;
   128a4:	3901      	subs	r1, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            while(pSSP->SR & spi_busy_bitmask);
   128a6:	68da      	ldr	r2, [r3, #12]
   128a8:	06d2      	lsls	r2, r2, #27
   128aa:	d4fc      	bmi.n	128a6 <ssp1_exchange_data+0x96>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:118
            *dataIn++ = pSSP->DR;
   128ac:	689a      	ldr	r2, [r3, #8]
   128ae:	7002      	strb	r2, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:115
            pSSP->DR = *dataOut++;
   128b0:	4620      	mov	r0, r4
   128b2:	e7af      	b.n	12814 <ssp1_exchange_data+0x4>
   128b4:	bd10      	pop	{r4, pc}
   128b6:	bf00      	nop
   128b8:	40030000 	.word	0x40030000

000128bc <flash_send_op_addr(flash_opcode_t, unsigned long)>:
_ZL18flash_send_op_addr14flash_opcode_tm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:140
{
   128bc:	b507      	push	{r0, r1, r2, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   128be:	0c0b      	lsrs	r3, r1, #16
   128c0:	f88d 3005 	strb.w	r3, [sp, #5]
   128c4:	f88d 1007 	strb.w	r1, [sp, #7]
   128c8:	0a0b      	lsrs	r3, r1, #8
flash_spi_multi_io():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   128ca:	2104      	movs	r1, #4
_ZL18flash_send_op_addr14flash_opcode_tm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   128cc:	f88d 0004 	strb.w	r0, [sp, #4]
flash_spi_multi_io():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   128d0:	eb0d 0001 	add.w	r0, sp, r1
_ZL18flash_send_op_addr14flash_opcode_tm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   128d4:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   128d8:	f7ff ff9a 	bl	12810 <ssp1_exchange_data>
_ZL18flash_send_op_addr14flash_opcode_tm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:143
}
   128dc:	b003      	add	sp, #12
   128de:	f85d fb04 	ldr.w	pc, [sp], #4
   128e2:	Address 0x00000000000128e2 is out of bounds.


000128e4 <flash_read_page(unsigned char*, unsigned long, unsigned long)>:
_ZL15flash_read_pagePhmm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   128e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   128e6:	2303      	movs	r3, #3
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
/** @} */



/** @{ Functions to chip-select, de-select devices and read pin signals */
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   128e8:	2540      	movs	r5, #64	; 0x40
   128ea:	4c0e      	ldr	r4, [pc, #56]	; (12924 <flash_read_page(unsigned char*, unsigned long, unsigned long)+0x40>)
_ZL15flash_read_pagePhmm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   128ec:	4617      	mov	r7, r2
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   128ee:	61e5      	str	r5, [r4, #28]
_ZL15flash_read_pagePhmm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   128f0:	f88d 3004 	strb.w	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:200
                        (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0),
   128f4:	0c0b      	lsrs	r3, r1, #16
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   128f6:	f88d 3005 	strb.w	r3, [sp, #5]
   128fa:	f88d 1007 	strb.w	r1, [sp, #7]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:200
                        (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0),
   128fe:	0a0b      	lsrs	r3, r1, #8
flash_spi_multi_io():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   12900:	2104      	movs	r1, #4
_ZL15flash_read_pagePhmm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   12902:	4606      	mov	r6, r0
flash_spi_multi_io():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   12904:	eb0d 0001 	add.w	r0, sp, r1
_ZL15flash_read_pagePhmm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   12908:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   1290c:	f7ff ff80 	bl	12810 <ssp1_exchange_data>
_ZL15flash_read_pagePhmm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:204
        ssp1_dma_transfer_block(data, size, 0);
   12910:	2200      	movs	r2, #0
   12912:	4639      	mov	r1, r7
   12914:	4630      	mov	r0, r6
   12916:	f002 fd9d 	bl	15454 <ssp1_dma_transfer_block>
board_io_flash_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   1291a:	61a5      	str	r5, [r4, #24]
   1291c:	61a5      	str	r5, [r4, #24]
   1291e:	61a5      	str	r5, [r4, #24]
_ZL15flash_read_pagePhmm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:206
}
   12920:	b003      	add	sp, #12
   12922:	bdf0      	pop	{r4, r5, r6, r7, pc}
   12924:	2009c000 	.word	0x2009c000

00012928 <flash_wait_for_ready()>:
_ZL20flash_wait_for_readyv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   12928:	2240      	movs	r2, #64	; 0x40
   1292a:	4b0d      	ldr	r3, [pc, #52]	; (12960 <flash_wait_for_ready()+0x38>)
   1292c:	61da      	str	r2, [r3, #28]
ssp_exchange_byte():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:75
    pSSP->DR = out;
   1292e:	22d7      	movs	r2, #215	; 0xd7
   12930:	4b0c      	ldr	r3, [pc, #48]	; (12964 <flash_wait_for_ready()+0x3c>)
   12932:	609a      	str	r2, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:76
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   12934:	68da      	ldr	r2, [r3, #12]
   12936:	06d2      	lsls	r2, r2, #27
   12938:	d4fc      	bmi.n	12934 <flash_wait_for_ready()+0xc>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:75
    pSSP->DR = out;
   1293a:	4a0a      	ldr	r2, [pc, #40]	; (12964 <flash_wait_for_ready()+0x3c>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    return pSSP->DR;
   1293c:	689b      	ldr	r3, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:75
    pSSP->DR = out;
   1293e:	21ff      	movs	r1, #255	; 0xff
   12940:	4613      	mov	r3, r2
   12942:	6091      	str	r1, [r2, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:76
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   12944:	68d8      	ldr	r0, [r3, #12]
   12946:	06c0      	lsls	r0, r0, #27
   12948:	d4fc      	bmi.n	12944 <flash_wait_for_ready()+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    return pSSP->DR;
   1294a:	6898      	ldr	r0, [r3, #8]
_ZL20flash_wait_for_readyv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:155
        } while (! (status & busybit));
   1294c:	f010 0f80 	tst.w	r0, #128	; 0x80
   12950:	d0f7      	beq.n	12942 <flash_wait_for_ready()+0x1a>
board_io_flash_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   12952:	2240      	movs	r2, #64	; 0x40
   12954:	4b02      	ldr	r3, [pc, #8]	; (12960 <flash_wait_for_ready()+0x38>)
_ZL20flash_wait_for_readyv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:159
}
   12956:	b2c0      	uxtb	r0, r0
board_io_flash_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   12958:	619a      	str	r2, [r3, #24]
   1295a:	619a      	str	r2, [r3, #24]
   1295c:	619a      	str	r2, [r3, #24]
_ZL20flash_wait_for_readyv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:159
   1295e:	4770      	bx	lr
   12960:	2009c000 	.word	0x2009c000
   12964:	40030000 	.word	0x40030000

00012968 <flash_initialize>:
flash_initialize():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:244
/** @} */



DSTATUS flash_initialize()
{
   12968:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:247
    uint8_t sig1 = 0;
    uint8_t sig2 = 0;
    const uint8_t status = flash_wait_for_ready();
   1296a:	f7ff ffdd 	bl	12928 <flash_wait_for_ready()>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
    const uint8_t std_page_size_bit = (1 << 0);
    g_flash_pagesize = 0;
   1296e:	2300      	movs	r3, #0
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   12970:	2740      	movs	r7, #64	; 0x40
flash_initialize():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
   12972:	4c1e      	ldr	r4, [pc, #120]	; (129ec <flash_initialize+0x84>)
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   12974:	4e1e      	ldr	r6, [pc, #120]	; (129f0 <flash_initialize+0x88>)
flash_initialize():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
   12976:	8023      	strh	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253

    CHIP_SELECT_OP()
    {
        uint8_t data[] = { opcode_get_sig, 0xFF, 0xFF };
   12978:	4b1e      	ldr	r3, [pc, #120]	; (129f4 <flash_initialize+0x8c>)
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   1297a:	61f7      	str	r7, [r6, #28]
flash_initialize():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253
   1297c:	881a      	ldrh	r2, [r3, #0]
   1297e:	789b      	ldrb	r3, [r3, #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:247
    const uint8_t status = flash_wait_for_ready();
   12980:	4605      	mov	r5, r0
flash_spi_multi_io():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   12982:	2103      	movs	r1, #3
   12984:	a801      	add	r0, sp, #4
flash_initialize():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253
        uint8_t data[] = { opcode_get_sig, 0xFF, 0xFF };
   12986:	f8ad 2004 	strh.w	r2, [sp, #4]
   1298a:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   1298e:	f7ff ff3f 	bl	12810 <ssp1_exchange_data>
flash_initialize():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:255
        flash_spi_multi_io(&data[0], sizeof(data));
        sig1 = data[1];
   12992:	f89d 2005 	ldrb.w	r2, [sp, #5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:256
        sig2 = data[2];
   12996:	f89d 3006 	ldrb.w	r3, [sp, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259
    }

    if (FLASH_MANUFACTURER_ID == sig1 &&
   1299a:	2a1f      	cmp	r2, #31
board_io_flash_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   1299c:	61b7      	str	r7, [r6, #24]
   1299e:	61b7      	str	r7, [r6, #24]
   129a0:	61b7      	str	r7, [r6, #24]
flash_initialize():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259
   129a2:	d115      	bne.n	129d0 <flash_initialize+0x68>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259 (discriminator 1)
   129a4:	f1a3 0225 	sub.w	r2, r3, #37	; 0x25
   129a8:	2a03      	cmp	r2, #3
   129aa:	d811      	bhi.n	129d0 <flash_initialize+0x68>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:263
        (sig2 >= flash_cap_first_valid && sig2 <= flash_cap_last_valid)
        )
    {
        g_flash_capacity = (flash_cap_t) sig2;
   129ac:	4a12      	ldr	r2, [pc, #72]	; (129f8 <flash_initialize+0x90>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:266

        // 8-mbit version has 256/264 byte page size, 16-mbit has 512/528 byte page size
        if (flash_cap_8mbit == g_flash_capacity) {
   129ae:	2b25      	cmp	r3, #37	; 0x25
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:263
        g_flash_capacity = (flash_cap_t) sig2;
   129b0:	7013      	strb	r3, [r2, #0]
   129b2:	f005 0001 	and.w	r0, r5, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:266
        if (flash_cap_8mbit == g_flash_capacity) {
   129b6:	d111      	bne.n	129dc <flash_initialize+0x74>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:267
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_264;
   129b8:	2800      	cmp	r0, #0
   129ba:	bf14      	ite	ne
   129bc:	f44f 7380 	movne.w	r3, #256	; 0x100
   129c0:	f44f 7384 	moveq.w	r3, #264	; 0x108
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:270
        }
        else {
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_512 : FLASH_PAGESIZE_528;
   129c4:	8023      	strh	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:273
        }

        g_sector_count = flash_get_mem_size_bytes() / FLASH_SECTOR_SIZE;
   129c6:	f7ff fed9 	bl	1277c <flash_get_mem_size_bytes()>
   129ca:	4b0c      	ldr	r3, [pc, #48]	; (129fc <flash_initialize+0x94>)
   129cc:	0a40      	lsrs	r0, r0, #9
   129ce:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:276
    }

    return (0 == g_flash_pagesize) ? FR_DISK_ERR : FR_OK;
   129d0:	8820      	ldrh	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:277
}
   129d2:	fab0 f080 	clz	r0, r0
   129d6:	0940      	lsrs	r0, r0, #5
   129d8:	b003      	add	sp, #12
   129da:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:270
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_512 : FLASH_PAGESIZE_528;
   129dc:	2800      	cmp	r0, #0
   129de:	bf14      	ite	ne
   129e0:	f44f 7300 	movne.w	r3, #512	; 0x200
   129e4:	f44f 7304 	moveq.w	r3, #528	; 0x210
   129e8:	e7ec      	b.n	129c4 <flash_initialize+0x5c>
   129ea:	bf00      	nop
   129ec:	2007c32e 	.word	0x2007c32e
   129f0:	2009c000 	.word	0x2009c000
   129f4:	000215f4 	.word	0x000215f4
   129f8:	2007c32c 	.word	0x2007c32c
   129fc:	2007c328 	.word	0x2007c328

00012a00 <flash_read_sectors>:
flash_read_sectors():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280

DRESULT flash_read_sectors(unsigned char *pData, int sectorNum, int sectorCount)
{
   12a00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);

    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   12a04:	188b      	adds	r3, r1, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280
{
   12a06:	4617      	mov	r7, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   12a08:	4a0f      	ldr	r2, [pc, #60]	; (12a48 <flash_read_sectors+0x48>)
   12a0a:	3b01      	subs	r3, #1
   12a0c:	6812      	ldr	r2, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280
{
   12a0e:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   12a10:	4293      	cmp	r3, r2
   12a12:	d812      	bhi.n	12a3a <flash_read_sectors+0x3a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:281
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);
   12a14:	024d      	lsls	r5, r1, #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293
    /* Wait for any pending write operation to finish.  Once flash is ready, then
     * we no longer need to perform this operation to read more sectors
     */
    flash_wait_for_ready();

    for(int i = 0; i < sectorCount; i++)
   12a16:	2600      	movs	r6, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:291
    flash_wait_for_ready();
   12a18:	f7ff ff86 	bl	12928 <flash_wait_for_ready()>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:295
    {
        flash_perform_page_io_of_fatfs_sector(flash_read_page, pData, addr);
   12a1c:	f8df 802c 	ldr.w	r8, [pc, #44]	; 12a4c <flash_read_sectors+0x4c>
   12a20:	1b2d      	subs	r5, r5, r4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293 (discriminator 3)
    for(int i = 0; i < sectorCount; i++)
   12a22:	42be      	cmp	r6, r7
   12a24:	eb04 0205 	add.w	r2, r4, r5
   12a28:	da0a      	bge.n	12a40 <flash_read_sectors+0x40>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:295 (discriminator 2)
        flash_perform_page_io_of_fatfs_sector(flash_read_page, pData, addr);
   12a2a:	4621      	mov	r1, r4
   12a2c:	4640      	mov	r0, r8
   12a2e:	f7ff feb5 	bl	1279c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:297 (discriminator 2)
        addr  += FLASH_SECTOR_SIZE;
        pData += FLASH_SECTOR_SIZE;
   12a32:	f504 7400 	add.w	r4, r4, #512	; 0x200
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293 (discriminator 2)
    for(int i = 0; i < sectorCount; i++)
   12a36:	3601      	adds	r6, #1
   12a38:	e7f3      	b.n	12a22 <flash_read_sectors+0x22>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:285
        return RES_ERROR;
   12a3a:	2001      	movs	r0, #1
   12a3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:300
    }

    return RES_OK;
   12a40:	2000      	movs	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:301
}
   12a42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   12a46:	bf00      	nop
   12a48:	2007c328 	.word	0x2007c328
   12a4c:	000128e5 	.word	0x000128e5

00012a50 <flash_write_sectors>:
flash_write_sectors():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:307

DRESULT flash_write_sectors(unsigned char *pData, int sectorNum, int sectorCount)
{
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);

    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   12a50:	188b      	adds	r3, r1, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:304
{
   12a52:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   12a56:	4617      	mov	r7, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:307
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   12a58:	4a0e      	ldr	r2, [pc, #56]	; (12a94 <flash_write_sectors+0x44>)
   12a5a:	3b01      	subs	r3, #1
   12a5c:	6812      	ldr	r2, [r2, #0]
   12a5e:	4293      	cmp	r3, r2
   12a60:	d811      	bhi.n	12a86 <flash_write_sectors+0x36>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:305
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);
   12a62:	4604      	mov	r4, r0
   12a64:	2600      	movs	r6, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:314
        return RES_ERROR;
    }

    for(int i = 0; i < sectorCount; i++)
    {
        flash_perform_page_io_of_fatfs_sector(flash_write_page, pData, addr);
   12a66:	f8df 8030 	ldr.w	r8, [pc, #48]	; 12a98 <flash_write_sectors+0x48>
   12a6a:	ebc0 2541 	rsb	r5, r0, r1, lsl #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:312 (discriminator 3)
    for(int i = 0; i < sectorCount; i++)
   12a6e:	42be      	cmp	r6, r7
   12a70:	eb04 0205 	add.w	r2, r4, r5
   12a74:	da0a      	bge.n	12a8c <flash_write_sectors+0x3c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:314 (discriminator 2)
        flash_perform_page_io_of_fatfs_sector(flash_write_page, pData, addr);
   12a76:	4621      	mov	r1, r4
   12a78:	4640      	mov	r0, r8
   12a7a:	f7ff fe8f 	bl	1279c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:316 (discriminator 2)
        addr  += FLASH_SECTOR_SIZE;
        pData += FLASH_SECTOR_SIZE;
   12a7e:	f504 7400 	add.w	r4, r4, #512	; 0x200
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:312 (discriminator 2)
    for(int i = 0; i < sectorCount; i++)
   12a82:	3601      	adds	r6, #1
   12a84:	e7f3      	b.n	12a6e <flash_write_sectors+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:309
        return RES_ERROR;
   12a86:	2001      	movs	r0, #1
   12a88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:319
    }

    return RES_OK;
   12a8c:	2000      	movs	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:320
}
   12a8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   12a92:	bf00      	nop
   12a94:	2007c328 	.word	0x2007c328
   12a98:	00012b7d 	.word	0x00012b7d

00012a9c <flash_ioctl>:
flash_ioctl():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:323

DRESULT flash_ioctl(BYTE ctrl,void *buff)
{
   12a9c:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:326
    DRESULT status = RES_PARERR;

    switch(ctrl)
   12a9e:	2807      	cmp	r0, #7
   12aa0:	d805      	bhi.n	12aae <flash_ioctl+0x12>
   12aa2:	e8df f000 	tbb	[pc, r0]
   12aa6:	0a06      	.short	0x0a06
   12aa8:	0808130f 	.word	0x0808130f
   12aac:	0808      	.short	0x0808
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:362
        case CTRL_ERASE_SECTOR:
            status = RES_OK;
            break;

        default:
            status = RES_PARERR;
   12aae:	2004      	movs	r0, #4
   12ab0:	bd08      	pop	{r3, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:336
            flash_wait_for_ready();
   12ab2:	f7ff ff39 	bl	12928 <flash_wait_for_ready()>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:331
            status = RES_OK;
   12ab6:	2000      	movs	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:367
            break;
    }

    return status;
}
   12ab8:	bd08      	pop	{r3, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:342
            *(DWORD*) buff = (DWORD) ((flash_get_mem_size_bytes() / FLASH_SECTOR_SIZE));
   12aba:	f7ff fe5f 	bl	1277c <flash_get_mem_size_bytes()>
   12abe:	0a40      	lsrs	r0, r0, #9
   12ac0:	6008      	str	r0, [r1, #0]
   12ac2:	e7f8      	b.n	12ab6 <flash_ioctl+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:347
            *(WORD*) buff = FLASH_SECTOR_SIZE;
   12ac4:	f44f 7300 	mov.w	r3, #512	; 0x200
   12ac8:	800b      	strh	r3, [r1, #0]
   12aca:	e7f4      	b.n	12ab6 <flash_ioctl+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:353
            *(DWORD*) buff = 1; /* Block size is unknown */
   12acc:	2301      	movs	r3, #1
   12ace:	600b      	str	r3, [r1, #0]
   12ad0:	e7f1      	b.n	12ab6 <flash_ioctl+0x1a>
   12ad2:	Address 0x0000000000012ad2 is out of bounds.


00012ad4 <flash_write_permanent_id>:
flash_write_permanent_id():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:370

void flash_write_permanent_id(char *id_64bytes)
{
   12ad4:	b570      	push	{r4, r5, r6, lr}
   12ad6:	b090      	sub	sp, #64	; 0x40
   12ad8:	4603      	mov	r3, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:372
    char id_bytes[64] = { 0 };
    memcpy(id_bytes, id_64bytes, sizeof(id_bytes));
   12ada:	466a      	mov	r2, sp
   12adc:	466e      	mov	r6, sp
   12ade:	f100 0540 	add.w	r5, r0, #64	; 0x40
   12ae2:	4614      	mov	r4, r2
   12ae4:	6818      	ldr	r0, [r3, #0]
   12ae6:	6859      	ldr	r1, [r3, #4]
   12ae8:	3308      	adds	r3, #8
   12aea:	c403      	stmia	r4!, {r0, r1}
   12aec:	42ab      	cmp	r3, r5
   12aee:	4622      	mov	r2, r4
   12af0:	d1f7      	bne.n	12ae2 <flash_write_permanent_id+0xe>
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   12af2:	2440      	movs	r4, #64	; 0x40
   12af4:	4d07      	ldr	r5, [pc, #28]	; (12b14 <flash_write_permanent_id+0x40>)
flash_write_permanent_id():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:376

    CHIP_SELECT_OP()
    {
        flash_send_op_addr(opcode_write_security_reg, 0);
   12af6:	2100      	movs	r1, #0
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   12af8:	61ec      	str	r4, [r5, #28]
flash_write_permanent_id():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:376
   12afa:	209b      	movs	r0, #155	; 0x9b
   12afc:	f7ff fede 	bl	128bc <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   12b00:	4621      	mov	r1, r4
   12b02:	4630      	mov	r0, r6
   12b04:	f7ff fe84 	bl	12810 <ssp1_exchange_data>
board_io_flash_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   12b08:	61ac      	str	r4, [r5, #24]
   12b0a:	61ac      	str	r4, [r5, #24]
   12b0c:	61ac      	str	r4, [r5, #24]
flash_write_permanent_id():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:379
        flash_spi_multi_io(&id_bytes[0], sizeof(id_bytes));
    }
}
   12b0e:	b010      	add	sp, #64	; 0x40
   12b10:	bd70      	pop	{r4, r5, r6, pc}
   12b12:	bf00      	nop
   12b14:	2009c000 	.word	0x2009c000

00012b18 <flash_read_permanent_id>:
flash_read_permanent_id():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:382

void flash_read_permanent_id(char *id_64bytes)
{
   12b18:	b570      	push	{r4, r5, r6, lr}
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   12b1a:	2440      	movs	r4, #64	; 0x40
flash_read_permanent_id():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:382
   12b1c:	4606      	mov	r6, r0
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   12b1e:	4d07      	ldr	r5, [pc, #28]	; (12b3c <flash_read_permanent_id+0x24>)
flash_read_permanent_id():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:385
    CHIP_SELECT_OP()
    {
        flash_send_op_addr(opcode_read_security_reg, 0);
   12b20:	2100      	movs	r1, #0
   12b22:	2077      	movs	r0, #119	; 0x77
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   12b24:	61ec      	str	r4, [r5, #28]
flash_read_permanent_id():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:385
   12b26:	f7ff fec9 	bl	128bc <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   12b2a:	4621      	mov	r1, r4
   12b2c:	4630      	mov	r0, r6
   12b2e:	f7ff fe6f 	bl	12810 <ssp1_exchange_data>
board_io_flash_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   12b32:	61ac      	str	r4, [r5, #24]
   12b34:	61ac      	str	r4, [r5, #24]
   12b36:	61ac      	str	r4, [r5, #24]
   12b38:	bd70      	pop	{r4, r5, r6, pc}
   12b3a:	bf00      	nop
   12b3c:	2009c000 	.word	0x2009c000

00012b40 <flash_get_page_count>:
flash_get_page_count():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:391
        flash_spi_multi_io(id_64bytes, 64);
    }
}

uint32_t flash_get_page_count(void)
{
   12b40:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:395
    /* We want to divide by 256 or 512 but not 264 or 528 because the size
     * reported by flash_get_mem_size_bytes() assumes 256/512 byte page.
     */
    const uint32_t rounded_page_size = (g_flash_pagesize & ~0x0000001F);
   12b42:	4b06      	ldr	r3, [pc, #24]	; (12b5c <flash_get_page_count+0x1c>)
   12b44:	8819      	ldrh	r1, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396
    return (0 == rounded_page_size) ? 0 : (flash_get_mem_size_bytes() / rounded_page_size);
   12b46:	f031 011f 	bics.w	r1, r1, #31
   12b4a:	d004      	beq.n	12b56 <flash_get_page_count+0x16>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396 (discriminator 1)
   12b4c:	f7ff fe16 	bl	1277c <flash_get_mem_size_bytes()>
   12b50:	fbb0 f0f1 	udiv	r0, r0, r1
   12b54:	bd08      	pop	{r3, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396
   12b56:	4608      	mov	r0, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:397
}
   12b58:	bd08      	pop	{r3, pc}
   12b5a:	bf00      	nop
   12b5c:	2007c32e 	.word	0x2007c32e

00012b60 <flash_get_page_size>:
flash_get_page_size():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:402

uint32_t flash_get_page_size(void)
{
    return g_flash_pagesize;
}
   12b60:	4b01      	ldr	r3, [pc, #4]	; (12b68 <flash_get_page_size+0x8>)
   12b62:	8818      	ldrh	r0, [r3, #0]
   12b64:	4770      	bx	lr
   12b66:	bf00      	nop
   12b68:	2007c32e 	.word	0x2007c32e

00012b6c <flash_supports_metadata>:
flash_supports_metadata():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:406

bool flash_supports_metadata(void)
{
    return (0 != (g_flash_pagesize % FLASH_PAGESIZE_256));
   12b6c:	4b02      	ldr	r3, [pc, #8]	; (12b78 <flash_supports_metadata+0xc>)
   12b6e:	7818      	ldrb	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:407
}
   12b70:	3000      	adds	r0, #0
   12b72:	bf18      	it	ne
   12b74:	2001      	movne	r0, #1
   12b76:	4770      	bx	lr
   12b78:	2007c32e 	.word	0x2007c32e

00012b7c <flash_write_page(unsigned char*, unsigned long, unsigned long)>:
_ZL16flash_write_pagePhmm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:163
    uint32_t writeCounter = 0xFFFFFFFF;
   12b7c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:162
{
   12b80:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12b84:	460f      	mov	r7, r1
   12b86:	4691      	mov	r9, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:163
    uint32_t writeCounter = 0xFFFFFFFF;
   12b88:	9301      	str	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:162
{
   12b8a:	4680      	mov	r8, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:166
    flash_wait_for_ready();
   12b8c:	f7ff fecc 	bl	12928 <flash_wait_for_ready()>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:173
    const bool meta_data_exists = flash_supports_metadata();
   12b90:	f7ff ffec 	bl	12b6c <flash_supports_metadata>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:174
    if (meta_data_exists)
   12b94:	4606      	mov	r6, r0
   12b96:	b1b8      	cbz	r0, 12bc8 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x4c>
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   12b98:	2540      	movs	r5, #64	; 0x40
   12b9a:	4c19      	ldr	r4, [pc, #100]	; (12c00 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
flash_get_metadata_addr_from_pageaddr():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   12b9c:	4b19      	ldr	r3, [pc, #100]	; (12c04 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x88>)
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   12b9e:	61e5      	str	r5, [r4, #28]
flash_get_metadata_addr_from_pageaddr():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
   12ba0:	881b      	ldrh	r3, [r3, #0]
_ZL16flash_write_pagePhmm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:178
            flash_send_op_addr(opcode_read_cont_lowfreq, flash_get_metadata_addr_from_pageaddr(addr));
   12ba2:	2003      	movs	r0, #3
flash_get_metadata_addr_from_pageaddr():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   12ba4:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   12ba8:	bf0c      	ite	eq
   12baa:	f44f 7180 	moveq.w	r1, #256	; 0x100
   12bae:	f44f 7100 	movne.w	r1, #512	; 0x200
_ZL16flash_write_pagePhmm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:178
            flash_send_op_addr(opcode_read_cont_lowfreq, flash_get_metadata_addr_from_pageaddr(addr));
   12bb2:	4339      	orrs	r1, r7
   12bb4:	f7ff fe82 	bl	128bc <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   12bb8:	2104      	movs	r1, #4
   12bba:	eb0d 0001 	add.w	r0, sp, r1
   12bbe:	f7ff fe27 	bl	12810 <ssp1_exchange_data>
board_io_flash_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   12bc2:	61a5      	str	r5, [r4, #24]
   12bc4:	61a5      	str	r5, [r4, #24]
   12bc6:	61a5      	str	r5, [r4, #24]
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   12bc8:	2340      	movs	r3, #64	; 0x40
   12bca:	4c0d      	ldr	r4, [pc, #52]	; (12c00 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
_ZL16flash_write_pagePhmm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:185
        flash_send_op_addr(opcode_prog_thru_buffer1, addr);
   12bcc:	4639      	mov	r1, r7
   12bce:	2082      	movs	r0, #130	; 0x82
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   12bd0:	61e3      	str	r3, [r4, #28]
_ZL16flash_write_pagePhmm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:185
   12bd2:	f7ff fe73 	bl	128bc <flash_send_op_addr(flash_opcode_t, unsigned long)>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:186
        ssp1_dma_transfer_block(data, size, 1);
   12bd6:	2201      	movs	r2, #1
   12bd8:	4649      	mov	r1, r9
   12bda:	4640      	mov	r0, r8
   12bdc:	f002 fc3a 	bl	15454 <ssp1_dma_transfer_block>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:188
        if (meta_data_exists) {
   12be0:	b13e      	cbz	r6, 12bf2 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x76>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:189
            ++writeCounter;
   12be2:	9b01      	ldr	r3, [sp, #4]
   12be4:	a802      	add	r0, sp, #8
   12be6:	3301      	adds	r3, #1
   12be8:	f840 3d04 	str.w	r3, [r0, #-4]!
flash_spi_multi_io():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   12bec:	2104      	movs	r1, #4
   12bee:	f7ff fe0f 	bl	12810 <ssp1_exchange_data>
board_io_flash_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   12bf2:	2340      	movs	r3, #64	; 0x40
   12bf4:	61a3      	str	r3, [r4, #24]
   12bf6:	61a3      	str	r3, [r4, #24]
   12bf8:	61a3      	str	r3, [r4, #24]
_ZL16flash_write_pagePhmm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:193
}
   12bfa:	b003      	add	sp, #12
   12bfc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   12c00:	2009c000 	.word	0x2009c000
   12c04:	2007c32e 	.word	0x2007c32e

00012c08 <flash_chip_erase>:
flash_chip_erase():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:429

    return (UINT32_MAX == write_counter) ? 0 : write_counter;
}

void flash_chip_erase(void)
{
   12c08:	b537      	push	{r0, r1, r2, r4, r5, lr}
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   12c0a:	2540      	movs	r5, #64	; 0x40
flash_spi_multi_io():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   12c0c:	2104      	movs	r1, #4
flash_chip_erase():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:430
    unsigned char chip_erase[] = { 0xC7, 0x94, 0x80, 0x9A };
   12c0e:	4b07      	ldr	r3, [pc, #28]	; (12c2c <flash_chip_erase+0x24>)
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   12c10:	4c07      	ldr	r4, [pc, #28]	; (12c30 <flash_chip_erase+0x28>)
flash_chip_erase():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:430
   12c12:	6818      	ldr	r0, [r3, #0]
   12c14:	9001      	str	r0, [sp, #4]
board_io_flash_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   12c16:	61e5      	str	r5, [r4, #28]
flash_spi_multi_io():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   12c18:	eb0d 0001 	add.w	r0, sp, r1
   12c1c:	f7ff fdf8 	bl	12810 <ssp1_exchange_data>
board_io_flash_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   12c20:	61a5      	str	r5, [r4, #24]
   12c22:	61a5      	str	r5, [r4, #24]
   12c24:	61a5      	str	r5, [r4, #24]
flash_chip_erase():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:436

    CHIP_SELECT_OP()
    {
        flash_spi_multi_io(&chip_erase, sizeof(chip_erase));
    }
}
   12c26:	b003      	add	sp, #12
   12c28:	bd30      	pop	{r4, r5, pc}
   12c2a:	bf00      	nop
   12c2c:	000215f7 	.word	0x000215f7
   12c30:	2009c000 	.word	0x2009c000

00012c34 <sys_get_uptime_ms>:
sys_get_uptime_ms():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
static inline uint64_t sys_get_uptime_ms(void) { return sys_get_uptime_us() / 1000; }
   12c34:	b508      	push	{r3, lr}
   12c36:	f7fd fb5f 	bl	102f8 <sys_get_uptime_us>
   12c3a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   12c3e:	2300      	movs	r3, #0
   12c40:	f007 fb16 	bl	1a270 <__aeabi_uldivmod>
   12c44:	bd08      	pop	{r3, pc}
   12c46:	Address 0x0000000000012c46 is out of bounds.


00012c48 <ssp1_set_max_clock>:
ssp1_set_max_clock():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:55
{
   12c48:	b510      	push	{r4, lr}
   12c4a:	4604      	mov	r4, r0
ssp_set_max_clock():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:40
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   12c4c:	f7fd fcd8 	bl	10600 <sys_get_cpu_clock>
   12c50:	4b07      	ldr	r3, [pc, #28]	; (12c70 <ssp1_set_max_clock+0x28>)
   12c52:	fbb0 f0f3 	udiv	r0, r0, r3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:39
    unsigned int divider = 2;
   12c56:	2302      	movs	r3, #2
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:47
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   12c58:	fbb0 f2f3 	udiv	r2, r0, r3
   12c5c:	4294      	cmp	r4, r2
   12c5e:	d302      	bcc.n	12c66 <ssp1_set_max_clock+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:52
    pSSP->CPSR = divider;
   12c60:	4a04      	ldr	r2, [pc, #16]	; (12c74 <ssp1_set_max_clock+0x2c>)
   12c62:	6113      	str	r3, [r2, #16]
ssp1_set_max_clock():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:57
}
   12c64:	bd10      	pop	{r4, pc}
ssp_set_max_clock():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:47
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   12c66:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   12c6a:	d0f9      	beq.n	12c60 <ssp1_set_max_clock+0x18>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
        divider += 2;
   12c6c:	3302      	adds	r3, #2
   12c6e:	e7f3      	b.n	12c58 <ssp1_set_max_clock+0x10>
   12c70:	000f4240 	.word	0x000f4240
   12c74:	40030000 	.word	0x40030000

00012c78 <ssp1_exchange_byte>:
ssp_exchange_byte():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:75
    pSSP->DR = out;
   12c78:	4b03      	ldr	r3, [pc, #12]	; (12c88 <ssp1_exchange_byte+0x10>)
   12c7a:	6098      	str	r0, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:76
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   12c7c:	68da      	ldr	r2, [r3, #12]
   12c7e:	06d2      	lsls	r2, r2, #27
   12c80:	d4fc      	bmi.n	12c7c <ssp1_exchange_byte+0x4>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    return pSSP->DR;
   12c82:	6898      	ldr	r0, [r3, #8]
ssp1_exchange_byte():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:67
}
   12c84:	b2c0      	uxtb	r0, r0
   12c86:	4770      	bx	lr
   12c88:	40030000 	.word	0x40030000

00012c8c <wait_ready>:
wait_ready():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:59
{
    return SD_DESELECT();
}

BYTE wait_ready(void)
{
   12c8c:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:63
    BYTE res;

    /* Wait for ready in timeout of 500ms */
    UINT timeout = sys_get_uptime_ms() + 500;
   12c8e:	f7ff ffd1 	bl	12c34 <sys_get_uptime_ms>
   12c92:	f500 74fa 	add.w	r4, r0, #500	; 0x1f4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:64
    rcvr_spi();
   12c96:	20ff      	movs	r0, #255	; 0xff
   12c98:	f7ff ffee 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69

    do
    {
        res = rcvr_spi();
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   12c9c:	2500      	movs	r5, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:68 (discriminator 2)
        res = rcvr_spi();
   12c9e:	20ff      	movs	r0, #255	; 0xff
   12ca0:	f7ff ffea 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 2)
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   12ca4:	28ff      	cmp	r0, #255	; 0xff
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:68 (discriminator 2)
        res = rcvr_spi();
   12ca6:	4606      	mov	r6, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 2)
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   12ca8:	d005      	beq.n	12cb6 <wait_ready+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 1)
   12caa:	f7ff ffc3 	bl	12c34 <sys_get_uptime_ms>
   12cae:	42a9      	cmp	r1, r5
   12cb0:	bf08      	it	eq
   12cb2:	42a0      	cmpeq	r0, r4
   12cb4:	d3f3      	bcc.n	12c9e <wait_ready+0x12>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:72

    return res;
}
   12cb6:	4630      	mov	r0, r6
   12cb8:	bd70      	pop	{r4, r5, r6, pc}
   12cba:	Address 0x0000000000012cba is out of bounds.


00012cbc <power_off>:
power_off():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:80
{
    // Power on the SD-Card Socket if hardware allows
}

void power_off(void)
{
   12cbc:	b538      	push	{r3, r4, r5, lr}
board_io_sd_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   12cbe:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
   12cc2:	4c05      	ldr	r4, [pc, #20]	; (12cd8 <power_off+0x1c>)
   12cc4:	61e5      	str	r5, [r4, #28]
power_off():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:84
    if (!get_spi())
        return;

    wait_ready();
   12cc6:	f7ff ffe1 	bl	12c8c <wait_ready>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:88
    release_spi();

    // Power off the SD-Card Socket if hardware allows
    g_disk_status |= STA_NOINIT; // Set STA_NOINIT
   12cca:	4a04      	ldr	r2, [pc, #16]	; (12cdc <power_off+0x20>)
board_io_sd_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   12ccc:	61a5      	str	r5, [r4, #24]
power_off():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:88
   12cce:	7813      	ldrb	r3, [r2, #0]
   12cd0:	f043 0301 	orr.w	r3, r3, #1
   12cd4:	7013      	strb	r3, [r2, #0]
   12cd6:	bd38      	pop	{r3, r4, r5, pc}
   12cd8:	2009c020 	.word	0x2009c020
   12cdc:	2007c08c 	.word	0x2007c08c

00012ce0 <rcvr_datablock>:
rcvr_datablock():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:94
}

int rcvr_datablock(BYTE *buff, /* Data buffer to store received data */
UINT btr /* Byte count (must be multiple of 4) */
)
{
   12ce0:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   12ce4:	4606      	mov	r6, r0
   12ce6:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:96
    BYTE token;
    UINT timeout = sys_get_uptime_ms() + 100;
   12ce8:	f7ff ffa4 	bl	12c34 <sys_get_uptime_ms>
   12cec:	3064      	adds	r0, #100	; 0x64
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100
    do
    { /* Wait for data packet in timeout of 100ms */
        token = rcvr_spi();
    } while ((token == 0xFF) && sys_get_uptime_ms() < timeout);
   12cee:	4680      	mov	r8, r0
   12cf0:	f04f 0900 	mov.w	r9, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:99 (discriminator 2)
        token = rcvr_spi();
   12cf4:	20ff      	movs	r0, #255	; 0xff
   12cf6:	f7ff ffbf 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100 (discriminator 2)
    } while ((token == 0xFF) && sys_get_uptime_ms() < timeout);
   12cfa:	28ff      	cmp	r0, #255	; 0xff
   12cfc:	d108      	bne.n	12d10 <rcvr_datablock+0x30>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100 (discriminator 1)
   12cfe:	f7ff ff99 	bl	12c34 <sys_get_uptime_ms>
   12d02:	4549      	cmp	r1, r9
   12d04:	bf08      	it	eq
   12d06:	4540      	cmpeq	r0, r8
   12d08:	d3f4      	bcc.n	12cf4 <rcvr_datablock+0x14>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:103

    if (token != 0xFE)
        return 0; /* If not valid data token, return with error */
   12d0a:	2000      	movs	r0, #0
   12d0c:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:102
    if (token != 0xFE)
   12d10:	28fe      	cmp	r0, #254	; 0xfe
   12d12:	d1fa      	bne.n	12d0a <rcvr_datablock+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:108

    /**
     * If it's worth doing DMA, then do it:
     */
    if (OPTIMIZE_SSP_SPI_READ && btr > 16)
   12d14:	2d10      	cmp	r5, #16
   12d16:	d90e      	bls.n	12d36 <rcvr_datablock+0x56>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:110
    {
        ssp1_dma_transfer_block(buff, 512, 0);
   12d18:	2200      	movs	r2, #0
   12d1a:	f44f 7100 	mov.w	r1, #512	; 0x200
   12d1e:	4630      	mov	r0, r6
   12d20:	f002 fb98 	bl	15454 <ssp1_dma_transfer_block>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:124
            *buff++ = rcvr_spi();
            *buff++ = rcvr_spi();
        } while (btr -= 4);
    }

    rcvr_spi(); /* Discard CRC */
   12d24:	20ff      	movs	r0, #255	; 0xff
   12d26:	f7ff ffa7 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:125
    rcvr_spi();
   12d2a:	20ff      	movs	r0, #255	; 0xff
   12d2c:	f7ff ffa4 	bl	12c78 <ssp1_exchange_byte>
   12d30:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:128

    return 1; /* Return with success */
}
   12d32:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   12d36:	1d34      	adds	r4, r6, #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:121
        } while (btr -= 4);
   12d38:	3504      	adds	r5, #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:117
            *buff++ = rcvr_spi();
   12d3a:	20ff      	movs	r0, #255	; 0xff
   12d3c:	f7ff ff9c 	bl	12c78 <ssp1_exchange_byte>
   12d40:	f804 0c04 	strb.w	r0, [r4, #-4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:118
            *buff++ = rcvr_spi();
   12d44:	20ff      	movs	r0, #255	; 0xff
   12d46:	f7ff ff97 	bl	12c78 <ssp1_exchange_byte>
   12d4a:	f804 0c03 	strb.w	r0, [r4, #-3]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:119
            *buff++ = rcvr_spi();
   12d4e:	20ff      	movs	r0, #255	; 0xff
   12d50:	f7ff ff92 	bl	12c78 <ssp1_exchange_byte>
   12d54:	f804 0c02 	strb.w	r0, [r4, #-2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:120
            *buff++ = rcvr_spi();
   12d58:	20ff      	movs	r0, #255	; 0xff
   12d5a:	f7ff ff8d 	bl	12c78 <ssp1_exchange_byte>
   12d5e:	3404      	adds	r4, #4
   12d60:	f804 0c05 	strb.w	r0, [r4, #-5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:121
        } while (btr -= 4);
   12d64:	1b2b      	subs	r3, r5, r4
   12d66:	42de      	cmn	r6, r3
   12d68:	d1e7      	bne.n	12d3a <rcvr_datablock+0x5a>
   12d6a:	e7db      	b.n	12d24 <rcvr_datablock+0x44>

00012d6c <xmit_datablock>:
xmit_datablock():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:134

#if _READONLY == 0
int xmit_datablock(const BYTE *buff, /* 512 byte data block to be transmitted */
BYTE token /* Data/Stop token */
)
{
   12d6c:	b570      	push	{r4, r5, r6, lr}
   12d6e:	4606      	mov	r6, r0
   12d70:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:137
    BYTE resp;

    if (wait_ready() != 0xFF)
   12d72:	f7ff ff8b 	bl	12c8c <wait_ready>
   12d76:	28ff      	cmp	r0, #255	; 0xff
   12d78:	4604      	mov	r4, r0
   12d7a:	d119      	bne.n	12db0 <xmit_datablock+0x44>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:140
        return 0;

    xmit_spi(token);
   12d7c:	4628      	mov	r0, r5
   12d7e:	f7ff ff7b 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:142
    /* Xmit data token */
    if (token != 0xFD)
   12d82:	2dfd      	cmp	r5, #253	; 0xfd
   12d84:	d016      	beq.n	12db4 <xmit_datablock+0x48>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:145
    { /* Is data token */
#if OPTIMIZE_SSP_SPI_WRITE
        ssp1_dma_transfer_block((unsigned char*) buff, 512, 0xff);
   12d86:	4622      	mov	r2, r4
   12d88:	f44f 7100 	mov.w	r1, #512	; 0x200
   12d8c:	4630      	mov	r0, r6
   12d8e:	f002 fb61 	bl	15454 <ssp1_dma_transfer_block>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:154
        { /* Xmit the 512 byte data block to MMC */
            xmit_spi(*buff++);
            xmit_spi(*buff++);
        }while (--wc);
#endif
        xmit_spi(0xFF);
   12d92:	4620      	mov	r0, r4
   12d94:	f7ff ff70 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:156
        /* CRC (Dummy) */
        xmit_spi(0xFF);
   12d98:	4620      	mov	r0, r4
   12d9a:	f7ff ff6d 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:157
        resp = rcvr_spi(); /* Reveive data response */
   12d9e:	4620      	mov	r0, r4
   12da0:	f7ff ff6a 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:158
        if ((resp & 0x1F) != 0x05) /* If not accepted, return with error */
   12da4:	f000 001f 	and.w	r0, r0, #31
   12da8:	1f43      	subs	r3, r0, #5
   12daa:	4258      	negs	r0, r3
   12dac:	4158      	adcs	r0, r3
   12dae:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:138
        return 0;
   12db0:	2000      	movs	r0, #0
   12db2:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:162
            return 0;
    }

    return 1;
   12db4:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:163
}
   12db6:	bd70      	pop	{r4, r5, r6, pc}

00012db8 <send_cmd>:
send_cmd():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:172
DWORD arg /* Argument */
)
{
    BYTE n, res;

    if (cmd & 0x80)
   12db8:	0602      	lsls	r2, r0, #24
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:169
{
   12dba:	b538      	push	{r3, r4, r5, lr}
   12dbc:	4604      	mov	r4, r0
   12dbe:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:172
    if (cmd & 0x80)
   12dc0:	d507      	bpl.n	12dd2 <send_cmd+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:175
    { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
        cmd &= 0x7F;
        res = send_cmd(CMD55, 0);
   12dc2:	2100      	movs	r1, #0
   12dc4:	2077      	movs	r0, #119	; 0x77
   12dc6:	f7ff fff7 	bl	12db8 <send_cmd>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:176
        if (res > 1)
   12dca:	2801      	cmp	r0, #1
   12dcc:	d836      	bhi.n	12e3c <send_cmd+0x84>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:174
        cmd &= 0x7F;
   12dce:	f004 047f 	and.w	r4, r4, #127	; 0x7f
board_io_sd_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   12dd2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   12dd6:	4b1a      	ldr	r3, [pc, #104]	; (12e40 <send_cmd+0x88>)
   12dd8:	619a      	str	r2, [r3, #24]
board_io_sd_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   12dda:	61da      	str	r2, [r3, #28]
send_cmd():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:184

    /* Select the card and wait for ready */
    SD_DESELECT();
    SD_SELECT(); // Wait for card ready

    if (wait_ready() != 0xFF)
   12ddc:	f7ff ff56 	bl	12c8c <wait_ready>
   12de0:	28ff      	cmp	r0, #255	; 0xff
   12de2:	d12a      	bne.n	12e3a <send_cmd+0x82>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:192
        rprintf("send_cmd: Error, wait_ready() did not return 0xFF\n");
#endif
        return 0xFF;
    }

    /* Send command packet */xmit_spi(cmd);
   12de4:	4620      	mov	r0, r4
   12de6:	f7ff ff47 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:194
    /* Start + Command index */
    xmit_spi((BYTE)(arg >> 24));
   12dea:	0e28      	lsrs	r0, r5, #24
   12dec:	f7ff ff44 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:196
    /* Argument[31..24] */
    xmit_spi((BYTE)(arg >> 16));
   12df0:	f3c5 4007 	ubfx	r0, r5, #16, #8
   12df4:	f7ff ff40 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:198
    /* Argument[23..16] */
    xmit_spi((BYTE)(arg >> 8));
   12df8:	f3c5 2007 	ubfx	r0, r5, #8, #8
   12dfc:	f7ff ff3c 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:200
    /* Argument[15..8] */
    xmit_spi((BYTE)arg);
   12e00:	b2e8      	uxtb	r0, r5
   12e02:	f7ff ff39 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:203
    /* Argument[7..0] */
    n = 0x01; /* Dummy CRC + Stop */
    if (cmd == CMD0)
   12e06:	2c40      	cmp	r4, #64	; 0x40
   12e08:	d015      	beq.n	12e36 <send_cmd+0x7e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:206
        n = 0x95; /* Valid CRC for CMD0(0) */
    if (cmd == CMD8)
        n = 0x87; /* Valid CRC for CMD8(0x1AA) */
   12e0a:	2c48      	cmp	r4, #72	; 0x48
   12e0c:	bf14      	ite	ne
   12e0e:	2001      	movne	r0, #1
   12e10:	2087      	moveq	r0, #135	; 0x87
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:207
    xmit_spi(n);
   12e12:	f7ff ff31 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:210

    /* Receive command response */
    if (cmd == CMD12)
   12e16:	2c4c      	cmp	r4, #76	; 0x4c
   12e18:	d102      	bne.n	12e20 <send_cmd+0x68>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:211
        rcvr_spi(); /* Skip a stuff byte when stop reading */
   12e1a:	20ff      	movs	r0, #255	; 0xff
   12e1c:	f7ff ff2c 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:202 (discriminator 2)
    n = 0x01; /* Dummy CRC + Stop */
   12e20:	210a      	movs	r1, #10
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:216 (discriminator 2)
    n = 10; /* Wait for a valid response in timeout of 10 attempts */

    do
    {
        res = rcvr_spi();
   12e22:	20ff      	movs	r0, #255	; 0xff
   12e24:	f7ff ff28 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:217 (discriminator 2)
    } while ((res & 0x80) && --n);
   12e28:	0603      	lsls	r3, r0, #24
   12e2a:	d507      	bpl.n	12e3c <send_cmd+0x84>
   12e2c:	3901      	subs	r1, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:217 (discriminator 1)
   12e2e:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
   12e32:	d1f6      	bne.n	12e22 <send_cmd+0x6a>
   12e34:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:204
        n = 0x95; /* Valid CRC for CMD0(0) */
   12e36:	2095      	movs	r0, #149	; 0x95
   12e38:	e7eb      	b.n	12e12 <send_cmd+0x5a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:189
        return 0xFF;
   12e3a:	20ff      	movs	r0, #255	; 0xff
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:224
#if(DEBUG_SD_CARD)
    if (n == 0) rprintf("send_cmd: Timeout during card read\n");
#endif

    return res; /* Return with the response value */
}
   12e3c:	bd38      	pop	{r3, r4, r5, pc}
   12e3e:	bf00      	nop
   12e40:	2009c020 	.word	0x2009c020

00012e44 <sd_update_card_status>:
sd_update_card_status():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
}
#endif /* _USE_IOCTL != 0 */

void sd_update_card_status(void)
{
    BYTE s = g_disk_status;
   12e44:	4a06      	ldr	r2, [pc, #24]	; (12e60 <sd_update_card_status+0x1c>)
board_io_sd_card_cd_sig():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:60

static inline char board_io_nordic_cs(void)      { LPC_GPIO0->FIOCLR = (1 << BIO_NORDIC_CS_P0PIN); return 1; }
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
static inline char board_io_nordic_irq_sig(void) { return !!(LPC_GPIO0->FIOPIN & (1 << BIO_NORDIC_IRQ_P0PIN)); }
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
   12e46:	4907      	ldr	r1, [pc, #28]	; (12e64 <sd_update_card_status+0x20>)
sd_update_card_status():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
   12e48:	7813      	ldrb	r3, [r2, #0]
board_io_sd_card_cd_sig():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
   12e4a:	6949      	ldr	r1, [r1, #20]
sd_update_card_status():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
   12e4c:	b2db      	uxtb	r3, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:589

    if (SD_PRESENT()) {
   12e4e:	0149      	lsls	r1, r1, #5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:590
        s &= ~STA_NODISK;
   12e50:	bf54      	ite	pl
   12e52:	f003 03fd 	andpl.w	r3, r3, #253	; 0xfd
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:593
    }
    else {
        s |= (STA_NODISK | STA_NOINIT);
   12e56:	f043 0303 	orrmi.w	r3, r3, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:596
    }

    g_disk_status = s;
   12e5a:	7013      	strb	r3, [r2, #0]
   12e5c:	4770      	bx	lr
   12e5e:	bf00      	nop
   12e60:	2007c08c 	.word	0x2007c08c
   12e64:	2009c020 	.word	0x2009c020

00012e68 <sd_initialize>:
sd_initialize():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:227
{
   12e68:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:230
    sd_update_card_status();
   12e6c:	f7ff ffea 	bl	12e44 <sd_update_card_status>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:232
    if (g_disk_status & STA_NODISK)
   12e70:	4b55      	ldr	r3, [pc, #340]	; (12fc8 <sd_initialize+0x160>)
   12e72:	781a      	ldrb	r2, [r3, #0]
   12e74:	461e      	mov	r6, r3
   12e76:	f012 0f02 	tst.w	r2, #2
   12e7a:	d004      	beq.n	12e86 <sd_initialize+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:234
        return g_disk_status; /* No card in the socket */
   12e7c:	7818      	ldrb	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:327
    return g_disk_status;
   12e7e:	b2c0      	uxtb	r0, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:328
}
   12e80:	b003      	add	sp, #12
   12e82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:238
    FCLK_SLOW();
   12e86:	2001      	movs	r0, #1
   12e88:	f7ff fede 	bl	12c48 <ssp1_set_max_clock>
   12e8c:	240a      	movs	r4, #10
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:240 (discriminator 3)
        rcvr_spi(); /* 80 dummy clocks */
   12e8e:	20ff      	movs	r0, #255	; 0xff
   12e90:	3c01      	subs	r4, #1
   12e92:	f7ff fef1 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:239 (discriminator 3)
    for (n = 10; n; n--)
   12e96:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   12e9a:	d1f8      	bne.n	12e8e <sd_initialize+0x26>
board_io_sd_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   12e9c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   12ea0:	4f4a      	ldr	r7, [pc, #296]	; (12fcc <sd_initialize+0x164>)
sd_initialize():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:245
    if (send_cmd(CMD0, 0) == 1)
   12ea2:	4621      	mov	r1, r4
board_io_sd_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
   12ea4:	61fb      	str	r3, [r7, #28]
sd_initialize():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:245
   12ea6:	2040      	movs	r0, #64	; 0x40
   12ea8:	f7ff ff86 	bl	12db8 <send_cmd>
   12eac:	2801      	cmp	r0, #1
   12eae:	4680      	mov	r8, r0
   12eb0:	d013      	beq.n	12eda <sd_initialize+0x72>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:244
    ty = 0;
   12eb2:	f04f 0800 	mov.w	r8, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:314
    g_card_type = ty;
   12eb6:	4b46      	ldr	r3, [pc, #280]	; (12fd0 <sd_initialize+0x168>)
   12eb8:	f883 8000 	strb.w	r8, [r3]
board_io_sd_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   12ebc:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   12ec0:	61bb      	str	r3, [r7, #24]
sd_initialize():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:317
    if (ty)
   12ec2:	f1b8 0f00 	cmp.w	r8, #0
   12ec6:	d07b      	beq.n	12fc0 <sd_initialize+0x158>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:319
        g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
   12ec8:	7833      	ldrb	r3, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:320
        FCLK_FAST();
   12eca:	2018      	movs	r0, #24
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:319
        g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
   12ecc:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
   12ed0:	7033      	strb	r3, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:320
        FCLK_FAST();
   12ed2:	f7ff feb9 	bl	12c48 <ssp1_set_max_clock>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:327
    return g_disk_status;
   12ed6:	7830      	ldrb	r0, [r6, #0]
   12ed8:	e7d1      	b.n	12e7e <sd_initialize+0x16>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:248
        UINT timeout = sys_get_uptime_ms() + 1000;
   12eda:	f7ff feab 	bl	12c34 <sys_get_uptime_ms>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:249
        if (send_cmd(CMD8, 0x1AA) == 1)
   12ede:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:248
        UINT timeout = sys_get_uptime_ms() + 1000;
   12ee2:	f500 757a 	add.w	r5, r0, #1000	; 0x3e8
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:249
        if (send_cmd(CMD8, 0x1AA) == 1)
   12ee6:	2048      	movs	r0, #72	; 0x48
   12ee8:	f7ff ff66 	bl	12db8 <send_cmd>
   12eec:	2801      	cmp	r0, #1
   12eee:	d140      	bne.n	12f72 <sd_initialize+0x10a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:256 (discriminator 3)
                ocr[n] = rcvr_spi(); /* Get trailing return value of R7 resp */
   12ef0:	f10d 0804 	add.w	r8, sp, #4
   12ef4:	20ff      	movs	r0, #255	; 0xff
   12ef6:	f7ff febf 	bl	12c78 <ssp1_exchange_byte>
   12efa:	f808 0004 	strb.w	r0, [r8, r4]
   12efe:	3401      	adds	r4, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:255 (discriminator 3)
            for (n = 0; n < 4; n++)
   12f00:	2c04      	cmp	r4, #4
   12f02:	d1f7      	bne.n	12ef4 <sd_initialize+0x8c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:257
            if (ocr[2] == 0x01 && ocr[3] == 0xAA)
   12f04:	f89d 3006 	ldrb.w	r3, [sp, #6]
   12f08:	2b01      	cmp	r3, #1
   12f0a:	d1d2      	bne.n	12eb2 <sd_initialize+0x4a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:257 (discriminator 1)
   12f0c:	f89d 3007 	ldrb.w	r3, [sp, #7]
   12f10:	2baa      	cmp	r3, #170	; 0xaa
   12f12:	d1ce      	bne.n	12eb2 <sd_initialize+0x4a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:263
                while (sys_get_uptime_ms() < timeout
   12f14:	462c      	mov	r4, r5
   12f16:	2500      	movs	r5, #0
   12f18:	f7ff fe8c 	bl	12c34 <sys_get_uptime_ms>
   12f1c:	42a9      	cmp	r1, r5
   12f1e:	bf08      	it	eq
   12f20:	42a0      	cmpeq	r0, r4
   12f22:	d31e      	bcc.n	12f62 <sd_initialize+0xfa>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:267
                if (sys_get_uptime_ms() < timeout && send_cmd(CMD58, 0) == 0)
   12f24:	f7ff fe86 	bl	12c34 <sys_get_uptime_ms>
   12f28:	42a9      	cmp	r1, r5
   12f2a:	bf08      	it	eq
   12f2c:	42a0      	cmpeq	r0, r4
   12f2e:	d2c0      	bcs.n	12eb2 <sd_initialize+0x4a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:267 (discriminator 1)
   12f30:	2100      	movs	r1, #0
   12f32:	207a      	movs	r0, #122	; 0x7a
   12f34:	f7ff ff40 	bl	12db8 <send_cmd>
   12f38:	2800      	cmp	r0, #0
   12f3a:	d1ba      	bne.n	12eb2 <sd_initialize+0x4a>
   12f3c:	4601      	mov	r1, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:270 (discriminator 3)
                        ocr[n] = rcvr_spi();
   12f3e:	20ff      	movs	r0, #255	; 0xff
   12f40:	f7ff fe9a 	bl	12c78 <ssp1_exchange_byte>
   12f44:	f808 0001 	strb.w	r0, [r8, r1]
   12f48:	3101      	adds	r1, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:269 (discriminator 3)
                    for (n = 0; n < 4; n++)
   12f4a:	2904      	cmp	r1, #4
   12f4c:	d1f7      	bne.n	12f3e <sd_initialize+0xd6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:271
                    ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
   12f4e:	f89d 3004 	ldrb.w	r3, [sp, #4]
   12f52:	f013 0f40 	tst.w	r3, #64	; 0x40
   12f56:	bf14      	ite	ne
   12f58:	f04f 080c 	movne.w	r8, #12
   12f5c:	f04f 0804 	moveq.w	r8, #4
   12f60:	e7a9      	b.n	12eb6 <sd_initialize+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:264
                        && send_cmd(ACMD41, 1UL << 30))
   12f62:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
   12f66:	20e9      	movs	r0, #233	; 0xe9
   12f68:	f7ff ff26 	bl	12db8 <send_cmd>
   12f6c:	2800      	cmp	r0, #0
   12f6e:	d1d3      	bne.n	12f18 <sd_initialize+0xb0>
   12f70:	e7d8      	b.n	12f24 <sd_initialize+0xbc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:286
            if (send_cmd(ACMD41, 0) <= 1)
   12f72:	4621      	mov	r1, r4
   12f74:	20e9      	movs	r0, #233	; 0xe9
   12f76:	f7ff ff1f 	bl	12db8 <send_cmd>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:294
                cmd = CMD1; /* MMC */
   12f7a:	2802      	cmp	r0, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   12f7c:	462c      	mov	r4, r5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:294
                cmd = CMD1; /* MMC */
   12f7e:	bf36      	itet	cc
   12f80:	f04f 09e9 	movcc.w	r9, #233	; 0xe9
   12f84:	f04f 0941 	movcs.w	r9, #65	; 0x41
   12f88:	f04f 0802 	movcc.w	r8, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   12f8c:	2500      	movs	r5, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296 (discriminator 2)
   12f8e:	f7ff fe51 	bl	12c34 <sys_get_uptime_ms>
   12f92:	42a9      	cmp	r1, r5
   12f94:	bf08      	it	eq
   12f96:	42a0      	cmpeq	r0, r4
   12f98:	d30b      	bcc.n	12fb2 <sd_initialize+0x14a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:299
            if ((sys_get_uptime_ms() < timeout) || send_cmd(CMD16, 512) != 0) /* Set R/W block length to 512 */
   12f9a:	f7ff fe4b 	bl	12c34 <sys_get_uptime_ms>
   12f9e:	42a9      	cmp	r1, r5
   12fa0:	bf08      	it	eq
   12fa2:	42a0      	cmpeq	r0, r4
   12fa4:	d387      	bcc.n	12eb6 <sd_initialize+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:299 (discriminator 1)
   12fa6:	f44f 7100 	mov.w	r1, #512	; 0x200
   12faa:	2050      	movs	r0, #80	; 0x50
   12fac:	f7ff ff04 	bl	12db8 <send_cmd>
   12fb0:	e781      	b.n	12eb6 <sd_initialize+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296 (discriminator 1)
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   12fb2:	2100      	movs	r1, #0
   12fb4:	4648      	mov	r0, r9
   12fb6:	f7ff feff 	bl	12db8 <send_cmd>
   12fba:	2800      	cmp	r0, #0
   12fbc:	d1e7      	bne.n	12f8e <sd_initialize+0x126>
   12fbe:	e7ec      	b.n	12f9a <sd_initialize+0x132>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:324
        power_off();
   12fc0:	f7ff fe7c 	bl	12cbc <power_off>
   12fc4:	e787      	b.n	12ed6 <sd_initialize+0x6e>
   12fc6:	bf00      	nop
   12fc8:	2007c08c 	.word	0x2007c08c
   12fcc:	2009c020 	.word	0x2009c020
   12fd0:	2007c330 	.word	0x2007c330

00012fd4 <sd_status>:
sd_status():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:331
{
   12fd4:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:332
    sd_update_card_status();
   12fd6:	f7ff ff35 	bl	12e44 <sd_update_card_status>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:333
    return g_disk_status;
   12fda:	4b01      	ldr	r3, [pc, #4]	; (12fe0 <sd_status+0xc>)
   12fdc:	7818      	ldrb	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:334
}
   12fde:	bd08      	pop	{r3, pc}
   12fe0:	2007c08c 	.word	0x2007c08c

00012fe4 <sd_read>:
sd_read():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:340
{
   12fe4:	b570      	push	{r4, r5, r6, lr}
   12fe6:	4614      	mov	r4, r2
   12fe8:	4606      	mov	r6, r0
   12fea:	4608      	mov	r0, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:341
    sd_update_card_status();
   12fec:	f7ff ff2a 	bl	12e44 <sd_update_card_status>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:343
    if (!count)
   12ff0:	2c00      	cmp	r4, #0
   12ff2:	d038      	beq.n	13066 <sd_read+0x82>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:345
    if (g_disk_status & STA_NOINIT)
   12ff4:	4b1e      	ldr	r3, [pc, #120]	; (13070 <sd_read+0x8c>)
   12ff6:	781b      	ldrb	r3, [r3, #0]
   12ff8:	07da      	lsls	r2, r3, #31
   12ffa:	d436      	bmi.n	1306a <sd_read+0x86>
board_io_sd_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   12ffc:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   13000:	4d1c      	ldr	r5, [pc, #112]	; (13074 <sd_read+0x90>)
   13002:	61ea      	str	r2, [r5, #28]
sd_read():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:350
    if (!(g_card_type & CT_BLOCK))
   13004:	4a1c      	ldr	r2, [pc, #112]	; (13078 <sd_read+0x94>)
   13006:	7812      	ldrb	r2, [r2, #0]
   13008:	0713      	lsls	r3, r2, #28
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:351
        sector *= 512; /* Convert to byte address if needed */
   1300a:	bf58      	it	pl
   1300c:	0240      	lslpl	r0, r0, #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:353
    if (count == 1)
   1300e:	2c01      	cmp	r4, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:355
        if ((send_cmd(CMD17, sector) == 0) /* READ_SINGLE_BLOCK */
   13010:	4601      	mov	r1, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:353
    if (count == 1)
   13012:	d112      	bne.n	1303a <sd_read+0x56>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:355
        if ((send_cmd(CMD17, sector) == 0) /* READ_SINGLE_BLOCK */
   13014:	2051      	movs	r0, #81	; 0x51
   13016:	f7ff fecf 	bl	12db8 <send_cmd>
   1301a:	b938      	cbnz	r0, 1302c <sd_read+0x48>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:356
        && rcvr_datablock(buff, 512))
   1301c:	f44f 7100 	mov.w	r1, #512	; 0x200
   13020:	4630      	mov	r0, r6
   13022:	f7ff fe5d 	bl	12ce0 <rcvr_datablock>
   13026:	fab0 f480 	clz	r4, r0
   1302a:	0964      	lsrs	r4, r4, #5
board_io_sd_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   1302c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
sd_read():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:374
    return count ? RES_ERROR : RES_OK;
   13030:	1c20      	adds	r0, r4, #0
board_io_sd_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   13032:	61ab      	str	r3, [r5, #24]
sd_read():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:374
   13034:	bf18      	it	ne
   13036:	2001      	movne	r0, #1
   13038:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:361
        if (send_cmd(CMD18, sector) == 0)
   1303a:	2052      	movs	r0, #82	; 0x52
   1303c:	f7ff febc 	bl	12db8 <send_cmd>
   13040:	2800      	cmp	r0, #0
   13042:	d1f3      	bne.n	1302c <sd_read+0x48>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:365
                if (!rcvr_datablock(buff, 512))
   13044:	f44f 7100 	mov.w	r1, #512	; 0x200
   13048:	4630      	mov	r0, r6
   1304a:	f7ff fe49 	bl	12ce0 <rcvr_datablock>
   1304e:	b128      	cbz	r0, 1305c <sd_read+0x78>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:368
            } while (--count);
   13050:	3c01      	subs	r4, #1
   13052:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:367
                buff += 512;
   13056:	f506 7600 	add.w	r6, r6, #512	; 0x200
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:368
            } while (--count);
   1305a:	d1f3      	bne.n	13044 <sd_read+0x60>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:369
            send_cmd(CMD12, 0); /* STOP_TRANSMISSION */
   1305c:	2100      	movs	r1, #0
   1305e:	204c      	movs	r0, #76	; 0x4c
   13060:	f7ff feaa 	bl	12db8 <send_cmd>
   13064:	e7e2      	b.n	1302c <sd_read+0x48>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:344
        return RES_PARERR;
   13066:	2004      	movs	r0, #4
   13068:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:346
        return RES_NOTRDY;
   1306a:	2003      	movs	r0, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:375
}
   1306c:	bd70      	pop	{r4, r5, r6, pc}
   1306e:	bf00      	nop
   13070:	2007c08c 	.word	0x2007c08c
   13074:	2009c020 	.word	0x2009c020
   13078:	2007c330 	.word	0x2007c330

0001307c <sd_write>:
sd_write():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:386
{
   1307c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1307e:	4614      	mov	r4, r2
   13080:	4606      	mov	r6, r0
   13082:	460f      	mov	r7, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:387
    sd_update_card_status();
   13084:	f7ff fede 	bl	12e44 <sd_update_card_status>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:389
    if (!count)
   13088:	2c00      	cmp	r4, #0
   1308a:	d044      	beq.n	13116 <sd_write+0x9a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:391
    if (g_disk_status & STA_NOINIT)
   1308c:	4b25      	ldr	r3, [pc, #148]	; (13124 <sd_write+0xa8>)
   1308e:	781a      	ldrb	r2, [r3, #0]
   13090:	07d1      	lsls	r1, r2, #31
   13092:	d442      	bmi.n	1311a <sd_write+0x9e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:393
    if (g_disk_status & STA_PROTECT)
   13094:	781b      	ldrb	r3, [r3, #0]
   13096:	075a      	lsls	r2, r3, #29
   13098:	d441      	bmi.n	1311e <sd_write+0xa2>
board_io_sd_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   1309a:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   1309e:	4d22      	ldr	r5, [pc, #136]	; (13128 <sd_write+0xac>)
   130a0:	61ea      	str	r2, [r5, #28]
sd_write():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:398
    if (!(g_card_type & CT_BLOCK))
   130a2:	4a22      	ldr	r2, [pc, #136]	; (1312c <sd_write+0xb0>)
   130a4:	7812      	ldrb	r2, [r2, #0]
   130a6:	0713      	lsls	r3, r2, #28
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:399
        sector *= 512; /* Convert to byte address if needed */
   130a8:	bf58      	it	pl
   130aa:	027f      	lslpl	r7, r7, #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:401
    if (count == 1)
   130ac:	2c01      	cmp	r4, #1
   130ae:	d112      	bne.n	130d6 <sd_write+0x5a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:403
        if ((send_cmd(CMD24, sector) == 0) && xmit_datablock(buff, 0xFE))
   130b0:	4639      	mov	r1, r7
   130b2:	2058      	movs	r0, #88	; 0x58
   130b4:	f7ff fe80 	bl	12db8 <send_cmd>
   130b8:	bb58      	cbnz	r0, 13112 <sd_write+0x96>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:403 (discriminator 1)
   130ba:	21fe      	movs	r1, #254	; 0xfe
   130bc:	4630      	mov	r0, r6
   130be:	f7ff fe55 	bl	12d6c <xmit_datablock>
   130c2:	fab0 f480 	clz	r4, r0
   130c6:	0964      	lsrs	r4, r4, #5
board_io_sd_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   130c8:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
sd_write():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:424
    return count ? RES_ERROR : RES_OK;
   130cc:	1c20      	adds	r0, r4, #0
board_io_sd_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   130ce:	61ab      	str	r3, [r5, #24]
sd_write():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:424
   130d0:	bf18      	it	ne
   130d2:	2001      	movne	r0, #1
   130d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:408
        if (g_card_type & CT_SDC)
   130d6:	f012 0f06 	tst.w	r2, #6
   130da:	d003      	beq.n	130e4 <sd_write+0x68>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:409
            send_cmd(ACMD23, count);
   130dc:	4621      	mov	r1, r4
   130de:	20d7      	movs	r0, #215	; 0xd7
   130e0:	f7ff fe6a 	bl	12db8 <send_cmd>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:410
        if (send_cmd(CMD25, sector) == 0)
   130e4:	4639      	mov	r1, r7
   130e6:	2059      	movs	r0, #89	; 0x59
   130e8:	f7ff fe66 	bl	12db8 <send_cmd>
   130ec:	2800      	cmp	r0, #0
   130ee:	d1eb      	bne.n	130c8 <sd_write+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:414
                if (!xmit_datablock(buff, 0xFC))
   130f0:	21fc      	movs	r1, #252	; 0xfc
   130f2:	4630      	mov	r0, r6
   130f4:	f7ff fe3a 	bl	12d6c <xmit_datablock>
   130f8:	b128      	cbz	r0, 13106 <sd_write+0x8a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:417
            } while (--count);
   130fa:	3c01      	subs	r4, #1
   130fc:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:416
                buff += 512;
   13100:	f506 7600 	add.w	r6, r6, #512	; 0x200
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:417
            } while (--count);
   13104:	d1f4      	bne.n	130f0 <sd_write+0x74>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:418
            if (!xmit_datablock(0, 0xFD)) /* STOP_TRAN token */
   13106:	21fd      	movs	r1, #253	; 0xfd
   13108:	2000      	movs	r0, #0
   1310a:	f7ff fe2f 	bl	12d6c <xmit_datablock>
   1310e:	2800      	cmp	r0, #0
   13110:	d1da      	bne.n	130c8 <sd_write+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:419
                count = 1;
   13112:	2401      	movs	r4, #1
   13114:	e7d8      	b.n	130c8 <sd_write+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:390
        return RES_PARERR;
   13116:	2004      	movs	r0, #4
   13118:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:392
        return RES_NOTRDY;
   1311a:	2003      	movs	r0, #3
   1311c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:394
        return RES_WRPRT;
   1311e:	2002      	movs	r0, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:425
}
   13120:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   13122:	bf00      	nop
   13124:	2007c08c 	.word	0x2007c08c
   13128:	2009c020 	.word	0x2009c020
   1312c:	2007c330 	.word	0x2007c330

00013130 <sd_ioctl>:
sd_ioctl():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:432
{
   13130:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   13132:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:437
    sd_update_card_status();
   13134:	f7ff fe86 	bl	12e44 <sd_update_card_status>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:440
    if (ctrl == CTRL_POWER)
   13138:	2805      	cmp	r0, #5
   1313a:	d11a      	bne.n	13172 <sd_ioctl+0x42>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:442
        switch (*ptr)
   1313c:	782b      	ldrb	r3, [r5, #0]
   1313e:	2b01      	cmp	r3, #1
   13140:	d015      	beq.n	1316e <sd_ioctl+0x3e>
   13142:	d305      	bcc.n	13150 <sd_ioctl+0x20>
   13144:	2b02      	cmp	r3, #2
   13146:	d00b      	beq.n	13160 <sd_ioctl+0x30>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:458
                res = RES_PARERR;
   13148:	2404      	movs	r4, #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:582
}
   1314a:	4620      	mov	r0, r4
   1314c:	b004      	add	sp, #16
   1314e:	bd70      	pop	{r4, r5, r6, pc}
board_io_sd_card_cd_sig():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
   13150:	4b7b      	ldr	r3, [pc, #492]	; (13340 <sd_ioctl+0x210>)
   13152:	695c      	ldr	r4, [r3, #20]
sd_ioctl():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:445
                if (SD_PRESENT())
   13154:	f014 6480 	ands.w	r4, r4, #67108864	; 0x4000000
   13158:	d109      	bne.n	1316e <sd_ioctl+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:446
                    power_off(); /* Power off */
   1315a:	f7ff fdaf 	bl	12cbc <power_off>
   1315e:	e7f4      	b.n	1314a <sd_ioctl+0x1a>
board_io_sd_card_cd_sig():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
   13160:	4b77      	ldr	r3, [pc, #476]	; (13340 <sd_ioctl+0x210>)
   13162:	695b      	ldr	r3, [r3, #20]
sd_ioctl():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:454
                *(ptr + 1) = (BYTE) SD_PRESENT();
   13164:	f083 6380 	eor.w	r3, r3, #67108864	; 0x4000000
   13168:	f3c3 6380 	ubfx	r3, r3, #26, #1
   1316c:	706b      	strb	r3, [r5, #1]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:447
                res = RES_OK;
   1316e:	2400      	movs	r4, #0
   13170:	e7eb      	b.n	1314a <sd_ioctl+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:464
        if (g_disk_status & STA_NOINIT)
   13172:	4b74      	ldr	r3, [pc, #464]	; (13344 <sd_ioctl+0x214>)
   13174:	781b      	ldrb	r3, [r3, #0]
   13176:	07db      	lsls	r3, r3, #31
   13178:	f100 80e0 	bmi.w	1333c <sd_ioctl+0x20c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:467
        switch (ctrl)
   1317c:	280e      	cmp	r0, #14
   1317e:	f200 80db 	bhi.w	13338 <sd_ioctl+0x208>
   13182:	e8df f000 	tbb	[pc, r0]
   13186:	1708      	.short	0x1708
   13188:	d9d95a55 	.word	0xd9d95a55
   1318c:	d9d9d9d9 	.word	0xd9d9d9d9
   13190:	bdbaaba7 	.word	0xbdbaaba7
   13194:	cd          	.byte	0xcd
   13195:	00          	.byte	0x00
board_io_sd_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13196:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   1319a:	4b69      	ldr	r3, [pc, #420]	; (13340 <sd_ioctl+0x210>)
   1319c:	61da      	str	r2, [r3, #28]
sd_ioctl():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:473
                if (wait_ready() == 0xFF)
   1319e:	f7ff fd75 	bl	12c8c <wait_ready>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:474
                    res = RES_OK;
   131a2:	f1b0 04ff 	subs.w	r4, r0, #255	; 0xff
   131a6:	bf18      	it	ne
   131a8:	2401      	movne	r4, #1
board_io_sd_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   131aa:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   131ae:	4b64      	ldr	r3, [pc, #400]	; (13340 <sd_ioctl+0x210>)
   131b0:	619a      	str	r2, [r3, #24]
   131b2:	e7ca      	b.n	1314a <sd_ioctl+0x1a>
sd_ioctl():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:478
                if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   131b4:	2100      	movs	r1, #0
   131b6:	2049      	movs	r0, #73	; 0x49
   131b8:	f7ff fdfe 	bl	12db8 <send_cmd>
   131bc:	4604      	mov	r4, r0
   131be:	b108      	cbz	r0, 131c4 <sd_ioctl+0x94>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:438
    res = RES_ERROR;
   131c0:	2401      	movs	r4, #1
   131c2:	e7f2      	b.n	131aa <sd_ioctl+0x7a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:478 (discriminator 1)
                if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   131c4:	2110      	movs	r1, #16
   131c6:	4668      	mov	r0, sp
   131c8:	f7ff fd8a 	bl	12ce0 <rcvr_datablock>
   131cc:	2800      	cmp	r0, #0
   131ce:	d0f7      	beq.n	131c0 <sd_ioctl+0x90>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:480
                    if ((csd[0] >> 6) == 1)
   131d0:	f89d 3000 	ldrb.w	r3, [sp]
   131d4:	f89d 1008 	ldrb.w	r1, [sp, #8]
   131d8:	099b      	lsrs	r3, r3, #6
   131da:	2b01      	cmp	r3, #1
   131dc:	f89d 3009 	ldrb.w	r3, [sp, #9]
   131e0:	d106      	bne.n	131f0 <sd_ioctl+0xc0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:482
                        csize = csd[9] + ((WORD) csd[8] << 8) + 1;
   131e2:	1c5a      	adds	r2, r3, #1
   131e4:	eb02 2201 	add.w	r2, r2, r1, lsl #8
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:483
                        *(DWORD*) buff = (DWORD) csize << 10;
   131e8:	b292      	uxth	r2, r2
   131ea:	0292      	lsls	r2, r2, #10
   131ec:	602a      	str	r2, [r5, #0]
   131ee:	e7dc      	b.n	131aa <sd_ioctl+0x7a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   131f0:	f89d 2007 	ldrb.w	r2, [sp, #7]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   131f4:	f89d 000a 	ldrb.w	r0, [sp, #10]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   131f8:	0092      	lsls	r2, r2, #2
   131fa:	eb02 1291 	add.w	r2, r2, r1, lsr #6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:490
                                + ((WORD) (csd[6] & 3) << 10) + 1;
   131fe:	f89d 1006 	ldrb.w	r1, [sp, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   13202:	3201      	adds	r2, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:490
                                + ((WORD) (csd[6] & 3) << 10) + 1;
   13204:	0289      	lsls	r1, r1, #10
   13206:	f401 6140 	and.w	r1, r1, #3072	; 0xc00
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   1320a:	440a      	add	r2, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   1320c:	f89d 1005 	ldrb.w	r1, [sp, #5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:488
                                + ((csd[9] & 3) << 1) + 2;
   13210:	005b      	lsls	r3, r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   13212:	f001 010f 	and.w	r1, r1, #15
   13216:	eb01 11d0 	add.w	r1, r1, r0, lsr #7
   1321a:	3102      	adds	r1, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:488
                                + ((csd[9] & 3) << 1) + 2;
   1321c:	f003 0306 	and.w	r3, r3, #6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   13220:	440b      	add	r3, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:491
                        *(DWORD*) buff = (DWORD) csize << (n - 9);
   13222:	b2db      	uxtb	r3, r3
   13224:	b292      	uxth	r2, r2
   13226:	3b09      	subs	r3, #9
   13228:	fa02 f303 	lsl.w	r3, r2, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   1322c:	602b      	str	r3, [r5, #0]
   1322e:	e7bc      	b.n	131aa <sd_ioctl+0x7a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:498
                *(WORD*) buff = 512;
   13230:	f44f 7300 	mov.w	r3, #512	; 0x200
   13234:	802b      	strh	r3, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:499
                res = RES_OK;
   13236:	2400      	movs	r4, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:500
                break;
   13238:	e7b7      	b.n	131aa <sd_ioctl+0x7a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:503
                if (g_card_type & CT_SD2)
   1323a:	4e43      	ldr	r6, [pc, #268]	; (13348 <sd_ioctl+0x218>)
   1323c:	7831      	ldrb	r1, [r6, #0]
   1323e:	f011 0104 	ands.w	r1, r1, #4
   13242:	d01c      	beq.n	1327e <sd_ioctl+0x14e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:505
                    if (send_cmd(ACMD13, 0) == 0)
   13244:	2100      	movs	r1, #0
   13246:	20cd      	movs	r0, #205	; 0xcd
   13248:	f7ff fdb6 	bl	12db8 <send_cmd>
   1324c:	2800      	cmp	r0, #0
   1324e:	d1b7      	bne.n	131c0 <sd_ioctl+0x90>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:507
                        rcvr_spi();
   13250:	20ff      	movs	r0, #255	; 0xff
   13252:	f7ff fd11 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:508
                        if (rcvr_datablock(csd, 16))
   13256:	2110      	movs	r1, #16
   13258:	4668      	mov	r0, sp
   1325a:	f7ff fd41 	bl	12ce0 <rcvr_datablock>
   1325e:	2800      	cmp	r0, #0
   13260:	d0ae      	beq.n	131c0 <sd_ioctl+0x90>
   13262:	2430      	movs	r4, #48	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:511 (discriminator 3)
                                rcvr_spi(); /* Purge trailing data */
   13264:	20ff      	movs	r0, #255	; 0xff
   13266:	f7ff fd07 	bl	12c78 <ssp1_exchange_byte>
   1326a:	1e60      	subs	r0, r4, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:510 (discriminator 3)
                            for (n = 64 - 16; n; n--)
   1326c:	f010 04ff 	ands.w	r4, r0, #255	; 0xff
   13270:	d1f8      	bne.n	13264 <sd_ioctl+0x134>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:512
                            *(DWORD*) buff = 16UL << (csd[10] >> 4);
   13272:	f89d 300a 	ldrb.w	r3, [sp, #10]
   13276:	091a      	lsrs	r2, r3, #4
   13278:	2310      	movs	r3, #16
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   1327a:	4093      	lsls	r3, r2
   1327c:	e7d6      	b.n	1322c <sd_ioctl+0xfc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:519
                    if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   1327e:	2049      	movs	r0, #73	; 0x49
   13280:	f7ff fd9a 	bl	12db8 <send_cmd>
   13284:	4604      	mov	r4, r0
   13286:	2800      	cmp	r0, #0
   13288:	d19a      	bne.n	131c0 <sd_ioctl+0x90>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:519 (discriminator 1)
   1328a:	2110      	movs	r1, #16
   1328c:	4668      	mov	r0, sp
   1328e:	f7ff fd27 	bl	12ce0 <rcvr_datablock>
   13292:	2800      	cmp	r0, #0
   13294:	d094      	beq.n	131c0 <sd_ioctl+0x90>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:521
                        if (g_card_type & CT_SD1)
   13296:	7830      	ldrb	r0, [r6, #0]
   13298:	f89d 300a 	ldrb.w	r3, [sp, #10]
   1329c:	f010 0002 	ands.w	r0, r0, #2
   132a0:	f89d 100b 	ldrb.w	r1, [sp, #11]
   132a4:	d00a      	beq.n	132bc <sd_ioctl+0x18c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   132a6:	005b      	lsls	r3, r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   132a8:	f89d 200d 	ldrb.w	r2, [sp, #13]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   132ac:	f003 037e 	and.w	r3, r3, #126	; 0x7e
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:524
                                    + ((WORD) (csd[11] & 128) >> 7) + 1)
   132b0:	eb03 13d1 	add.w	r3, r3, r1, lsr #7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   132b4:	0992      	lsrs	r2, r2, #6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:524
                                    + ((WORD) (csd[11] & 128) >> 7) + 1)
   132b6:	3301      	adds	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   132b8:	3a01      	subs	r2, #1
   132ba:	e7de      	b.n	1327a <sd_ioctl+0x14a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:530
                                    * (((csd[11] & 3) << 3)
   132bc:	00ca      	lsls	r2, r1, #3
   132be:	f002 0218 	and.w	r2, r2, #24
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   132c2:	f3c3 0384 	ubfx	r3, r3, #2, #5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:531
                                            + ((csd[11] & 224) >> 5) + 1);
   132c6:	eb02 1251 	add.w	r2, r2, r1, lsr #5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   132ca:	3301      	adds	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:530
                                    * (((csd[11] & 3) << 3)
   132cc:	fb02 3303 	mla	r3, r2, r3, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   132d0:	602b      	str	r3, [r5, #0]
   132d2:	e7b0      	b.n	13236 <sd_ioctl+0x106>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:539
                *ptr = g_card_type;
   132d4:	4b1c      	ldr	r3, [pc, #112]	; (13348 <sd_ioctl+0x218>)
   132d6:	781b      	ldrb	r3, [r3, #0]
   132d8:	702b      	strb	r3, [r5, #0]
   132da:	e7ac      	b.n	13236 <sd_ioctl+0x106>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:544
                if (send_cmd(CMD9, 0) == 0 /* READ_CSD */
   132dc:	2100      	movs	r1, #0
   132de:	2049      	movs	r0, #73	; 0x49
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:550
                if (send_cmd(CMD10, 0) == 0 /* READ_CID */
   132e0:	f7ff fd6a 	bl	12db8 <send_cmd>
   132e4:	2800      	cmp	r0, #0
   132e6:	f47f af6b 	bne.w	131c0 <sd_ioctl+0x90>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:551
                && rcvr_datablock(ptr, 16))
   132ea:	2110      	movs	r1, #16
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:568
                    if (rcvr_datablock(ptr, 64))
   132ec:	4628      	mov	r0, r5
   132ee:	f7ff fcf7 	bl	12ce0 <rcvr_datablock>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:474
                    res = RES_OK;
   132f2:	fab0 f480 	clz	r4, r0
   132f6:	0964      	lsrs	r4, r4, #5
   132f8:	e757      	b.n	131aa <sd_ioctl+0x7a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:550
                if (send_cmd(CMD10, 0) == 0 /* READ_CID */
   132fa:	2100      	movs	r1, #0
   132fc:	204a      	movs	r0, #74	; 0x4a
   132fe:	e7ef      	b.n	132e0 <sd_ioctl+0x1b0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:556
                if (send_cmd(CMD58, 0) == 0)
   13300:	2100      	movs	r1, #0
   13302:	207a      	movs	r0, #122	; 0x7a
   13304:	f7ff fd58 	bl	12db8 <send_cmd>
   13308:	2800      	cmp	r0, #0
   1330a:	f47f af59 	bne.w	131c0 <sd_ioctl+0x90>
   1330e:	1d29      	adds	r1, r5, #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:559 (discriminator 3)
                        *ptr++ = rcvr_spi();
   13310:	20ff      	movs	r0, #255	; 0xff
   13312:	f7ff fcb1 	bl	12c78 <ssp1_exchange_byte>
   13316:	f805 0b01 	strb.w	r0, [r5], #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:558 (discriminator 3)
                    for (n = 4; n; n--)
   1331a:	428d      	cmp	r5, r1
   1331c:	d1f8      	bne.n	13310 <sd_ioctl+0x1e0>
   1331e:	e78a      	b.n	13236 <sd_ioctl+0x106>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:565
                if (send_cmd(ACMD13, 0) == 0)
   13320:	2100      	movs	r1, #0
   13322:	20cd      	movs	r0, #205	; 0xcd
   13324:	f7ff fd48 	bl	12db8 <send_cmd>
   13328:	2800      	cmp	r0, #0
   1332a:	f47f af49 	bne.w	131c0 <sd_ioctl+0x90>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:567
                    rcvr_spi();
   1332e:	20ff      	movs	r0, #255	; 0xff
   13330:	f7ff fca2 	bl	12c78 <ssp1_exchange_byte>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:568
                    if (rcvr_datablock(ptr, 64))
   13334:	2140      	movs	r1, #64	; 0x40
   13336:	e7d9      	b.n	132ec <sd_ioctl+0x1bc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:574
                res = RES_PARERR;
   13338:	2404      	movs	r4, #4
   1333a:	e736      	b.n	131aa <sd_ioctl+0x7a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:465
            return RES_NOTRDY;
   1333c:	2403      	movs	r4, #3
   1333e:	e704      	b.n	1314a <sd_ioctl+0x1a>
   13340:	2009c020 	.word	0x2009c020
   13344:	2007c08c 	.word	0x2007c08c
   13348:	2007c330 	.word	0x2007c330

0001334c <disk_initialize>:
disk_initialize():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:10
#include "spi_sem.h"



DSTATUS disk_initialize(BYTE drv)
{
   1334c:	b510      	push	{r4, lr}
   1334e:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:13
    DSTATUS status = RES_PARERR;

    spi1_lock();
   13350:	f001 fe62 	bl	15018 <spi1_lock>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:15
    {
        switch(drv)
   13354:	b11c      	cbz	r4, 1335e <disk_initialize+0x12>
   13356:	2c01      	cmp	r4, #1
   13358:	d008      	beq.n	1336c <disk_initialize+0x20>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:19
        {
            case driveNumFlashMem: status = flash_initialize();    break;
            case driveNumSdCard:   status = sd_initialize();       break;
            default: status = RES_PARERR;    break;
   1335a:	2404      	movs	r4, #4
   1335c:	e002      	b.n	13364 <disk_initialize+0x18>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:17
            case driveNumFlashMem: status = flash_initialize();    break;
   1335e:	f7ff fb03 	bl	12968 <flash_initialize>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:18
            case driveNumSdCard:   status = sd_initialize();       break;
   13362:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:22
        }
    }
    spi1_unlock();
   13364:	f001 fe70 	bl	15048 <spi1_unlock>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:25

    return status;
}
   13368:	4620      	mov	r0, r4
   1336a:	bd10      	pop	{r4, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:18
            case driveNumSdCard:   status = sd_initialize();       break;
   1336c:	f7ff fd7c 	bl	12e68 <sd_initialize>
   13370:	e7f7      	b.n	13362 <disk_initialize+0x16>

00013372 <disk_status>:
disk_status():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:33
{
    DSTATUS status = RES_PARERR;

    // No mutex needed here: MUTEX_SECTION()
    {
        switch(drv)
   13372:	b128      	cbz	r0, 13380 <disk_status+0xe>
   13374:	2801      	cmp	r0, #1
   13376:	d001      	beq.n	1337c <disk_status+0xa>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:38
        {
            // Flash memory is always good to go!
            case driveNumFlashMem: status = RES_OK;        break;
            case driveNumSdCard:   status = sd_status();   break;
            default: status = RES_PARERR;    break;
   13378:	2004      	movs	r0, #4
   1337a:	4770      	bx	lr
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:37
            case driveNumSdCard:   status = sd_status();   break;
   1337c:	f7ff be2a 	b.w	12fd4 <sd_status>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:43
        }
    }

    return status;
}
   13380:	4770      	bx	lr

00013382 <disk_read>:
disk_read():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:46

DRESULT disk_read (BYTE drv, BYTE *buff, DWORD sector, BYTE count)
{
   13382:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   13384:	4607      	mov	r7, r0
   13386:	460c      	mov	r4, r1
   13388:	4615      	mov	r5, r2
   1338a:	461e      	mov	r6, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:49
    DSTATUS status = RES_PARERR;

    spi1_lock();
   1338c:	f001 fe44 	bl	15018 <spi1_lock>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:51
    {
        switch(drv)
   13390:	b11f      	cbz	r7, 1339a <disk_read+0x18>
   13392:	2f01      	cmp	r7, #1
   13394:	d00b      	beq.n	133ae <disk_read+0x2c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:60
                break;
            case driveNumSdCard:
                status = sd_read(buff, sector, count);
                break;
            default:
                status = RES_PARERR;
   13396:	2404      	movs	r4, #4
   13398:	e005      	b.n	133a6 <disk_read+0x24>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:54
                status = flash_read_sectors(buff, sector, count);
   1339a:	4632      	mov	r2, r6
   1339c:	4629      	mov	r1, r5
   1339e:	4620      	mov	r0, r4
   133a0:	f7ff fb2e 	bl	12a00 <flash_read_sectors>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:57
                status = sd_read(buff, sector, count);
   133a4:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:64
                break;
        }
    }
    spi1_unlock();
   133a6:	f001 fe4f 	bl	15048 <spi1_unlock>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:67

    return status;
}
   133aa:	4620      	mov	r0, r4
   133ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:57
                status = sd_read(buff, sector, count);
   133ae:	4632      	mov	r2, r6
   133b0:	4629      	mov	r1, r5
   133b2:	4620      	mov	r0, r4
   133b4:	f7ff fe16 	bl	12fe4 <sd_read>
   133b8:	e7f4      	b.n	133a4 <disk_read+0x22>

000133ba <disk_write>:
disk_write():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:70

DRESULT disk_write(BYTE drv, const BYTE *buff, DWORD sector, BYTE count)
{
   133ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   133bc:	4607      	mov	r7, r0
   133be:	460c      	mov	r4, r1
   133c0:	4615      	mov	r5, r2
   133c2:	461e      	mov	r6, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:73
    DSTATUS status = RES_PARERR;

    spi1_lock();
   133c4:	f001 fe28 	bl	15018 <spi1_lock>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:75
    {
        switch(drv)
   133c8:	b11f      	cbz	r7, 133d2 <disk_write+0x18>
   133ca:	2f01      	cmp	r7, #1
   133cc:	d00b      	beq.n	133e6 <disk_write+0x2c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:84
                break;
            case driveNumSdCard:
                status = sd_write(buff, sector, count);
                break;
            default:
                status = RES_PARERR;
   133ce:	2404      	movs	r4, #4
   133d0:	e005      	b.n	133de <disk_write+0x24>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:78
                status = flash_write_sectors((unsigned char*)buff, sector, count);
   133d2:	4632      	mov	r2, r6
   133d4:	4629      	mov	r1, r5
   133d6:	4620      	mov	r0, r4
   133d8:	f7ff fb3a 	bl	12a50 <flash_write_sectors>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:81
                status = sd_write(buff, sector, count);
   133dc:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:88
                break;
        }
    }
    spi1_unlock();
   133de:	f001 fe33 	bl	15048 <spi1_unlock>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:91

    return status;
}
   133e2:	4620      	mov	r0, r4
   133e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:81
                status = sd_write(buff, sector, count);
   133e6:	4632      	mov	r2, r6
   133e8:	4629      	mov	r1, r5
   133ea:	4620      	mov	r0, r4
   133ec:	f7ff fe46 	bl	1307c <sd_write>
   133f0:	e7f4      	b.n	133dc <disk_write+0x22>

000133f2 <disk_ioctl>:
disk_ioctl():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:94

DRESULT disk_ioctl(BYTE drv, BYTE ctrl,void *buff)
{
   133f2:	b570      	push	{r4, r5, r6, lr}
   133f4:	4606      	mov	r6, r0
   133f6:	460c      	mov	r4, r1
   133f8:	4615      	mov	r5, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:97
    DSTATUS status = RES_PARERR;

    spi1_lock();
   133fa:	f001 fe0d 	bl	15018 <spi1_lock>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:99
    {
        switch(drv)
   133fe:	b11e      	cbz	r6, 13408 <disk_ioctl+0x16>
   13400:	2e01      	cmp	r6, #1
   13402:	d00a      	beq.n	1341a <disk_ioctl+0x28>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:103
        {
            case driveNumFlashMem: status = flash_ioctl(ctrl, buff);   break;
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
            default:            status = RES_PARERR; break;
   13404:	2404      	movs	r4, #4
   13406:	e004      	b.n	13412 <disk_ioctl+0x20>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:101
            case driveNumFlashMem: status = flash_ioctl(ctrl, buff);   break;
   13408:	4629      	mov	r1, r5
   1340a:	4620      	mov	r0, r4
   1340c:	f7ff fb46 	bl	12a9c <flash_ioctl>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:102
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
   13410:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:106
        }
    }
    spi1_unlock();
   13412:	f001 fe19 	bl	15048 <spi1_unlock>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:109

    return status;
}
   13416:	4620      	mov	r0, r4
   13418:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:102
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
   1341a:	4629      	mov	r1, r5
   1341c:	4620      	mov	r0, r4
   1341e:	f7ff fe87 	bl	13130 <sd_ioctl>
   13422:	e7f5      	b.n	13410 <disk_ioctl+0x1e>

00013424 <get_fattime>:
get_fattime():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:9
/**
 * This function is called by FAT FS System to get system time
 * @return DWORD containing the time structure
 */
DWORD get_fattime()
{
   13424:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:10
    rtc_t sysTime = rtc_gettime();
   13426:	a801      	add	r0, sp, #4
   13428:	f002 f952 	bl	156d0 <rtc_gettime>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:13

    return ((DWORD) (sysTime.year - 1980) << 25)
            | ((DWORD) sysTime.month << 21)
   1342c:	f89d 3009 	ldrb.w	r3, [sp, #9]
   13430:	f003 000f 	and.w	r0, r3, #15
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:14
            | ((DWORD) sysTime.day << 16)
   13434:	f89d 3008 	ldrb.w	r3, [sp, #8]
   13438:	f003 031f 	and.w	r3, r3, #31
   1343c:	041b      	lsls	r3, r3, #16
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.hour << 11)
            | ((DWORD) sysTime.min << 5)
            | ((DWORD) sysTime.sec >> 1);
   1343e:	ea43 5340 	orr.w	r3, r3, r0, lsl #21
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:15
            | ((DWORD) sysTime.hour << 11)
   13442:	f89d 0006 	ldrb.w	r0, [sp, #6]
   13446:	f000 001f 	and.w	r0, r0, #31
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.sec >> 1);
   1344a:	ea43 23c0 	orr.w	r3, r3, r0, lsl #11
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:16
            | ((DWORD) sysTime.min << 5)
   1344e:	f89d 0005 	ldrb.w	r0, [sp, #5]
   13452:	f000 003f 	and.w	r0, r0, #63	; 0x3f
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.sec >> 1);
   13456:	ea43 1340 	orr.w	r3, r3, r0, lsl #5
   1345a:	f89d 0004 	ldrb.w	r0, [sp, #4]
   1345e:	f3c0 0044 	ubfx	r0, r0, #1, #5
   13462:	4303      	orrs	r3, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:12
    return ((DWORD) (sysTime.year - 1980) << 25)
   13464:	f8bd 000a 	ldrh.w	r0, [sp, #10]
   13468:	0640      	lsls	r0, r0, #25
   1346a:	f100 4008 	add.w	r0, r0, #2281701376	; 0x88000000
/home/peter/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:18
}
   1346e:	4318      	orrs	r0, r3
   13470:	b005      	add	sp, #20
   13472:	f85d fb04 	ldr.w	pc, [sp], #4
   13476:	Address 0x0000000000013476 is out of bounds.


00013478 <nrf_driver_init>:
nrf_driver_init():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:143
}



static int nrf_driver_init(void* p, int len)
{
   13478:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:144
    if (NULL == g_rx_queue) {
   1347a:	4e17      	ldr	r6, [pc, #92]	; (134d8 <nrf_driver_init+0x60>)
   1347c:	6832      	ldr	r2, [r6, #0]
   1347e:	b922      	cbnz	r2, 1348a <nrf_driver_init+0x12>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:145
        g_rx_queue = xQueueCreate(WIRELESS_RX_QUEUE_SIZE, MESH_PAYLOAD);
   13480:	2120      	movs	r1, #32
   13482:	2003      	movs	r0, #3
   13484:	f003 f98a 	bl	1679c <xQueueGenericCreate>
   13488:	6030      	str	r0, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:147
    }
    if (NULL == g_ack_queue) {
   1348a:	4d14      	ldr	r5, [pc, #80]	; (134dc <nrf_driver_init+0x64>)
   1348c:	682a      	ldr	r2, [r5, #0]
   1348e:	b922      	cbnz	r2, 1349a <nrf_driver_init+0x22>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:148
        g_ack_queue = xQueueCreate(1, MESH_PAYLOAD);
   13490:	2120      	movs	r1, #32
   13492:	2001      	movs	r0, #1
   13494:	f003 f982 	bl	1679c <xQueueGenericCreate>
   13498:	6028      	str	r0, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:150
    }
    if (NULL == g_nrf_activity_sem) {
   1349a:	4c11      	ldr	r4, [pc, #68]	; (134e0 <nrf_driver_init+0x68>)
   1349c:	6821      	ldr	r1, [r4, #0]
   1349e:	b921      	cbnz	r1, 134aa <nrf_driver_init+0x32>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:151
        g_nrf_activity_sem = xSemaphoreCreateBinary();
   134a0:	2203      	movs	r2, #3
   134a2:	2001      	movs	r0, #1
   134a4:	f003 f97a 	bl	1679c <xQueueGenericCreate>
   134a8:	6020      	str	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:159
    // Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetSemaphoreName(g_nrf_activity_sem, "NRF Act Sem");
    vTraceSetQueueName(g_rx_queue,  "NRF RX-Q");
    vTraceSetQueueName(g_ack_queue, "NRF ACK-Q");

    nordic_init(MESH_PAYLOAD, WIRELESS_CHANNEL_NUM, WIRELESS_AIR_DATARATE_KBPS);
   134aa:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   134ae:	f640 11c3 	movw	r1, #2499	; 0x9c3
   134b2:	2020      	movs	r0, #32
   134b4:	f000 fad2 	bl	13a5c <nordic_init>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:160
    nordic_standby1_to_rx();
   134b8:	f000 f9ae 	bl	13818 <nordic_standby1_to_rx>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:163

    /* Hook up the interrupt callback for nordic pin */
    eint3_enable_port0(BIO_NORDIC_IRQ_P0PIN, eint_falling_edge, nrf_irq_callback);
   134bc:	2016      	movs	r0, #22
   134be:	4a09      	ldr	r2, [pc, #36]	; (134e4 <nrf_driver_init+0x6c>)
   134c0:	2101      	movs	r1, #1
   134c2:	f001 ff5b 	bl	1537c <eint3_enable_port0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165

    return (NULL != g_rx_queue && NULL != g_ack_queue && NULL != g_nrf_activity_sem);
   134c6:	6830      	ldr	r0, [r6, #0]
   134c8:	b128      	cbz	r0, 134d6 <nrf_driver_init+0x5e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165 (discriminator 1)
   134ca:	6828      	ldr	r0, [r5, #0]
   134cc:	b118      	cbz	r0, 134d6 <nrf_driver_init+0x5e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165 (discriminator 3)
   134ce:	6820      	ldr	r0, [r4, #0]
   134d0:	3000      	adds	r0, #0
   134d2:	bf18      	it	ne
   134d4:	2001      	movne	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:166
}
   134d6:	bd70      	pop	{r4, r5, r6, pc}
   134d8:	2007c33c 	.word	0x2007c33c
   134dc:	2007c334 	.word	0x2007c334
   134e0:	2007c338 	.word	0x2007c338
   134e4:	00013591 	.word	0x00013591

000134e8 <nrf_driver_app_recv>:
nrf_driver_app_recv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241

static int nrf_driver_app_recv(void *p, int len)
{
    /* Only mesh_pkt_ack_rsp is an ACK packet, others are to REQUEST for ack or nack */
    const mesh_packet_t *pkt = (mesh_packet_t*) p;
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   134e8:	7903      	ldrb	r3, [r0, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:238
{
   134ea:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   134ec:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   134f0:	2bc0      	cmp	r3, #192	; 0xc0
   134f2:	bf0c      	ite	eq
   134f4:	4b0e      	ldreq	r3, [pc, #56]	; (13530 <nrf_driver_app_recv+0x48>)
   134f6:	4b0f      	ldrne	r3, [pc, #60]	; (13534 <nrf_driver_app_recv+0x4c>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243

    int ok = xQueueSend(qhandle, p, 0);
   134f8:	4601      	mov	r1, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   134fa:	681d      	ldr	r5, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243
    int ok = xQueueSend(qhandle, p, 0);
   134fc:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:238
{
   134fe:	b088      	sub	sp, #32
   13500:	4606      	mov	r6, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243
    int ok = xQueueSend(qhandle, p, 0);
   13502:	461a      	mov	r2, r3
   13504:	4628      	mov	r0, r5
   13506:	f003 f96b 	bl	167e0 <xQueueGenericSend>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:246

    /* If queue was full, discard oldest data, and push again */
    if (!ok) {
   1350a:	4604      	mov	r4, r0
   1350c:	b960      	cbnz	r0, 13528 <nrf_driver_app_recv+0x40>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:248
        mesh_packet_t discarded_pkt;
        xQueueReceive(qhandle, &discarded_pkt, 0);
   1350e:	4603      	mov	r3, r0
   13510:	4602      	mov	r2, r0
   13512:	4669      	mov	r1, sp
   13514:	4628      	mov	r0, r5
   13516:	f003 fa6b 	bl	169f0 <xQueueGenericReceive>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:249
        ok = xQueueSend(qhandle, p, 0);
   1351a:	4623      	mov	r3, r4
   1351c:	4622      	mov	r2, r4
   1351e:	4631      	mov	r1, r6
   13520:	4628      	mov	r0, r5
   13522:	f003 f95d 	bl	167e0 <xQueueGenericSend>
   13526:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:253
    }

    return ok;
}
   13528:	4620      	mov	r0, r4
   1352a:	b008      	add	sp, #32
   1352c:	bd70      	pop	{r4, r5, r6, pc}
   1352e:	bf00      	nop
   13530:	2007c334 	.word	0x2007c334
   13534:	2007c33c 	.word	0x2007c33c

00013538 <nrf_driver_send>:
nrf_driver_send():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:169
{
   13538:	b538      	push	{r3, r4, r5, lr}
   1353a:	4604      	mov	r4, r0
   1353c:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:188
    if (mesh_get_node_address() != pkt->nwk.src) {
   1353e:	f000 fce5 	bl	13f0c <mesh_get_node_address>
   13542:	7823      	ldrb	r3, [r4, #0]
   13544:	4283      	cmp	r3, r0
   13546:	d00a      	beq.n	1355e <nrf_driver_send+0x26>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:189
        if (MESH_ZERO_ADDR == pkt->mac.dst) {
   13548:	78e3      	ldrb	r3, [r4, #3]
   1354a:	b943      	cbnz	r3, 1355e <nrf_driver_send+0x26>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:190
            const uint32_t timeSlotDelayUs = ((rand() % slots) + 1) * s_pkt_air_time_us;
   1354c:	f008 ff00 	bl	1c350 <rand>
   13550:	23bd      	movs	r3, #189	; 0xbd
   13552:	f000 0003 	and.w	r0, r0, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:191
            delay_us(timeSlotDelayUs); /**< Maximize mesh nodes to repeat the packet and not collide */
   13556:	fb00 3003 	mla	r0, r0, r3, r3
   1355a:	f002 ffba 	bl	164d2 <delay_us>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:196
	nordic_rx_to_Stanby1();
   1355e:	f000 f953 	bl	13808 <nordic_rx_to_Stanby1>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:197
	nordic_standby1_to_tx_mode1();
   13562:	f000 f945 	bl	137f0 <nordic_standby1_to_tx_mode1>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:200
	nordic_mode1_send_single_packet(p, len);
   13566:	b2a9      	uxth	r1, r5
   13568:	4620      	mov	r0, r4
   1356a:	f000 f971 	bl	13850 <nordic_mode1_send_single_packet>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:201
	nordic_clear_packet_sent_flag();
   1356e:	f000 f965 	bl	1383c <nordic_clear_packet_sent_flag>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:204
	nordic_standby1_to_rx();
   13572:	f000 f951 	bl	13818 <nordic_standby1_to_rx>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:211
	if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   13576:	f003 ff7b 	bl	17470 <xTaskGetSchedulerState>
   1357a:	2802      	cmp	r0, #2
   1357c:	d104      	bne.n	13588 <nrf_driver_send+0x50>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:212
	    xSemaphoreGiveFromISR(g_nrf_activity_sem, NULL);
   1357e:	4b03      	ldr	r3, [pc, #12]	; (1358c <nrf_driver_send+0x54>)
   13580:	2100      	movs	r1, #0
   13582:	6818      	ldr	r0, [r3, #0]
   13584:	f003 fa00 	bl	16988 <xQueueGiveFromISR>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:216
}
   13588:	2001      	movs	r0, #1
   1358a:	bd38      	pop	{r3, r4, r5, pc}
   1358c:	2007c338 	.word	0x2007c338

00013590 <nrf_irq_callback>:
nrf_irq_callback():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:73
    long yieldRequired = 0;
   13590:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:72
{
   13592:	b507      	push	{r0, r1, r2, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:73
    long yieldRequired = 0;
   13594:	a902      	add	r1, sp, #8
   13596:	f841 3d04 	str.w	r3, [r1, #-4]!
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:74
    xSemaphoreGiveFromISR(g_nrf_activity_sem, &yieldRequired);
   1359a:	4b08      	ldr	r3, [pc, #32]	; (135bc <nrf_irq_callback+0x2c>)
   1359c:	6818      	ldr	r0, [r3, #0]
   1359e:	f003 f9f3 	bl	16988 <xQueueGiveFromISR>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:75
    portEND_SWITCHING_ISR(yieldRequired);
   135a2:	9b01      	ldr	r3, [sp, #4]
   135a4:	b13b      	cbz	r3, 135b6 <nrf_irq_callback+0x26>
   135a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   135aa:	4b05      	ldr	r3, [pc, #20]	; (135c0 <nrf_irq_callback+0x30>)
   135ac:	601a      	str	r2, [r3, #0]
   135ae:	f3bf 8f4f 	dsb	sy
   135b2:	f3bf 8f6f 	isb	sy
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:76
}
   135b6:	b003      	add	sp, #12
   135b8:	f85d fb04 	ldr.w	pc, [sp], #4
   135bc:	2007c338 	.word	0x2007c338
   135c0:	e000ed04 	.word	0xe000ed04

000135c4 <nrf_driver_receive>:
nrf_driver_receive():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:219
{
   135c4:	b538      	push	{r3, r4, r5, lr}
   135c6:	4604      	mov	r4, r0
   135c8:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:222
	if(nordic_is_packet_available())
   135ca:	f000 f967 	bl	1389c <nordic_is_packet_available>
   135ce:	b148      	cbz	r0, 135e4 <nrf_driver_receive+0x20>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:224
		nordic_read_rx_fifo(p, len);
   135d0:	b2a9      	uxth	r1, r5
   135d2:	4620      	mov	r0, r4
   135d4:	f000 f96e 	bl	138b4 <nordic_read_rx_fifo>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:228
		if (!nordic_is_packet_available()) {
   135d8:	f000 f960 	bl	1389c <nordic_is_packet_available>
   135dc:	b908      	cbnz	r0, 135e2 <nrf_driver_receive+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:229
		    nordic_clear_packet_available_flag();
   135de:	f000 f965 	bl	138ac <nordic_clear_packet_available_flag>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:228
		if (!nordic_is_packet_available()) {
   135e2:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:235
}
   135e4:	bd38      	pop	{r3, r4, r5, pc}

000135e6 <nrf_driver_get_timer>:
nrf_driver_get_timer():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257

static int nrf_driver_get_timer(void *p, int len)
{
    const int ok = (sizeof(uint32_t) == len) && (NULL != p);
   135e6:	2904      	cmp	r1, #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:256
{
   135e8:	b538      	push	{r3, r4, r5, lr}
   135ea:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257
    const int ok = (sizeof(uint32_t) == len) && (NULL != p);
   135ec:	d10d      	bne.n	1360a <nrf_driver_get_timer+0x24>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257 (discriminator 1)
   135ee:	1c04      	adds	r4, r0, #0
   135f0:	bf18      	it	ne
   135f2:	2401      	movne	r4, #1
sys_get_uptime_ms():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116 (discriminator 6)
   135f4:	f7fc fe80 	bl	102f8 <sys_get_uptime_us>
nrf_driver_get_timer():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:260 (discriminator 6)
    const uint32_t timerValueMs = (sys_get_uptime_ms() & UINT32_MAX);

    if (ok) {
   135f8:	b12c      	cbz	r4, 13606 <nrf_driver_get_timer+0x20>
sys_get_uptime_ms():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   135fa:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   135fe:	2300      	movs	r3, #0
   13600:	f006 fe36 	bl	1a270 <__aeabi_uldivmod>
nrf_driver_get_timer():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:258
    const uint32_t timerValueMs = (sys_get_uptime_ms() & UINT32_MAX);
   13604:	6028      	str	r0, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:266
        uint32_t *timer = (uint32_t*)p;
        *timer = timerValueMs;
    }

    return ok;
}
   13606:	4620      	mov	r0, r4
   13608:	bd38      	pop	{r3, r4, r5, pc}
   1360a:	2400      	movs	r4, #0
   1360c:	e7f2      	b.n	135f4 <nrf_driver_get_timer+0xe>
   1360e:	Address 0x000000000001360e is out of bounds.


00013610 <wireless_init>:
wireless_init():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:79
{
   13610:	b500      	push	{lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:82
    driver.radio_init = nrf_driver_init;
   13612:	4b0c      	ldr	r3, [pc, #48]	; (13644 <wireless_init+0x34>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:79
{
   13614:	b08d      	sub	sp, #52	; 0x34
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:82
    driver.radio_init = nrf_driver_init;
   13616:	9309      	str	r3, [sp, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:83
    driver.radio_recv = nrf_driver_receive;
   13618:	4b0b      	ldr	r3, [pc, #44]	; (13648 <wireless_init+0x38>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:85
    driver.get_timer  = nrf_driver_get_timer;
   1361a:	4a0c      	ldr	r2, [pc, #48]	; (1364c <wireless_init+0x3c>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:83
    driver.radio_recv = nrf_driver_receive;
   1361c:	930b      	str	r3, [sp, #44]	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:84
    driver.radio_send = nrf_driver_send;
   1361e:	4b0c      	ldr	r3, [pc, #48]	; (13650 <wireless_init+0x40>)
   13620:	930a      	str	r3, [sp, #40]	; 0x28
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:85
    driver.get_timer  = nrf_driver_get_timer;
   13622:	ab0c      	add	r3, sp, #48	; 0x30
   13624:	f843 2d10 	str.w	r2, [r3, #-16]!
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:88
    return mesh_init(WIRELESS_NODE_ADDR, true, WIRELESS_NODE_NAME, driver, false);
   13628:	2200      	movs	r2, #0
   1362a:	9204      	str	r2, [sp, #16]
   1362c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   1362e:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
   13632:	4b08      	ldr	r3, [pc, #32]	; (13654 <wireless_init+0x44>)
   13634:	4a08      	ldr	r2, [pc, #32]	; (13658 <wireless_init+0x48>)
   13636:	2101      	movs	r1, #1
   13638:	206a      	movs	r0, #106	; 0x6a
   1363a:	f000 fd15 	bl	14068 <mesh_init>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:89
}
   1363e:	b00d      	add	sp, #52	; 0x34
   13640:	f85d fb04 	ldr.w	pc, [sp], #4
   13644:	00013479 	.word	0x00013479
   13648:	000135c5 	.word	0x000135c5
   1364c:	000135e7 	.word	0x000135e7
   13650:	00013539 	.word	0x00013539
   13654:	000134e9 	.word	0x000134e9
   13658:	0002160c 	.word	0x0002160c

0001365c <wireless_service>:
wireless_service():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:112
{
   1365c:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:125
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   1365e:	f003 ff07 	bl	17470 <xTaskGetSchedulerState>
   13662:	4b0f      	ldr	r3, [pc, #60]	; (136a0 <wireless_service+0x44>)
   13664:	2802      	cmp	r0, #2
board_io_nordic_irq_sig():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:59
static inline char board_io_nordic_irq_sig(void) { return !!(LPC_GPIO0->FIOPIN & (1 << BIO_NORDIC_IRQ_P0PIN)); }
   13666:	695b      	ldr	r3, [r3, #20]
wireless_service():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:125
   13668:	d112      	bne.n	13690 <wireless_service+0x34>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:126
        if (!nordic_intr_signal()) {
   1366a:	025a      	lsls	r2, r3, #9
   1366c:	d50c      	bpl.n	13688 <wireless_service+0x2c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:127
            const TickType_t blockTime = mesh_get_pnd_pkt_count() ? 1 : portMAX_DELAY;
   1366e:	f000 ff1d 	bl	144ac <mesh_get_pnd_pkt_count>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:128
            xSemaphoreTake(g_nrf_activity_sem, blockTime);
   13672:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:127
            const TickType_t blockTime = mesh_get_pnd_pkt_count() ? 1 : portMAX_DELAY;
   13674:	2800      	cmp	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:128
            xSemaphoreTake(g_nrf_activity_sem, blockTime);
   13676:	480b      	ldr	r0, [pc, #44]	; (136a4 <wireless_service+0x48>)
   13678:	bf14      	ite	ne
   1367a:	2201      	movne	r2, #1
   1367c:	f04f 32ff 	moveq.w	r2, #4294967295	; 0xffffffff
   13680:	4619      	mov	r1, r3
   13682:	6800      	ldr	r0, [r0, #0]
   13684:	f003 f9b4 	bl	169f0 <xQueueGenericReceive>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:138
}
   13688:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:130
        mesh_service();
   1368c:	f000 bda6 	b.w	141dc <mesh_service>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:134
        if (nordic_intr_signal() || mesh_get_pnd_pkt_count() > 0) {
   13690:	025b      	lsls	r3, r3, #9
   13692:	d5f9      	bpl.n	13688 <wireless_service+0x2c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:134 (discriminator 1)
   13694:	f000 ff0a 	bl	144ac <mesh_get_pnd_pkt_count>
   13698:	2800      	cmp	r0, #0
   1369a:	d1f5      	bne.n	13688 <wireless_service+0x2c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:138
}
   1369c:	bd08      	pop	{r3, pc}
   1369e:	bf00      	nop
   136a0:	2009c000 	.word	0x2009c000
   136a4:	2007c338 	.word	0x2007c338

000136a8 <nordic_transfer>:
nordic_transfer():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:24



// LOW LEVEL NORDIC IO FUNCTION:
static char nordic_transfer(char command, char* data, unsigned short length, bool copy)
{
   136a8:	b530      	push	{r4, r5, lr}
board_io_nordic_cs():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:57
static inline char board_io_nordic_cs(void)      { LPC_GPIO0->FIOCLR = (1 << BIO_NORDIC_CS_P0PIN); return 1; }
   136aa:	f44f 3580 	mov.w	r5, #65536	; 0x10000
   136ae:	4c36      	ldr	r4, [pc, #216]	; (13788 <nordic_transfer+0xe0>)
   136b0:	61e5      	str	r5, [r4, #28]
ssp_exchange_byte():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:75
    pSSP->DR = out;
   136b2:	4c36      	ldr	r4, [pc, #216]	; (1378c <nordic_transfer+0xe4>)
   136b4:	60a0      	str	r0, [r4, #8]
   136b6:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:76
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   136b8:	68c4      	ldr	r4, [r0, #12]
   136ba:	06e4      	lsls	r4, r4, #27
   136bc:	d4fc      	bmi.n	136b8 <nordic_transfer+0x10>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    return pSSP->DR;
   136be:	6880      	ldr	r0, [r0, #8]
   136c0:	b2c0      	uxtb	r0, r0
nordic_transfer():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:31

	NORDIC_LOCK_SPI();
	NORDIC_CS_ENABLE();

	char status = NORDIC_EXCHANGE_SPI(command);
	if(copy) {
   136c2:	b963      	cbnz	r3, 136de <nordic_transfer+0x36>
   136c4:	460b      	mov	r3, r1
ssp_exchange_byte():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:75
    pSSP->DR = out;
   136c6:	4c31      	ldr	r4, [pc, #196]	; (1378c <nordic_transfer+0xe4>)
nordic_transfer():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:35 (discriminator 1)
	    NORDIC_EXCHANGE_MULTI_BYTE(data, length);
	}
	else {
        for( i = 0; i < length; i++) {
   136c8:	1a5d      	subs	r5, r3, r1
   136ca:	4295      	cmp	r5, r2
   136cc:	da09      	bge.n	136e2 <nordic_transfer+0x3a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:36 (discriminator 3)
            NORDIC_EXCHANGE_SPI(data[i]);
   136ce:	f813 5b01 	ldrb.w	r5, [r3], #1
ssp_exchange_byte():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:75 (discriminator 3)
   136d2:	60a5      	str	r5, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:76
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   136d4:	68e5      	ldr	r5, [r4, #12]
   136d6:	06ed      	lsls	r5, r5, #27
   136d8:	d4fc      	bmi.n	136d4 <nordic_transfer+0x2c>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    return pSSP->DR;
   136da:	68a5      	ldr	r5, [r4, #8]
   136dc:	e7f4      	b.n	136c8 <nordic_transfer+0x20>
   136de:	4b2b      	ldr	r3, [pc, #172]	; (1378c <nordic_transfer+0xe4>)
ssp_exchange_data():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:94
    while (len > 0) {
   136e0:	b922      	cbnz	r2, 136ec <nordic_transfer+0x44>
board_io_nordic_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:58
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
   136e2:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   136e6:	4b28      	ldr	r3, [pc, #160]	; (13788 <nordic_transfer+0xe0>)
   136e8:	619a      	str	r2, [r3, #24]
nordic_transfer():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:44

	NORDIC_CS_DISABLE();
	NORDIC_UNLOCK_SPI();

	return status;
}
   136ea:	bd30      	pop	{r4, r5, pc}
ssp_exchange_data():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:95
        if (len >= spi_fifo_size) {
   136ec:	2a07      	cmp	r2, #7
   136ee:	780c      	ldrb	r4, [r1, #0]
   136f0:	dd29      	ble.n	13746 <nordic_transfer+0x9e>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:96
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   136f2:	609c      	str	r4, [r3, #8]
   136f4:	784c      	ldrb	r4, [r1, #1]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:100
            len -= spi_fifo_size;
   136f6:	3a08      	subs	r2, #8
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:96
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   136f8:	609c      	str	r4, [r3, #8]
   136fa:	788c      	ldrb	r4, [r1, #2]
   136fc:	609c      	str	r4, [r3, #8]
   136fe:	78cc      	ldrb	r4, [r1, #3]
   13700:	609c      	str	r4, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:97
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13702:	790c      	ldrb	r4, [r1, #4]
   13704:	609c      	str	r4, [r3, #8]
   13706:	794c      	ldrb	r4, [r1, #5]
   13708:	609c      	str	r4, [r3, #8]
   1370a:	798c      	ldrb	r4, [r1, #6]
   1370c:	609c      	str	r4, [r3, #8]
   1370e:	79cd      	ldrb	r5, [r1, #7]
   13710:	f101 0408 	add.w	r4, r1, #8
   13714:	609d      	str	r5, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:101
            while (!(pSSP->RIS & rx_fifo_half_full_bitmask));
   13716:	699d      	ldr	r5, [r3, #24]
   13718:	076d      	lsls	r5, r5, #29
   1371a:	d5fc      	bpl.n	13716 <nordic_transfer+0x6e>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:102
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   1371c:	689d      	ldr	r5, [r3, #8]
   1371e:	700d      	strb	r5, [r1, #0]
   13720:	689d      	ldr	r5, [r3, #8]
   13722:	704d      	strb	r5, [r1, #1]
   13724:	689d      	ldr	r5, [r3, #8]
   13726:	708d      	strb	r5, [r1, #2]
   13728:	689d      	ldr	r5, [r3, #8]
   1372a:	70cd      	strb	r5, [r1, #3]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:105
            while(pSSP->SR & spi_busy_bitmask);
   1372c:	68dd      	ldr	r5, [r3, #12]
   1372e:	06ed      	lsls	r5, r5, #27
   13730:	d4fc      	bmi.n	1372c <nordic_transfer+0x84>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:106
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   13732:	689d      	ldr	r5, [r3, #8]
   13734:	710d      	strb	r5, [r1, #4]
   13736:	689d      	ldr	r5, [r3, #8]
   13738:	714d      	strb	r5, [r1, #5]
   1373a:	689d      	ldr	r5, [r3, #8]
   1373c:	718d      	strb	r5, [r1, #6]
   1373e:	689d      	ldr	r5, [r3, #8]
   13740:	71cd      	strb	r5, [r1, #7]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:109
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13742:	4621      	mov	r1, r4
   13744:	e7cc      	b.n	136e0 <nordic_transfer+0x38>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:108
        else if (len >= spi_half_fifo_size) {
   13746:	2a03      	cmp	r2, #3
   13748:	dd14      	ble.n	13774 <nordic_transfer+0xcc>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:109
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1374a:	609c      	str	r4, [r3, #8]
   1374c:	784c      	ldrb	r4, [r1, #1]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:110
            len -= spi_half_fifo_size;
   1374e:	3a04      	subs	r2, #4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:109
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13750:	609c      	str	r4, [r3, #8]
   13752:	788c      	ldrb	r4, [r1, #2]
   13754:	609c      	str	r4, [r3, #8]
   13756:	78cd      	ldrb	r5, [r1, #3]
   13758:	1d0c      	adds	r4, r1, #4
   1375a:	609d      	str	r5, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            while(pSSP->SR & spi_busy_bitmask);
   1375c:	68dd      	ldr	r5, [r3, #12]
   1375e:	06ed      	lsls	r5, r5, #27
   13760:	d4fc      	bmi.n	1375c <nordic_transfer+0xb4>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:112
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   13762:	689d      	ldr	r5, [r3, #8]
   13764:	700d      	strb	r5, [r1, #0]
   13766:	689d      	ldr	r5, [r3, #8]
   13768:	704d      	strb	r5, [r1, #1]
   1376a:	689d      	ldr	r5, [r3, #8]
   1376c:	708d      	strb	r5, [r1, #2]
   1376e:	689d      	ldr	r5, [r3, #8]
   13770:	70cd      	strb	r5, [r1, #3]
   13772:	e7e6      	b.n	13742 <nordic_transfer+0x9a>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:115
            pSSP->DR = *dataOut++;
   13774:	1c4d      	adds	r5, r1, #1
   13776:	609c      	str	r4, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:116
            --len;
   13778:	3a01      	subs	r2, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            while(pSSP->SR & spi_busy_bitmask);
   1377a:	68dc      	ldr	r4, [r3, #12]
   1377c:	06e4      	lsls	r4, r4, #27
   1377e:	d4fc      	bmi.n	1377a <nordic_transfer+0xd2>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:118
            *dataIn++ = pSSP->DR;
   13780:	689c      	ldr	r4, [r3, #8]
   13782:	700c      	strb	r4, [r1, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:115
            pSSP->DR = *dataOut++;
   13784:	4629      	mov	r1, r5
   13786:	e7ab      	b.n	136e0 <nordic_transfer+0x38>
   13788:	2009c000 	.word	0x2009c000
   1378c:	40088000 	.word	0x40088000

00013790 <nordic_readRegister>:
nordic_readRegister():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:53
#define nordic_outputData(command, data, length)	\
			nordic_transfer(command, data, length, false)

static char nordic_readRegister(char reg)
{
	char data = 0;
   13790:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:52
{
   13792:	b507      	push	{r0, r1, r2, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:53
	char data = 0;
   13794:	a902      	add	r1, sp, #8
   13796:	f801 3d01 	strb.w	r3, [r1, #-1]!
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:56
	char opcode = (reg & 0x1F) | 0x00;

	nordic_exchangeData(opcode, &data, 1);
   1379a:	2301      	movs	r3, #1
   1379c:	f000 001f 	and.w	r0, r0, #31
   137a0:	461a      	mov	r2, r3
   137a2:	f7ff ff81 	bl	136a8 <nordic_transfer>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:58
	return data;
}
   137a6:	f89d 0007 	ldrb.w	r0, [sp, #7]
   137aa:	b003      	add	sp, #12
   137ac:	f85d fb04 	ldr.w	pc, [sp], #4

000137b0 <nordic_writeRegister>:
nordic_writeRegister():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:61

static void nordic_writeRegister(char reg, char data)
{
   137b0:	b513      	push	{r0, r1, r4, lr}
   137b2:	ac02      	add	r4, sp, #8
   137b4:	f804 1d01 	strb.w	r1, [r4, #-1]!
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:62
	char opcode = (reg & 0x1F) | 0x20;
   137b8:	f000 001f 	and.w	r0, r0, #31
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:63
	nordic_outputData(opcode, &data, 1);
   137bc:	2300      	movs	r3, #0
   137be:	2201      	movs	r2, #1
   137c0:	4621      	mov	r1, r4
   137c2:	f040 0020 	orr.w	r0, r0, #32
   137c6:	f7ff ff6f 	bl	136a8 <nordic_transfer>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:64
}
   137ca:	b002      	add	sp, #8
   137cc:	bd10      	pop	{r4, pc}

000137ce <nordic_is_tx_fifo_empty>:
nordic_is_tx_fifo_empty():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:117
bool nordic_is_tx_fifo_full()
{
	return !!(nordic_readStatusRegister() & (1<<0));
}
bool nordic_is_tx_fifo_empty()
{
   137ce:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:118
	return !!(nordic_readRegister(0x17) & (1<<4));
   137d0:	2017      	movs	r0, #23
   137d2:	f7ff ffdd 	bl	13790 <nordic_readRegister>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:119
}
   137d6:	f3c0 1000 	ubfx	r0, r0, #4, #1
   137da:	bd08      	pop	{r3, pc}

000137dc <nordic_clear_all_intr_flags>:
nordic_clear_all_intr_flags():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:122
void nordic_clear_all_intr_flags()
{
	nordic_writeRegister(7, 0x70);
   137dc:	2170      	movs	r1, #112	; 0x70
   137de:	2007      	movs	r0, #7
   137e0:	f7ff bfe6 	b.w	137b0 <nordic_writeRegister>

000137e4 <nordic_queue_tx_fifo>:
nordic_queue_tx_fifo():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:126
}
void nordic_queue_tx_fifo(char *data, unsigned short length)
{
	nordic_outputData(0xA0, data, length);
   137e4:	460a      	mov	r2, r1
   137e6:	2300      	movs	r3, #0
   137e8:	4601      	mov	r1, r0
   137ea:	20a0      	movs	r0, #160	; 0xa0
   137ec:	f7ff bf5c 	b.w	136a8 <nordic_transfer>

000137f0 <nordic_standby1_to_tx_mode1>:
nordic_standby1_to_tx_mode1():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:147

    NORDIC_CE_LOW();
    nordic_flush_tx_fifo();
}
void nordic_standby1_to_tx_mode1()
{
   137f0:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:148
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x01));	// Set the PRIM_RX to 0
   137f2:	2000      	movs	r0, #0
   137f4:	f7ff ffcc 	bl	13790 <nordic_readRegister>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:149
}
   137f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:148
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x01));	// Set the PRIM_RX to 0
   137fc:	f000 01fe 	and.w	r1, r0, #254	; 0xfe
   13800:	2000      	movs	r0, #0
   13802:	f7ff bfd5 	b.w	137b0 <nordic_writeRegister>
   13806:	Address 0x0000000000013806 is out of bounds.


00013808 <nordic_rx_to_Stanby1>:
board_io_nordic_ce_low():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
static inline void board_io_nordic_ce_high(void) { LPC_GPIO1->FIOSET = (1 << BIO_NORDIC_CE_P1PIN); }
static inline void board_io_nordic_ce_low (void) { LPC_GPIO1->FIOCLR = (1 << BIO_NORDIC_CE_P1PIN); }
   13808:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   1380c:	4b01      	ldr	r3, [pc, #4]	; (13814 <nordic_rx_to_Stanby1+0xc>)
   1380e:	61da      	str	r2, [r3, #28]
   13810:	4770      	bx	lr
   13812:	bf00      	nop
   13814:	2009c020 	.word	0x2009c020

00013818 <nordic_standby1_to_rx>:
nordic_standby1_to_rx():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:161
void nordic_rx_to_Stanby1()
{
	NORDIC_CE_LOW();
}
void nordic_standby1_to_rx()
{
   13818:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:162
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x01));	// Set the PRIM_RX to 1
   1381a:	2000      	movs	r0, #0
   1381c:	f7ff ffb8 	bl	13790 <nordic_readRegister>
   13820:	f040 0101 	orr.w	r1, r0, #1
   13824:	b2c9      	uxtb	r1, r1
   13826:	2000      	movs	r0, #0
   13828:	f7ff ffc2 	bl	137b0 <nordic_writeRegister>
board_io_nordic_ce_high():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:61
static inline void board_io_nordic_ce_high(void) { LPC_GPIO1->FIOSET = (1 << BIO_NORDIC_CE_P1PIN); }
   1382c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   13830:	4b01      	ldr	r3, [pc, #4]	; (13838 <nordic_standby1_to_rx+0x20>)
   13832:	619a      	str	r2, [r3, #24]
   13834:	bd08      	pop	{r3, pc}
   13836:	bf00      	nop
   13838:	2009c020 	.word	0x2009c020

0001383c <nordic_clear_packet_sent_flag>:
nordic_clear_packet_sent_flag():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:198
{
	return !!(nordic_readStatusRegister() & (1<<5));
}
void nordic_clear_packet_sent_flag()
{
	nordic_writeRegister(7, (1<<5));
   1383c:	2120      	movs	r1, #32
   1383e:	2007      	movs	r0, #7
   13840:	f7ff bfb6 	b.w	137b0 <nordic_writeRegister>

00013844 <nordic_flush_tx_fifo>:
nordic_flush_tx_fifo():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:210
{
	nordic_writeRegister(7, (1<<4));
}
void nordic_flush_tx_fifo()
{
	nordic_outputData(0xE1, 0, 0);
   13844:	2300      	movs	r3, #0
   13846:	20e1      	movs	r0, #225	; 0xe1
   13848:	461a      	mov	r2, r3
   1384a:	4619      	mov	r1, r3
   1384c:	f7ff bf2c 	b.w	136a8 <nordic_transfer>

00013850 <nordic_mode1_send_single_packet>:
nordic_mode1_send_single_packet():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:130
{
   13850:	b537      	push	{r0, r1, r2, r4, r5, lr}
   13852:	4604      	mov	r4, r0
   13854:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:131
    nordic_flush_tx_fifo();
   13856:	f7ff fff5 	bl	13844 <nordic_flush_tx_fifo>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:132
    nordic_queue_tx_fifo(data, length);
   1385a:	4620      	mov	r0, r4
   1385c:	4629      	mov	r1, r5
   1385e:	f7ff ffc1 	bl	137e4 <nordic_queue_tx_fifo>
board_io_nordic_ce_high():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:61
   13862:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   13866:	4c0c      	ldr	r4, [pc, #48]	; (13898 <nordic_mode1_send_single_packet+0x48>)
   13868:	61a2      	str	r2, [r4, #24]
nordic_mode1_send_single_packet():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:138
    volatile uint16_t i = 0;
   1386a:	2200      	movs	r2, #0
   1386c:	f8ad 2006 	strh.w	r2, [sp, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:139 (discriminator 2)
    while (++i != 0 && !nordic_is_tx_fifo_empty()) {
   13870:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   13874:	3301      	adds	r3, #1
   13876:	b29b      	uxth	r3, r3
   13878:	f8ad 3006 	strh.w	r3, [sp, #6]
   1387c:	b933      	cbnz	r3, 1388c <nordic_mode1_send_single_packet+0x3c>
board_io_nordic_ce_low():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
static inline void board_io_nordic_ce_low (void) { LPC_GPIO1->FIOCLR = (1 << BIO_NORDIC_CE_P1PIN); }
   1387e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   13882:	61e3      	str	r3, [r4, #28]
nordic_mode1_send_single_packet():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:144
    nordic_flush_tx_fifo();
   13884:	f7ff ffde 	bl	13844 <nordic_flush_tx_fifo>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:145
}
   13888:	b003      	add	sp, #12
   1388a:	bd30      	pop	{r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:139 (discriminator 1)
    while (++i != 0 && !nordic_is_tx_fifo_empty()) {
   1388c:	f7ff ff9f 	bl	137ce <nordic_is_tx_fifo_empty>
   13890:	2800      	cmp	r0, #0
   13892:	d0ed      	beq.n	13870 <nordic_mode1_send_single_packet+0x20>
   13894:	e7f3      	b.n	1387e <nordic_mode1_send_single_packet+0x2e>
   13896:	bf00      	nop
   13898:	2009c020 	.word	0x2009c020

0001389c <nordic_is_packet_available>:
nordic_is_packet_available():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:214
}

bool nordic_is_packet_available()
{
   1389c:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:221
     * and is manually cleared by clear_packet_available_flag() and doesn't
     * really cover us in the case when we may get multiple rx payloads
     * into the rx fifo. Therefore, reading 0x17 register's bit 0 is
     * more reliable because it states when rx fifo is empty (when 1).
     */
	return !(nordic_readRegister(0x17) & (1<<0));
   1389e:	2017      	movs	r0, #23
   138a0:	f7ff ff76 	bl	13790 <nordic_readRegister>
   138a4:	43c0      	mvns	r0, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:223
	//return !!(nordic_readStatusRegister() & (1<<6));
}
   138a6:	f000 0001 	and.w	r0, r0, #1
   138aa:	bd08      	pop	{r3, pc}

000138ac <nordic_clear_packet_available_flag>:
nordic_clear_packet_available_flag():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:226
void nordic_clear_packet_available_flag()
{
	nordic_writeRegister(7, (1<<6));
   138ac:	2140      	movs	r1, #64	; 0x40
   138ae:	2007      	movs	r0, #7
   138b0:	f7ff bf7e 	b.w	137b0 <nordic_writeRegister>

000138b4 <nordic_read_rx_fifo>:
nordic_read_rx_fifo():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:229
}
char nordic_read_rx_fifo(char *data, unsigned short length)
{
   138b4:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:230
	return ((nordic_exchangeData(0x61, data, length) & 0x0E) >> 1);
   138b6:	460a      	mov	r2, r1
   138b8:	2301      	movs	r3, #1
   138ba:	4601      	mov	r1, r0
   138bc:	2061      	movs	r0, #97	; 0x61
   138be:	f7ff fef3 	bl	136a8 <nordic_transfer>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:231
}
   138c2:	f3c0 0042 	ubfx	r0, r0, #1, #3
   138c6:	bd08      	pop	{r3, pc}

000138c8 <nordic_flush_rx_fifo>:
nordic_flush_rx_fifo():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:234
void nordic_flush_rx_fifo()
{
	nordic_outputData(0xE2, 0, 0);
   138c8:	2300      	movs	r3, #0
   138ca:	20e2      	movs	r0, #226	; 0xe2
   138cc:	461a      	mov	r2, r3
   138ce:	4619      	mov	r1, r3
   138d0:	f7ff beea 	b.w	136a8 <nordic_transfer>

000138d4 <nordic_set_intr_signals>:
nordic_set_intr_signals():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:246



// CONFIGURATION FUNCTIONS:
void nordic_set_intr_signals(bool rx, bool tx, bool maxTransmissions)
{
   138d4:	b570      	push	{r4, r5, r6, lr}
   138d6:	4606      	mov	r6, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:247
	char configRegister = nordic_readRegister(0);
   138d8:	2000      	movs	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:246
{
   138da:	460d      	mov	r5, r1
   138dc:	4614      	mov	r4, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:247
	char configRegister = nordic_readRegister(0);
   138de:	f7ff ff57 	bl	13790 <nordic_readRegister>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249

	configRegister =               rx ? (configRegister & ~(1<<6)) : (configRegister | (1<<6));
   138e2:	b166      	cbz	r6, 138fe <nordic_set_intr_signals+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249 (discriminator 1)
   138e4:	f000 00bf 	and.w	r0, r0, #191	; 0xbf
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 4)
	configRegister =               tx ? (configRegister & ~(1<<5)) : (configRegister | (1<<5));
   138e8:	b16d      	cbz	r5, 13906 <nordic_set_intr_signals+0x32>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 1)
   138ea:	f000 01df 	and.w	r1, r0, #223	; 0xdf
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 4)
	configRegister = maxTransmissions ? (configRegister & ~(1<<4)) : (configRegister | (1<<4));
   138ee:	b16c      	cbz	r4, 1390c <nordic_set_intr_signals+0x38>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 1)
   138f0:	f001 01ef 	and.w	r1, r1, #239	; 0xef
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:253 (discriminator 4)

	nordic_writeRegister(0, configRegister);
   138f4:	2000      	movs	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:254 (discriminator 4)
}
   138f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:253 (discriminator 4)
	nordic_writeRegister(0, configRegister);
   138fa:	f7ff bf59 	b.w	137b0 <nordic_writeRegister>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249 (discriminator 2)
	configRegister =               rx ? (configRegister & ~(1<<6)) : (configRegister | (1<<6));
   138fe:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   13902:	b2c0      	uxtb	r0, r0
   13904:	e7f0      	b.n	138e8 <nordic_set_intr_signals+0x14>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 2)
	configRegister =               tx ? (configRegister & ~(1<<5)) : (configRegister | (1<<5));
   13906:	f040 0120 	orr.w	r1, r0, #32
   1390a:	e7f0      	b.n	138ee <nordic_set_intr_signals+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 2)
	configRegister = maxTransmissions ? (configRegister & ~(1<<4)) : (configRegister | (1<<4));
   1390c:	f041 0110 	orr.w	r1, r1, #16
   13910:	e7f0      	b.n	138f4 <nordic_set_intr_signals+0x20>

00013912 <nordic_set_crc>:
nordic_set_crc():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:262
{
	return nordic_readRegister(7);
}

void nordic_set_crc(unsigned char length)
{
   13912:	b510      	push	{r4, lr}
   13914:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:263
	char configRegister = nordic_readRegister(0);
   13916:	2000      	movs	r0, #0
   13918:	f7ff ff3a 	bl	13790 <nordic_readRegister>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:266

	configRegister |= (1<<3);						// Enable CRC for now
	if(0 == length) configRegister &= ~(1<<3);		// Disable CRC if length is 0
   1391c:	b934      	cbnz	r4, 1392c <nordic_set_crc+0x1a>
   1391e:	f000 01f7 	and.w	r1, r0, #247	; 0xf7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:270
	else if(1 == length) configRegister &= ~(1<<2);	// 1Byte CRC
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC

	nordic_writeRegister(0, configRegister);
   13922:	2000      	movs	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:271
}
   13924:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:270
	nordic_writeRegister(0, configRegister);
   13928:	f7ff bf42 	b.w	137b0 <nordic_writeRegister>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:267
	else if(1 == length) configRegister &= ~(1<<2);	// 1Byte CRC
   1392c:	2c01      	cmp	r4, #1
   1392e:	d104      	bne.n	1393a <nordic_set_crc+0x28>
   13930:	f000 01fb 	and.w	r1, r0, #251	; 0xfb
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:267 (discriminator 1)
   13934:	f041 0108 	orr.w	r1, r1, #8
   13938:	e7f3      	b.n	13922 <nordic_set_crc+0x10>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:268
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC
   1393a:	2c02      	cmp	r4, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:265
	configRegister |= (1<<3);						// Enable CRC for now
   1393c:	bf14      	ite	ne
   1393e:	f040 0108 	orrne.w	r1, r0, #8
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:268
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC
   13942:	f040 010c 	orreq.w	r1, r0, #12
   13946:	b2c9      	uxtb	r1, r1
   13948:	e7eb      	b.n	13922 <nordic_set_crc+0x10>

0001394a <nordic_power_up>:
nordic_power_up():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:274

void nordic_power_up()
{
   1394a:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:275
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x02));
   1394c:	2000      	movs	r0, #0
   1394e:	f7ff ff1f 	bl	13790 <nordic_readRegister>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:276
}
   13952:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:275
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x02));
   13956:	f040 0102 	orr.w	r1, r0, #2
   1395a:	b2c9      	uxtb	r1, r1
   1395c:	2000      	movs	r0, #0
   1395e:	f7ff bf27 	b.w	137b0 <nordic_writeRegister>

00013962 <nordic_power_down>:
nordic_power_down():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:278
void nordic_power_down()
{
   13962:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:279
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x02));
   13964:	2000      	movs	r0, #0
   13966:	f7ff ff13 	bl	13790 <nordic_readRegister>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:280
}
   1396a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:279
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x02));
   1396e:	f000 01fd 	and.w	r1, r0, #253	; 0xfd
   13972:	2000      	movs	r0, #0
   13974:	f7ff bf1c 	b.w	137b0 <nordic_writeRegister>

00013978 <nordic_set_channel>:
nordic_set_channel():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:283
void nordic_set_channel(unsigned short MHz)
{
	if(MHz > (2400 + 125)) MHz = (2400+125);
   13978:	f640 13dd 	movw	r3, #2525	; 0x9dd
   1397c:	4298      	cmp	r0, r3
   1397e:	d80b      	bhi.n	13998 <nordic_set_channel+0x20>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:284
	else if(MHz < 2400)    MHz = 2402;
   13980:	f640 1362 	movw	r3, #2402	; 0x962
   13984:	f5b0 6f16 	cmp.w	r0, #2400	; 0x960
   13988:	bf38      	it	cc
   1398a:	4618      	movcc	r0, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:286

	MHz -= 2400;
   1398c:	f5a0 6116 	sub.w	r1, r0, #2400	; 0x960
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:287
	nordic_writeRegister(5, (char)MHz);
   13990:	b2c9      	uxtb	r1, r1
   13992:	2005      	movs	r0, #5
   13994:	f7ff bf0c 	b.w	137b0 <nordic_writeRegister>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:283
	if(MHz > (2400 + 125)) MHz = (2400+125);
   13998:	4618      	mov	r0, r3
   1399a:	e7f7      	b.n	1398c <nordic_set_channel+0x14>

0001399c <nordic_set_air_data_rate>:
nordic_set_air_data_rate():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:297
		nordic_writeRegister(6, (nordic_readRegister(6) | 0x80));
	else
		nordic_writeRegister(6, (nordic_readRegister(6) & ~0x80));
}
void nordic_set_air_data_rate(unsigned short kbps)
{
   1399c:	b510      	push	{r4, lr}
   1399e:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:298
	char currentRegData = nordic_readRegister(6);
   139a0:	2006      	movs	r0, #6
   139a2:	f7ff fef5 	bl	13790 <nordic_readRegister>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301

	currentRegData &= ~((1<<5) | (1<<3));	// Set configuration to 1Mbps for now.
	if(250  == kbps)      currentRegData |= (1<<5);
   139a6:	2cfa      	cmp	r4, #250	; 0xfa
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:300
	currentRegData &= ~((1<<5) | (1<<3));	// Set configuration to 1Mbps for now.
   139a8:	f000 01d7 	and.w	r1, r0, #215	; 0xd7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301
	if(250  == kbps)      currentRegData |= (1<<5);
   139ac:	d106      	bne.n	139bc <nordic_set_air_data_rate+0x20>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301 (discriminator 1)
   139ae:	f041 0120 	orr.w	r1, r1, #32
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:304
	else if(2000 == kbps) currentRegData |= (1<<3);

	nordic_writeRegister(6, currentRegData);
   139b2:	2006      	movs	r0, #6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:305
}
   139b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:304
	nordic_writeRegister(6, currentRegData);
   139b8:	f7ff befa 	b.w	137b0 <nordic_writeRegister>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:302
	else if(2000 == kbps) currentRegData |= (1<<3);
   139bc:	f5b4 6ffa 	cmp.w	r4, #2000	; 0x7d0
   139c0:	bf08      	it	eq
   139c2:	f041 0108 	orreq.w	r1, r1, #8
   139c6:	e7f4      	b.n	139b2 <nordic_set_air_data_rate+0x16>

000139c8 <nordic_set_power_level>:
nordic_set_power_level():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:307
void nordic_set_power_level(unsigned char powerLevel)
{
   139c8:	b510      	push	{r4, lr}
   139ca:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:311
	char currentRegData = 0;
	if(powerLevel > 3) powerLevel = 3;

	currentRegData  = nordic_readRegister(6) & ~(0x06);
   139cc:	2006      	movs	r0, #6
   139ce:	f7ff fedf 	bl	13790 <nordic_readRegister>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:312
	currentRegData |= (powerLevel << 1);
   139d2:	2c03      	cmp	r4, #3
   139d4:	bf28      	it	cs
   139d6:	2403      	movcs	r4, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:311
	currentRegData  = nordic_readRegister(6) & ~(0x06);
   139d8:	f020 0106 	bic.w	r1, r0, #6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:312
	currentRegData |= (powerLevel << 1);
   139dc:	ea41 0144 	orr.w	r1, r1, r4, lsl #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:314

	nordic_writeRegister(6, currentRegData);
   139e0:	b2c9      	uxtb	r1, r1
   139e2:	2006      	movs	r0, #6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:315
}
   139e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:314
	nordic_writeRegister(6, currentRegData);
   139e8:	f7ff bee2 	b.w	137b0 <nordic_writeRegister>

000139ec <nordic_set_auto_transmit_options>:
nordic_set_auto_transmit_options():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:325



// Nordic Enhanced shockburst Options
void nordic_set_auto_transmit_options(unsigned short txDelayUs, unsigned char retries)
{
   139ec:	f5b0 6f7a 	cmp.w	r0, #4000	; 0xfa0
   139f0:	bf28      	it	cs
   139f2:	f44f 607a 	movcs.w	r0, #4000	; 0xfa0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:330
	if(txDelayUs < 250)  txDelayUs = 250;
	if(txDelayUs > 4000) txDelayUs = 4000;
	if(retries > 15)     retries = 15;

	char waitDelay = (txDelayUs / 250) - 1;
   139f6:	28fa      	cmp	r0, #250	; 0xfa
   139f8:	bf38      	it	cc
   139fa:	20fa      	movcc	r0, #250	; 0xfa
   139fc:	23fa      	movs	r3, #250	; 0xfa
   139fe:	fbb0 f3f3 	udiv	r3, r0, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:332

	char controlReg = (waitDelay << 4) | retries;
   13a02:	290f      	cmp	r1, #15
   13a04:	bf28      	it	cs
   13a06:	210f      	movcs	r1, #15
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:330
	char waitDelay = (txDelayUs / 250) - 1;
   13a08:	3b01      	subs	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:332
	char controlReg = (waitDelay << 4) | retries;
   13a0a:	b2db      	uxtb	r3, r3
   13a0c:	ea41 1103 	orr.w	r1, r1, r3, lsl #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:333
	nordic_writeRegister(4, controlReg);
   13a10:	b2c9      	uxtb	r1, r1
   13a12:	2004      	movs	r0, #4
   13a14:	f7ff becc 	b.w	137b0 <nordic_writeRegister>

00013a18 <nordic_set_payload_for_pipe>:
nordic_set_payload_for_pipe():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:357

// Nordic Address & PIPE Configuration
void nordic_set_payload_for_pipe(unsigned char pipeNumber, unsigned char payload)
{
	const unsigned char pipeAddressBase = 0x11;
	unsigned char pipeAddress = pipeNumber + pipeAddressBase;
   13a18:	3011      	adds	r0, #17
   13a1a:	b2c0      	uxtb	r0, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:359

	if(pipeAddress > 0x16)
   13a1c:	2816      	cmp	r0, #22
   13a1e:	d804      	bhi.n	13a2a <nordic_set_payload_for_pipe+0x12>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:365
		return; // Invalid Pipe #

	if(payload > 32)
		payload = 32;

	nordic_writeRegister(pipeAddress, payload);
   13a20:	2920      	cmp	r1, #32
   13a22:	bf28      	it	cs
   13a24:	2120      	movcs	r1, #32
   13a26:	f7ff bec3 	b.w	137b0 <nordic_writeRegister>
   13a2a:	4770      	bx	lr

00013a2c <nordic_set_addr_width>:
nordic_set_addr_width():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:371
}
void nordic_set_addr_width(unsigned short width)
{
	char controlReg = 3; // 5-byte

	if(3 == width) controlReg = 1;
   13a2c:	2803      	cmp	r0, #3
   13a2e:	d006      	beq.n	13a3e <nordic_set_addr_width+0x12>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:372
	if(4 == width) controlReg = 2;
   13a30:	2804      	cmp	r0, #4
   13a32:	bf14      	ite	ne
   13a34:	2103      	movne	r1, #3
   13a36:	2102      	moveq	r1, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:374

	nordic_writeRegister(3, controlReg);
   13a38:	2003      	movs	r0, #3
   13a3a:	f7ff beb9 	b.w	137b0 <nordic_writeRegister>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:371
	if(3 == width) controlReg = 1;
   13a3e:	2101      	movs	r1, #1
   13a40:	e7fa      	b.n	13a38 <nordic_set_addr_width+0xc>

00013a42 <nordic_set_tx_address>:
nordic_set_tx_address():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:378
}
void nordic_set_tx_address(char* address, unsigned short length)
{
	nordic_outputData( (0x10 | 0x20), address, length);
   13a42:	460a      	mov	r2, r1
   13a44:	2300      	movs	r3, #0
   13a46:	4601      	mov	r1, r0
   13a48:	2030      	movs	r0, #48	; 0x30
   13a4a:	f7ff be2d 	b.w	136a8 <nordic_transfer>

00013a4e <nordic_set_rx_pipe0_addr>:
nordic_set_rx_pipe0_addr():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:382
}
void nordic_set_rx_pipe0_addr(char* address, unsigned short length)
{
	nordic_outputData( (0x0A | 0x20), address, length);
   13a4e:	460a      	mov	r2, r1
   13a50:	2300      	movs	r3, #0
   13a52:	4601      	mov	r1, r0
   13a54:	202a      	movs	r0, #42	; 0x2a
   13a56:	f7ff be27 	b.w	136a8 <nordic_transfer>
   13a5a:	Address 0x0000000000013a5a is out of bounds.


00013a5c <nordic_init>:
nordic_init():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:72
{
   13a5c:	b573      	push	{r0, r1, r4, r5, r6, lr}
   13a5e:	4604      	mov	r4, r0
   13a60:	460e      	mov	r6, r1
   13a62:	4615      	mov	r5, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:73
	nordic_flush_rx_fifo();
   13a64:	f7ff ff30 	bl	138c8 <nordic_flush_rx_fifo>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:74
	nordic_flush_tx_fifo();
   13a68:	f7ff feec 	bl	13844 <nordic_flush_tx_fifo>
board_io_nordic_ce_low():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
   13a6c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   13a70:	4b2a      	ldr	r3, [pc, #168]	; (13b1c <nordic_init+0xc0>)
   13a72:	61da      	str	r2, [r3, #28]
nordic_init():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:77
	nordic_power_down();
   13a74:	f7ff ff75 	bl	13962 <nordic_power_down>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:78
	nordic_set_intr_signals(true, false, false);
   13a78:	2200      	movs	r2, #0
   13a7a:	2001      	movs	r0, #1
   13a7c:	4611      	mov	r1, r2
   13a7e:	f7ff ff29 	bl	138d4 <nordic_set_intr_signals>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:79
	nordic_clear_all_intr_flags();
   13a82:	f7ff feab 	bl	137dc <nordic_clear_all_intr_flags>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:80
	nordic_set_crc(2);
   13a86:	2002      	movs	r0, #2
   13a88:	f7ff ff43 	bl	13912 <nordic_set_crc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:82
	nordic_set_channel(mhz);
   13a8c:	4630      	mov	r0, r6
   13a8e:	f7ff ff73 	bl	13978 <nordic_set_channel>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:83
	nordic_set_air_data_rate(bitrate_kbps);
   13a92:	4628      	mov	r0, r5
   13a94:	f7ff ff82 	bl	1399c <nordic_set_air_data_rate>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:84
	nordic_set_power_level(3);
   13a98:	2003      	movs	r0, #3
   13a9a:	f7ff ff95 	bl	139c8 <nordic_set_power_level>
nordic_enable_pipes():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:429
	if(pipe2) controlReg |= 0x04;
	if(pipe3) controlReg |= 0x08;
	if(pipe4) controlReg |= 0x10;
	if(pipe5) controlReg |= 0x20;

	nordic_writeRegister(2, controlReg);
   13a9e:	2103      	movs	r1, #3
   13aa0:	2002      	movs	r0, #2
   13aa2:	f7ff fe85 	bl	137b0 <nordic_writeRegister>
nordic_set_auto_ack_for_pipes():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:416
	nordic_writeRegister(1, controlReg);
   13aa6:	2100      	movs	r1, #0
   13aa8:	2001      	movs	r0, #1
   13aaa:	f7ff fe81 	bl	137b0 <nordic_writeRegister>
nordic_init():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:88
	nordic_set_auto_transmit_options(500, 3);
   13aae:	2103      	movs	r1, #3
   13ab0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   13ab4:	f7ff ff9a 	bl	139ec <nordic_set_auto_transmit_options>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:90
	nordic_set_payload_for_pipe(0, payload);
   13ab8:	4621      	mov	r1, r4
   13aba:	2000      	movs	r0, #0
   13abc:	f7ff ffac 	bl	13a18 <nordic_set_payload_for_pipe>
nordic_set_payload_for_pipe():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:365
	nordic_writeRegister(pipeAddress, payload);
   13ac0:	2100      	movs	r1, #0
   13ac2:	2012      	movs	r0, #18
   13ac4:	f7ff fe74 	bl	137b0 <nordic_writeRegister>
   13ac8:	2100      	movs	r1, #0
   13aca:	2013      	movs	r0, #19
   13acc:	f7ff fe70 	bl	137b0 <nordic_writeRegister>
   13ad0:	2100      	movs	r1, #0
   13ad2:	2014      	movs	r0, #20
   13ad4:	f7ff fe6c 	bl	137b0 <nordic_writeRegister>
   13ad8:	2100      	movs	r1, #0
   13ada:	2015      	movs	r0, #21
   13adc:	f7ff fe68 	bl	137b0 <nordic_writeRegister>
   13ae0:	2100      	movs	r1, #0
   13ae2:	2016      	movs	r0, #22
   13ae4:	f7ff fe64 	bl	137b0 <nordic_writeRegister>
nordic_init():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:97
	char address[] = { 0xE7, 0xDE, 0xAD, 0xE7, 0xE7 }; // Any random value
   13ae8:	4b0d      	ldr	r3, [pc, #52]	; (13b20 <nordic_init+0xc4>)
   13aea:	6818      	ldr	r0, [r3, #0]
   13aec:	791b      	ldrb	r3, [r3, #4]
   13aee:	9000      	str	r0, [sp, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:99
	nordic_set_addr_width   (         addressWidth);
   13af0:	2005      	movs	r0, #5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:97
	char address[] = { 0xE7, 0xDE, 0xAD, 0xE7, 0xE7 }; // Any random value
   13af2:	f88d 3004 	strb.w	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:99
	nordic_set_addr_width   (         addressWidth);
   13af6:	f7ff ff99 	bl	13a2c <nordic_set_addr_width>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:100
	nordic_set_tx_address   (address, addressWidth);
   13afa:	4668      	mov	r0, sp
   13afc:	2105      	movs	r1, #5
   13afe:	f7ff ffa0 	bl	13a42 <nordic_set_tx_address>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:101
	nordic_set_rx_pipe0_addr(address, addressWidth);
   13b02:	2105      	movs	r1, #5
   13b04:	4668      	mov	r0, sp
   13b06:	f7ff ffa2 	bl	13a4e <nordic_set_rx_pipe0_addr>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:103
	nordic_power_up();
   13b0a:	f7ff ff1e 	bl	1394a <nordic_power_up>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:104
	NORDIC_DELAY_US(2000);
   13b0e:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   13b12:	f002 fcde 	bl	164d2 <delay_us>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:105
}
   13b16:	b002      	add	sp, #8
   13b18:	bd70      	pop	{r4, r5, r6, pc}
   13b1a:	bf00      	nop
   13b1c:	2009c020 	.word	0x2009c020
   13b20:	00021611 	.word	0x00021611

00013b24 <mesh_incr_soft_timers_for_arr>:
mesh_incr_soft_timers_for_arr():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:125
    static uint8_t s_next_packet_id = 0;
    return ++s_next_packet_id;
}

static void mesh_incr_soft_timers_for_arr(mesh_pnd_pkt_t *arr, const uint8_t arr_size, const uint32_t delta_time)
{
   13b24:	2324      	movs	r3, #36	; 0x24
   13b26:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:134
    for (i = 0; i < arr_size; i++) {
        if (MESH_ZERO_ADDR != arr[i].pkt.nwk.dst) {
            /* Check if adding delta will overflow uint16, if so, set it to max value */
            timer = arr[i].timer_ms;
            timer += delta_time;
            arr[i].timer_ms = (timer <= UINT16_MAX) ? timer : UINT16_MAX;
   13b28:	f64f 74ff 	movw	r4, #65535	; 0xffff
   13b2c:	fb03 0101 	mla	r1, r3, r1, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:129 (discriminator 1)
    for (i = 0; i < arr_size; i++) {
   13b30:	4288      	cmp	r0, r1
   13b32:	d100      	bne.n	13b36 <mesh_incr_soft_timers_for_arr+0x12>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:137
        }
    }
}
   13b34:	bd10      	pop	{r4, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:130
        if (MESH_ZERO_ADDR != arr[i].pkt.nwk.dst) {
   13b36:	7843      	ldrb	r3, [r0, #1]
   13b38:	b12b      	cbz	r3, 13b46 <mesh_incr_soft_timers_for_arr+0x22>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:132
            timer = arr[i].timer_ms;
   13b3a:	8c03      	ldrh	r3, [r0, #32]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:133
            timer += delta_time;
   13b3c:	4413      	add	r3, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:134
            arr[i].timer_ms = (timer <= UINT16_MAX) ? timer : UINT16_MAX;
   13b3e:	42a3      	cmp	r3, r4
   13b40:	bf28      	it	cs
   13b42:	4623      	movcs	r3, r4
   13b44:	8403      	strh	r3, [r0, #32]
   13b46:	3024      	adds	r0, #36	; 0x24
   13b48:	e7f2      	b.n	13b30 <mesh_incr_soft_timers_for_arr+0xc>
   13b4a:	Address 0x0000000000013b4a is out of bounds.


00013b4c <mesh_update_soft_timers>:
mesh_update_soft_timers():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:147
 * from the last time this function is called.
 */
static bool mesh_update_soft_timers(void)
{
    static uint32_t s_prev_time_ms = 0;
    uint32_t time_now_ms = 0;
   13b4c:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:145
{
   13b4e:	b537      	push	{r0, r1, r2, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:147
    uint32_t time_now_ms = 0;
   13b50:	a802      	add	r0, sp, #8
   13b52:	f840 3d04 	str.w	r3, [r0, #-4]!
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:148
    const bool ok = g_driver.get_timer(&time_now_ms, sizeof(time_now_ms));
   13b56:	4b0c      	ldr	r3, [pc, #48]	; (13b88 <mesh_update_soft_timers+0x3c>)
   13b58:	2104      	movs	r1, #4
   13b5a:	685b      	ldr	r3, [r3, #4]
   13b5c:	4798      	blx	r3
   13b5e:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:149
    const uint32_t delta = (time_now_ms - s_prev_time_ms);
   13b60:	4b0a      	ldr	r3, [pc, #40]	; (13b8c <mesh_update_soft_timers+0x40>)
   13b62:	9a01      	ldr	r2, [sp, #4]
   13b64:	681c      	ldr	r4, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:152

    s_prev_time_ms = time_now_ms;
    mesh_incr_soft_timers_for_arr(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size, delta);
   13b66:	2104      	movs	r1, #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:149
    const uint32_t delta = (time_now_ms - s_prev_time_ms);
   13b68:	1b14      	subs	r4, r2, r4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:151
    s_prev_time_ms = time_now_ms;
   13b6a:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:152
    mesh_incr_soft_timers_for_arr(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size, delta);
   13b6c:	4808      	ldr	r0, [pc, #32]	; (13b90 <mesh_update_soft_timers+0x44>)
   13b6e:	4622      	mov	r2, r4
   13b70:	f7ff ffd8 	bl	13b24 <mesh_incr_soft_timers_for_arr>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:153
    mesh_incr_soft_timers_for_arr(&g_our_pnd_pkts[0],  g_our_pnd_pkts_size,  delta);
   13b74:	4622      	mov	r2, r4
   13b76:	2102      	movs	r1, #2
   13b78:	4806      	ldr	r0, [pc, #24]	; (13b94 <mesh_update_soft_timers+0x48>)
   13b7a:	f7ff ffd3 	bl	13b24 <mesh_incr_soft_timers_for_arr>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:155
    return ok;
}
   13b7e:	1c28      	adds	r0, r5, #0
   13b80:	bf18      	it	ne
   13b82:	2001      	movne	r0, #1
   13b84:	b003      	add	sp, #12
   13b86:	bd30      	pop	{r4, r5, pc}
   13b88:	2007c340 	.word	0x2007c340
   13b8c:	2007c470 	.word	0x2007c470
   13b90:	2007c356 	.word	0x2007c356
   13b94:	2007c40a 	.word	0x2007c40a

00013b98 <mesh_send_packet>:
mesh_send_packet():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:158

static inline bool mesh_send_packet(mesh_packet_t *pkt)
{
   13b98:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:161
    #if MESH_USE_STATISTICS
    /* If we are not the source, then we must be repeating the packet */
    if (pkt->nwk.src == g_our_node_id) {
   13b9a:	4b0b      	ldr	r3, [pc, #44]	; (13bc8 <mesh_send_packet+0x30>)
   13b9c:	7819      	ldrb	r1, [r3, #0]
   13b9e:	7803      	ldrb	r3, [r0, #0]
   13ba0:	428b      	cmp	r3, r1
   13ba2:	4b0a      	ldr	r3, [pc, #40]	; (13bcc <mesh_send_packet+0x34>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   13ba4:	bf0b      	itete	eq
   13ba6:	881a      	ldrheq	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:165
    }
    else {
        g_mesh_stats.pkts_repeated++;
   13ba8:	889a      	ldrhne	r2, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   13baa:	3201      	addeq	r2, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:165
        g_mesh_stats.pkts_repeated++;
   13bac:	3201      	addne	r2, #1
   13bae:	bf14      	ite	ne
   13bb0:	809a      	strhne	r2, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   13bb2:	801a      	strheq	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:171
    }
    #endif

    MESH_DEBUG_PRINTF("SEND TO %i THRU %i MAX HOPS %i", pkt->nwk.dst, pkt->mac.dst, pkt->info.hop_count_max);
    pkt->mac.src = g_our_node_id;
    return (g_driver.radio_send((void*)pkt, sizeof(*pkt)));
   13bb4:	4b06      	ldr	r3, [pc, #24]	; (13bd0 <mesh_send_packet+0x38>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:170
    pkt->mac.src = g_our_node_id;
   13bb6:	7081      	strb	r1, [r0, #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:171
    return (g_driver.radio_send((void*)pkt, sizeof(*pkt)));
   13bb8:	68db      	ldr	r3, [r3, #12]
   13bba:	2120      	movs	r1, #32
   13bbc:	4798      	blx	r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:172
}
   13bbe:	3000      	adds	r0, #0
   13bc0:	bf18      	it	ne
   13bc2:	2001      	movne	r0, #1
   13bc4:	bd08      	pop	{r3, pc}
   13bc6:	bf00      	nop
   13bc8:	2007c08d 	.word	0x2007c08d
   13bcc:	2007c3e6 	.word	0x2007c3e6
   13bd0:	2007c340 	.word	0x2007c340

00013bd4 <mesh_send_retry_packet>:
mesh_send_retry_packet():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:177

static void mesh_send_retry_packet(mesh_packet_t *pkt)
{
    #if MESH_USE_STATISTICS
    if (pkt->nwk.src == g_our_node_id) {
   13bd4:	4b0a      	ldr	r3, [pc, #40]	; (13c00 <mesh_send_retry_packet+0x2c>)
   13bd6:	7802      	ldrb	r2, [r0, #0]
   13bd8:	781b      	ldrb	r3, [r3, #0]
   13bda:	429a      	cmp	r2, r3
   13bdc:	4b09      	ldr	r3, [pc, #36]	; (13c04 <mesh_send_retry_packet+0x30>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   13bde:	bf0b      	itete	eq
   13be0:	88da      	ldrheq	r2, [r3, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
    }
    else {
        g_mesh_stats.pkts_retried_others++;
   13be2:	891a      	ldrhne	r2, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   13be4:	3201      	addeq	r2, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
        g_mesh_stats.pkts_retried_others++;
   13be6:	3201      	addne	r2, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   13be8:	bf0c      	ite	eq
   13bea:	80da      	strheq	r2, [r3, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
        g_mesh_stats.pkts_retried_others++;
   13bec:	811a      	strhne	r2, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:185
    }
    #endif

    pkt->info.retries_rem--;
   13bee:	7903      	ldrb	r3, [r0, #4]
   13bf0:	f3c3 02c2 	ubfx	r2, r3, #3, #3
   13bf4:	3207      	adds	r2, #7
   13bf6:	f362 03c5 	bfi	r3, r2, #3, #3
   13bfa:	7103      	strb	r3, [r0, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:186
    mesh_send_packet(pkt);
   13bfc:	f7ff bfcc 	b.w	13b98 <mesh_send_packet>
   13c00:	2007c08d 	.word	0x2007c08d
   13c04:	2007c3e6 	.word	0x2007c3e6

00013c08 <mesh_find_rte_tbl_entry>:
mesh_find_rte_tbl_entry():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:194
/**
 * Gets the routing table entry based on destination ID.
 * If destination ID is not found in the table, NULL entry is returned
 */
static mesh_rte_table_t* mesh_find_rte_tbl_entry(const uint8_t dst_id)
{
   13c08:	2200      	movs	r2, #0
   13c0a:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:199
    uint8_t i = 0;
    mesh_rte_table_t *entry = NULL;

    for (i = 0; i < g_rte_tbl_size; i++) {
        if (dst_id == g_rte_table[i].dst) {
   13c0c:	4b06      	ldr	r3, [pc, #24]	; (13c28 <mesh_find_rte_tbl_entry+0x20>)
   13c0e:	f813 4022 	ldrb.w	r4, [r3, r2, lsl #2]
   13c12:	0091      	lsls	r1, r2, #2
   13c14:	4284      	cmp	r4, r0
   13c16:	d101      	bne.n	13c1c <mesh_find_rte_tbl_entry+0x14>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:200
            entry = &g_rte_table[i];
   13c18:	1858      	adds	r0, r3, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:201
            break;
   13c1a:	bd10      	pop	{r4, pc}
   13c1c:	3201      	adds	r2, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:198 (discriminator 2)
    for (i = 0; i < g_rte_tbl_size; i++) {
   13c1e:	2a04      	cmp	r2, #4
   13c20:	d1f5      	bne.n	13c0e <mesh_find_rte_tbl_entry+0x6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:196
    mesh_rte_table_t *entry = NULL;
   13c22:	2000      	movs	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:206
        }
    }

    return entry;
}
   13c24:	bd10      	pop	{r4, pc}
   13c26:	bf00      	nop
   13c28:	2007c45f 	.word	0x2007c45f

00013c2c <mesh_update_rte_scores>:
mesh_update_rte_scores():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:270
 */
static void mesh_update_rte_scores(mesh_rte_table_t *entry)
{
    uint8_t i = 0;

    if (NULL != entry) {
   13c2c:	b170      	cbz	r0, 13c4c <mesh_update_rte_scores+0x20>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:272
        /* If max value reached for the score, reduce everyone's score */
        if (UINT8_MAX == ++(entry->score)) {
   13c2e:	78c3      	ldrb	r3, [r0, #3]
   13c30:	3301      	adds	r3, #1
   13c32:	b2db      	uxtb	r3, r3
   13c34:	2bff      	cmp	r3, #255	; 0xff
   13c36:	70c3      	strb	r3, [r0, #3]
   13c38:	d108      	bne.n	13c4c <mesh_update_rte_scores+0x20>
   13c3a:	2300      	movs	r3, #0
   13c3c:	4804      	ldr	r0, [pc, #16]	; (13c50 <mesh_update_rte_scores+0x24>)
   13c3e:	18c1      	adds	r1, r0, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:274
            for (i = 0; i < g_rte_tbl_size; i++) {
                g_rte_table[i].score /= 2;
   13c40:	78ca      	ldrb	r2, [r1, #3]
   13c42:	3304      	adds	r3, #4
   13c44:	0852      	lsrs	r2, r2, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:273
            for (i = 0; i < g_rte_tbl_size; i++) {
   13c46:	2b10      	cmp	r3, #16
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:274
                g_rte_table[i].score /= 2;
   13c48:	70ca      	strb	r2, [r1, #3]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:273
            for (i = 0; i < g_rte_tbl_size; i++) {
   13c4a:	d1f8      	bne.n	13c3e <mesh_update_rte_scores+0x12>
   13c4c:	4770      	bx	lr
   13c4e:	bf00      	nop
   13c50:	2007c45f 	.word	0x2007c45f

00013c54 <mesh_get_pnd_pkt_slot>:
mesh_get_pnd_pkt_slot():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:286
 * Finds a possible free slot from the pending packet array.
 * If a slot is not found, then the slot with least amount of retries+timeout is returned
 * assuming that the slot with highest retries+timeout will need to be retransmitted.
 */
static mesh_pnd_pkt_t* mesh_get_pnd_pkt_slot(mesh_pnd_pkt_t *arr, const uint8_t size_of_array)
{
   13c54:	2224      	movs	r2, #36	; 0x24
   13c56:	4603      	mov	r3, r0
   13c58:	fb02 0101 	mla	r1, r2, r1, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:293
    mesh_pnd_pkt_t *entry = NULL;
    uint32_t pkt_timeout = 0;
    uint32_t highest_timeout = 0;

    /* Find the free entry marked by nwk.dst being 0 */
    for (i = 0; i < size_of_array; i++) {
   13c5c:	4602      	mov	r2, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:286
{
   13c5e:	b530      	push	{r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:293 (discriminator 1)
    for (i = 0; i < size_of_array; i++) {
   13c60:	4291      	cmp	r1, r2
   13c62:	d10f      	bne.n	13c84 <mesh_get_pnd_pkt_slot+0x30>
   13c64:	4604      	mov	r4, r0
   13c66:	2500      	movs	r5, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:307
     * least retries remaining will need to be retried.
     */
    if (NULL == entry) {
        entry = &arr[0];

        for (i = 0; i < size_of_array; i++) {
   13c68:	429a      	cmp	r2, r3
   13c6a:	d011      	beq.n	13c90 <mesh_get_pnd_pkt_slot+0x3c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:308
            pkt_timeout = (arr[i].pkt.info.retries_rem);
   13c6c:	7919      	ldrb	r1, [r3, #4]
   13c6e:	f3c1 00c2 	ubfx	r0, r1, #3, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:310
            pkt_timeout <<= sizeof(arr[i].timer_ms) * 8;
            pkt_timeout |= arr[i].timer_ms;
   13c72:	8c19      	ldrh	r1, [r3, #32]
   13c74:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:312

            if (highest_timeout < pkt_timeout) {
   13c78:	42a9      	cmp	r1, r5
   13c7a:	bf84      	itt	hi
   13c7c:	461c      	movhi	r4, r3
   13c7e:	460d      	movhi	r5, r1
   13c80:	3324      	adds	r3, #36	; 0x24
   13c82:	e7f1      	b.n	13c68 <mesh_get_pnd_pkt_slot+0x14>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:294
        if (MESH_ZERO_ADDR == arr[i].pkt.nwk.dst) {
   13c84:	4614      	mov	r4, r2
   13c86:	3224      	adds	r2, #36	; 0x24
   13c88:	f812 5c23 	ldrb.w	r5, [r2, #-35]
   13c8c:	2d00      	cmp	r5, #0
   13c8e:	d1e7      	bne.n	13c60 <mesh_get_pnd_pkt_slot+0xc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:320
            }
        }
    }

    return entry;
}
   13c90:	4620      	mov	r0, r4
   13c92:	bd30      	pop	{r4, r5, pc}

00013c94 <mesh_pending_packets_add>:
mesh_pending_packets_add():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:333
 *
 * This function assumes the packet is an ACK type packet to ensure delivery.
 * @param num_hops  The number of expected hops packet can take to set its retry time.
 */
static void mesh_pending_packets_add(const mesh_packet_t *pPkt, const uint8_t num_hops)
{
   13c94:	b538      	push	{r3, r4, r5, lr}
   13c96:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:335
    mesh_pnd_pkt_t *entry = NULL;
    uint16_t timeout_ms = (1 + num_hops) * MESH_ACK_TIMEOUT_MS;
   13c98:	00c9      	lsls	r1, r1, #3
   13c9a:	f101 0508 	add.w	r5, r1, #8
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:342
    /*
     * We have to update soft timers before we add a pending packet because if mesh_service()
     * is not called periodically, then the delta will be large, and the packet will be sent
     * again too soon.
     */
    mesh_update_soft_timers();
   13c9e:	f7ff ff55 	bl	13b4c <mesh_update_soft_timers>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:347

    /* We don't want mesh packets to take precedence over our own pending packets, so
     * we use different pending packets arrays for our own pending packets.
     */
    if (g_our_node_id == pPkt->nwk.src) {
   13ca2:	4b1c      	ldr	r3, [pc, #112]	; (13d14 <mesh_pending_packets_add+0x80>)
   13ca4:	7822      	ldrb	r2, [r4, #0]
   13ca6:	781b      	ldrb	r3, [r3, #0]
   13ca8:	429a      	cmp	r2, r3
   13caa:	d124      	bne.n	13cf6 <mesh_pending_packets_add+0x62>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:348
        entry = mesh_get_pnd_pkt_slot(&g_our_pnd_pkts[0], g_our_pnd_pkts_size);
   13cac:	2102      	movs	r1, #2
   13cae:	481a      	ldr	r0, [pc, #104]	; (13d18 <mesh_pending_packets_add+0x84>)
   13cb0:	f7ff ffd0 	bl	13c54 <mesh_get_pnd_pkt_slot>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:365
     * We should have route information, and hop_count already set.
     * TO DO: Should we reinitialize the retry count?
     * If we don't then we let the source dictate the retries throughout the mesh nodes.
     * If we do, then we increase the chances of getting the packet through.
     */
    entry->timer_ms    = 0;
   13cb4:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->timeout_ms  = timeout_ms;
    entry->pkt         = *pPkt;
   13cb6:	4602      	mov	r2, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:365
    entry->timer_ms    = 0;
   13cb8:	f880 3020 	strb.w	r3, [r0, #32]
   13cbc:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->pkt         = *pPkt;
   13cc0:	4623      	mov	r3, r4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:366
    entry->timeout_ms  = timeout_ms;
   13cc2:	f890 1023 	ldrb.w	r1, [r0, #35]	; 0x23
   13cc6:	f880 5022 	strb.w	r5, [r0, #34]	; 0x22
   13cca:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
   13cce:	f3c5 2506 	ubfx	r5, r5, #8, #7
   13cd2:	430d      	orrs	r5, r1
   13cd4:	f880 5023 	strb.w	r5, [r0, #35]	; 0x23
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->pkt         = *pPkt;
   13cd8:	f104 0120 	add.w	r1, r4, #32
   13cdc:	f853 4b04 	ldr.w	r4, [r3], #4
   13ce0:	428b      	cmp	r3, r1
   13ce2:	f842 4b04 	str.w	r4, [r2], #4
   13ce6:	d1f9      	bne.n	13cdc <mesh_pending_packets_add+0x48>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:368
    entry->pkt.info.retries_rem = g_retry_count; /* DO THIS AFTER COPYING THE PACKET!!! */
   13ce8:	4a0c      	ldr	r2, [pc, #48]	; (13d1c <mesh_pending_packets_add+0x88>)
   13cea:	7903      	ldrb	r3, [r0, #4]
   13cec:	7812      	ldrb	r2, [r2, #0]
   13cee:	f362 03c5 	bfi	r3, r2, #3, #3
   13cf2:	7103      	strb	r3, [r0, #4]
   13cf4:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:351
        entry = mesh_get_pnd_pkt_slot(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size);
   13cf6:	2104      	movs	r1, #4
   13cf8:	4809      	ldr	r0, [pc, #36]	; (13d20 <mesh_pending_packets_add+0x8c>)
   13cfa:	f7ff ffab 	bl	13c54 <mesh_get_pnd_pkt_slot>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:353
        if (MESH_ZERO_ADDR == pPkt->mac.dst) {
   13cfe:	78e3      	ldrb	r3, [r4, #3]
   13d00:	2b00      	cmp	r3, #0
   13d02:	d1d7      	bne.n	13cb4 <mesh_pending_packets_add+0x20>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:354
            entry->disc_pkt = true;
   13d04:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:355
            timeout_ms = MESH_PKT_DISC_TIMEOUT_MS;
   13d08:	2504      	movs	r5, #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:354
            entry->disc_pkt = true;
   13d0a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   13d0e:	f880 3023 	strb.w	r3, [r0, #35]	; 0x23
   13d12:	e7cf      	b.n	13cb4 <mesh_pending_packets_add+0x20>
   13d14:	2007c08d 	.word	0x2007c08d
   13d18:	2007c40a 	.word	0x2007c40a
   13d1c:	2007c094 	.word	0x2007c094
   13d20:	2007c356 	.word	0x2007c356

00013d24 <mesh_get_rte_to_modify>:
mesh_get_rte_to_modify():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:215
{
   13d24:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:217
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst_id);
   13d26:	f7ff ff6f 	bl	13c08 <mesh_find_rte_tbl_entry>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:222
    if (NULL == entry) {
   13d2a:	4603      	mov	r3, r0
   13d2c:	b9d8      	cbnz	r0, 13d66 <mesh_get_rte_to_modify+0x42>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:223
        entry = mesh_find_rte_tbl_entry(MESH_ZERO_ADDR);
   13d2e:	f7ff ff6b 	bl	13c08 <mesh_find_rte_tbl_entry>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:226
        if (NULL == entry) {
   13d32:	4603      	mov	r3, r0
   13d34:	b9b8      	cbnz	r0, 13d66 <mesh_get_rte_to_modify+0x42>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:228
            lowest = entry->score;
   13d36:	4a0d      	ldr	r2, [pc, #52]	; (13d6c <mesh_get_rte_to_modify+0x48>)
   13d38:	78d3      	ldrb	r3, [r2, #3]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   13d3a:	79d1      	ldrb	r1, [r2, #7]
   13d3c:	7ad0      	ldrb	r0, [r2, #11]
   13d3e:	428b      	cmp	r3, r1
   13d40:	bf96      	itet	ls
   13d42:	4619      	movls	r1, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   13d44:	1d13      	addhi	r3, r2, #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:227
            entry = &(g_rte_table[0]);
   13d46:	4613      	movls	r3, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   13d48:	4281      	cmp	r1, r0
   13d4a:	bf94      	ite	ls
   13d4c:	4608      	movls	r0, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   13d4e:	4b08      	ldrhi	r3, [pc, #32]	; (13d70 <mesh_get_rte_to_modify+0x4c>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   13d50:	7bd1      	ldrb	r1, [r2, #15]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   13d52:	4a08      	ldr	r2, [pc, #32]	; (13d74 <mesh_get_rte_to_modify+0x50>)
   13d54:	4281      	cmp	r1, r0
   13d56:	bf38      	it	cc
   13d58:	4613      	movcc	r3, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:235
            memset(entry, 0, sizeof(*entry));
   13d5a:	2200      	movs	r2, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:238
            g_mesh_stats.rte_overwritten++;
   13d5c:	4906      	ldr	r1, [pc, #24]	; (13d78 <mesh_get_rte_to_modify+0x54>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:235
            memset(entry, 0, sizeof(*entry));
   13d5e:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:238
            g_mesh_stats.rte_overwritten++;
   13d60:	7aca      	ldrb	r2, [r1, #11]
   13d62:	3201      	adds	r2, #1
   13d64:	72ca      	strb	r2, [r1, #11]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:244
}
   13d66:	4618      	mov	r0, r3
   13d68:	bd08      	pop	{r3, pc}
   13d6a:	bf00      	nop
   13d6c:	2007c45f 	.word	0x2007c45f
   13d70:	2007c467 	.word	0x2007c467
   13d74:	2007c46b 	.word	0x2007c46b
   13d78:	2007c3e6 	.word	0x2007c3e6

00013d7c <mesh_handle_pnd_pkts_for_arr>:
mesh_handle_pnd_pkts_for_arr():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:378

/**
 * Handles the timeout and retry logic for the pending packets array.
 */
static void mesh_handle_pnd_pkts_for_arr(const mesh_packet_t *pRxPkt, mesh_pnd_pkt_t *arr, const uint8_t size_of_array)
{
   13d7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13d80:	f04f 0824 	mov.w	r8, #36	; 0x24
   13d84:	4605      	mov	r5, r0
   13d86:	460c      	mov	r4, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                // and retry the packet to find a new route.
            }
            /* Is it time to retransmit? */
            else if(pnd->timer_ms >= pnd->timeout_ms)
            {
                pnd->timer_ms = 0;
   13d88:	2700      	movs	r7, #0
   13d8a:	fb08 1802 	mla	r8, r8, r2, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:479
                     * with unknown node.
                     * We only want to do this if we are the source node because we
                     * don't want the intermediate node to repeat 2x the retry count.
                     */
                    if (mesh_pkt_ack_rsp != pnd->pkt.info.pkt_type &&
                            pnd->pkt.nwk.src == g_our_node_id &&    /* Source was us */
   13d8e:	f8df 915c 	ldr.w	r9, [pc, #348]	; 13eec <mesh_handle_pnd_pkts_for_arr+0x170>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:488
                        pnd->pkt.mac.dst = MESH_ZERO_ADDR;         /* Route is now unknown  */
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
                        MESH_DEBUG_PRINTF("RETRY PKT AND DISC NEW RTE WITH NWK %i/%i",
                                          pnd->pkt.nwk.src, pnd->pkt.nwk.dst);
                        mesh_send_retry_packet(&(pnd->pkt));
                        pnd->pkt.info.retries_rem = g_retry_count; /* Reset retry count */
   13d92:	f8df a15c 	ldr.w	sl, [pc, #348]	; 13ef0 <mesh_handle_pnd_pkts_for_arr+0x174>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:383 (discriminator 1)
    for (i = 0; i < size_of_array; i++) {
   13d96:	45a0      	cmp	r8, r4
   13d98:	d101      	bne.n	13d9e <mesh_handle_pnd_pkts_for_arr+0x22>
   13d9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:387
        if (pnd->disc_pkt) {
   13d9e:	f994 3023 	ldrsb.w	r3, [r4, #35]	; 0x23
   13da2:	2b00      	cmp	r3, #0
   13da4:	da29      	bge.n	13dfa <mesh_handle_pnd_pkts_for_arr+0x7e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:389
            if (NULL != pRxPkt &&
   13da6:	b1cd      	cbz	r5, 13ddc <mesh_handle_pnd_pkts_for_arr+0x60>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:390 (discriminator 1)
                pRxPkt->nwk.src == pnd->pkt.nwk.dst && /* Destined node responded */
   13da8:	782b      	ldrb	r3, [r5, #0]
   13daa:	7862      	ldrb	r2, [r4, #1]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:389 (discriminator 1)
            if (NULL != pRxPkt &&
   13dac:	4293      	cmp	r3, r2
   13dae:	d109      	bne.n	13dc4 <mesh_handle_pnd_pkts_for_arr+0x48>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:390
                pRxPkt->nwk.src == pnd->pkt.nwk.dst && /* Destined node responded */
   13db0:	7868      	ldrb	r0, [r5, #1]
   13db2:	7821      	ldrb	r1, [r4, #0]
   13db4:	4288      	cmp	r0, r1
   13db6:	d105      	bne.n	13dc4 <mesh_handle_pnd_pkts_for_arr+0x48>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:407
                memset(pnd, 0, sizeof(*pnd));
   13db8:	2224      	movs	r2, #36	; 0x24
   13dba:	2100      	movs	r1, #0
   13dbc:	4620      	mov	r0, r4
   13dbe:	f007 f877 	bl	1aeb0 <memset>
   13dc2:	e069      	b.n	13e98 <mesh_handle_pnd_pkts_for_arr+0x11c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:401 (discriminator 1)
            else if (NULL != pRxPkt &&
   13dc4:	78e9      	ldrb	r1, [r5, #3]
   13dc6:	b149      	cbz	r1, 13ddc <mesh_handle_pnd_pkts_for_arr+0x60>
mesh_is_same_packet():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   13dc8:	7869      	ldrb	r1, [r5, #1]
   13dca:	4291      	cmp	r1, r2
   13dcc:	d106      	bne.n	13ddc <mesh_handle_pnd_pkts_for_arr+0x60>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   13dce:	7822      	ldrb	r2, [r4, #0]
   13dd0:	429a      	cmp	r2, r3
   13dd2:	d103      	bne.n	13ddc <mesh_handle_pnd_pkts_for_arr+0x60>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   13dd4:	79aa      	ldrb	r2, [r5, #6]
   13dd6:	79a3      	ldrb	r3, [r4, #6]
   13dd8:	429a      	cmp	r2, r3
   13dda:	d0ed      	beq.n	13db8 <mesh_handle_pnd_pkts_for_arr+0x3c>
mesh_handle_pnd_pkts_for_arr():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:412
            else if (pnd->timer_ms >= pnd->timeout_ms) {
   13ddc:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
   13de0:	f894 3022 	ldrb.w	r3, [r4, #34]	; 0x22
   13de4:	8c21      	ldrh	r1, [r4, #32]
   13de6:	f002 027f 	and.w	r2, r2, #127	; 0x7f
   13dea:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   13dee:	4299      	cmp	r1, r3
   13df0:	db52      	blt.n	13e98 <mesh_handle_pnd_pkts_for_arr+0x11c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:415
                mesh_send_packet(&(pnd->pkt));
   13df2:	4620      	mov	r0, r4
   13df4:	f7ff fed0 	bl	13b98 <mesh_send_packet>
   13df8:	e7de      	b.n	13db8 <mesh_handle_pnd_pkts_for_arr+0x3c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:420
        else if (MESH_ZERO_ADDR != pnd->pkt.nwk.dst) {
   13dfa:	7863      	ldrb	r3, [r4, #1]
   13dfc:	2b00      	cmp	r3, #0
   13dfe:	d04b      	beq.n	13e98 <mesh_handle_pnd_pkts_for_arr+0x11c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:429
            if (NULL != pRxPkt &&
   13e00:	2d00      	cmp	r5, #0
   13e02:	d032      	beq.n	13e6a <mesh_handle_pnd_pkts_for_arr+0xee>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:430 (discriminator 1)
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   13e04:	792a      	ldrb	r2, [r5, #4]
   13e06:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:429 (discriminator 1)
            if (NULL != pRxPkt &&
   13e0a:	2ac0      	cmp	r2, #192	; 0xc0
   13e0c:	d12b      	bne.n	13e66 <mesh_handle_pnd_pkts_for_arr+0xea>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:430
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   13e0e:	7822      	ldrb	r2, [r4, #0]
   13e10:	7869      	ldrb	r1, [r5, #1]
   13e12:	428a      	cmp	r2, r1
   13e14:	d102      	bne.n	13e1c <mesh_handle_pnd_pkts_for_arr+0xa0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:431
                    pnd->pkt.nwk.src == pRxPkt->nwk.dst &&
   13e16:	7828      	ldrb	r0, [r5, #0]
   13e18:	4298      	cmp	r0, r3
   13e1a:	d0cd      	beq.n	13db8 <mesh_handle_pnd_pkts_for_arr+0x3c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:439
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   13e1c:	78e6      	ldrb	r6, [r4, #3]
   13e1e:	78a8      	ldrb	r0, [r5, #2]
   13e20:	4286      	cmp	r6, r0
   13e22:	d108      	bne.n	13e36 <mesh_handle_pnd_pkts_for_arr+0xba>
mesh_is_same_packet():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   13e24:	4299      	cmp	r1, r3
   13e26:	d106      	bne.n	13e36 <mesh_handle_pnd_pkts_for_arr+0xba>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   13e28:	7829      	ldrb	r1, [r5, #0]
   13e2a:	428a      	cmp	r2, r1
   13e2c:	d103      	bne.n	13e36 <mesh_handle_pnd_pkts_for_arr+0xba>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   13e2e:	79a1      	ldrb	r1, [r4, #6]
   13e30:	79aa      	ldrb	r2, [r5, #6]
   13e32:	4291      	cmp	r1, r2
   13e34:	d0c0      	beq.n	13db8 <mesh_handle_pnd_pkts_for_arr+0x3c>
mesh_handle_pnd_pkts_for_arr():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:451
                    pRxPkt->info.pkt_type &&
   13e36:	78a9      	ldrb	r1, [r5, #2]
   13e38:	78e2      	ldrb	r2, [r4, #3]
   13e3a:	4291      	cmp	r1, r2
   13e3c:	d115      	bne.n	13e6a <mesh_handle_pnd_pkts_for_arr+0xee>
mesh_is_same_packet():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   13e3e:	786a      	ldrb	r2, [r5, #1]
   13e40:	429a      	cmp	r2, r3
   13e42:	d112      	bne.n	13e6a <mesh_handle_pnd_pkts_for_arr+0xee>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   13e44:	7821      	ldrb	r1, [r4, #0]
   13e46:	782a      	ldrb	r2, [r5, #0]
   13e48:	4291      	cmp	r1, r2
   13e4a:	d10e      	bne.n	13e6a <mesh_handle_pnd_pkts_for_arr+0xee>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   13e4c:	79a1      	ldrb	r1, [r4, #6]
   13e4e:	79aa      	ldrb	r2, [r5, #6]
   13e50:	4291      	cmp	r1, r2
   13e52:	d10a      	bne.n	13e6a <mesh_handle_pnd_pkts_for_arr+0xee>
mesh_handle_pnd_pkts_for_arr():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   13e54:	7923      	ldrb	r3, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:455
                pnd->timer_ms = 0;
   13e56:	f884 7020 	strb.w	r7, [r4, #32]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   13e5a:	f367 03c5 	bfi	r3, r7, #3, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:455
                pnd->timer_ms = 0;
   13e5e:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   13e62:	7123      	strb	r3, [r4, #4]
   13e64:	e018      	b.n	13e98 <mesh_handle_pnd_pkts_for_arr+0x11c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:450 (discriminator 1)
            else if (NULL != pRxPkt &&
   13e66:	2a00      	cmp	r2, #0
   13e68:	d1e5      	bne.n	13e36 <mesh_handle_pnd_pkts_for_arr+0xba>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:463
            else if(pnd->timer_ms >= pnd->timeout_ms)
   13e6a:	f894 1023 	ldrb.w	r1, [r4, #35]	; 0x23
   13e6e:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
   13e72:	8c20      	ldrh	r0, [r4, #32]
   13e74:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   13e78:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   13e7c:	4290      	cmp	r0, r2
   13e7e:	db0b      	blt.n	13e98 <mesh_handle_pnd_pkts_for_arr+0x11c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   13e80:	7922      	ldrb	r2, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                pnd->timer_ms = 0;
   13e82:	f884 7020 	strb.w	r7, [r4, #32]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   13e86:	f3c2 01c2 	ubfx	r1, r2, #3, #3
   13e8a:	b2ce      	uxtb	r6, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                pnd->timer_ms = 0;
   13e8c:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   13e90:	b126      	cbz	r6, 13e9c <mesh_handle_pnd_pkts_for_arr+0x120>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:469
                    mesh_send_retry_packet(&(pnd->pkt));
   13e92:	4620      	mov	r0, r4
   13e94:	f7ff fe9e 	bl	13bd4 <mesh_send_retry_packet>
   13e98:	3424      	adds	r4, #36	; 0x24
   13e9a:	e77c      	b.n	13d96 <mesh_handle_pnd_pkts_for_arr+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:478
                    if (mesh_pkt_ack_rsp != pnd->pkt.info.pkt_type &&
   13e9c:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
   13ea0:	2ac0      	cmp	r2, #192	; 0xc0
   13ea2:	d020      	beq.n	13ee6 <mesh_handle_pnd_pkts_for_arr+0x16a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:478 (discriminator 1)
   13ea4:	7820      	ldrb	r0, [r4, #0]
   13ea6:	f899 2000 	ldrb.w	r2, [r9]
   13eaa:	4290      	cmp	r0, r2
   13eac:	d11b      	bne.n	13ee6 <mesh_handle_pnd_pkts_for_arr+0x16a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:480
                            pnd->pkt.mac.dst != pnd->pkt.nwk.dst && /* Through intermediate node */
   13eae:	78e2      	ldrb	r2, [r4, #3]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:479
                            pnd->pkt.nwk.src == g_our_node_id &&    /* Source was us */
   13eb0:	4293      	cmp	r3, r2
   13eb2:	d018      	beq.n	13ee6 <mesh_handle_pnd_pkts_for_arr+0x16a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:480
                            pnd->pkt.mac.dst != pnd->pkt.nwk.dst && /* Through intermediate node */
   13eb4:	b1ba      	cbz	r2, 13ee6 <mesh_handle_pnd_pkts_for_arr+0x16a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:484
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
   13eb6:	2203      	movs	r2, #3
   13eb8:	7963      	ldrb	r3, [r4, #5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:483
                        pnd->pkt.mac.dst = MESH_ZERO_ADDR;         /* Route is now unknown  */
   13eba:	70e1      	strb	r1, [r4, #3]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:484
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
   13ebc:	f362 1307 	bfi	r3, r2, #4, #4
   13ec0:	7163      	strb	r3, [r4, #5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:487
                        mesh_send_retry_packet(&(pnd->pkt));
   13ec2:	4620      	mov	r0, r4
   13ec4:	f7ff fe86 	bl	13bd4 <mesh_send_retry_packet>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:488
                        pnd->pkt.info.retries_rem = g_retry_count; /* Reset retry count */
   13ec8:	7923      	ldrb	r3, [r4, #4]
   13eca:	f89a 2000 	ldrb.w	r2, [sl]
   13ece:	f362 03c5 	bfi	r3, r2, #3, #3
   13ed2:	7123      	strb	r3, [r4, #4]
mesh_remove_rte_entry():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:251
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst_node_id);
   13ed4:	7860      	ldrb	r0, [r4, #1]
   13ed6:	f7ff fe97 	bl	13c08 <mesh_find_rte_tbl_entry>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:252
    if (NULL != entry) {
   13eda:	b100      	cbz	r0, 13ede <mesh_handle_pnd_pkts_for_arr+0x162>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:253
        memset(entry, 0, sizeof(*entry));
   13edc:	6007      	str	r7, [r0, #0]
mesh_handle_pnd_pkts_for_arr():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:510
                     * the expense of time, and retries, however, it is less code this way.
                     */
                }
            }

            if (clear) {
   13ede:	2e00      	cmp	r6, #0
   13ee0:	f47f af6a 	bne.w	13db8 <mesh_handle_pnd_pkts_for_arr+0x3c>
   13ee4:	e7d8      	b.n	13e98 <mesh_handle_pnd_pkts_for_arr+0x11c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:493
                        clear = true;
   13ee6:	2601      	movs	r6, #1
   13ee8:	e7f4      	b.n	13ed4 <mesh_handle_pnd_pkts_for_arr+0x158>
   13eea:	bf00      	nop
   13eec:	2007c08d 	.word	0x2007c08d
   13ef0:	2007c094 	.word	0x2007c094

00013ef4 <mesh_set_node_address>:
mesh_set_node_address():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:798
}

bool mesh_set_node_address(const uint8_t local_node_id)
{
    bool success = false;
    if (MESH_ZERO_ADDR != local_node_id && MESH_BROADCAST_ADDR != local_node_id) {
   13ef4:	1e43      	subs	r3, r0, #1
   13ef6:	b2db      	uxtb	r3, r3
   13ef8:	2bfd      	cmp	r3, #253	; 0xfd
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:799
        g_our_node_id = local_node_id;
   13efa:	bf9d      	ittte	ls
   13efc:	4b02      	ldrls	r3, [pc, #8]	; (13f08 <mesh_set_node_address+0x14>)
   13efe:	7018      	strbls	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:800
        success = true;
   13f00:	2001      	movls	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:797
    bool success = false;
   13f02:	2000      	movhi	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:803
    }
    return success;
}
   13f04:	4770      	bx	lr
   13f06:	bf00      	nop
   13f08:	2007c08d 	.word	0x2007c08d

00013f0c <mesh_get_node_address>:
mesh_get_node_address():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:808

uint8_t mesh_get_node_address(void)
{
    return g_our_node_id;
}
   13f0c:	4b01      	ldr	r3, [pc, #4]	; (13f14 <mesh_get_node_address+0x8>)
   13f0e:	7818      	ldrb	r0, [r3, #0]
   13f10:	4770      	bx	lr
   13f12:	bf00      	nop
   13f14:	2007c08d 	.word	0x2007c08d

00013f18 <mesh_form_pkt>:
mesh_form_pkt():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:955
}

bool mesh_form_pkt(mesh_packet_t *pkt, const uint8_t dst,
                   const mesh_protocol_t type, const uint8_t hop_count_max,
                   uint8_t num_ptrs, ...)
{
   13f18:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   13f1c:	4604      	mov	r4, r0
   13f1e:	4691      	mov	r9, r2
   13f20:	461e      	mov	r6, r3
   13f22:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958
    bool ok = false;

    if(MESH_ZERO_ADDR == dst || dst == g_our_node_id   ||   /* Invalid destination */
   13f26:	460f      	mov	r7, r1
   13f28:	2900      	cmp	r1, #0
   13f2a:	d065      	beq.n	13ff8 <mesh_form_pkt+0xe0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958 (discriminator 1)
   13f2c:	4b34      	ldr	r3, [pc, #208]	; (14000 <mesh_form_pkt+0xe8>)
   13f2e:	f893 8000 	ldrb.w	r8, [r3]
   13f32:	4541      	cmp	r1, r8
   13f34:	d060      	beq.n	13ff8 <mesh_form_pkt+0xe0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958 (discriminator 2)
   13f36:	2e0f      	cmp	r6, #15
   13f38:	d85e      	bhi.n	13ff8 <mesh_form_pkt+0xe0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:959
       hop_count_max > MESH_HOP_COUNT_MAX ||                /* Hop count overflow */
   13f3a:	2800      	cmp	r0, #0
   13f3c:	d05e      	beq.n	13ffc <mesh_form_pkt+0xe4>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:967
        ok = false;
        return ok;
    }

    /* All good so far, so zero out the structure */
    memset(pkt, 0, sizeof(*pkt));
   13f3e:	2220      	movs	r2, #32
   13f40:	2100      	movs	r1, #0
   13f42:	f006 ffb5 	bl	1aeb0 <memset>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970

    /* Force broadcast packet to be NACK type otherwise the type given by user */
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   13f46:	2fff      	cmp	r7, #255	; 0xff
   13f48:	bf08      	it	eq
   13f4a:	f04f 0900 	moveq.w	r9, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:973

    /* Populate packet header */
    pkt->info.version = MESH_VERSION;
   13f4e:	2203      	movs	r2, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   13f50:	7923      	ldrb	r3, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:979
    // Redundant due to memset() :
    // pkt->info.hop_count = 0;
    pkt->info.retries_rem = g_retry_count;
    pkt->info.pkt_seq_num = mesh_get_next_seq_num();

    pkt->nwk.dst = dst;
   13f52:	7067      	strb	r7, [r4, #1]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   13f54:	f369 1387 	bfi	r3, r9, #6, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:973
    pkt->info.version = MESH_VERSION;
   13f58:	f362 0302 	bfi	r3, r2, #0, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   13f5c:	4a29      	ldr	r2, [pc, #164]	; (14004 <mesh_form_pkt+0xec>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:980
    pkt->nwk.src = g_our_node_id;
   13f5e:	f884 8000 	strb.w	r8, [r4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   13f62:	7812      	ldrb	r2, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:981
    pkt->mac.src = g_our_node_id;
   13f64:	f884 8002 	strb.w	r8, [r4, #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   13f68:	f362 03c5 	bfi	r3, r2, #3, #3
mesh_get_next_seq_num():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:121
    return ++s_next_packet_id;
   13f6c:	4a26      	ldr	r2, [pc, #152]	; (14008 <mesh_form_pkt+0xf0>)
mesh_form_pkt():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   13f6e:	7123      	strb	r3, [r4, #4]
mesh_get_next_seq_num():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:121
    return ++s_next_packet_id;
   13f70:	7813      	ldrb	r3, [r2, #0]
   13f72:	3301      	adds	r3, #1
   13f74:	b2db      	uxtb	r3, r3
   13f76:	7013      	strb	r3, [r2, #0]
mesh_form_pkt():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:977
    pkt->info.pkt_seq_num = mesh_get_next_seq_num();
   13f78:	71a3      	strb	r3, [r4, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:985

    /* Copy the data, and set the data_len */
    va_list vl;
    va_start(vl, num_ptrs);
   13f7a:	ab0b      	add	r3, sp, #44	; 0x2c
   13f7c:	9301      	str	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:986
    if (num_ptrs > 0) {
   13f7e:	b9c5      	cbnz	r5, 13fb2 <mesh_form_pkt+0x9a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1005
            }
        }
    }
    /* For the case of ping packet when data will be NULL */
    else {
        ok = true;
   13f80:	2501      	movs	r5, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1010
    }
    va_end(vl);

    /* Populate routing info last, but it could be NULL */
    g_locked = true;
   13f82:	2301      	movs	r3, #1
   13f84:	f8df 8084 	ldr.w	r8, [pc, #132]	; 1400c <mesh_form_pkt+0xf4>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1011
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst);
   13f88:	4638      	mov	r0, r7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1010
    g_locked = true;
   13f8a:	f888 3000 	strb.w	r3, [r8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1011
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst);
   13f8e:	f7ff fe3b 	bl	13c08 <mesh_find_rte_tbl_entry>
   13f92:	4607      	mov	r7, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1012
    mesh_update_rte_scores(entry);
   13f94:	f7ff fe4a 	bl	13c2c <mesh_update_rte_scores>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1013
    g_locked = false;
   13f98:	2300      	movs	r3, #0
   13f9a:	f888 3000 	strb.w	r3, [r8]
   13f9e:	7963      	ldrb	r3, [r4, #5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1015

    if (NULL == entry) {
   13fa0:	bb1f      	cbnz	r7, 13fea <mesh_form_pkt+0xd2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1016
        pkt->info.hop_count_max = hop_count_max;
   13fa2:	f366 1307 	bfi	r3, r6, #4, #4
   13fa6:	7163      	strb	r3, [r4, #5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1017
        pkt->mac.dst = MESH_ZERO_ADDR;
   13fa8:	70e7      	strb	r7, [r4, #3]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1025
        pkt->info.hop_count_max = entry->num_hops;
        pkt->mac.dst = entry->next_hop;
    }

    return ok;
}
   13faa:	4628      	mov	r0, r5
   13fac:	b003      	add	sp, #12
   13fae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:994
                memcpy( (&(pkt->data[0]) + pkt->info.data_len), p, s);
   13fb2:	f104 0908 	add.w	r9, r4, #8
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   13fb6:	9a01      	ldr	r2, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:991
            const uint8_t next_len = (s + pkt->info.data_len);
   13fb8:	79e0      	ldrb	r0, [r4, #7]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   13fba:	4613      	mov	r3, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:990
            const int   s = va_arg(vl, int);
   13fbc:	6852      	ldr	r2, [r2, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   13fbe:	f853 1b08 	ldr.w	r1, [r3], #8
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:991
            const uint8_t next_len = (s + pkt->info.data_len);
   13fc2:	eb00 0802 	add.w	r8, r0, r2
   13fc6:	fa5f f888 	uxtb.w	r8, r8
   13fca:	3d01      	subs	r5, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:993
            if (next_len <= sizeof(pkt->data)) {
   13fcc:	f1b8 0f18 	cmp.w	r8, #24
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:990
            const int   s = va_arg(vl, int);
   13fd0:	9301      	str	r3, [sp, #4]
   13fd2:	b2ed      	uxtb	r5, r5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:993
            if (next_len <= sizeof(pkt->data)) {
   13fd4:	d807      	bhi.n	13fe6 <mesh_form_pkt+0xce>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:994
                memcpy( (&(pkt->data[0]) + pkt->info.data_len), p, s);
   13fd6:	4448      	add	r0, r9
   13fd8:	f006 ff45 	bl	1ae66 <memcpy>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:995
                pkt->info.data_len = next_len;
   13fdc:	f884 8007 	strb.w	r8, [r4, #7]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:988
        while(num_ptrs--) {
   13fe0:	2d00      	cmp	r5, #0
   13fe2:	d1e8      	bne.n	13fb6 <mesh_form_pkt+0x9e>
   13fe4:	e7cc      	b.n	13f80 <mesh_form_pkt+0x68>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:998
                ok = false;
   13fe6:	2500      	movs	r5, #0
   13fe8:	e7cb      	b.n	13f82 <mesh_form_pkt+0x6a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1020
        pkt->info.hop_count_max = entry->num_hops;
   13fea:	78ba      	ldrb	r2, [r7, #2]
   13fec:	f362 1307 	bfi	r3, r2, #4, #4
   13ff0:	7163      	strb	r3, [r4, #5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1021
        pkt->mac.dst = entry->next_hop;
   13ff2:	787b      	ldrb	r3, [r7, #1]
   13ff4:	70e3      	strb	r3, [r4, #3]
   13ff6:	e7d8      	b.n	13faa <mesh_form_pkt+0x92>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:963
        return ok;
   13ff8:	2500      	movs	r5, #0
   13ffa:	e7d6      	b.n	13faa <mesh_form_pkt+0x92>
   13ffc:	4605      	mov	r5, r0
   13ffe:	e7d4      	b.n	13faa <mesh_form_pkt+0x92>
   14000:	2007c08d 	.word	0x2007c08d
   14004:	2007c094 	.word	0x2007c094
   14008:	2007c46f 	.word	0x2007c46f
   1400c:	2007c355 	.word	0x2007c355

00014010 <mesh_send_formed_pkt>:
mesh_send_formed_pkt():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061

    /* We don't want a task to send a packet, while mesh_service() is simultaneously
     * trying to send a packet too.  We also want to add to pending packets and lock
     * out mesh_send() from accessing the structures.
     */
    g_locked = true;
   14010:	2201      	movs	r2, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1054
{
   14012:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061
    g_locked = true;
   14014:	4e13      	ldr	r6, [pc, #76]	; (14064 <mesh_send_formed_pkt+0x54>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   14016:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061
    g_locked = true;
   14018:	7032      	strb	r2, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   1401a:	b920      	cbnz	r0, 14026 <mesh_send_formed_pkt+0x16>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1055
    bool ok = false;
   1401c:	2500      	movs	r5, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1075

        if (ack_pkt || rsp_pkt) {
            mesh_pending_packets_add(pkt, pkt->info.hop_count_max);
        }
    }
    g_locked = false;
   1401e:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1078

    return ok;
}
   14020:	4628      	mov	r0, r5
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1075
    g_locked = false;
   14022:	7033      	strb	r3, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1078
}
   14024:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062 (discriminator 1)
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   14026:	f7ff fdb7 	bl	13b98 <mesh_send_packet>
   1402a:	4605      	mov	r5, r0
   1402c:	2800      	cmp	r0, #0
   1402e:	d0f5      	beq.n	1401c <mesh_send_formed_pkt+0xc>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1064
        const bool ack_pkt = (mesh_pkt_ack == pkt->info.pkt_type || mesh_pkt_ack_app == pkt->info.pkt_type);
   14030:	7923      	ldrb	r3, [r4, #4]
   14032:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   14036:	2b40      	cmp	r3, #64	; 0x40
   14038:	d010      	beq.n	1405c <mesh_send_formed_pkt+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1064 (discriminator 2)
   1403a:	f1a3 0180 	sub.w	r1, r3, #128	; 0x80
   1403e:	424a      	negs	r2, r1
   14040:	414a      	adcs	r2, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 2)
                              pkt->mac.dst != MESH_ZERO_ADDR &&
   14042:	2bc0      	cmp	r3, #192	; 0xc0
   14044:	d10b      	bne.n	1405e <mesh_send_formed_pkt+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 1)
   14046:	78e3      	ldrb	r3, [r4, #3]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1067 (discriminator 1)
        const bool rsp_pkt = (mesh_pkt_ack_rsp == pkt->info.pkt_type &&
   14048:	b14b      	cbz	r3, 1405e <mesh_send_formed_pkt+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 4)
                              pkt->mac.dst != MESH_ZERO_ADDR &&
   1404a:	7861      	ldrb	r1, [r4, #1]
   1404c:	4299      	cmp	r1, r3
   1404e:	d006      	beq.n	1405e <mesh_send_formed_pkt+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1072
            mesh_pending_packets_add(pkt, pkt->info.hop_count_max);
   14050:	7961      	ldrb	r1, [r4, #5]
   14052:	4620      	mov	r0, r4
   14054:	0909      	lsrs	r1, r1, #4
   14056:	f7ff fe1d 	bl	13c94 <mesh_pending_packets_add>
   1405a:	e7e0      	b.n	1401e <mesh_send_formed_pkt+0xe>
   1405c:	4602      	mov	r2, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1071
        if (ack_pkt || rsp_pkt) {
   1405e:	2a00      	cmp	r2, #0
   14060:	d1f6      	bne.n	14050 <mesh_send_formed_pkt+0x40>
   14062:	e7dc      	b.n	1401e <mesh_send_formed_pkt+0xe>
   14064:	2007c355 	.word	0x2007c355

00014068 <mesh_init>:
mesh_init():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   14068:	b082      	sub	sp, #8
   1406a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1406e:	4691      	mov	r9, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   14070:	1e42      	subs	r2, r0, #1
   14072:	b2d2      	uxtb	r2, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   14074:	b08d      	sub	sp, #52	; 0x34
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   14076:	2afd      	cmp	r2, #253	; 0xfd
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   14078:	4605      	mov	r5, r0
   1407a:	460e      	mov	r6, r1
   1407c:	9315      	str	r3, [sp, #84]	; 0x54
   1407e:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   14082:	d905      	bls.n	14090 <mesh_init+0x28>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:756
        return status;
   14084:	2000      	movs	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:793
}
   14086:	b00d      	add	sp, #52	; 0x34
   14088:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1408c:	b002      	add	sp, #8
   1408e:	4770      	bx	lr
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760
    if (NULL == d.app_recv || NULL == d.radio_init ||
   14090:	2b00      	cmp	r3, #0
   14092:	d0f7      	beq.n	14084 <mesh_init+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760 (discriminator 1)
   14094:	9f17      	ldr	r7, [sp, #92]	; 0x5c
   14096:	2f00      	cmp	r7, #0
   14098:	d0f4      	beq.n	14084 <mesh_init+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760 (discriminator 2)
   1409a:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1409c:	2b00      	cmp	r3, #0
   1409e:	d0f1      	beq.n	14084 <mesh_init+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:761
        NULL == d.radio_recv || NULL == d.radio_send ||
   140a0:	9b18      	ldr	r3, [sp, #96]	; 0x60
   140a2:	2b00      	cmp	r3, #0
   140a4:	d0ee      	beq.n	14084 <mesh_init+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:761 (discriminator 1)
   140a6:	9b16      	ldr	r3, [sp, #88]	; 0x58
   140a8:	2b00      	cmp	r3, #0
   140aa:	d0eb      	beq.n	14084 <mesh_init+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:769
    memset(&g_pkt_hist[0], 0, sizeof(g_pkt_hist));
   140ac:	2400      	movs	r4, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:766
    memset(&g_our_pnd_pkts[0], 0, sizeof(g_our_pnd_pkts));
   140ae:	2248      	movs	r2, #72	; 0x48
   140b0:	2100      	movs	r1, #0
   140b2:	4823      	ldr	r0, [pc, #140]	; (14140 <mesh_init+0xd8>)
   140b4:	f006 fefc 	bl	1aeb0 <memset>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:767
    memset(&g_mesh_pnd_pkts[0], 0, sizeof(g_mesh_pnd_pkts));
   140b8:	2290      	movs	r2, #144	; 0x90
   140ba:	2100      	movs	r1, #0
   140bc:	4821      	ldr	r0, [pc, #132]	; (14144 <mesh_init+0xdc>)
   140be:	f006 fef7 	bl	1aeb0 <memset>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:768
    memset(&g_rte_table[0], 0, sizeof(g_rte_table));
   140c2:	2210      	movs	r2, #16
   140c4:	2100      	movs	r1, #0
   140c6:	4820      	ldr	r0, [pc, #128]	; (14148 <mesh_init+0xe0>)
   140c8:	f006 fef2 	bl	1aeb0 <memset>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:769
    memset(&g_pkt_hist[0], 0, sizeof(g_pkt_hist));
   140cc:	4b1f      	ldr	r3, [pc, #124]	; (1414c <mesh_init+0xe4>)
   140ce:	601c      	str	r4, [r3, #0]
   140d0:	605c      	str	r4, [r3, #4]
   140d2:	609c      	str	r4, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:771
    memset(&g_mesh_stats, 0, sizeof(g_mesh_stats));
   140d4:	4b1e      	ldr	r3, [pc, #120]	; (14150 <mesh_init+0xe8>)
   140d6:	601c      	str	r4, [r3, #0]
   140d8:	605c      	str	r4, [r3, #4]
   140da:	609c      	str	r4, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:774
    g_our_node_id = id;
   140dc:	4b1d      	ldr	r3, [pc, #116]	; (14154 <mesh_init+0xec>)
   140de:	701d      	strb	r5, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:775
    g_rpt_node = is_rpt_node;
   140e0:	4b1d      	ldr	r3, [pc, #116]	; (14158 <mesh_init+0xf0>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   140e2:	4d1e      	ldr	r5, [pc, #120]	; (1415c <mesh_init+0xf4>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:775
    g_rpt_node = is_rpt_node;
   140e4:	701e      	strb	r6, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   140e6:	ae15      	add	r6, sp, #84	; 0x54
   140e8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   140ea:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   140ec:	6833      	ldr	r3, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:777
    memset(g_our_name, 0, sizeof(g_our_name));
   140ee:	2218      	movs	r2, #24
   140f0:	4621      	mov	r1, r4
   140f2:	481b      	ldr	r0, [pc, #108]	; (14160 <mesh_init+0xf8>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   140f4:	602b      	str	r3, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:777
    memset(g_our_name, 0, sizeof(g_our_name));
   140f6:	f006 fedb 	bl	1aeb0 <memset>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:778
    strncpy(g_our_name, node_name, sizeof(g_our_name)-1);
   140fa:	4649      	mov	r1, r9
   140fc:	2217      	movs	r2, #23
   140fe:	4818      	ldr	r0, [pc, #96]	; (14160 <mesh_init+0xf8>)
   14100:	f008 fc15 	bl	1c92e <strncpy>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:781
    status = g_driver.radio_init(NULL, 0);
   14104:	4621      	mov	r1, r4
   14106:	4620      	mov	r0, r4
   14108:	47b8      	blx	r7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:782
    if (status && send_discovery_packet) {
   1410a:	2800      	cmp	r0, #0
   1410c:	d0ba      	beq.n	14084 <mesh_init+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:782 (discriminator 1)
   1410e:	f1b8 0f00 	cmp.w	r8, #0
   14112:	d102      	bne.n	1411a <mesh_init+0xb2>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:789
        status = mesh_update_soft_timers();
   14114:	f7ff fd1a 	bl	13b4c <mesh_update_soft_timers>
   14118:	e7b5      	b.n	14086 <mesh_init+0x1e>
mesh_send():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:944
        if (mesh_form_pkt(&packet, dst, type, hop_count_max, pair_cnt, pData, len)) {
   1411a:	2306      	movs	r3, #6
   1411c:	9302      	str	r3, [sp, #8]
   1411e:	4b11      	ldr	r3, [pc, #68]	; (14164 <mesh_init+0xfc>)
   14120:	4622      	mov	r2, r4
   14122:	9301      	str	r3, [sp, #4]
   14124:	2301      	movs	r3, #1
   14126:	21ff      	movs	r1, #255	; 0xff
   14128:	9300      	str	r3, [sp, #0]
   1412a:	a804      	add	r0, sp, #16
   1412c:	f7ff fef4 	bl	13f18 <mesh_form_pkt>
   14130:	2800      	cmp	r0, #0
   14132:	d0a7      	beq.n	14084 <mesh_init+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:945
            status = mesh_send_formed_pkt(&packet);
   14134:	a804      	add	r0, sp, #16
   14136:	f7ff ff6b 	bl	14010 <mesh_send_formed_pkt>
mesh_init():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:788
    if (status) {
   1413a:	2800      	cmp	r0, #0
   1413c:	d0a2      	beq.n	14084 <mesh_init+0x1c>
   1413e:	e7e9      	b.n	14114 <mesh_init+0xac>
   14140:	2007c40a 	.word	0x2007c40a
   14144:	2007c356 	.word	0x2007c356
   14148:	2007c45f 	.word	0x2007c45f
   1414c:	2007c452 	.word	0x2007c452
   14150:	2007c3e6 	.word	0x2007c3e6
   14154:	2007c08d 	.word	0x2007c08d
   14158:	2007c45e 	.word	0x2007c45e
   1415c:	2007c340 	.word	0x2007c340
   14160:	2007c3f2 	.word	0x2007c3f2
   14164:	00021616 	.word	0x00021616

00014168 <mesh_send>:
mesh_send():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:931
{
   14168:	b530      	push	{r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:942
    if(len <= sizeof(packet.data) && !(!!pData ^ !!len)) {
   1416a:	2b18      	cmp	r3, #24
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:931
{
   1416c:	b08d      	sub	sp, #52	; 0x34
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:942
    if(len <= sizeof(packet.data) && !(!!pData ^ !!len)) {
   1416e:	d807      	bhi.n	14180 <mesh_send+0x18>
   14170:	1c1d      	adds	r5, r3, #0
   14172:	fab2 f482 	clz	r4, r2
   14176:	bf18      	it	ne
   14178:	2501      	movne	r5, #1
   1417a:	0964      	lsrs	r4, r4, #5
   1417c:	42ac      	cmp	r4, r5
   1417e:	d101      	bne.n	14184 <mesh_send+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:932
    bool status = false;
   14180:	2000      	movs	r0, #0
   14182:	e00e      	b.n	141a2 <mesh_send+0x3a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:944
        if (mesh_form_pkt(&packet, dst, type, hop_count_max, pair_cnt, pData, len)) {
   14184:	9302      	str	r3, [sp, #8]
   14186:	9201      	str	r2, [sp, #4]
   14188:	9500      	str	r5, [sp, #0]
   1418a:	460a      	mov	r2, r1
   1418c:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
   14190:	4601      	mov	r1, r0
   14192:	a804      	add	r0, sp, #16
   14194:	f7ff fec0 	bl	13f18 <mesh_form_pkt>
   14198:	2800      	cmp	r0, #0
   1419a:	d0f1      	beq.n	14180 <mesh_send+0x18>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:945
            status = mesh_send_formed_pkt(&packet);
   1419c:	a804      	add	r0, sp, #16
   1419e:	f7ff ff37 	bl	14010 <mesh_send_formed_pkt>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:950
}
   141a2:	b00d      	add	sp, #52	; 0x34
   141a4:	bd30      	pop	{r4, r5, pc}

000141a6 <mesh_send_ack>:
mesh_send_ack():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:273
 * This simplifies sending an acknowledgment back because the user does not need to know
 * about some of the parameters for mesh_send() function.
 * @param   p_orig_pkt  The unmodified original packet that was received.
 */
static inline bool mesh_send_ack(char* pData, uint8_t len, const mesh_packet_t* p_orig_pkt)
{
   141a6:	b513      	push	{r0, r1, r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:275
    /* Response needs to be NACK otherwise loop of ACKs will occur */
    return mesh_send(p_orig_pkt->nwk.src, mesh_pkt_ack_rsp, pData, len, p_orig_pkt->info.hop_count_max);
   141a8:	7953      	ldrb	r3, [r2, #5]
   141aa:	7814      	ldrb	r4, [r2, #0]
   141ac:	091b      	lsrs	r3, r3, #4
   141ae:	9300      	str	r3, [sp, #0]
   141b0:	4602      	mov	r2, r0
   141b2:	460b      	mov	r3, r1
   141b4:	4620      	mov	r0, r4
   141b6:	2103      	movs	r1, #3
   141b8:	f7ff ffd6 	bl	14168 <mesh_send>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:276
}
   141bc:	b002      	add	sp, #8
   141be:	bd10      	pop	{r4, pc}

000141c0 <mesh_get_num_routing_entries>:
mesh_get_num_routing_entries():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1100

    return entry;
}

uint8_t mesh_get_num_routing_entries(void)
{
   141c0:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1101
    uint8_t idx = 0, found_entries = 0;
   141c2:	4618      	mov	r0, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1104

    for (idx = 0; idx < g_rte_tbl_size; idx++) {
        if (MESH_ZERO_ADDR != g_rte_table[idx].dst) {
   141c4:	4a04      	ldr	r2, [pc, #16]	; (141d8 <mesh_get_num_routing_entries+0x18>)
   141c6:	f812 1023 	ldrb.w	r1, [r2, r3, lsl #2]
   141ca:	b109      	cbz	r1, 141d0 <mesh_get_num_routing_entries+0x10>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1105
            ++found_entries;
   141cc:	3001      	adds	r0, #1
   141ce:	b2c0      	uxtb	r0, r0
   141d0:	3301      	adds	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1103 (discriminator 2)
    for (idx = 0; idx < g_rte_tbl_size; idx++) {
   141d2:	2b04      	cmp	r3, #4
   141d4:	d1f7      	bne.n	141c6 <mesh_get_num_routing_entries+0x6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1110
        }
    }

    return found_entries;
}
   141d6:	4770      	bx	lr
   141d8:	2007c45f 	.word	0x2007c45f

000141dc <mesh_service>:
mesh_service():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:818
{
   141dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   141e0:	b088      	sub	sp, #32
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:819
    mesh_packet_t packet = { {0},{0} };
   141e2:	2220      	movs	r2, #32
   141e4:	2100      	movs	r1, #0
   141e6:	4668      	mov	r0, sp
   141e8:	f006 fe62 	bl	1aeb0 <memset>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:825
    if (g_locked) {
   141ec:	4ba3      	ldr	r3, [pc, #652]	; (1447c <mesh_service+0x2a0>)
   141ee:	781b      	ldrb	r3, [r3, #0]
   141f0:	f003 04ff 	and.w	r4, r3, #255	; 0xff
   141f4:	bb2b      	cbnz	r3, 14242 <mesh_service+0x66>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:829
    if (g_driver.radio_recv(&packet, sizeof(packet)))
   141f6:	4fa2      	ldr	r7, [pc, #648]	; (14480 <mesh_service+0x2a4>)
   141f8:	2120      	movs	r1, #32
   141fa:	693b      	ldr	r3, [r7, #16]
   141fc:	4668      	mov	r0, sp
   141fe:	4798      	blx	r3
   14200:	b908      	cbnz	r0, 14206 <mesh_service+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:820
    mesh_packet_t *pMeshPacket = NULL;
   14202:	2400      	movs	r4, #0
   14204:	e011      	b.n	1422a <mesh_service+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:834
        g_mesh_stats.pkts_intercepted++;
   14206:	4d9f      	ldr	r5, [pc, #636]	; (14484 <mesh_service+0x2a8>)
   14208:	886b      	ldrh	r3, [r5, #2]
   1420a:	3301      	adds	r3, #1
   1420c:	806b      	strh	r3, [r5, #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:835
        g_mesh_stats.rte_entries = mesh_get_num_routing_entries();
   1420e:	f7ff ffd7 	bl	141c0 <mesh_get_num_routing_entries>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:839
        if (MESH_VERSION != packet.info.version) {
   14212:	f89d 2004 	ldrb.w	r2, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:835
        g_mesh_stats.rte_entries = mesh_get_num_routing_entries();
   14216:	72a8      	strb	r0, [r5, #10]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:839
        if (MESH_VERSION != packet.info.version) {
   14218:	f002 0307 	and.w	r3, r2, #7
   1421c:	2b03      	cmp	r3, #3
   1421e:	d013      	beq.n	14248 <mesh_service+0x6c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:841
            g_error_mask |= mesh_err_ver_mismatch;
   14220:	4a99      	ldr	r2, [pc, #612]	; (14488 <mesh_service+0x2ac>)
   14222:	7813      	ldrb	r3, [r2, #0]
   14224:	f043 0301 	orr.w	r3, r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:846
            g_error_mask |= mesh_err_dup_node;
   14228:	7013      	strb	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:919 (discriminator 3)
    mesh_update_soft_timers();
   1422a:	f7ff fc8f 	bl	13b4c <mesh_update_soft_timers>
mesh_handle_pending_packets():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:525 (discriminator 3)
    mesh_handle_pnd_pkts_for_arr(pRxPkt, &g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size);
   1422e:	2204      	movs	r2, #4
   14230:	4996      	ldr	r1, [pc, #600]	; (1448c <mesh_service+0x2b0>)
   14232:	4620      	mov	r0, r4
   14234:	f7ff fda2 	bl	13d7c <mesh_handle_pnd_pkts_for_arr>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:526 (discriminator 3)
    mesh_handle_pnd_pkts_for_arr(pRxPkt, &g_our_pnd_pkts[0],  g_our_pnd_pkts_size);
   14238:	2202      	movs	r2, #2
   1423a:	4995      	ldr	r1, [pc, #596]	; (14490 <mesh_service+0x2b4>)
   1423c:	4620      	mov	r0, r4
   1423e:	f7ff fd9d 	bl	13d7c <mesh_handle_pnd_pkts_for_arr>
mesh_service():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:926
}
   14242:	b008      	add	sp, #32
   14244:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:844
        else if (packet.mac.src == g_our_node_id) {
   14248:	4b92      	ldr	r3, [pc, #584]	; (14494 <mesh_service+0x2b8>)
   1424a:	f89d e002 	ldrb.w	lr, [sp, #2]
   1424e:	781e      	ldrb	r6, [r3, #0]
   14250:	45b6      	cmp	lr, r6
   14252:	d104      	bne.n	1425e <mesh_service+0x82>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:846
            g_error_mask |= mesh_err_dup_node;
   14254:	4a8c      	ldr	r2, [pc, #560]	; (14488 <mesh_service+0x2ac>)
   14256:	7813      	ldrb	r3, [r2, #0]
   14258:	f043 0302 	orr.w	r3, r3, #2
   1425c:	e7e4      	b.n	14228 <mesh_service+0x4c>
mesh_update_history_and_routing():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:549
        if(existing->src == new_pkt.src && existing->pkt_id == new_pkt.pkt_id) {
   1425e:	4d8e      	ldr	r5, [pc, #568]	; (14498 <mesh_service+0x2bc>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:544
    new_pkt.retries = pPkt->info.retries_rem;
   14260:	4621      	mov	r1, r4
   14262:	46a8      	mov	r8, r5
   14264:	f3c2 02c2 	ubfx	r2, r2, #3, #3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:542
    new_pkt.src = pPkt->nwk.src;
   14268:	f89d 0000 	ldrb.w	r0, [sp]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:543
    new_pkt.pkt_id = pPkt->info.pkt_seq_num;
   1426c:	f89d c006 	ldrb.w	ip, [sp, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:544
    new_pkt.retries = pPkt->info.retries_rem;
   14270:	fa5f f982 	uxtb.w	r9, r2
   14274:	eb01 0341 	add.w	r3, r1, r1, lsl #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:549
        if(existing->src == new_pkt.src && existing->pkt_id == new_pkt.pkt_id) {
   14278:	f813 a005 	ldrb.w	sl, [r3, r5]
   1427c:	4582      	cmp	sl, r0
   1427e:	d123      	bne.n	142c8 <mesh_service+0xec>
   14280:	442b      	add	r3, r5
   14282:	f893 a001 	ldrb.w	sl, [r3, #1]
   14286:	45e2      	cmp	sl, ip
   14288:	d11e      	bne.n	142c8 <mesh_service+0xec>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:552
            *is_retry_packet = (existing->retries != new_pkt.retries);
   1428a:	789d      	ldrb	r5, [r3, #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:553
            existing->retries = new_pkt.retries;
   1428c:	709a      	strb	r2, [r3, #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:552
            *is_retry_packet = (existing->retries != new_pkt.retries);
   1428e:	ebb5 0509 	subs.w	r5, r5, r9
   14292:	bf18      	it	ne
   14294:	2501      	movne	r5, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:550
            duplicate_packet = true;
   14296:	f04f 0901 	mov.w	r9, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:600
    entry = mesh_get_rte_to_modify(pPkt->mac.src);
   1429a:	f89d 0002 	ldrb.w	r0, [sp, #2]
   1429e:	f7ff fd41 	bl	13d24 <mesh_get_rte_to_modify>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:601
    entry->dst = pPkt->mac.src;
   142a2:	f89d 2002 	ldrb.w	r2, [sp, #2]
   142a6:	7002      	strb	r2, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:602
    entry->next_hop = pPkt->mac.src;
   142a8:	7042      	strb	r2, [r0, #1]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:603
    entry->num_hops = 0;
   142aa:	2200      	movs	r2, #0
   142ac:	7082      	strb	r2, [r0, #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:604
    mesh_update_rte_scores(entry);
   142ae:	f7ff fcbd 	bl	13c2c <mesh_update_rte_scores>
mesh_service():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:855
            const bool unique_packet = !duplicate || is_retry_packet;
   142b2:	f1b9 0f00 	cmp.w	r9, #0
   142b6:	d001      	beq.n	142bc <mesh_service+0xe0>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:869 (discriminator 6)
            if (!unique_packet)
   142b8:	2d00      	cmp	r5, #0
   142ba:	d0a2      	beq.n	14202 <mesh_service+0x26>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:879
            else if (g_our_node_id == packet.nwk.src) {
   142bc:	f89d 3000 	ldrb.w	r3, [sp]
   142c0:	42b3      	cmp	r3, r6
   142c2:	d133      	bne.n	1432c <mesh_service+0x150>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:905
                pMeshPacket = &packet;
   142c4:	466c      	mov	r4, sp
   142c6:	e7b0      	b.n	1422a <mesh_service+0x4e>
   142c8:	3101      	adds	r1, #1
mesh_update_history_and_routing():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:547
    for(i = 0; i < g_pkt_history_size; i++) {
   142ca:	2904      	cmp	r1, #4
   142cc:	d1d2      	bne.n	14274 <mesh_service+0x98>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   142ce:	4973      	ldr	r1, [pc, #460]	; (1449c <mesh_service+0x2c0>)
   142d0:	680b      	ldr	r3, [r1, #0]
   142d2:	709a      	strb	r2, [r3, #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   142d4:	4a72      	ldr	r2, [pc, #456]	; (144a0 <mesh_service+0x2c4>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   142d6:	7018      	strb	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   142d8:	4293      	cmp	r3, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   142da:	f883 c001 	strb.w	ip, [r3, #1]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   142de:	d106      	bne.n	142ee <mesh_service+0x112>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:567
            g_pkt_hist_wptr = &(g_pkt_hist[0]);
   142e0:	f8c1 8000 	str.w	r8, [r1]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:577
        if (pPkt->mac.src != pPkt->nwk.src && g_our_node_id != pPkt->nwk.src) {
   142e4:	4586      	cmp	lr, r0
   142e6:	d105      	bne.n	142f4 <mesh_service+0x118>
mesh_service():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:851
            bool is_retry_packet = false;
   142e8:	2500      	movs	r5, #0
mesh_update_history_and_routing():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:537
    bool duplicate_packet = false;
   142ea:	46a9      	mov	r9, r5
   142ec:	e7d5      	b.n	1429a <mesh_service+0xbe>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:570
            g_pkt_hist_wptr++;
   142ee:	3303      	adds	r3, #3
   142f0:	600b      	str	r3, [r1, #0]
   142f2:	e7f7      	b.n	142e4 <mesh_service+0x108>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:577
        if (pPkt->mac.src != pPkt->nwk.src && g_our_node_id != pPkt->nwk.src) {
   142f4:	4286      	cmp	r6, r0
   142f6:	d0f7      	beq.n	142e8 <mesh_service+0x10c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:578
            entry = mesh_get_rte_to_modify(pPkt->nwk.src);
   142f8:	f7ff fd14 	bl	13d24 <mesh_get_rte_to_modify>
   142fc:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:579
            mesh_update_rte_scores(entry);
   142fe:	f7ff fc95 	bl	13c2c <mesh_update_rte_scores>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:586
            if (MESH_ZERO_ADDR == entry->dst || pPkt->info.hop_count <= entry->num_hops) {
   14302:	782b      	ldrb	r3, [r5, #0]
   14304:	b133      	cbz	r3, 14314 <mesh_service+0x138>
   14306:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1430a:	78aa      	ldrb	r2, [r5, #2]
   1430c:	f003 030f 	and.w	r3, r3, #15
   14310:	4293      	cmp	r3, r2
   14312:	dce9      	bgt.n	142e8 <mesh_service+0x10c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:587
                entry->dst = pPkt->nwk.src;
   14314:	f89d 3000 	ldrb.w	r3, [sp]
   14318:	702b      	strb	r3, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:588
                entry->next_hop = pPkt->mac.src;
   1431a:	f89d 3002 	ldrb.w	r3, [sp, #2]
   1431e:	706b      	strb	r3, [r5, #1]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:589
                entry->num_hops = pPkt->info.hop_count;
   14320:	f89d 3005 	ldrb.w	r3, [sp, #5]
   14324:	f3c3 0303 	ubfx	r3, r3, #0, #4
   14328:	70ab      	strb	r3, [r5, #2]
   1432a:	e7dd      	b.n	142e8 <mesh_service+0x10c>
mesh_service():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:883
            else if(MESH_BROADCAST_ADDR == packet.nwk.dst)
   1432c:	f89d 8001 	ldrb.w	r8, [sp, #1]
   14330:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
   14334:	d11b      	bne.n	1436e <mesh_service+0x192>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:886
                if (!g_driver.app_recv(&packet, sizeof(packet))) {
   14336:	683b      	ldr	r3, [r7, #0]
   14338:	2120      	movs	r1, #32
   1433a:	4668      	mov	r0, sp
   1433c:	4798      	blx	r3
   1433e:	b920      	cbnz	r0, 1434a <mesh_service+0x16e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:887
                    g_error_mask |= mesh_err_app_recv;
   14340:	4a51      	ldr	r2, [pc, #324]	; (14488 <mesh_service+0x2ac>)
   14342:	7813      	ldrb	r3, [r2, #0]
   14344:	f043 0304 	orr.w	r3, r3, #4
   14348:	7013      	strb	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:891
                if (packet.info.hop_count++ < packet.info.hop_count_max) {
   1434a:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1434e:	f003 020f 	and.w	r2, r3, #15
   14352:	1c51      	adds	r1, r2, #1
   14354:	f361 0303 	bfi	r3, r1, #0, #4
   14358:	f88d 3005 	strb.w	r3, [sp, #5]
   1435c:	f3c3 1303 	ubfx	r3, r3, #4, #4
   14360:	429a      	cmp	r2, r3
   14362:	f6bf af4e 	bge.w	14202 <mesh_service+0x26>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:893
                    mesh_send_packet(&packet);
   14366:	4668      	mov	r0, sp
   14368:	f7ff fc16 	bl	13b98 <mesh_send_packet>
   1436c:	e749      	b.n	14202 <mesh_service+0x26>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:896
            else if (g_our_node_id == packet.nwk.dst)
   1436e:	4546      	cmp	r6, r8
   14370:	d12e      	bne.n	143d0 <mesh_service+0x1f4>
mesh_handle_our_packet():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:691
    if (!dup && pPkt->info.data_len > 0) {
   14372:	f1b9 0f00 	cmp.w	r9, #0
   14376:	d10c      	bne.n	14392 <mesh_service+0x1b6>
   14378:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1437c:	b14b      	cbz	r3, 14392 <mesh_service+0x1b6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:693
        if (!g_driver.app_recv(pPkt, sizeof(*pPkt))) {
   1437e:	683b      	ldr	r3, [r7, #0]
   14380:	2120      	movs	r1, #32
   14382:	4668      	mov	r0, sp
   14384:	4798      	blx	r3
   14386:	b920      	cbnz	r0, 14392 <mesh_service+0x1b6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:694
            g_error_mask |= mesh_err_app_recv;
   14388:	4a3f      	ldr	r2, [pc, #252]	; (14488 <mesh_service+0x2ac>)
   1438a:	7813      	ldrb	r3, [r2, #0]
   1438c:	f043 0304 	orr.w	r3, r3, #4
   14390:	7013      	strb	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:699
    if (ack && mesh_pkt_ack == pPkt->info.pkt_type) {
   14392:	f89d 3004 	ldrb.w	r3, [sp, #4]
   14396:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   1439a:	2b40      	cmp	r3, #64	; 0x40
   1439c:	d112      	bne.n	143c4 <mesh_service+0x1e8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:702
        if (0 == pPkt->info.data_len) {
   1439e:	f89d 3007 	ldrb.w	r3, [sp, #7]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:705
            mesh_send_ack(g_our_name, size, pPkt);
   143a2:	466a      	mov	r2, sp
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:702
        if (0 == pPkt->info.data_len) {
   143a4:	b923      	cbnz	r3, 143b0 <mesh_service+0x1d4>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:705
            mesh_send_ack(g_our_name, size, pPkt);
   143a6:	2118      	movs	r1, #24
   143a8:	483e      	ldr	r0, [pc, #248]	; (144a4 <mesh_service+0x2c8>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:716
            mesh_send_ack(NULL, 0, pPkt);
   143aa:	f7ff fefc 	bl	141a6 <mesh_send_ack>
   143ae:	e789      	b.n	142c4 <mesh_service+0xe8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:708
        else if (!mesh_send_ack((char*)&g_mesh_stats, sizeof(g_mesh_stats), pPkt))
   143b0:	210c      	movs	r1, #12
   143b2:	4834      	ldr	r0, [pc, #208]	; (14484 <mesh_service+0x2a8>)
   143b4:	f7ff fef7 	bl	141a6 <mesh_send_ack>
   143b8:	2800      	cmp	r0, #0
   143ba:	d183      	bne.n	142c4 <mesh_service+0xe8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:716
            mesh_send_ack(NULL, 0, pPkt);
   143bc:	2100      	movs	r1, #0
   143be:	466a      	mov	r2, sp
   143c0:	4608      	mov	r0, r1
   143c2:	e7f2      	b.n	143aa <mesh_service+0x1ce>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:725
    else if (MESH_ZERO_ADDR == pPkt->mac.dst) {
   143c4:	f89d 3003 	ldrb.w	r3, [sp, #3]
   143c8:	2b00      	cmp	r3, #0
   143ca:	f47f af7b 	bne.w	142c4 <mesh_service+0xe8>
   143ce:	e7f5      	b.n	143bc <mesh_service+0x1e0>
mesh_service():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:904
            else if (g_rpt_node && packet.info.hop_count < packet.info.hop_count_max) {
   143d0:	4b35      	ldr	r3, [pc, #212]	; (144a8 <mesh_service+0x2cc>)
   143d2:	781f      	ldrb	r7, [r3, #0]
   143d4:	2f00      	cmp	r7, #0
   143d6:	f43f af14 	beq.w	14202 <mesh_service+0x26>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:904 (discriminator 1)
   143da:	f89d 5005 	ldrb.w	r5, [sp, #5]
   143de:	f005 090f 	and.w	r9, r5, #15
   143e2:	ea4f 1a15 	mov.w	sl, r5, lsr #4
   143e6:	45d1      	cmp	r9, sl
   143e8:	f6bf af0b 	bge.w	14202 <mesh_service+0x26>
mesh_handle_mesh_packet():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:617
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(pPkt->nwk.dst);
   143ec:	4640      	mov	r0, r8
   143ee:	f7ff fc0b 	bl	13c08 <mesh_find_rte_tbl_entry>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   143f2:	f89d 3003 	ldrb.w	r3, [sp, #3]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:622
    pPkt->info.hop_count++;
   143f6:	f109 0901 	add.w	r9, r9, #1
   143fa:	f369 0503 	bfi	r5, r9, #0, #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   143fe:	429e      	cmp	r6, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:622
    pPkt->info.hop_count++;
   14400:	f88d 5005 	strb.w	r5, [sp, #5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   14404:	d124      	bne.n	14450 <mesh_service+0x274>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:627
        const bool ack_pkt = (mesh_pkt_ack == pPkt->info.pkt_type) || (mesh_pkt_ack_app == pPkt->info.pkt_type);
   14406:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1440a:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   1440e:	2b40      	cmp	r3, #64	; 0x40
   14410:	d003      	beq.n	1441a <mesh_service+0x23e>
   14412:	f1a3 0280 	sub.w	r2, r3, #128	; 0x80
   14416:	4257      	negs	r7, r2
   14418:	4157      	adcs	r7, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:629
        const uint8_t next_dst = entry ? entry->next_hop : MESH_ZERO_ADDR;
   1441a:	b350      	cbz	r0, 14472 <mesh_service+0x296>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   1441c:	2bc0      	cmp	r3, #192	; 0xc0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:629
        const uint8_t next_dst = entry ? entry->next_hop : MESH_ZERO_ADDR;
   1441e:	7844      	ldrb	r4, [r0, #1]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   14420:	d120      	bne.n	14464 <mesh_service+0x288>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:630
        const bool ack_rsp = (mesh_pkt_ack_rsp == pPkt->info.pkt_type) && /* ACK's response packet */
   14422:	45a0      	cmp	r8, r4
   14424:	d012      	beq.n	1444c <mesh_service+0x270>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   14426:	3400      	adds	r4, #0
   14428:	bf18      	it	ne
   1442a:	2401      	movne	r4, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:634
        ensure_delivery = ack_pkt | ack_rsp;
   1442c:	433c      	orrs	r4, r7
   1442e:	f004 0401 	and.w	r4, r4, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:651
    if (entry) {
   14432:	b1d0      	cbz	r0, 1446a <mesh_service+0x28e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:652
        pPkt->mac.dst = entry->next_hop;
   14434:	7843      	ldrb	r3, [r0, #1]
   14436:	f88d 3003 	strb.w	r3, [sp, #3]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:653
        num_hops = entry->num_hops;
   1443a:	7885      	ldrb	r5, [r0, #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:659
    mesh_send_packet(pPkt);
   1443c:	4668      	mov	r0, sp
   1443e:	f7ff fbab 	bl	13b98 <mesh_send_packet>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:673
    if(ensure_delivery) {
   14442:	2c00      	cmp	r4, #0
   14444:	f43f af3e 	beq.w	142c4 <mesh_service+0xe8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:677
        mesh_pending_packets_add(pPkt, num_hops);
   14448:	4629      	mov	r1, r5
   1444a:	e007      	b.n	1445c <mesh_service+0x280>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   1444c:	2400      	movs	r4, #0
   1444e:	e7ed      	b.n	1442c <mesh_service+0x250>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:640
    else if (MESH_ZERO_ADDR == pPkt->mac.dst && NULL == entry) {
   14450:	2b00      	cmp	r3, #0
   14452:	f47f af37 	bne.w	142c4 <mesh_service+0xe8>
   14456:	2800      	cmp	r0, #0
   14458:	d1ec      	bne.n	14434 <mesh_service+0x258>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:642
        mesh_pending_packets_add(pPkt, pPkt->info.hop_count_max);
   1445a:	4651      	mov	r1, sl
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:677
        mesh_pending_packets_add(pPkt, num_hops);
   1445c:	4668      	mov	r0, sp
   1445e:	f7ff fc19 	bl	13c94 <mesh_pending_packets_add>
   14462:	e72f      	b.n	142c4 <mesh_service+0xe8>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:634
        ensure_delivery = ack_pkt | ack_rsp;
   14464:	463c      	mov	r4, r7
   14466:	e7e5      	b.n	14434 <mesh_service+0x258>
   14468:	463c      	mov	r4, r7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:656
        pPkt->mac.dst = MESH_ZERO_ADDR;
   1446a:	2500      	movs	r5, #0
   1446c:	f88d 5003 	strb.w	r5, [sp, #3]
   14470:	e7e4      	b.n	1443c <mesh_service+0x260>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   14472:	2bc0      	cmp	r3, #192	; 0xc0
   14474:	d1f8      	bne.n	14468 <mesh_service+0x28c>
   14476:	4604      	mov	r4, r0
   14478:	e7d8      	b.n	1442c <mesh_service+0x250>
   1447a:	bf00      	nop
   1447c:	2007c355 	.word	0x2007c355
   14480:	2007c340 	.word	0x2007c340
   14484:	2007c3e6 	.word	0x2007c3e6
   14488:	2007c354 	.word	0x2007c354
   1448c:	2007c356 	.word	0x2007c356
   14490:	2007c40a 	.word	0x2007c40a
   14494:	2007c08d 	.word	0x2007c08d
   14498:	2007c452 	.word	0x2007c452
   1449c:	2007c090 	.word	0x2007c090
   144a0:	2007c45b 	.word	0x2007c45b
   144a4:	2007c3f2 	.word	0x2007c3f2
   144a8:	2007c45e 	.word	0x2007c45e

000144ac <mesh_get_pnd_pkt_count>:
mesh_get_pnd_pkt_count():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1126

    return false;
}

uint8_t mesh_get_pnd_pkt_count(void)
{
   144ac:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1127
    uint8_t i = 0, count = 0;
   144ae:	4618      	mov	r0, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1130

    for (i = 0; i < g_mesh_pnd_pkts_size; i++) {
        if (MESH_ZERO_ADDR != g_mesh_pnd_pkts[i].pkt.nwk.dst) {
   144b0:	4a09      	ldr	r2, [pc, #36]	; (144d8 <mesh_get_pnd_pkt_count+0x2c>)
   144b2:	18d1      	adds	r1, r2, r3
   144b4:	7849      	ldrb	r1, [r1, #1]
   144b6:	b109      	cbz	r1, 144bc <mesh_get_pnd_pkt_count+0x10>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1131
            ++count;
   144b8:	3001      	adds	r0, #1
   144ba:	b2c0      	uxtb	r0, r0
   144bc:	3324      	adds	r3, #36	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1129 (discriminator 2)
    for (i = 0; i < g_mesh_pnd_pkts_size; i++) {
   144be:	2b90      	cmp	r3, #144	; 0x90
   144c0:	d1f7      	bne.n	144b2 <mesh_get_pnd_pkt_count+0x6>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1136 (discriminator 1)
        }
    }

    for (i = 0; i < g_our_pnd_pkts_size; i++) {
        if (MESH_ZERO_ADDR != g_our_pnd_pkts[i].pkt.nwk.dst) {
   144c2:	4b06      	ldr	r3, [pc, #24]	; (144dc <mesh_get_pnd_pkt_count+0x30>)
   144c4:	785a      	ldrb	r2, [r3, #1]
   144c6:	b10a      	cbz	r2, 144cc <mesh_get_pnd_pkt_count+0x20>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1137
            ++count;
   144c8:	3001      	adds	r0, #1
   144ca:	b2c0      	uxtb	r0, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1136
        if (MESH_ZERO_ADDR != g_our_pnd_pkts[i].pkt.nwk.dst) {
   144cc:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
   144d0:	b10b      	cbz	r3, 144d6 <mesh_get_pnd_pkt_count+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1137
            ++count;
   144d2:	3001      	adds	r0, #1
   144d4:	b2c0      	uxtb	r0, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1142
        }
    }

    return count;
}
   144d6:	4770      	bx	lr
   144d8:	2007c356 	.word	0x2007c356
   144dc:	2007c40a 	.word	0x2007c40a

000144e0 <Storage::read(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage4readEPKcPvjj():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:89

    return status;
}

FRESULT Storage::read(const char* pFilename,  void* pData, unsigned int bytesToRead, unsigned int offset)
{
   144e0:	b5f0      	push	{r4, r5, r6, r7, lr}
   144e2:	461d      	mov	r5, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:92
    FRESULT status = FR_INT_ERR;
    FIL file;
    unsigned int bytesRead = 0;
   144e4:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:89
{
   144e6:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   144ea:	460e      	mov	r6, r1
   144ec:	4617      	mov	r7, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:95

    // Open Existing file
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_EXISTING | FA_READ)))
   144ee:	4601      	mov	r1, r0
   144f0:	2201      	movs	r2, #1
   144f2:	a801      	add	r0, sp, #4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:92
    unsigned int bytesRead = 0;
   144f4:	9300      	str	r3, [sp, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:95
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_EXISTING | FA_READ)))
   144f6:	f7fd fa63 	bl	119c0 <f_open>
   144fa:	4604      	mov	r4, r0
   144fc:	b970      	cbnz	r0, 1451c <Storage::read(char const*, void*, unsigned int, unsigned int)+0x3c>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:97
    {
        if(offset) {
   144fe:	b11d      	cbz	r5, 14508 <Storage::read(char const*, void*, unsigned int, unsigned int)+0x28>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:98
            f_lseek(&file, offset);
   14500:	4629      	mov	r1, r5
   14502:	a801      	add	r0, sp, #4
   14504:	f7fd fcd8 	bl	11eb8 <f_lseek>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:100
        }
        status = f_read(&file, pData, bytesToRead, &bytesRead);
   14508:	466b      	mov	r3, sp
   1450a:	463a      	mov	r2, r7
   1450c:	4631      	mov	r1, r6
   1450e:	a801      	add	r0, sp, #4
   14510:	f7fd faed 	bl	11aee <f_read>
   14514:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:101
        f_close(&file);
   14516:	a801      	add	r0, sp, #4
   14518:	f7fd fcbc 	bl	11e94 <f_close>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:105
    }

    return status;
}
   1451c:	4620      	mov	r0, r4
   1451e:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   14522:	bdf0      	pop	{r4, r5, r6, r7, pc}

00014524 <i2c2_device::writeReg(unsigned char, unsigned char)>:
_ZN11i2c2_device8writeRegEhh():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:56
    }

    /// Writes a register of this device
    inline void writeReg(unsigned char reg, unsigned char data)
    {
        mI2C.writeReg(mOurAddr, reg, data);
   14524:	4613      	mov	r3, r2
   14526:	460a      	mov	r2, r1
   14528:	7901      	ldrb	r1, [r0, #4]
   1452a:	6800      	ldr	r0, [r0, #0]
   1452c:	f000 ba4a 	b.w	149c4 <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>

00014530 <i2c2_device::get16BitRegister(unsigned char)>:
_ZN11i2c2_device16get16BitRegisterEh():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:68
    }

    /**
     * Reads 16-bit register from reg and reg+1 granted that reg has MSB
     */
    uint16_t get16BitRegister(unsigned char reg)
   14530:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:70
    {
        uint8_t buff[2] = {0};
   14532:	2200      	movs	r2, #0
   14534:	ab04      	add	r3, sp, #16
   14536:	f823 2d04 	strh.w	r2, [r3, #-4]!
/home/peter/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:71
        mI2C.readRegisters(mOurAddr, reg, &buff[0], sizeof(buff));
   1453a:	2202      	movs	r2, #2
   1453c:	7904      	ldrb	r4, [r0, #4]
   1453e:	9200      	str	r2, [sp, #0]
   14540:	6800      	ldr	r0, [r0, #0]
   14542:	460a      	mov	r2, r1
   14544:	4621      	mov	r1, r4
   14546:	f000 fa26 	bl	14996 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:75

        const uint16_t MSB = buff[0];
        const uint16_t LSB = buff[1];
        return ((MSB << 8) | (LSB & 0xFF));
   1454a:	f89d 000c 	ldrb.w	r0, [sp, #12]
   1454e:	f89d 300d 	ldrb.w	r3, [sp, #13]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:76
    }
   14552:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
   14556:	b004      	add	sp, #16
   14558:	bd10      	pop	{r4, pc}

0001455a <Acceleration_Sensor::init()>:
_ZN19Acceleration_Sensor4initEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:119
};



bool Acceleration_Sensor::init()
{
   1455a:	b510      	push	{r4, lr}
   1455c:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:122
    const unsigned char activeModeWith100Hz = (1 << 0) | (3 << 3); // Active Mode @ 100Hz

    writeReg(Ctrl_Reg1, activeModeWith100Hz);
   1455e:	2219      	movs	r2, #25
   14560:	212a      	movs	r1, #42	; 0x2a
   14562:	f7ff ffdf 	bl	14524 <i2c2_device::writeReg(unsigned char, unsigned char)>
_ZN11i2c2_device7readRegEh():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:50
        return mI2C.readReg(mOurAddr, reg);
   14566:	220d      	movs	r2, #13
   14568:	7921      	ldrb	r1, [r4, #4]
   1456a:	6820      	ldr	r0, [r4, #0]
   1456c:	f000 f9ff 	bl	1496e <I2C_Base::readReg(unsigned char, unsigned char)>
_ZN19Acceleration_Sensor4initEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:126
    const char whoAmIReg = readReg(WhoAmI);

    return (mWhoAmIExpectedValue == whoAmIReg);
}
   14570:	f1a0 032a 	sub.w	r3, r0, #42	; 0x2a
   14574:	4258      	negs	r0, r3
   14576:	4158      	adcs	r0, r3
   14578:	bd10      	pop	{r4, pc}
   1457a:	Address 0x000000000001457a is out of bounds.


0001457c <IR_Sensor::storeIrCode(unsigned long)>:
_ZN9IR_Sensor11storeIrCodeEm():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:162
static uint32_t g_last_decoded_signal = 0;  ///< Value of the last decoded signals

void IR_Sensor::storeIrCode(uint32_t value)
{
    // Just store the timestamp of this signal
    if(g_signal_count < MAX_FALLING_EDGES_PER_IR_FRAME) {
   1457c:	4a04      	ldr	r2, [pc, #16]	; (14590 <IR_Sensor::storeIrCode(unsigned long)+0x14>)
   1457e:	8813      	ldrh	r3, [r2, #0]
   14580:	2b1f      	cmp	r3, #31
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:163
        g_ir_timings[g_signal_count++] = value;
   14582:	bfdf      	itttt	le
   14584:	1c58      	addle	r0, r3, #1
   14586:	8010      	strhle	r0, [r2, #0]
   14588:	4a02      	ldrle	r2, [pc, #8]	; (14594 <IR_Sensor::storeIrCode(unsigned long)+0x18>)
   1458a:	f842 1023 	strle.w	r1, [r2, r3, lsl #2]
   1458e:	4770      	bx	lr
   14590:	2007c4f4 	.word	0x2007c4f4
   14594:	2007c474 	.word	0x2007c474

00014598 <IR_Sensor::decodeIrCode()>:
_ZN9IR_Sensor12decodeIrCodeEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:168
    }
}

void IR_Sensor::decodeIrCode(void)
{
   14598:	b5f0      	push	{r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:169
    if(g_signal_count > 1)
   1459a:	4e15      	ldr	r6, [pc, #84]	; (145f0 <IR_Sensor::decodeIrCode()+0x58>)
   1459c:	8833      	ldrh	r3, [r6, #0]
   1459e:	2b01      	cmp	r3, #1
   145a0:	dd23      	ble.n	145ea <IR_Sensor::decodeIrCode()+0x52>
   145a2:	4a14      	ldr	r2, [pc, #80]	; (145f4 <IR_Sensor::decodeIrCode()+0x5c>)
   145a4:	2000      	movs	r0, #0
   145a6:	4615      	mov	r5, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172
    {
        /* Calculate differences of falling edges */
        for(int i = 0; i < g_signal_count-1; i++) {
   145a8:	3b01      	subs	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172 (discriminator 3)
   145aa:	4298      	cmp	r0, r3
   145ac:	da08      	bge.n	145c0 <IR_Sensor::decodeIrCode()+0x28>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:173 (discriminator 2)
            g_ir_timings[i] = g_ir_timings[i+1] - g_ir_timings[i];
   145ae:	f852 1f04 	ldr.w	r1, [r2, #4]!
   145b2:	3001      	adds	r0, #1
   145b4:	f852 4c04 	ldr.w	r4, [r2, #-4]
   145b8:	1b09      	subs	r1, r1, r4
   145ba:	f842 1c04 	str.w	r1, [r2, #-4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172 (discriminator 2)
        for(int i = 0; i < g_signal_count-1; i++) {
   145be:	e7f4      	b.n	145aa <IR_Sensor::decodeIrCode()+0x12>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:180

        /**
         * First falling edge value should indicate binary 0.
         * So anything higher than 50% of this value is considered binary 1.
         */
        const uint32_t binary1Threshold = g_ir_timings[1] + (g_ir_timings[1]/2);
   145c0:	2100      	movs	r1, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:184
        uint32_t decodedSignal = 0;
        for(uint16_t i=0; i < g_signal_count-1; i++) {
            if(g_ir_timings[i] > binary1Threshold) {
                decodedSignal |= (1 << i);
   145c2:	f04f 0e01 	mov.w	lr, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:181
        uint32_t decodedSignal = 0;
   145c6:	460c      	mov	r4, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:180
        const uint32_t binary1Threshold = g_ir_timings[1] + (g_ir_timings[1]/2);
   145c8:	6868      	ldr	r0, [r5, #4]
   145ca:	eb00 0050 	add.w	r0, r0, r0, lsr #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:182 (discriminator 1)
        for(uint16_t i=0; i < g_signal_count-1; i++) {
   145ce:	b28a      	uxth	r2, r1
   145d0:	4293      	cmp	r3, r2
   145d2:	dd08      	ble.n	145e6 <IR_Sensor::decodeIrCode()+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:183
            if(g_ir_timings[i] > binary1Threshold) {
   145d4:	f855 7022 	ldr.w	r7, [r5, r2, lsl #2]
   145d8:	3101      	adds	r1, #1
   145da:	42b8      	cmp	r0, r7
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:184
                decodedSignal |= (1 << i);
   145dc:	bf3c      	itt	cc
   145de:	fa0e f202 	lslcc.w	r2, lr, r2
   145e2:	4314      	orrcc	r4, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:182
        for(uint16_t i=0; i < g_signal_count-1; i++) {
   145e4:	e7f3      	b.n	145ce <IR_Sensor::decodeIrCode()+0x36>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:187
            }
        }
        g_last_decoded_signal = decodedSignal;
   145e6:	4b04      	ldr	r3, [pc, #16]	; (145f8 <IR_Sensor::decodeIrCode()+0x60>)
   145e8:	601c      	str	r4, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:190
    }

    g_signal_count = 0;
   145ea:	2300      	movs	r3, #0
   145ec:	8033      	strh	r3, [r6, #0]
   145ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
   145f0:	2007c4f4 	.word	0x2007c4f4
   145f4:	2007c474 	.word	0x2007c474
   145f8:	2007c4f8 	.word	0x2007c4f8

000145fc <IR_Sensor::init()>:
_ZN9IR_Sensor4initEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:197

/**
 * IR Sensor is attached to P1.18 - CAP1.0, so it needs TIMER1 to capture the times on P1.18
 */
bool IR_Sensor::init()
{
   145fc:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:199
    /* Power up the timer 1 in case it is off */
    lpc_pconp(pconp_timer1, true);
   145fe:	2101      	movs	r1, #1
   14600:	2002      	movs	r0, #2
   14602:	f7fb ff15 	bl	10430 <lpc_pconp>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:204

    /* Timer 1 should be initialized by high_level_init.cpp using lpc_sys.c API
     * We will just add on the capture functionality here.
     */
    LPC_TIM1->CCR &= ~(7 << 0);            // Clear Bits 2:1:0
   14606:	4b08      	ldr	r3, [pc, #32]	; (14628 <IR_Sensor::init()+0x2c>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:211

    // Select P1.18 as CAP1.0 by setting bits 5:4 to 0b11
    LPC_PINCON->PINSEL3 |= (3 << 4);

    return true;
}
   14608:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:204
    LPC_TIM1->CCR &= ~(7 << 0);            // Clear Bits 2:1:0
   1460a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   1460c:	f022 0207 	bic.w	r2, r2, #7
   14610:	629a      	str	r2, [r3, #40]	; 0x28
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:205
    LPC_TIM1->CCR |=  (1 << 2) | (1 << 1); // Enable Falling Edge capture0 with interrupt
   14612:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   14614:	f042 0206 	orr.w	r2, r2, #6
   14618:	629a      	str	r2, [r3, #40]	; 0x28
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:208
    LPC_PINCON->PINSEL3 |= (3 << 4);
   1461a:	4a04      	ldr	r2, [pc, #16]	; (1462c <IR_Sensor::init()+0x30>)
   1461c:	68d3      	ldr	r3, [r2, #12]
   1461e:	f043 0330 	orr.w	r3, r3, #48	; 0x30
   14622:	60d3      	str	r3, [r2, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:211
}
   14624:	bd08      	pop	{r3, pc}
   14626:	bf00      	nop
   14628:	40008000 	.word	0x40008000
   1462c:	4002c000 	.word	0x4002c000

00014630 <LED_Display::setLeftDigit(char)>:
_ZN11LED_Display12setLeftDigitEc():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:255
        setLeftDigit(' ');
    else
        setLeftDigit (num/10 + '0');
}
void LED_Display::setLeftDigit(char alpha)
{
   14630:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:257
    mNumAtDisplay[0] = alpha;
    writeReg(outputPort1, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14632:	4b04      	ldr	r3, [pc, #16]	; (14644 <LED_Display::setLeftDigit(char)+0x14>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:256
    mNumAtDisplay[0] = alpha;
   14634:	7141      	strb	r1, [r0, #5]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:257
    writeReg(outputPort1, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14636:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   1463a:	5c5a      	ldrb	r2, [r3, r1]
   1463c:	2103      	movs	r1, #3
   1463e:	f7ff ff71 	bl	14524 <i2c2_device::writeReg(unsigned char, unsigned char)>
   14642:	bd08      	pop	{r3, pc}
   14644:	0002161d 	.word	0x0002161d

00014648 <LED_Display::setRightDigit(char)>:
_ZN11LED_Display13setRightDigitEc():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:260
}
void LED_Display::setRightDigit(char alpha)
{
   14648:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:262
    mNumAtDisplay[1] = alpha;
    writeReg(outputPort0, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   1464a:	4b04      	ldr	r3, [pc, #16]	; (1465c <LED_Display::setRightDigit(char)+0x14>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:261
    mNumAtDisplay[1] = alpha;
   1464c:	7181      	strb	r1, [r0, #6]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:262
    writeReg(outputPort0, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   1464e:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   14652:	5c5a      	ldrb	r2, [r3, r1]
   14654:	2102      	movs	r1, #2
   14656:	f7ff ff65 	bl	14524 <i2c2_device::writeReg(unsigned char, unsigned char)>
   1465a:	bd08      	pop	{r3, pc}
   1465c:	0002161d 	.word	0x0002161d

00014660 <LED_Display::init()>:
_ZN11LED_Display4initEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:225
{
   14660:	b538      	push	{r3, r4, r5, lr}
   14662:	4604      	mov	r4, r0
_ZN11i2c2_device19checkDeviceResponseEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:62
        return mI2C.checkDeviceResponse(mOurAddr);
   14664:	7901      	ldrb	r1, [r0, #4]
   14666:	6800      	ldr	r0, [r0, #0]
   14668:	f000 f9c4 	bl	149f4 <I2C_Base::checkDeviceResponse(unsigned char)>
_ZN11LED_Display4initEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:227
    if(devicePresent)
   1466c:	4605      	mov	r5, r0
   1466e:	b188      	cbz	r0, 14694 <LED_Display::init()+0x34>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:230
        writeReg(cfgPort0, cfgAsOutput);
   14670:	2200      	movs	r2, #0
   14672:	2106      	movs	r1, #6
   14674:	4620      	mov	r0, r4
   14676:	f7ff ff55 	bl	14524 <i2c2_device::writeReg(unsigned char, unsigned char)>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:231
        writeReg(cfgPort1, cfgAsOutput);
   1467a:	2200      	movs	r2, #0
   1467c:	2107      	movs	r1, #7
   1467e:	4620      	mov	r0, r4
   14680:	f7ff ff50 	bl	14524 <i2c2_device::writeReg(unsigned char, unsigned char)>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:233
        setLeftDigit('.');
   14684:	212e      	movs	r1, #46	; 0x2e
   14686:	4620      	mov	r0, r4
   14688:	f7ff ffd2 	bl	14630 <LED_Display::setLeftDigit(char)>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:234
        setRightDigit('.');
   1468c:	212e      	movs	r1, #46	; 0x2e
   1468e:	4620      	mov	r0, r4
   14690:	f7ff ffda 	bl	14648 <LED_Display::setRightDigit(char)>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:238
}
   14694:	4628      	mov	r0, r5
   14696:	bd38      	pop	{r3, r4, r5, pc}

00014698 <LED_Display::setNumber(char)>:
_ZN11LED_Display9setNumberEc():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:245
{
   14698:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:246
    num %= 100;
   1469a:	2464      	movs	r4, #100	; 0x64
   1469c:	fbb1 f3f4 	udiv	r3, r1, r4
   146a0:	fb03 1414 	mls	r4, r3, r4, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   146a4:	210a      	movs	r1, #10
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:246
    num %= 100;
   146a6:	b2e4      	uxtb	r4, r4
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   146a8:	fbb4 f5f1 	udiv	r5, r4, r1
   146ac:	fb01 4115 	mls	r1, r1, r5, r4
   146b0:	3130      	adds	r1, #48	; 0x30
   146b2:	b2c9      	uxtb	r1, r1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:245
{
   146b4:	4606      	mov	r6, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   146b6:	f7ff ffc7 	bl	14648 <LED_Display::setRightDigit(char)>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:249
    if(num < 10)
   146ba:	2c09      	cmp	r4, #9
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:252
        setLeftDigit (num/10 + '0');
   146bc:	bf88      	it	hi
   146be:	f105 0130 	addhi.w	r1, r5, #48	; 0x30
   146c2:	4630      	mov	r0, r6
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:253
}
   146c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:250
        setLeftDigit(' ');
   146c8:	bf94      	ite	ls
   146ca:	2120      	movls	r1, #32
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:252
        setLeftDigit (num/10 + '0');
   146cc:	b2c9      	uxtbhi	r1, r1
   146ce:	f7ff bfaf 	b.w	14630 <LED_Display::setLeftDigit(char)>

000146d2 <LED::init()>:
_ZN3LED4initEv():
   146d2:	2001      	movs	r0, #1
   146d4:	4770      	bx	lr
   146d6:	Address 0x00000000000146d6 is out of bounds.


000146d8 <LED::setAll(unsigned char)>:
_ZN3LED6setAllEh():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:297
void LED::set(uint8_t ledNum, bool ON)
{
    ON ? on(ledNum) : off(ledNum);
}
void LED::setAll(uint8_t value)
{
   146d8:	b538      	push	{r3, r4, r5, lr}
   146da:	460c      	mov	r4, r1
   146dc:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:298
    portENTER_CRITICAL();
   146de:	f002 ffc3 	bl	17668 <vPortEnterCritical>
   146e2:	2201      	movs	r2, #1
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:307
            if (mLedValue & (1 << num))             \
                LPC_GPIO1->FIOCLR = (1 << realbit); \
            else                                    \
                LPC_GPIO1->FIOSET = (1 << realbit)

        mLedValue = value & 0x0F;
   146e4:	f004 030f 	and.w	r3, r4, #15
   146e8:	702b      	strb	r3, [r5, #0]
   146ea:	4b0e      	ldr	r3, [pc, #56]	; (14724 <LED::setAll(unsigned char)+0x4c>)
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:308
        led_set(0, 0);
   146ec:	f014 0f01 	tst.w	r4, #1
   146f0:	bf14      	ite	ne
   146f2:	61da      	strne	r2, [r3, #28]
   146f4:	619a      	streq	r2, [r3, #24]
   146f6:	2202      	movs	r2, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:309
        led_set(1, 1);
   146f8:	f014 0f02 	tst.w	r4, #2
   146fc:	bf14      	ite	ne
   146fe:	61da      	strne	r2, [r3, #28]
   14700:	619a      	streq	r2, [r3, #24]
   14702:	2210      	movs	r2, #16
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:310
        led_set(2, 4);
   14704:	f014 0f04 	tst.w	r4, #4
   14708:	bf14      	ite	ne
   1470a:	61da      	strne	r2, [r3, #28]
   1470c:	619a      	streq	r2, [r3, #24]
   1470e:	f44f 7280 	mov.w	r2, #256	; 0x100
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:311
        led_set(3, 8);
   14712:	f014 0f08 	tst.w	r4, #8
   14716:	bf14      	ite	ne
   14718:	61da      	strne	r2, [r3, #28]
   1471a:	619a      	streq	r2, [r3, #24]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:314
    }
    portEXIT_CRITICAL();
}
   1471c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:313
    portEXIT_CRITICAL();
   14720:	f002 bfb2 	b.w	17688 <vPortExitCritical>
   14724:	2009c020 	.word	0x2009c020

00014728 <Light_Sensor::init()>:
_ZN12Light_Sensor4initEv():
   14728:	2001      	movs	r0, #1
   1472a:	4770      	bx	lr

0001472c <Light_Sensor::getRawValue()>:
_ZN12Light_Sensor11getRawValueEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:327
{
    return true;
}
uint16_t Light_Sensor::getRawValue()
{
    return adc0_get_reading(BIO_LIGHT_ADC_CH_NUM);
   1472c:	2002      	movs	r0, #2
   1472e:	f000 bf95 	b.w	1565c <adc0_get_reading>

00014732 <Switches::init()>:
_ZN8Switches4initEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:341

bool Switches::init()
{
    /* Pins initialized by bio.h */
    return true;
}
   14732:	2001      	movs	r0, #1
   14734:	4770      	bx	lr
   14736:	Address 0x0000000000014736 is out of bounds.


00014738 <Switches::getSwitchValues()>:
_ZN8Switches15getSwitchValuesEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:345
uint8_t Switches::getSwitchValues()
{
    /* Return contiguous bits 0-3 from scattered switch pins */
    const int swValues = LPC_GPIO1->FIOPIN;
   14738:	4b04      	ldr	r3, [pc, #16]	; (1474c <Switches::getSwitchValues()+0x14>)
   1473a:	695b      	ldr	r3, [r3, #20]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:348
    const int p9_p10  = (swValues >> 9)  & 0x3;
    const int p14_p15 = (swValues >> 14) & 0x3;
    return (p9_p10 | (p14_p15 << 2));
   1473c:	0b18      	lsrs	r0, r3, #12
   1473e:	f000 000c 	and.w	r0, r0, #12
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:346
    const int p9_p10  = (swValues >> 9)  & 0x3;
   14742:	f3c3 2341 	ubfx	r3, r3, #9, #2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:349
}
   14746:	4318      	orrs	r0, r3
   14748:	4770      	bx	lr
   1474a:	bf00      	nop
   1474c:	2009c020 	.word	0x2009c020

00014750 <I2C_Temp::init()>:
_ZN8I2C_Temp4initEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:363
}



bool I2C_Temp::init()
{
   14750:	b510      	push	{r4, lr}
   14752:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:369
    const unsigned char temperatureCfgRegPtr = 0x01;
    const unsigned char oneShotShutdownMode = 0x81;
    const unsigned char expectedBitsThatAreNotZero = 0x60; // R1:R0 bits are 1s at startup

    // Enter one-shot shutdown mode.
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   14754:	2281      	movs	r2, #129	; 0x81
   14756:	2101      	movs	r1, #1
   14758:	f7ff fee4 	bl	14524 <i2c2_device::writeReg(unsigned char, unsigned char)>
_ZN11i2c2_device7readRegEh():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:50
        return mI2C.readReg(mOurAddr, reg);
   1475c:	2201      	movs	r2, #1
   1475e:	7921      	ldrb	r1, [r4, #4]
   14760:	6820      	ldr	r0, [r4, #0]
   14762:	f000 f904 	bl	1496e <I2C_Base::readReg(unsigned char, unsigned char)>
_ZN8I2C_Temp4initEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:372

    const unsigned char cfgRegByte0 = readReg(temperatureCfgRegPtr);
    return (0 != (cfgRegByte0 & expectedBitsThatAreNotZero));
   14766:	f010 0f60 	tst.w	r0, #96	; 0x60
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:373
}
   1476a:	bf14      	ite	ne
   1476c:	2001      	movne	r0, #1
   1476e:	2000      	moveq	r0, #0
   14770:	bd10      	pop	{r4, pc}

00014772 <I2C_Temp::getCelsius()>:
_ZN8I2C_Temp10getCelsiusEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:375
float I2C_Temp::getCelsius()
{
   14772:	b538      	push	{r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    // Get signed 16-bit data of temperature register pointer
    const unsigned char temperatureRegsiterPtr = 0x00;
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   14774:	2100      	movs	r1, #0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:375
{
   14776:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   14778:	f7ff feda 	bl	14530 <i2c2_device::get16BitRegister(unsigned char)>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:383

    // Trigger next conversion:
    const unsigned char temperatureCfgRegPtr = 0x01;
    const unsigned char oneShotShutdownMode = 0x81;
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   1477c:	2281      	movs	r2, #129	; 0x81
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   1477e:	b205      	sxth	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:383
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   14780:	2101      	movs	r1, #1
   14782:	4620      	mov	r0, r4
   14784:	f7ff fece 	bl	14524 <i2c2_device::writeReg(unsigned char, unsigned char)>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:389

    // Temperature data is in bits 15:3 which contains signed 16-bit data
    temperature /= 16;

    // Each bit is of 0.0625 degree per bit resolution
    return (0.0625F * temperature) + mOffsetCelcius;
   14788:	2010      	movs	r0, #16
   1478a:	fb95 f0f0 	sdiv	r0, r5, r0
   1478e:	f005 fbab 	bl	19ee8 <__aeabi_i2f>
   14792:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
   14796:	f005 fbfb 	bl	19f90 <__aeabi_fmul>
   1479a:	68a1      	ldr	r1, [r4, #8]
   1479c:	f005 faf0 	bl	19d80 <__addsf3>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:390
}
   147a0:	bd38      	pop	{r3, r4, r5, pc}
   147a2:	Address 0x00000000000147a2 is out of bounds.


000147a4 <I2C_Temp::getFarenheit()>:
_ZN8I2C_Temp12getFarenheitEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:393

float I2C_Temp::getFarenheit()
{
   147a4:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:394
    return (getCelsius() * 9.0F / 5) + 32;
   147a6:	f7ff ffe4 	bl	14772 <I2C_Temp::getCelsius()>
   147aa:	4905      	ldr	r1, [pc, #20]	; (147c0 <I2C_Temp::getFarenheit()+0x1c>)
   147ac:	f005 fbf0 	bl	19f90 <__aeabi_fmul>
   147b0:	4904      	ldr	r1, [pc, #16]	; (147c4 <I2C_Temp::getFarenheit()+0x20>)
   147b2:	f005 fca1 	bl	1a0f8 <__aeabi_fdiv>
   147b6:	f04f 4184 	mov.w	r1, #1107296256	; 0x42000000
   147ba:	f005 fae1 	bl	19d80 <__addsf3>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:395
}
   147be:	bd08      	pop	{r3, pc}
   147c0:	41100000 	.word	0x41100000
   147c4:	40a00000 	.word	0x40a00000

000147c8 <LabGPIO::LabGPIO(unsigned char, unsigned char)>:
_ZN7LabGPIOC2Ehh():
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:5
#include "gpioDriver.hpp"
#include <stdio.h>

LabGPIO::LabGPIO(uint8_t my_port, uint8_t my_pin){
  this->port = my_port; 
   147c8:	7001      	strb	r1, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:6
  this->pin = my_pin;
   147ca:	7042      	strb	r2, [r0, #1]
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:8
  
  if(this->port == 0){
   147cc:	b921      	cbnz	r1, 147d8 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x10>
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:9
    this->FIODIR = &LPC_GPIO0->FIODIR;
   147ce:	4b08      	ldr	r3, [pc, #32]	; (147f0 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x28>)
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:21
  else if(this->port == 2){
    this->FIODIR = &LPC_GPIO2->FIODIR;
    this->FIOPIN = &LPC_GPIO2->FIOPIN; 
  }
  else if(this->port == 4){
    this->FIODIR = &LPC_GPIO4->FIODIR;
   147d0:	6043      	str	r3, [r0, #4]
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:22
    this->FIOPIN = &LPC_GPIO4->FIOPIN; 
   147d2:	3314      	adds	r3, #20
   147d4:	6083      	str	r3, [r0, #8]
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:24
  }
}
   147d6:	4770      	bx	lr
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:12
  else if(this->port == 1){
   147d8:	2901      	cmp	r1, #1
   147da:	d101      	bne.n	147e0 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x18>
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:13
    this->FIODIR = &LPC_GPIO1->FIODIR;
   147dc:	4b05      	ldr	r3, [pc, #20]	; (147f4 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x2c>)
   147de:	e7f7      	b.n	147d0 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x8>
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:16
  else if(this->port == 2){
   147e0:	2902      	cmp	r1, #2
   147e2:	d101      	bne.n	147e8 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x20>
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:17
    this->FIODIR = &LPC_GPIO2->FIODIR;
   147e4:	4b04      	ldr	r3, [pc, #16]	; (147f8 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x30>)
   147e6:	e7f3      	b.n	147d0 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x8>
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:20
  else if(this->port == 4){
   147e8:	2904      	cmp	r1, #4
   147ea:	d1f4      	bne.n	147d6 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0xe>
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:21
    this->FIODIR = &LPC_GPIO4->FIODIR;
   147ec:	4b03      	ldr	r3, [pc, #12]	; (147fc <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x34>)
   147ee:	e7ef      	b.n	147d0 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x8>
   147f0:	2009c000 	.word	0x2009c000
   147f4:	2009c020 	.word	0x2009c020
   147f8:	2009c040 	.word	0x2009c040
   147fc:	2009c080 	.word	0x2009c080

00014800 <LabGPIO::setAsInput()>:
_ZN7LabGPIO10setAsInputEv():
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:26

void LabGPIO::setAsInput(void)          { *(this->FIODIR) &= ~(1 << this->pin);                   }
   14800:	2201      	movs	r2, #1
   14802:	6841      	ldr	r1, [r0, #4]
   14804:	7840      	ldrb	r0, [r0, #1]
   14806:	680b      	ldr	r3, [r1, #0]
   14808:	4082      	lsls	r2, r0
   1480a:	ea23 0302 	bic.w	r3, r3, r2
   1480e:	600b      	str	r3, [r1, #0]
   14810:	4770      	bx	lr

00014812 <LabGPIO::setAsOutput()>:
_ZN7LabGPIO11setAsOutputEv():
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:27
void LabGPIO::setAsOutput(void)         { *(this->FIODIR) |= (1 << this->pin);                    }
   14812:	2301      	movs	r3, #1
   14814:	6842      	ldr	r2, [r0, #4]
   14816:	7840      	ldrb	r0, [r0, #1]
   14818:	6811      	ldr	r1, [r2, #0]
   1481a:	4083      	lsls	r3, r0
   1481c:	430b      	orrs	r3, r1
   1481e:	6013      	str	r3, [r2, #0]
   14820:	4770      	bx	lr

00014822 <LabGPIO::setHigh()>:
_ZN7LabGPIO7setHighEv():
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:29
void LabGPIO::setDirection(bool output) { output-true? setAsOutput() : setAsInput();              }
void LabGPIO::setHigh(void)             { *(this->FIOPIN) |= (1 << this->pin);                    }
   14822:	2301      	movs	r3, #1
   14824:	6882      	ldr	r2, [r0, #8]
   14826:	7840      	ldrb	r0, [r0, #1]
   14828:	6811      	ldr	r1, [r2, #0]
   1482a:	4083      	lsls	r3, r0
   1482c:	430b      	orrs	r3, r1
   1482e:	6013      	str	r3, [r2, #0]
   14830:	4770      	bx	lr

00014832 <LabGPIO::setLow()>:
_ZN7LabGPIO6setLowEv():
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:30
void LabGPIO::setLow(void)              { *(this->FIOPIN) &= ~(1 << this->pin);                   }
   14832:	2201      	movs	r2, #1
   14834:	6881      	ldr	r1, [r0, #8]
   14836:	7840      	ldrb	r0, [r0, #1]
   14838:	680b      	ldr	r3, [r1, #0]
   1483a:	4082      	lsls	r2, r0
   1483c:	ea23 0302 	bic.w	r3, r3, r2
   14840:	600b      	str	r3, [r1, #0]
   14842:	4770      	bx	lr

00014844 <LabGPIO::getLevel()>:
_ZN7LabGPIO8getLevelEv():
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:32
void LabGPIO::set(bool high)            { high-true? setHigh() : setLow();                        }
bool LabGPIO::getLevel(void)            { return *(this->FIOPIN) & (1 << this->pin)? true: false; }
   14844:	6883      	ldr	r3, [r0, #8]
   14846:	7841      	ldrb	r1, [r0, #1]
   14848:	681a      	ldr	r2, [r3, #0]
   1484a:	2301      	movs	r3, #1
   1484c:	408b      	lsls	r3, r1
   1484e:	4213      	tst	r3, r2
   14850:	bf14      	ite	ne
   14852:	2001      	movne	r0, #1
   14854:	2000      	moveq	r0, #0
   14856:	4770      	bx	lr

00014858 <LabGPIO::~LabGPIO()>:
_ZN7LabGPIOD2Ev():
/home/peter/SJSU-Dev/firmware/lib/peter_lib/gpio_driver/gpioDriver.cpp:33
LabGPIO::~LabGPIO() {};
   14858:	4770      	bx	lr

0001485a <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>:
_ZN8I2C_Base8transferEhPhmS0_m():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:90
    I2C_SET_READ_MODE(address);
    return transfer(address, NULL, 0, rdata, rlength);
}

bool I2C_Base::transfer(uint8_t address, uint8_t * wdata, uint32_t wlength, uint8_t * rdata, uint32_t rlength)
{
   1485a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92
    bool status = false;
    if (mDisableOperation || (wdata == NULL && rdata == NULL))
   1485e:	f890 5105 	ldrb.w	r5, [r0, #261]	; 0x105
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:90
{
   14862:	4604      	mov	r4, r0
   14864:	468a      	mov	sl, r1
   14866:	4617      	mov	r7, r2
   14868:	4699      	mov	r9, r3
   1486a:	9e08      	ldr	r6, [sp, #32]
   1486c:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92
    if (mDisableOperation || (wdata == NULL && rdata == NULL))
   14870:	b11d      	cbz	r5, 1487a <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x20>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:94
    {
        return status;
   14872:	2500      	movs	r5, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:130

        xSemaphoreGive(mI2CMutex);
    }

    return status;
}
   14874:	4628      	mov	r0, r5
   14876:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92 (discriminator 1)
    if (mDisableOperation || (wdata == NULL && rdata == NULL))
   1487a:	b90a      	cbnz	r2, 14880 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x26>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92 (discriminator 2)
   1487c:	2e00      	cmp	r6, #0
   1487e:	d0f8      	beq.n	14872 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x18>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:98
    if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState())
   14880:	f002 fdf6 	bl	17470 <xTaskGetSchedulerState>
   14884:	2802      	cmp	r0, #2
   14886:	d035      	beq.n	148f4 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x9a>
_ZN8I2C_Base18i2cKickOffTransferEhPhmS0_m():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
/// Private ///

void I2C_Base::i2cKickOffTransfer(uint8_t addr, uint8_t * wbytes, uint32_t wlength, uint8_t * rbytes, uint32_t rlength)
{
    mTransaction.slaveAddr      = addr;
    mTransaction.error          = 0;
   14888:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mTransaction.dataWrite      = wbytes;
    mTransaction.writeLength    = wlength;
    mTransaction.dataRead       = rbytes;
    mTransaction.readLength     = rlength;
    // Send START, I2C State Machine will finish the rest.
    mpI2CRegs->I2CONSET = 0x20;
   1488a:	2220      	movs	r2, #32
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.error          = 0;
   1488c:	f884 3111 	strb.w	r3, [r4, #273]	; 0x111
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   14890:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:219
    mTransaction.dataWrite      = wbytes;
   14894:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mTransaction.dataRead       = rbytes;
   14898:	f8c4 611c 	str.w	r6, [r4, #284]	; 0x11c
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:217
    mTransaction.slaveAddr      = addr;
   1489c:	f884 a110 	strb.w	sl, [r4, #272]	; 0x110
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:220
    mTransaction.writeLength    = wlength;
   148a0:	f8c4 9118 	str.w	r9, [r4, #280]	; 0x118
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:222
    mTransaction.readLength     = rlength;
   148a4:	f8c4 8120 	str.w	r8, [r4, #288]	; 0x120
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   148a8:	601a      	str	r2, [r3, #0]
sys_get_uptime_ms():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   148aa:	f7fb fd25 	bl	102f8 <sys_get_uptime_us>
   148ae:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   148b2:	2300      	movs	r3, #0
   148b4:	f005 fcdc 	bl	1a270 <__aeabi_uldivmod>
_ZN8I2C_Base8transferEhPhmS0_m():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:103
        const uint64_t timeout = sys_get_uptime_ms() + I2C_TIMEOUT_MS;
   148b8:	f510 767a 	adds.w	r6, r0, #1000	; 0x3e8
   148bc:	f141 0700 	adc.w	r7, r1, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:104
        while (!xSemaphoreTake(mTransferCompleteSignal, 0))
   148c0:	2300      	movs	r3, #0
   148c2:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
   148c6:	461a      	mov	r2, r3
   148c8:	4619      	mov	r1, r3
   148ca:	f002 f891 	bl	169f0 <xQueueGenericReceive>
   148ce:	b128      	cbz	r0, 148dc <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x82>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:112
        status = (0 == mTransaction.error);
   148d0:	f894 5111 	ldrb.w	r5, [r4, #273]	; 0x111
   148d4:	fab5 f585 	clz	r5, r5
   148d8:	096d      	lsrs	r5, r5, #5
   148da:	e7cb      	b.n	14874 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x1a>
sys_get_uptime_ms():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   148dc:	f7fb fd0c 	bl	102f8 <sys_get_uptime_us>
   148e0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   148e4:	2300      	movs	r3, #0
   148e6:	f005 fcc3 	bl	1a270 <__aeabi_uldivmod>
_ZN8I2C_Base8transferEhPhmS0_m():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:106
            if (sys_get_uptime_ms() > timeout)
   148ea:	428f      	cmp	r7, r1
   148ec:	bf08      	it	eq
   148ee:	4286      	cmpeq	r6, r0
   148f0:	d2e6      	bcs.n	148c0 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x66>
   148f2:	e7ed      	b.n	148d0 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x76>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:114
    else if (xSemaphoreTake(mI2CMutex, OS_MS(I2C_TIMEOUT_MS)))
   148f4:	2300      	movs	r3, #0
   148f6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   148fa:	4619      	mov	r1, r3
   148fc:	f8d4 0108 	ldr.w	r0, [r4, #264]	; 0x108
   14900:	f002 f876 	bl	169f0 <xQueueGenericReceive>
   14904:	2800      	cmp	r0, #0
   14906:	d0b4      	beq.n	14872 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x18>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:117
        xSemaphoreTake(mTransferCompleteSignal, 0);
   14908:	2300      	movs	r3, #0
   1490a:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
   1490e:	461a      	mov	r2, r3
   14910:	4619      	mov	r1, r3
   14912:	f002 f86d 	bl	169f0 <xQueueGenericReceive>
_ZN8I2C_Base18i2cKickOffTransferEhPhmS0_m():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.error          = 0;
   14916:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   14918:	2120      	movs	r1, #32
   1491a:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:217
    mTransaction.slaveAddr      = addr;
   1491e:	f884 a110 	strb.w	sl, [r4, #272]	; 0x110
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.error          = 0;
   14922:	f884 3111 	strb.w	r3, [r4, #273]	; 0x111
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:219
    mTransaction.dataWrite      = wbytes;
   14926:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:220
    mTransaction.writeLength    = wlength;
   1492a:	f8c4 9118 	str.w	r9, [r4, #280]	; 0x118
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mTransaction.dataRead       = rbytes;
   1492e:	f8c4 611c 	str.w	r6, [r4, #284]	; 0x11c
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:222
    mTransaction.readLength     = rlength;
   14932:	f8c4 8120 	str.w	r8, [r4, #288]	; 0x120
_ZN8I2C_Base8transferEhPhmS0_m():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:121
        if (xSemaphoreTake(mTransferCompleteSignal, OS_MS(I2C_TIMEOUT_MS)))
   14936:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
_ZN8I2C_Base18i2cKickOffTransferEhPhmS0_m():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   1493a:	6011      	str	r1, [r2, #0]
_ZN8I2C_Base8transferEhPhmS0_m():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:121
        if (xSemaphoreTake(mTransferCompleteSignal, OS_MS(I2C_TIMEOUT_MS)))
   1493c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14940:	4619      	mov	r1, r3
   14942:	f002 f855 	bl	169f0 <xQueueGenericReceive>
   14946:	b120      	cbz	r0, 14952 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0xf8>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:123
            status = (0 == mTransaction.error);
   14948:	f894 5111 	ldrb.w	r5, [r4, #273]	; 0x111
   1494c:	fab5 f585 	clz	r5, r5
   14950:	096d      	lsrs	r5, r5, #5
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:126
        xSemaphoreGive(mI2CMutex);
   14952:	2300      	movs	r3, #0
   14954:	f8d4 0108 	ldr.w	r0, [r4, #264]	; 0x108
   14958:	461a      	mov	r2, r3
   1495a:	4619      	mov	r1, r3
   1495c:	f001 ff40 	bl	167e0 <xQueueGenericSend>
   14960:	e788      	b.n	14874 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x1a>

00014962 <I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>:
_ZN8I2C_Base21writeRegisterThenReadEhPhmS0_m():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:62
{
   14962:	b410      	push	{r4}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:64
    return transfer(address, wdata, wlength, rdata, rlength);
   14964:	f041 0101 	orr.w	r1, r1, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:65
}
   14968:	bc10      	pop	{r4}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:64
    return transfer(address, wdata, wlength, rdata, rlength);
   1496a:	f7ff bf76 	b.w	1485a <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>

0001496e <I2C_Base::readReg(unsigned char, unsigned char)>:
_ZN8I2C_Base7readRegEhh():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:47
{
   1496e:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:48
    uint8_t register_return = 0;
   14970:	2300      	movs	r3, #0
   14972:	f88d 3017 	strb.w	r3, [sp, #23]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:49
    writeRegisterThenRead(deviceAddress, &registerAddress, 1, &register_return, 1);
   14976:	2301      	movs	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:47
{
   14978:	f88d 200f 	strb.w	r2, [sp, #15]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:49
    writeRegisterThenRead(deviceAddress, &registerAddress, 1, &register_return, 1);
   1497c:	f10d 0217 	add.w	r2, sp, #23
   14980:	9200      	str	r2, [sp, #0]
   14982:	9301      	str	r3, [sp, #4]
   14984:	f10d 020f 	add.w	r2, sp, #15
   14988:	f7ff ffeb 	bl	14962 <I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:51
}
   1498c:	f89d 0017 	ldrb.w	r0, [sp, #23]
   14990:	b007      	add	sp, #28
   14992:	f85d fb04 	ldr.w	pc, [sp], #4

00014996 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base13readRegistersEhhPhm():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:80
{
   14996:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   14998:	ac04      	add	r4, sp, #16
   1499a:	f804 2d01 	strb.w	r2, [r4, #-1]!
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:81
    return writeRegisterThenRead(deviceAddress, &firstReg, 1, pData, transferSize);
   1499e:	9a06      	ldr	r2, [sp, #24]
   149a0:	9300      	str	r3, [sp, #0]
   149a2:	9201      	str	r2, [sp, #4]
   149a4:	2301      	movs	r3, #1
   149a6:	4622      	mov	r2, r4
   149a8:	f7ff ffdb 	bl	14962 <I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:82
}
   149ac:	b004      	add	sp, #16
   149ae:	bd10      	pop	{r4, pc}

000149b0 <I2C_Base::writeRegisters(unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base14writeRegistersEhPhm():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:75
{
   149b0:	b513      	push	{r0, r1, r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:77
    return transfer(address, wdata, wlength, NULL, 0);
   149b2:	2400      	movs	r4, #0
   149b4:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
   149b8:	9401      	str	r4, [sp, #4]
   149ba:	9400      	str	r4, [sp, #0]
   149bc:	f7ff ff4d 	bl	1485a <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:78
}
   149c0:	b002      	add	sp, #8
   149c2:	bd10      	pop	{r4, pc}

000149c4 <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>:
_ZN8I2C_Base8writeRegEhhh():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:53
{
   149c4:	b507      	push	{r0, r1, r2, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:55
    writeBytes[0] = registerAddress;
   149c6:	f88d 2004 	strb.w	r2, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:56
    writeBytes[1] = value;
   149ca:	f88d 3005 	strb.w	r3, [sp, #5]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:58
    return writeRegisters(deviceAddress, writeBytes, 2);
   149ce:	aa01      	add	r2, sp, #4
   149d0:	2302      	movs	r3, #2
   149d2:	f7ff ffed 	bl	149b0 <I2C_Base::writeRegisters(unsigned char, unsigned char*, unsigned long)>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:59
}
   149d6:	b003      	add	sp, #12
   149d8:	f85d fb04 	ldr.w	pc, [sp], #4

000149dc <I2C_Base::readRegisters(unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base13readRegistersEhPhm():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:84
{
   149dc:	b507      	push	{r0, r1, r2, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:86
    return transfer(address, NULL, 0, rdata, rlength);
   149de:	e88d 000c 	stmia.w	sp, {r2, r3}
   149e2:	2300      	movs	r3, #0
   149e4:	f041 0101 	orr.w	r1, r1, #1
   149e8:	461a      	mov	r2, r3
   149ea:	f7ff ff36 	bl	1485a <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:87
}
   149ee:	b003      	add	sp, #12
   149f0:	f85d fb04 	ldr.w	pc, [sp], #4

000149f4 <I2C_Base::checkDeviceResponse(unsigned char)>:
_ZN8I2C_Base19checkDeviceResponseEh():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:134
    uint8_t notUsed = 0;
   149f4:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:133
{
   149f6:	b507      	push	{r0, r1, r2, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:134
    uint8_t notUsed = 0;
   149f8:	aa02      	add	r2, sp, #8
   149fa:	f802 3d01 	strb.w	r3, [r2, #-1]!
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:139
    return readRegisters(address, &notUsed, lenZeroToTestDeviceReady);
   149fe:	f7ff ffed 	bl	149dc <I2C_Base::readRegisters(unsigned char, unsigned char*, unsigned long)>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:140
}
   14a02:	b003      	add	sp, #12
   14a04:	f85d fb04 	ldr.w	pc, [sp], #4

00014a08 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>:
_ZN8I2C_BaseC2EP15LPC_I2C_TypeDef():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:142
I2C_Base::I2C_Base(LPC_I2C_TypeDef* pI2CBaseAddr):
   14a08:	b538      	push	{r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:144
    mDisableOperation(false)
   14a0a:	2500      	movs	r5, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:142
I2C_Base::I2C_Base(LPC_I2C_TypeDef* pI2CBaseAddr):
   14a0c:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:144
    mDisableOperation(false)
   14a0e:	f8c0 1100 	str.w	r1, [r0, #256]	; 0x100
   14a12:	f880 5105 	strb.w	r5, [r0, #261]	; 0x105
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:146
    mI2CMutex = xSemaphoreCreateMutex();
   14a16:	2001      	movs	r0, #1
   14a18:	f001 ff64 	bl	168e4 <xQueueCreateMutex>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:147
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   14a1c:	2203      	movs	r2, #3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:146
    mI2CMutex = xSemaphoreCreateMutex();
   14a1e:	f8c4 0108 	str.w	r0, [r4, #264]	; 0x108
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:147
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   14a22:	4629      	mov	r1, r5
   14a24:	2001      	movs	r0, #1
   14a26:	f001 feb9 	bl	1679c <xQueueGenericCreate>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:153
    switch((unsigned int)mpI2CRegs)
   14a2a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
   14a2e:	4a0c      	ldr	r2, [pc, #48]	; (14a60 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x58>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:147
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   14a30:	f8c4 010c 	str.w	r0, [r4, #268]	; 0x10c
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:153
    switch((unsigned int)mpI2CRegs)
   14a34:	4293      	cmp	r3, r2
   14a36:	d00c      	beq.n	14a52 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x4a>
   14a38:	f502 2288 	add.w	r2, r2, #278528	; 0x44000
   14a3c:	4293      	cmp	r3, r2
   14a3e:	d00a      	beq.n	14a56 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x4e>
   14a40:	f5a2 2204 	sub.w	r2, r2, #540672	; 0x84000
   14a44:	4293      	cmp	r3, r2
   14a46:	d108      	bne.n	14a5a <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x52>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:156
            mIRQ = I2C0_IRQn;
   14a48:	230a      	movs	r3, #10
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:165
            mIRQ = (IRQn_Type)(99); // Using invalid IRQ on purpose
   14a4a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:168
}
   14a4e:	4620      	mov	r0, r4
   14a50:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:159
            mIRQ = I2C1_IRQn;
   14a52:	230b      	movs	r3, #11
   14a54:	e7f9      	b.n	14a4a <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x42>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:162
            mIRQ = I2C2_IRQn;
   14a56:	230c      	movs	r3, #12
   14a58:	e7f7      	b.n	14a4a <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x42>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:165
            mIRQ = (IRQn_Type)(99); // Using invalid IRQ on purpose
   14a5a:	2363      	movs	r3, #99	; 0x63
   14a5c:	e7f5      	b.n	14a4a <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x42>
   14a5e:	bf00      	nop
   14a60:	4005c000 	.word	0x4005c000

00014a64 <I2C_Base::init(unsigned long, unsigned long)>:
_ZN8I2C_Base4initEmm():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    switch (mIRQ)
   14a64:	f990 3104 	ldrsb.w	r3, [r0, #260]	; 0x104
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:171
{
   14a68:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    switch (mIRQ)
   14a6a:	2b0b      	cmp	r3, #11
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:171
{
   14a6c:	4605      	mov	r5, r0
   14a6e:	460c      	mov	r4, r1
   14a70:	4616      	mov	r6, r2
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    switch (mIRQ)
   14a72:	d035      	beq.n	14ae0 <I2C_Base::init(unsigned long, unsigned long)+0x7c>
   14a74:	2b0c      	cmp	r3, #12
   14a76:	d036      	beq.n	14ae6 <I2C_Base::init(unsigned long, unsigned long)+0x82>
   14a78:	2b0a      	cmp	r3, #10
   14a7a:	d137      	bne.n	14aec <I2C_Base::init(unsigned long, unsigned long)+0x88>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:175
        case I2C0_IRQn: lpc_pconp(pconp_i2c0, true);  break;
   14a7c:	2101      	movs	r1, #1
   14a7e:	2007      	movs	r0, #7
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:177
        case I2C2_IRQn: lpc_pconp(pconp_i2c2, true);  break;
   14a80:	f7fb fcd6 	bl	10430 <lpc_pconp>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:194
    const uint32_t freq_hz = (busRateInKhz > 1000) ? (100 * 1000) : (busRateInKhz * 1000);
   14a84:	f5b6 7f7a 	cmp.w	r6, #1000	; 0x3e8
   14a88:	bf98      	it	ls
   14a8a:	f44f 717a 	movls.w	r1, #1000	; 0x3e8
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:181
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   14a8e:	f04f 026c 	mov.w	r2, #108	; 0x6c
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:194
    const uint32_t freq_hz = (busRateInKhz > 1000) ? (100 * 1000) : (busRateInKhz * 1000);
   14a92:	bf94      	ite	ls
   14a94:	4371      	mulls	r1, r6
   14a96:	4916      	ldrhi	r1, [pc, #88]	; (14af0 <I2C_Base::init(unsigned long, unsigned long)+0x8c>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:181
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   14a98:	f8d5 3100 	ldr.w	r3, [r5, #256]	; 0x100
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:195
    const uint32_t half_clock_divider = (pclk / freq_hz) / 2;
   14a9c:	fbb4 f1f1 	udiv	r1, r4, r1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:181
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   14aa0:	619a      	str	r2, [r3, #24]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:196
    mpI2CRegs->I2SCLH = (half_clock_divider * percent_high) / 100;
   14aa2:	2228      	movs	r2, #40	; 0x28
   14aa4:	2064      	movs	r0, #100	; 0x64
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:195
    const uint32_t half_clock_divider = (pclk / freq_hz) / 2;
   14aa6:	0849      	lsrs	r1, r1, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:196
    mpI2CRegs->I2SCLH = (half_clock_divider * percent_high) / 100;
   14aa8:	434a      	muls	r2, r1
   14aaa:	fbb2 f2f0 	udiv	r2, r2, r0
   14aae:	611a      	str	r2, [r3, #16]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:197
    mpI2CRegs->I2SCLL = (half_clock_divider * percent_low ) / 100;
   14ab0:	223c      	movs	r2, #60	; 0x3c
   14ab2:	4351      	muls	r1, r2
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:200
    mpI2CRegs->I2ADR0 = 0;
   14ab4:	2200      	movs	r2, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:197
    mpI2CRegs->I2SCLL = (half_clock_divider * percent_low ) / 100;
   14ab6:	fbb1 f1f0 	udiv	r1, r1, r0
   14aba:	6159      	str	r1, [r3, #20]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:200
    mpI2CRegs->I2ADR0 = 0;
   14abc:	60da      	str	r2, [r3, #12]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:201
    mpI2CRegs->I2ADR1 = 0;
   14abe:	621a      	str	r2, [r3, #32]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:202
    mpI2CRegs->I2ADR2 = 0;
   14ac0:	625a      	str	r2, [r3, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:203
    mpI2CRegs->I2ADR3 = 0;
   14ac2:	629a      	str	r2, [r3, #40]	; 0x28
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:206
    mpI2CRegs->I2CONSET = 0x40;
   14ac4:	2240      	movs	r2, #64	; 0x40
NVIC_EnableIRQ():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   14ac6:	2001      	movs	r0, #1
_ZN8I2C_Base4initEmm():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:206
   14ac8:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:208
    NVIC_EnableIRQ(mIRQ);
   14aca:	f995 3104 	ldrsb.w	r3, [r5, #260]	; 0x104
NVIC_EnableIRQ():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   14ace:	4a09      	ldr	r2, [pc, #36]	; (14af4 <I2C_Base::init(unsigned long, unsigned long)+0x90>)
   14ad0:	0959      	lsrs	r1, r3, #5
   14ad2:	f003 031f 	and.w	r3, r3, #31
   14ad6:	fa00 f303 	lsl.w	r3, r0, r3
   14ada:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
   14ade:	bd70      	pop	{r4, r5, r6, pc}
_ZN8I2C_Base4initEmm():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:176
        case I2C1_IRQn: lpc_pconp(pconp_i2c1, true);  break;
   14ae0:	2101      	movs	r1, #1
   14ae2:	2013      	movs	r0, #19
   14ae4:	e7cc      	b.n	14a80 <I2C_Base::init(unsigned long, unsigned long)+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:177
        case I2C2_IRQn: lpc_pconp(pconp_i2c2, true);  break;
   14ae6:	2101      	movs	r1, #1
   14ae8:	201a      	movs	r0, #26
   14aea:	e7c9      	b.n	14a80 <I2C_Base::init(unsigned long, unsigned long)+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:178
        default: return false;
   14aec:	2000      	movs	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:211
}
   14aee:	bd70      	pop	{r4, r5, r6, pc}
   14af0:	000186a0 	.word	0x000186a0
   14af4:	e000e100 	.word	0xe000e100

00014af8 <I2C_Base::setStop()>:
_ZN8I2C_Base14clearSTARTFlagEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
{
    mpI2CRegs->I2CONSET = (1 << 5);
}
inline void I2C_Base::clearSTARTFlag()
{
    mpI2CRegs->I2CONCLR = (1 << 5);
   14af8:	2220      	movs	r2, #32
   14afa:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
   14afe:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base7setStopEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:250
    mpI2CRegs->I2CONCLR = (1 << 2);
}
inline void I2C_Base::setStop()
{
    clearSTARTFlag();
    mpI2CRegs->I2CONSET = (1 << 4);
   14b00:	2210      	movs	r2, #16
   14b02:	601a      	str	r2, [r3, #0]
_ZN8I2C_Base11clearSIFlagEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:229
    mpI2CRegs->I2CONCLR = (1 << 3);
   14b04:	2208      	movs	r2, #8
   14b06:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base7setStopEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:252
    clearSIFlag();
    while ((mpI2CRegs->I2CONSET & (1 << 4)));
   14b08:	681a      	ldr	r2, [r3, #0]
   14b0a:	06d2      	lsls	r2, r2, #27
   14b0c:	d4fc      	bmi.n	14b08 <I2C_Base::setStop()+0x10>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:253
    if (I2C_CHECK_READ_MODE(mTransaction.slaveAddr))
   14b0e:	f890 3110 	ldrb.w	r3, [r0, #272]	; 0x110
   14b12:	07db      	lsls	r3, r3, #31
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:255
    {
        state = readComplete;
   14b14:	bf4c      	ite	mi
   14b16:	2301      	movmi	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:259
    }
    else
    {
        state = writeComplete;
   14b18:	2302      	movpl	r3, #2
   14b1a:	f880 3124 	strb.w	r3, [r0, #292]	; 0x124
   14b1e:	4770      	bx	lr

00014b20 <I2C_Base::i2cStateMachine()>:
_ZN8I2C_Base15i2cStateMachineEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:300
        readModeNackedBySlave = 0x48,
        dataAvailableAckSent  = 0x50,
        dataAvailableNackSent = 0x58,
    };

    state = busy;
   14b20:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:278
{
   14b22:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:300
    state = busy;
   14b24:	f880 3124 	strb.w	r3, [r0, #292]	; 0x124
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
     *  For 2+ bytes:  dataAvailableAckSent --> ... (dataAvailableAckSent) --> dataAvailableNackSent --> (stop)
     *  For 1  byte :  dataAvailableNackSent --> (stop)
     ***********************************************************************************************************
     */

    switch (mpI2CRegs->I2STAT)
   14b28:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:278
{
   14b2c:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
    switch (mpI2CRegs->I2STAT)
   14b2e:	685a      	ldr	r2, [r3, #4]
   14b30:	2a28      	cmp	r2, #40	; 0x28
   14b32:	d044      	beq.n	14bbe <I2C_Base::i2cStateMachine()+0x9e>
   14b34:	d80d      	bhi.n	14b52 <I2C_Base::i2cStateMachine()+0x32>
   14b36:	2a10      	cmp	r2, #16
   14b38:	d027      	beq.n	14b8a <I2C_Base::i2cStateMachine()+0x6a>
   14b3a:	2a18      	cmp	r2, #24
   14b3c:	d028      	beq.n	14b90 <I2C_Base::i2cStateMachine()+0x70>
   14b3e:	2a08      	cmp	r2, #8
   14b40:	d10c      	bne.n	14b5c <I2C_Base::i2cStateMachine()+0x3c>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:318
    {
        case start:
            //u0_dbg_printf("sta\n");
            if(mTransaction.writeLength == 0)
   14b42:	f8d0 1118 	ldr.w	r1, [r0, #280]	; 0x118
   14b46:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
   14b4a:	b9b1      	cbnz	r1, 14b7a <I2C_Base::i2cStateMachine()+0x5a>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:332
            }
            clearSIFlag();
            break;
        case repeatStart:
            //u0_dbg_printf("rsta-%X\n", I2C_READ_ADDR(mTransaction.slaveAddr));
            mpI2CRegs->I2DAT = I2C_READ_ADDR(mTransaction.slaveAddr);
   14b4c:	f042 0201 	orr.w	r2, r2, #1
   14b50:	e015      	b.n	14b7e <I2C_Base::i2cStateMachine()+0x5e>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
    switch (mpI2CRegs->I2STAT)
   14b52:	2a40      	cmp	r2, #64	; 0x40
   14b54:	d03e      	beq.n	14bd4 <I2C_Base::i2cStateMachine()+0xb4>
   14b56:	d805      	bhi.n	14b64 <I2C_Base::i2cStateMachine()+0x44>
   14b58:	2a38      	cmp	r2, #56	; 0x38
   14b5a:	d059      	beq.n	14c10 <I2C_Base::i2cStateMachine()+0xf0>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:436
        case slaveAddressNacked:    // no break
        case dataNackedBySlave:     // no break
        case readModeNackedBySlave: // no break
        case busError:              // no break
        default:
            mTransaction.error = mpI2CRegs->I2STAT;
   14b5c:	685b      	ldr	r3, [r3, #4]
   14b5e:	f884 3111 	strb.w	r3, [r4, #273]	; 0x111
   14b62:	e01d      	b.n	14ba0 <I2C_Base::i2cStateMachine()+0x80>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
    switch (mpI2CRegs->I2STAT)
   14b64:	2a50      	cmp	r2, #80	; 0x50
   14b66:	d03f      	beq.n	14be8 <I2C_Base::i2cStateMachine()+0xc8>
   14b68:	2a58      	cmp	r2, #88	; 0x58
   14b6a:	d1f7      	bne.n	14b5c <I2C_Base::i2cStateMachine()+0x3c>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:421
            *mTransaction.dataRead = mpI2CRegs->I2DAT;
   14b6c:	f8d0 211c 	ldr.w	r2, [r0, #284]	; 0x11c
   14b70:	689b      	ldr	r3, [r3, #8]
   14b72:	7013      	strb	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:437
            setStop();
   14b74:	f7ff ffc0 	bl	14af8 <I2C_Base::setStop()>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:438
            break;
   14b78:	e004      	b.n	14b84 <I2C_Base::i2cStateMachine()+0x64>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:326
                mpI2CRegs->I2DAT = I2C_WRITE_ADDR(mTransaction.slaveAddr);
   14b7a:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   14b7e:	609a      	str	r2, [r3, #8]
_ZN8I2C_Base11clearSIFlagEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:229
    mpI2CRegs->I2CONCLR = (1 << 3);
   14b80:	2208      	movs	r2, #8
   14b82:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base15i2cStateMachineEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:442
    }

    return state;
}
   14b84:	f894 0124 	ldrb.w	r0, [r4, #292]	; 0x124
   14b88:	bd10      	pop	{r4, pc}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:332
            mpI2CRegs->I2DAT = I2C_READ_ADDR(mTransaction.slaveAddr);
   14b8a:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
   14b8e:	e7dd      	b.n	14b4c <I2C_Base::i2cStateMachine()+0x2c>
_ZN8I2C_Base14clearSTARTFlagEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
    mpI2CRegs->I2CONCLR = (1 << 5);
   14b90:	2220      	movs	r2, #32
_ZN8I2C_Base15i2cStateMachineEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:340
            if (0 == mTransaction.readLength && 0 == mTransaction.writeLength)
   14b92:	f8d0 1120 	ldr.w	r1, [r0, #288]	; 0x120
_ZN8I2C_Base14clearSTARTFlagEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
    mpI2CRegs->I2CONCLR = (1 << 5);
   14b96:	619a      	str	r2, [r3, #24]
   14b98:	f8d0 2118 	ldr.w	r2, [r0, #280]	; 0x118
_ZN8I2C_Base15i2cStateMachineEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:340
            if (0 == mTransaction.readLength && 0 == mTransaction.writeLength)
   14b9c:	b911      	cbnz	r1, 14ba4 <I2C_Base::i2cStateMachine()+0x84>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:340 (discriminator 1)
   14b9e:	b90a      	cbnz	r2, 14ba4 <I2C_Base::i2cStateMachine()+0x84>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:437
            setStop();
   14ba0:	4620      	mov	r0, r4
   14ba2:	e7e7      	b.n	14b74 <I2C_Base::i2cStateMachine()+0x54>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:345
            else if(0 != mTransaction.writeLength)
   14ba4:	2a00      	cmp	r2, #0
   14ba6:	d0ed      	beq.n	14b84 <I2C_Base::i2cStateMachine()+0x64>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:374
                mpI2CRegs->I2DAT = *(mTransaction.dataWrite);
   14ba8:	f8d4 1114 	ldr.w	r1, [r4, #276]	; 0x114
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:376
                --mTransaction.writeLength;
   14bac:	3a01      	subs	r2, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:374
                mpI2CRegs->I2DAT = *(mTransaction.dataWrite);
   14bae:	f811 0b01 	ldrb.w	r0, [r1], #1
   14bb2:	6098      	str	r0, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:375
                ++mTransaction.dataWrite;
   14bb4:	f8c4 1114 	str.w	r1, [r4, #276]	; 0x114
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:376
                --mTransaction.writeLength;
   14bb8:	f8c4 2118 	str.w	r2, [r4, #280]	; 0x118
   14bbc:	e7e0      	b.n	14b80 <I2C_Base::i2cStateMachine()+0x60>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:357
            if (0 == mTransaction.writeLength)
   14bbe:	f8d0 2118 	ldr.w	r2, [r0, #280]	; 0x118
   14bc2:	2a00      	cmp	r2, #0
   14bc4:	d1f0      	bne.n	14ba8 <I2C_Base::i2cStateMachine()+0x88>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:360
                if (I2C_CHECK_READ_MODE(mTransaction.slaveAddr))
   14bc6:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
   14bca:	07d2      	lsls	r2, r2, #31
   14bcc:	d5e8      	bpl.n	14ba0 <I2C_Base::i2cStateMachine()+0x80>
_ZN8I2C_Base12setSTARTFlagEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:233
    mpI2CRegs->I2CONSET = (1 << 5);
   14bce:	2220      	movs	r2, #32
   14bd0:	601a      	str	r2, [r3, #0]
   14bd2:	e7d5      	b.n	14b80 <I2C_Base::i2cStateMachine()+0x60>
_ZN8I2C_Base14clearSTARTFlagEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
    mpI2CRegs->I2CONCLR = (1 << 5);
   14bd4:	2220      	movs	r2, #32
   14bd6:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base15i2cStateMachineEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:387
            if (mTransaction.readLength > 1)
   14bd8:	f8d0 2120 	ldr.w	r2, [r0, #288]	; 0x120
   14bdc:	2a01      	cmp	r2, #1
   14bde:	f04f 0204 	mov.w	r2, #4
   14be2:	d8f5      	bhi.n	14bd0 <I2C_Base::i2cStateMachine()+0xb0>
_ZN8I2C_Base11setNackFlagEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:245
    mpI2CRegs->I2CONCLR = (1 << 2);
   14be4:	619a      	str	r2, [r3, #24]
   14be6:	e7cb      	b.n	14b80 <I2C_Base::i2cStateMachine()+0x60>
_ZN8I2C_Base15i2cStateMachineEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:400
            *mTransaction.dataRead = mpI2CRegs->I2DAT;
   14be8:	689b      	ldr	r3, [r3, #8]
   14bea:	f8d0 211c 	ldr.w	r2, [r0, #284]	; 0x11c
   14bee:	7013      	strb	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:401
            ++mTransaction.dataRead;
   14bf0:	f8d0 311c 	ldr.w	r3, [r0, #284]	; 0x11c
   14bf4:	2204      	movs	r2, #4
   14bf6:	3301      	adds	r3, #1
   14bf8:	f8c0 311c 	str.w	r3, [r0, #284]	; 0x11c
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:402
            --mTransaction.readLength;
   14bfc:	f8d0 3120 	ldr.w	r3, [r0, #288]	; 0x120
   14c00:	3b01      	subs	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:406
            if (1 == mTransaction.readLength)  // Only 1 more byte remaining
   14c02:	2b01      	cmp	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:402
            --mTransaction.readLength;
   14c04:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
   14c08:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:406
            if (1 == mTransaction.readLength)  // Only 1 more byte remaining
   14c0c:	d1e0      	bne.n	14bd0 <I2C_Base::i2cStateMachine()+0xb0>
   14c0e:	e7e9      	b.n	14be4 <I2C_Base::i2cStateMachine()+0xc4>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:427
            state = I2C_CHECK_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   14c10:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:428
            mTransaction.error = mpI2CRegs->I2STAT;
   14c14:	685b      	ldr	r3, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:427
            state = I2C_CHECK_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   14c16:	f012 0f01 	tst.w	r2, #1
   14c1a:	bf14      	ite	ne
   14c1c:	2201      	movne	r2, #1
   14c1e:	2202      	moveq	r2, #2
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:428
            mTransaction.error = mpI2CRegs->I2STAT;
   14c20:	f880 3111 	strb.w	r3, [r0, #273]	; 0x111
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:427
            state = I2C_CHECK_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   14c24:	f880 2124 	strb.w	r2, [r0, #292]	; 0x124
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:429
            break;
   14c28:	e7ac      	b.n	14b84 <I2C_Base::i2cStateMachine()+0x64>
   14c2a:	Address 0x0000000000014c2a is out of bounds.


00014c2c <I2C_Base::handleInterrupt()>:
_ZN8I2C_Base15handleInterruptEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:36
{
   14c2c:	b513      	push	{r0, r1, r4, lr}
   14c2e:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:38
    if (busy != i2cStateMachine())
   14c30:	f7ff ff76 	bl	14b20 <I2C_Base::i2cStateMachine()>
   14c34:	b188      	cbz	r0, 14c5a <I2C_Base::handleInterrupt()+0x2e>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:40
        long higherPriorityTaskWaiting = 0;
   14c36:	2300      	movs	r3, #0
   14c38:	a902      	add	r1, sp, #8
   14c3a:	f841 3d04 	str.w	r3, [r1, #-4]!
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:41
        xSemaphoreGiveFromISR(mTransferCompleteSignal, &higherPriorityTaskWaiting);
   14c3e:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
   14c42:	f001 fea1 	bl	16988 <xQueueGiveFromISR>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:42
        portEND_SWITCHING_ISR(higherPriorityTaskWaiting);
   14c46:	9b01      	ldr	r3, [sp, #4]
   14c48:	b13b      	cbz	r3, 14c5a <I2C_Base::handleInterrupt()+0x2e>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:42 (discriminator 1)
   14c4a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   14c4e:	4b04      	ldr	r3, [pc, #16]	; (14c60 <I2C_Base::handleInterrupt()+0x34>)
   14c50:	601a      	str	r2, [r3, #0]
   14c52:	f3bf 8f4f 	dsb	sy
   14c56:	f3bf 8f6f 	isb	sy
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:44
}
   14c5a:	b002      	add	sp, #8
   14c5c:	bd10      	pop	{r4, pc}
   14c5e:	bf00      	nop
   14c60:	e000ed04 	.word	0xe000ed04

00014c64 <UartDev::putChar(char, unsigned int)>:
_ZN7UartDev7putCharEcj():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:51
    }
    return true;
}

bool UartDev::putChar(char out, unsigned int timeout)
{
   14c64:	b537      	push	{r0, r1, r2, r4, r5, lr}
   14c66:	4604      	mov	r4, r0
   14c68:	4615      	mov	r5, r2
   14c6a:	f88d 1007 	strb.w	r1, [sp, #7]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:53
    /* If OS not running, just send data using polling and return */
    if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState()) {
   14c6e:	f002 fbff 	bl	17470 <xTaskGetSchedulerState>
   14c72:	2802      	cmp	r0, #2
   14c74:	d009      	beq.n	14c8a <UartDev::putChar(char, unsigned int)+0x26>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:54
        mpUARTRegBase->THR = out;
   14c76:	6963      	ldr	r3, [r4, #20]
   14c78:	f89d 2007 	ldrb.w	r2, [sp, #7]
   14c7c:	701a      	strb	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:55
        while(! (mpUARTRegBase->LSR & (1 << 6)));
   14c7e:	7d1a      	ldrb	r2, [r3, #20]
   14c80:	0652      	lsls	r2, r2, #25
   14c82:	d5fc      	bpl.n	14c7e <UartDev::putChar(char, unsigned int)+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:75
        if (xQueueReceive(mTxQueue, &out, 0)) {
            mpUARTRegBase->THR = out;
        }
    }

    return true;
   14c84:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:76
}
   14c86:	b003      	add	sp, #12
   14c88:	bd30      	pop	{r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:60
    if(! xQueueSend(mTxQueue, &out, timeout)) {
   14c8a:	2300      	movs	r3, #0
   14c8c:	462a      	mov	r2, r5
   14c8e:	f10d 0107 	add.w	r1, sp, #7
   14c92:	69e0      	ldr	r0, [r4, #28]
   14c94:	f001 fda4 	bl	167e0 <xQueueGenericSend>
   14c98:	2800      	cmp	r0, #0
   14c9a:	d0f4      	beq.n	14c86 <UartDev::putChar(char, unsigned int)+0x22>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:68
    if (mpUARTRegBase->LSR & uart_tx_is_idle)
   14c9c:	6963      	ldr	r3, [r4, #20]
   14c9e:	7d1b      	ldrb	r3, [r3, #20]
   14ca0:	065b      	lsls	r3, r3, #25
   14ca2:	d5ef      	bpl.n	14c84 <UartDev::putChar(char, unsigned int)+0x20>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:70
        if (xQueueReceive(mTxQueue, &out, 0)) {
   14ca4:	2300      	movs	r3, #0
   14ca6:	f10d 0107 	add.w	r1, sp, #7
   14caa:	461a      	mov	r2, r3
   14cac:	69e0      	ldr	r0, [r4, #28]
   14cae:	f001 fe9f 	bl	169f0 <xQueueGenericReceive>
   14cb2:	2800      	cmp	r0, #0
   14cb4:	d0e6      	beq.n	14c84 <UartDev::putChar(char, unsigned int)+0x20>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:71
            mpUARTRegBase->THR = out;
   14cb6:	6963      	ldr	r3, [r4, #20]
   14cb8:	f89d 2007 	ldrb.w	r2, [sp, #7]
   14cbc:	701a      	strb	r2, [r3, #0]
   14cbe:	e7e1      	b.n	14c84 <UartDev::putChar(char, unsigned int)+0x20>

00014cc0 <UartDev::~UartDev()>:
_ZN7UartDevD2Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
        /**
         * Protected constructor that requires parent class to provide UART's
         * base register address for which to operate this UART driver
         */
        UartDev(unsigned int* pUARTBaseAddr);
        ~UartDev() { } /** Nothing to clean up */
   14cc0:	b510      	push	{r4, lr}
   14cc2:	4604      	mov	r4, r0
   14cc4:	4b02      	ldr	r3, [pc, #8]	; (14cd0 <UartDev::~UartDev()+0x10>)
   14cc6:	6003      	str	r3, [r0, #0]
   14cc8:	f000 f99a 	bl	15000 <CharDev::~CharDev()>
   14ccc:	4620      	mov	r0, r4
   14cce:	bd10      	pop	{r4, pc}
   14cd0:	000216c0 	.word	0x000216c0

00014cd4 <UartDev::~UartDev()>:
_ZN7UartDevD0Ev():
   14cd4:	b510      	push	{r4, lr}
   14cd6:	4604      	mov	r4, r0
   14cd8:	f7ff fff2 	bl	14cc0 <UartDev::~UartDev()>
   14cdc:	4620      	mov	r0, r4
   14cde:	212c      	movs	r1, #44	; 0x2c
   14ce0:	f004 f981 	bl	18fe6 <operator delete(void*, unsigned int)>
   14ce4:	4620      	mov	r0, r4
   14ce6:	bd10      	pop	{r4, pc}

00014ce8 <UartDev::flush()>:
_ZN7UartDev5flushEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:79

bool UartDev::flush(void)
{
   14ce8:	b510      	push	{r4, lr}
   14cea:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:80
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   14cec:	f002 fbc0 	bl	17470 <xTaskGetSchedulerState>
   14cf0:	2802      	cmp	r0, #2
   14cf2:	d107      	bne.n	14d04 <UartDev::flush()+0x1c>
_ZNK7UartDev14getTxQueueSizeEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:94
        inline unsigned int getTxQueueSize() const { return uxQueueMessagesWaiting(mTxQueue); }
   14cf4:	69e0      	ldr	r0, [r4, #28]
   14cf6:	f001 ff49 	bl	16b8c <uxQueueMessagesWaiting>
_ZN7UartDev5flushEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:81
        while (getTxQueueSize() > 0) {
   14cfa:	b118      	cbz	r0, 14d04 <UartDev::flush()+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:82
            vTaskDelay(1);
   14cfc:	2001      	movs	r0, #1
   14cfe:	f002 fa5b 	bl	171b8 <vTaskDelay>
   14d02:	e7f7      	b.n	14cf4 <UartDev::flush()+0xc>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:87
        }
    }

    return true;
}
   14d04:	2001      	movs	r0, #1
   14d06:	bd10      	pop	{r4, pc}

00014d08 <UartDev::getChar(char*, unsigned int)>:
_ZN7UartDev7getCharEPcj():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:32
{
   14d08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14d0a:	4606      	mov	r6, r0
   14d0c:	4614      	mov	r4, r2
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:33
    if (!pInputChar || !mRxQueue) {
   14d0e:	460f      	mov	r7, r1
   14d10:	b909      	cbnz	r1, 14d16 <UartDev::getChar(char*, unsigned int)+0xe>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:34
        return false;
   14d12:	2000      	movs	r0, #0
   14d14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:33 (discriminator 1)
    if (!pInputChar || !mRxQueue) {
   14d16:	6983      	ldr	r3, [r0, #24]
   14d18:	2b00      	cmp	r3, #0
   14d1a:	d0fa      	beq.n	14d12 <UartDev::getChar(char*, unsigned int)+0xa>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:36
    else if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   14d1c:	f002 fba8 	bl	17470 <xTaskGetSchedulerState>
   14d20:	2802      	cmp	r0, #2
   14d22:	d109      	bne.n	14d38 <UartDev::getChar(char*, unsigned int)+0x30>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:37
        return xQueueReceive(mRxQueue, pInputChar, timeout);
   14d24:	2300      	movs	r3, #0
   14d26:	4622      	mov	r2, r4
   14d28:	4639      	mov	r1, r7
   14d2a:	69b0      	ldr	r0, [r6, #24]
   14d2c:	f001 fe60 	bl	169f0 <xQueueGenericReceive>
   14d30:	3000      	adds	r0, #0
   14d32:	bf18      	it	ne
   14d34:	2001      	movne	r0, #1
   14d36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
sys_get_uptime_ms():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14d38:	f7fb fade 	bl	102f8 <sys_get_uptime_us>
   14d3c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14d40:	2300      	movs	r3, #0
   14d42:	f005 fa95 	bl	1a270 <__aeabi_uldivmod>
_ZN7UartDev7getCharEPcj():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:42
            if (sys_get_uptime_ms() > timeout_of_char) {
   14d46:	2500      	movs	r5, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:40
        unsigned int timeout_of_char = sys_get_uptime_ms() + timeout;
   14d48:	4404      	add	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:41
        while (! xQueueReceive(mRxQueue, pInputChar, 0)) {
   14d4a:	2300      	movs	r3, #0
   14d4c:	4639      	mov	r1, r7
   14d4e:	461a      	mov	r2, r3
   14d50:	69b0      	ldr	r0, [r6, #24]
   14d52:	f001 fe4d 	bl	169f0 <xQueueGenericReceive>
   14d56:	b958      	cbnz	r0, 14d70 <UartDev::getChar(char*, unsigned int)+0x68>
sys_get_uptime_ms():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14d58:	f7fb face 	bl	102f8 <sys_get_uptime_us>
   14d5c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14d60:	2300      	movs	r3, #0
   14d62:	f005 fa85 	bl	1a270 <__aeabi_uldivmod>
_ZN7UartDev7getCharEPcj():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:42
            if (sys_get_uptime_ms() > timeout_of_char) {
   14d66:	428d      	cmp	r5, r1
   14d68:	bf08      	it	eq
   14d6a:	4284      	cmpeq	r4, r0
   14d6c:	d2ed      	bcs.n	14d4a <UartDev::getChar(char*, unsigned int)+0x42>
   14d6e:	e7d0      	b.n	14d12 <UartDev::getChar(char*, unsigned int)+0xa>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:47
    return true;
   14d70:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:48
}
   14d72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00014d74 <UartDev::setBaudRate(unsigned int)>:
_ZN7UartDev11setBaudRateEj():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:102
{
    /* Adding 0.5 to perform rounding correctly since we do not want
     * 1.9 to round down to 1, but we want it to round-up to 2.
     */

    mpUARTRegBase->LCR = (1 << 7); // Enable DLAB to access DLM, DLL, and IER
   14d74:	2380      	movs	r3, #128	; 0x80
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:97
{
   14d76:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:102
    mpUARTRegBase->LCR = (1 << 7); // Enable DLAB to access DLM, DLL, and IER
   14d78:	6944      	ldr	r4, [r0, #20]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:104
    {
        uint16_t bd = (mPeripheralClock / (16 * baudRate)) + 0.5;
   14d7a:	0109      	lsls	r1, r1, #4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:102
    mpUARTRegBase->LCR = (1 << 7); // Enable DLAB to access DLM, DLL, and IER
   14d7c:	7323      	strb	r3, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:104
        uint16_t bd = (mPeripheralClock / (16 * baudRate)) + 0.5;
   14d7e:	6a00      	ldr	r0, [r0, #32]
   14d80:	fbb0 f0f1 	udiv	r0, r0, r1
   14d84:	f004 fcfe 	bl	19784 <__aeabi_ui2d>
   14d88:	4b06      	ldr	r3, [pc, #24]	; (14da4 <UartDev::setBaudRate(unsigned int)+0x30>)
   14d8a:	2200      	movs	r2, #0
   14d8c:	f004 fbbe 	bl	1950c <__adddf3>
   14d90:	f004 ff80 	bl	19c94 <__aeabi_d2uiz>
   14d94:	b280      	uxth	r0, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:105
        mpUARTRegBase->DLM = (bd >> 8);
   14d96:	0a03      	lsrs	r3, r0, #8
   14d98:	7123      	strb	r3, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:108
        mpUARTRegBase->DLL = (bd >> 0);
    }
    mpUARTRegBase->LCR = 3; // Disable DLAB and set 8bit per char
   14d9a:	2303      	movs	r3, #3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:106
        mpUARTRegBase->DLL = (bd >> 0);
   14d9c:	b2c0      	uxtb	r0, r0
   14d9e:	7020      	strb	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:108
    mpUARTRegBase->LCR = 3; // Disable DLAB and set 8bit per char
   14da0:	7323      	strb	r3, [r4, #12]
   14da2:	bd10      	pop	{r4, pc}
   14da4:	3fe00000 	.word	0x3fe00000

00014da8 <UartDev::handleInterrupt()>:
_ZN7UartDev15handleInterruptEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:121
     */
    const uint16_t transmitterEmpty = (1 << 1);
    const uint16_t dataAvailable    = (2 << 1);
    const uint16_t dataTimeout      = (6 << 1);

    long higherPriorityTaskWoken = 0;
   14da8:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112
{
   14daa:	b573      	push	{r0, r1, r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:126
    long switchRequired = 0;
    char c = 0;
    unsigned charsSent = 0;

    uint16_t reasonForInterrupt = (mpUARTRegBase->IIR & 0xE);
   14dac:	6942      	ldr	r2, [r0, #20]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:121
    long higherPriorityTaskWoken = 0;
   14dae:	9301      	str	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:123
    char c = 0;
   14db0:	f88d 3003 	strb.w	r3, [sp, #3]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:126
    uint16_t reasonForInterrupt = (mpUARTRegBase->IIR & 0xE);
   14db4:	6893      	ldr	r3, [r2, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112
{
   14db6:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:132
    {
        /**
         * If multiple sources of interrupt arise, let this interrupt exit, and re-enter
         * for the new source of interrupt.
         */
        switch (reasonForInterrupt)
   14db8:	f003 030e 	and.w	r3, r3, #14
   14dbc:	2b04      	cmp	r3, #4
   14dbe:	d021      	beq.n	14e04 <UartDev::handleInterrupt()+0x5c>
   14dc0:	2b0c      	cmp	r3, #12
   14dc2:	d01f      	beq.n	14e04 <UartDev::handleInterrupt()+0x5c>
   14dc4:	2b02      	cmp	r3, #2
   14dc6:	d13f      	bne.n	14e48 <UartDev::handleInterrupt()+0xa0>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:136
        {
            case transmitterEmpty:
            {
                if(uxQueueMessagesWaitingFromISR(mTxQueue) > mTxQWatermark) {
   14dc8:	69c0      	ldr	r0, [r0, #28]
   14dca:	f001 fee8 	bl	16b9e <uxQueueMessagesWaitingFromISR>
   14dce:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
   14dd0:	4298      	cmp	r0, r3
   14dd2:	d903      	bls.n	14ddc <UartDev::handleInterrupt()+0x34>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:137
                    mTxQWatermark = uxQueueMessagesWaitingFromISR(mTxQueue);
   14dd4:	69e0      	ldr	r0, [r4, #28]
   14dd6:	f001 fee2 	bl	16b9e <uxQueueMessagesWaitingFromISR>
   14dda:	84e0      	strh	r0, [r4, #38]	; 0x26
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112 (discriminator 1)
{
   14ddc:	2610      	movs	r6, #16
   14dde:	2500      	movs	r5, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:146 (discriminator 1)
                 * When THRE (Transmit Holding Register Empty) interrupt occurs,
                 * we can send as many bytes as the hardware FIFO supports (16)
                 */
                const unsigned char hwTxFifoSize = 16;
                for(charsSent=0;
                        charsSent < hwTxFifoSize && xQueueReceiveFromISR(mTxQueue, &c, &higherPriorityTaskWoken);
   14de0:	aa01      	add	r2, sp, #4
   14de2:	f10d 0103 	add.w	r1, sp, #3
   14de6:	69e0      	ldr	r0, [r4, #28]
   14de8:	f001 fe9c 	bl	16b24 <xQueueReceiveFromISR>
   14dec:	2800      	cmp	r0, #0
   14dee:	d12e      	bne.n	14e4e <UartDev::handleInterrupt()+0xa6>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:188
                reasonForInterrupt = mpUARTRegBase->LSR;
                break;
        }
    }

    portEND_SWITCHING_ISR(switchRequired);
   14df0:	b35d      	cbz	r5, 14e4a <UartDev::handleInterrupt()+0xa2>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:188 (discriminator 1)
   14df2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   14df6:	4b1b      	ldr	r3, [pc, #108]	; (14e64 <UartDev::handleInterrupt()+0xbc>)
   14df8:	601a      	str	r2, [r3, #0]
   14dfa:	f3bf 8f4f 	dsb	sy
   14dfe:	f3bf 8f6f 	isb	sy
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:189 (discriminator 1)
}
   14e02:	e022      	b.n	14e4a <UartDev::handleInterrupt()+0xa2>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:160
                mLastActivityTime = xTaskGetTickCountFromISR();
   14e04:	f002 f8b4 	bl	16f70 <xTaskGetTickCountFromISR>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:122
    long switchRequired = 0;
   14e08:	2500      	movs	r5, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:160
                mLastActivityTime = xTaskGetTickCountFromISR();
   14e0a:	62a0      	str	r0, [r4, #40]	; 0x28
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:166
                while (0 != (mpUARTRegBase->LSR & (1 << 0)))
   14e0c:	6963      	ldr	r3, [r4, #20]
   14e0e:	7d1a      	ldrb	r2, [r3, #20]
   14e10:	07d2      	lsls	r2, r2, #31
   14e12:	d50e      	bpl.n	14e32 <UartDev::handleInterrupt()+0x8a>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:168
                    c = mpUARTRegBase->RBR;
   14e14:	781b      	ldrb	r3, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:169
                    xQueueSendFromISR(mRxQueue, &c, &higherPriorityTaskWoken);
   14e16:	aa01      	add	r2, sp, #4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:168
                    c = mpUARTRegBase->RBR;
   14e18:	f88d 3003 	strb.w	r3, [sp, #3]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:169
                    xQueueSendFromISR(mRxQueue, &c, &higherPriorityTaskWoken);
   14e1c:	f10d 0103 	add.w	r1, sp, #3
   14e20:	2300      	movs	r3, #0
   14e22:	69a0      	ldr	r0, [r4, #24]
   14e24:	f001 fd70 	bl	16908 <xQueueGenericSendFromISR>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:170
                    if(higherPriorityTaskWoken) {
   14e28:	9b01      	ldr	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:171
                        switchRequired = 1;
   14e2a:	2b00      	cmp	r3, #0
   14e2c:	bf18      	it	ne
   14e2e:	2501      	movne	r5, #1
   14e30:	e7ec      	b.n	14e0c <UartDev::handleInterrupt()+0x64>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:175
                if(uxQueueMessagesWaitingFromISR(mRxQueue) > mRxQWatermark) {
   14e32:	69a0      	ldr	r0, [r4, #24]
   14e34:	f001 feb3 	bl	16b9e <uxQueueMessagesWaitingFromISR>
   14e38:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
   14e3a:	4298      	cmp	r0, r3
   14e3c:	d9d8      	bls.n	14df0 <UartDev::handleInterrupt()+0x48>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:176
                    mRxQWatermark = uxQueueMessagesWaitingFromISR(mRxQueue);
   14e3e:	69a0      	ldr	r0, [r4, #24]
   14e40:	f001 fead 	bl	16b9e <uxQueueMessagesWaitingFromISR>
   14e44:	84a0      	strh	r0, [r4, #36]	; 0x24
   14e46:	e7d3      	b.n	14df0 <UartDev::handleInterrupt()+0x48>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:183
                reasonForInterrupt = mpUARTRegBase->LSR;
   14e48:	7d13      	ldrb	r3, [r2, #20]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:189
}
   14e4a:	b002      	add	sp, #8
   14e4c:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:149
                    mpUARTRegBase->THR = c;
   14e4e:	6963      	ldr	r3, [r4, #20]
   14e50:	f89d 2003 	ldrb.w	r2, [sp, #3]
   14e54:	701a      	strb	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:150
                    if(higherPriorityTaskWoken) {
   14e56:	9b01      	ldr	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:151
                        switchRequired = 1;
   14e58:	2b00      	cmp	r3, #0
   14e5a:	bf18      	it	ne
   14e5c:	2501      	movne	r5, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:146
                        charsSent < hwTxFifoSize && xQueueReceiveFromISR(mTxQueue, &c, &higherPriorityTaskWoken);
   14e5e:	3e01      	subs	r6, #1
   14e60:	d0c6      	beq.n	14df0 <UartDev::handleInterrupt()+0x48>
   14e62:	e7bd      	b.n	14de0 <UartDev::handleInterrupt()+0x38>
   14e64:	e000ed04 	.word	0xe000ed04

00014e68 <UartDev::UartDev(unsigned int*)>:
_ZN7UartDevC2EPj():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:194

///////////////
// Protected //
///////////////
UartDev::UartDev(unsigned int* pUARTBaseAddr) : CharDev(),
   14e68:	b538      	push	{r3, r4, r5, lr}
   14e6a:	4604      	mov	r4, r0
   14e6c:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:201
        mRxQueue(0),
        mTxQueue(0),
        mPeripheralClock(0),
        mRxQWatermark(0),
        mTxQWatermark(0),
        mLastActivityTime(0)
   14e6e:	f000 f8b7 	bl	14fe0 <CharDev::CharDev()>
   14e72:	4b06      	ldr	r3, [pc, #24]	; (14e8c <UartDev::UartDev(unsigned int*)+0x24>)
   14e74:	6165      	str	r5, [r4, #20]
   14e76:	6023      	str	r3, [r4, #0]
   14e78:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:204
{

}
   14e7a:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:201
        mLastActivityTime(0)
   14e7c:	61a3      	str	r3, [r4, #24]
   14e7e:	61e3      	str	r3, [r4, #28]
   14e80:	6223      	str	r3, [r4, #32]
   14e82:	84a3      	strh	r3, [r4, #36]	; 0x24
   14e84:	84e3      	strh	r3, [r4, #38]	; 0x26
   14e86:	62a3      	str	r3, [r4, #40]	; 0x28
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:204
}
   14e88:	bd38      	pop	{r3, r4, r5, pc}
   14e8a:	bf00      	nop
   14e8c:	000216c0 	.word	0x000216c0

00014e90 <UartDev::init(unsigned int, unsigned int, int, int)>:
_ZN7UartDev4initEjjii():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:208

bool UartDev::init(unsigned int pclk, unsigned int baudRate,
                   int rxQSize, int txQSize)
{
   14e90:	b570      	push	{r4, r5, r6, lr}
   14e92:	4616      	mov	r6, r2
   14e94:	461d      	mov	r5, r3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:212
    mPeripheralClock = pclk;

    // Configure UART Hardware: Baud rate, FIFOs etc.
    if (LPC_UART0_BASE == (unsigned int) mpUARTRegBase)
   14e96:	4a25      	ldr	r2, [pc, #148]	; (14f2c <UartDev::init(unsigned int, unsigned int, int, int)+0x9c>)
   14e98:	6943      	ldr	r3, [r0, #20]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:208
{
   14e9a:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:212
    if (LPC_UART0_BASE == (unsigned int) mpUARTRegBase)
   14e9c:	4293      	cmp	r3, r2
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:209
    mPeripheralClock = pclk;
   14e9e:	6201      	str	r1, [r0, #32]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:212
    if (LPC_UART0_BASE == (unsigned int) mpUARTRegBase)
   14ea0:	d12f      	bne.n	14f02 <UartDev::init(unsigned int, unsigned int, int, int)+0x72>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:214
    {
        lpc_pconp(pconp_uart0, true);
   14ea2:	2101      	movs	r1, #1
   14ea4:	2003      	movs	r0, #3
   14ea6:	f7fb fac3 	bl	10430 <lpc_pconp>
NVIC_EnableIRQ():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   14eaa:	2220      	movs	r2, #32
   14eac:	4b20      	ldr	r3, [pc, #128]	; (14f30 <UartDev::init(unsigned int, unsigned int, int, int)+0xa0>)
_ZN7UartDev4initEjjii():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:246

    // Enable & Reset FIFOs and set 4 char timeout for Rx
    mpUARTRegBase->FCR = (1 << 0) | (1 << 6);
    mpUARTRegBase->FCR |= (1 << 1) | (1 << 2);

    setBaudRate(baudRate);
   14eae:	4631      	mov	r1, r6
NVIC_EnableIRQ():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   14eb0:	601a      	str	r2, [r3, #0]
_ZN7UartDev4initEjjii():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:243
    mpUARTRegBase->FCR = (1 << 0) | (1 << 6);
   14eb2:	2241      	movs	r2, #65	; 0x41
   14eb4:	6963      	ldr	r3, [r4, #20]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:246
    setBaudRate(baudRate);
   14eb6:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:243
    mpUARTRegBase->FCR = (1 << 0) | (1 << 6);
   14eb8:	721a      	strb	r2, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:244
    mpUARTRegBase->FCR |= (1 << 1) | (1 << 2);
   14eba:	7a1a      	ldrb	r2, [r3, #8]
   14ebc:	f042 0206 	orr.w	r2, r2, #6
   14ec0:	721a      	strb	r2, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:246
    setBaudRate(baudRate);
   14ec2:	f7ff ff57 	bl	14d74 <UartDev::setBaudRate(unsigned int)>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:253
    // Set minimum queue size?
    if (rxQSize < 9) rxQSize = 8;
    if (txQSize < 9) txQSize = 8;

    // Create the receive and transmit queues
    if (!mRxQueue) mRxQueue = xQueueCreate(rxQSize, sizeof(char));
   14ec6:	69a2      	ldr	r2, [r4, #24]
   14ec8:	b942      	cbnz	r2, 14edc <UartDev::init(unsigned int, unsigned int, int, int)+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:253 (discriminator 1)
   14eca:	2d08      	cmp	r5, #8
   14ecc:	4628      	mov	r0, r5
   14ece:	f04f 0101 	mov.w	r1, #1
   14ed2:	bfb8      	it	lt
   14ed4:	2008      	movlt	r0, #8
   14ed6:	f001 fc61 	bl	1679c <xQueueGenericCreate>
   14eda:	61a0      	str	r0, [r4, #24]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:254
    if (!mTxQueue) mTxQueue = xQueueCreate(txQSize, sizeof(char));
   14edc:	69e2      	ldr	r2, [r4, #28]
   14ede:	b93a      	cbnz	r2, 14ef0 <UartDev::init(unsigned int, unsigned int, int, int)+0x60>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:254 (discriminator 1)
   14ee0:	9804      	ldr	r0, [sp, #16]
   14ee2:	2101      	movs	r1, #1
   14ee4:	2808      	cmp	r0, #8
   14ee6:	bfb8      	it	lt
   14ee8:	2008      	movlt	r0, #8
   14eea:	f001 fc57 	bl	1679c <xQueueGenericCreate>
   14eee:	61e0      	str	r0, [r4, #28]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:261
    // Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetQueueName(mRxQueue, "UART RX-Q");
    vTraceSetQueueName(mTxQueue, "UART TX-Q");

    // Enable Rx/Tx and line status Interrupts:
    mpUARTRegBase->IER = (1 << 0) | (1 << 1) | (1 << 2); // B0:Rx, B1: Tx
   14ef0:	2207      	movs	r2, #7
   14ef2:	6963      	ldr	r3, [r4, #20]
   14ef4:	605a      	str	r2, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263

    return (0 != mRxQueue && 0 != mTxQueue);
   14ef6:	69a3      	ldr	r3, [r4, #24]
   14ef8:	b10b      	cbz	r3, 14efe <UartDev::init(unsigned int, unsigned int, int, int)+0x6e>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263 (discriminator 1)
   14efa:	69e3      	ldr	r3, [r4, #28]
   14efc:	b9a3      	cbnz	r3, 14f28 <UartDev::init(unsigned int, unsigned int, int, int)+0x98>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263 (discriminator 4)
   14efe:	2000      	movs	r0, #0
   14f00:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:225
    else if (LPC_UART2_BASE == (unsigned int) mpUARTRegBase)
   14f02:	4a0c      	ldr	r2, [pc, #48]	; (14f34 <UartDev::init(unsigned int, unsigned int, int, int)+0xa4>)
   14f04:	4293      	cmp	r3, r2
   14f06:	d105      	bne.n	14f14 <UartDev::init(unsigned int, unsigned int, int, int)+0x84>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:227
        lpc_pconp(pconp_uart2, true);
   14f08:	2101      	movs	r1, #1
   14f0a:	2018      	movs	r0, #24
   14f0c:	f7fb fa90 	bl	10430 <lpc_pconp>
NVIC_EnableIRQ():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   14f10:	2280      	movs	r2, #128	; 0x80
   14f12:	e7cb      	b.n	14eac <UartDev::init(unsigned int, unsigned int, int, int)+0x1c>
_ZN7UartDev4initEjjii():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:231
    else if (LPC_UART3_BASE == (unsigned int) mpUARTRegBase)
   14f14:	4a08      	ldr	r2, [pc, #32]	; (14f38 <UartDev::init(unsigned int, unsigned int, int, int)+0xa8>)
   14f16:	4293      	cmp	r3, r2
   14f18:	d1f1      	bne.n	14efe <UartDev::init(unsigned int, unsigned int, int, int)+0x6e>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:233
        lpc_pconp(pconp_uart3, true);
   14f1a:	2101      	movs	r1, #1
   14f1c:	2019      	movs	r0, #25
   14f1e:	f7fb fa87 	bl	10430 <lpc_pconp>
NVIC_EnableIRQ():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   14f22:	f44f 7280 	mov.w	r2, #256	; 0x100
   14f26:	e7c1      	b.n	14eac <UartDev::init(unsigned int, unsigned int, int, int)+0x1c>
_ZN7UartDev4initEjjii():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263
    return (0 != mRxQueue && 0 != mTxQueue);
   14f28:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:264
}
   14f2a:	bd70      	pop	{r4, r5, r6, pc}
   14f2c:	4000c000 	.word	0x4000c000
   14f30:	e000e100 	.word	0xe000e100
   14f34:	40098000 	.word	0x40098000
   14f38:	4009c000 	.word	0x4009c000

00014f3c <CharDev::flush()>:
_ZN7CharDev5flushEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.hpp:67
        virtual bool putChar(char out, unsigned int timeout=portMAX_DELAY) = 0;

        /**
         * Optional flush to flush out all the data
         */
        virtual bool flush(void) { return true; }
   14f3c:	2001      	movs	r0, #1
   14f3e:	4770      	bx	lr

00014f40 <CharDev::put(char const*, unsigned int)>:
_ZN7CharDev3putEPKcj():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:34
#include "utilities.h"      // system_get_timer_ms();



bool CharDev::put(const char* pString, unsigned int timeout)
{
   14f40:	b570      	push	{r4, r5, r6, lr}
   14f42:	4605      	mov	r5, r0
   14f44:	4616      	mov	r6, r2
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:35
    if (!pString) {
   14f46:	b909      	cbnz	r1, 14f4c <CharDev::put(char const*, unsigned int)+0xc>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:36
        return false;
   14f48:	2000      	movs	r0, #0
   14f4a:	bd70      	pop	{r4, r5, r6, pc}
   14f4c:	1e4c      	subs	r4, r1, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:39
    }

    while(*pString) {
   14f4e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
   14f52:	b139      	cbz	r1, 14f64 <CharDev::put(char const*, unsigned int)+0x24>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:40
        if(!putChar(*pString++, timeout)) {
   14f54:	682b      	ldr	r3, [r5, #0]
   14f56:	4632      	mov	r2, r6
   14f58:	685b      	ldr	r3, [r3, #4]
   14f5a:	4628      	mov	r0, r5
   14f5c:	4798      	blx	r3
   14f5e:	2800      	cmp	r0, #0
   14f60:	d1f5      	bne.n	14f4e <CharDev::put(char const*, unsigned int)+0xe>
   14f62:	e7f1      	b.n	14f48 <CharDev::put(char const*, unsigned int)+0x8>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:45
            return false;
        }
    }

    return true;
   14f64:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:46
}
   14f66:	bd70      	pop	{r4, r5, r6, pc}

00014f68 <CharDev::printf(char const*, ...)>:
_ZN7CharDev6printfEPKcz():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:82

    return success;
}

int CharDev::printf(const char *format, ...)
{
   14f68:	b40e      	push	{r1, r2, r3}
   14f6a:	b533      	push	{r0, r1, r4, r5, lr}
   14f6c:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:83
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   14f6e:	f002 fa7f 	bl	17470 <xTaskGetSchedulerState>
   14f72:	2802      	cmp	r0, #2
   14f74:	d106      	bne.n	14f84 <CharDev::printf(char const*, ...)+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:84
        xSemaphoreTake(mPrintfSemaphore, portMAX_DELAY);
   14f76:	2300      	movs	r3, #0
   14f78:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   14f7c:	4619      	mov	r1, r3
   14f7e:	68e0      	ldr	r0, [r4, #12]
   14f80:	f001 fd36 	bl	169f0 <xQueueGenericReceive>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:89
    }

        int len = 0;
        va_list args;
        va_start(args, format);
   14f84:	ab06      	add	r3, sp, #24
   14f86:	9300      	str	r3, [sp, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:93

        do {
            va_list args_copy;
            va_copy(args_copy, args);
   14f88:	9b00      	ldr	r3, [sp, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:94
            len = vsnprintf(mpPrintfMem, mPrintfMemSize, format, args_copy);
   14f8a:	9a05      	ldr	r2, [sp, #20]
   14f8c:	8921      	ldrh	r1, [r4, #8]
   14f8e:	6860      	ldr	r0, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:93
            va_copy(args_copy, args);
   14f90:	9301      	str	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:94
            len = vsnprintf(mpPrintfMem, mPrintfMemSize, format, args_copy);
   14f92:	f008 fe6b 	bl	1dc6c <vsniprintf>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:97
            va_end(args_copy);

            if (len >= mPrintfMemSize) {
   14f96:	8923      	ldrh	r3, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:94
            len = vsnprintf(mpPrintfMem, mPrintfMemSize, format, args_copy);
   14f98:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:97
            if (len >= mPrintfMemSize) {
   14f9a:	4298      	cmp	r0, r3
   14f9c:	db0a      	blt.n	14fb4 <CharDev::printf(char const*, ...)+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:99
                const int align = 16;
                mPrintfMemSize = (align + ((len/align) * align));
   14f9e:	f020 010f 	bic.w	r1, r0, #15
   14fa2:	3110      	adds	r1, #16
   14fa4:	b289      	uxth	r1, r1
   14fa6:	8121      	strh	r1, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:112
                        free(mpPrintfMem);
                    }
                    mpPrintfMem = (char*) malloc(mPrintfMemSize);
                }
                else {
                    mpPrintfMem = (char*) realloc(mpPrintfMem, mPrintfMemSize);
   14fa8:	6860      	ldr	r0, [r4, #4]
   14faa:	f007 fa0b 	bl	1c3c4 <realloc>
   14fae:	6060      	str	r0, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:118
                }
            }
            else {
                break;
            }
        } while (mpPrintfMem);
   14fb0:	2800      	cmp	r0, #0
   14fb2:	d1e9      	bne.n	14f88 <CharDev::printf(char const*, ...)+0x20>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:121

        va_end(args);
        this->put(mpPrintfMem);
   14fb4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   14fb8:	6861      	ldr	r1, [r4, #4]
   14fba:	4620      	mov	r0, r4
   14fbc:	f7ff ffc0 	bl	14f40 <CharDev::put(char const*, unsigned int)>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:123

    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   14fc0:	f002 fa56 	bl	17470 <xTaskGetSchedulerState>
   14fc4:	2802      	cmp	r0, #2
   14fc6:	d105      	bne.n	14fd4 <CharDev::printf(char const*, ...)+0x6c>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:124
        xSemaphoreGive(mPrintfSemaphore);
   14fc8:	2300      	movs	r3, #0
   14fca:	68e0      	ldr	r0, [r4, #12]
   14fcc:	461a      	mov	r2, r3
   14fce:	4619      	mov	r1, r3
   14fd0:	f001 fc06 	bl	167e0 <xQueueGenericSend>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:128
    }

    return len;
}
   14fd4:	4628      	mov	r0, r5
   14fd6:	b002      	add	sp, #8
   14fd8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   14fdc:	b003      	add	sp, #12
   14fde:	4770      	bx	lr

00014fe0 <CharDev::CharDev()>:
_ZN7CharDevC2Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:145
    va_end(args);

    return parsed;
}

CharDev::CharDev() : mpPrintfMem(NULL), mPrintfMemSize(0), mReady(false)
   14fe0:	4b06      	ldr	r3, [pc, #24]	; (14ffc <CharDev::CharDev()+0x1c>)
   14fe2:	b510      	push	{r4, lr}
   14fe4:	6003      	str	r3, [r0, #0]
   14fe6:	2300      	movs	r3, #0
   14fe8:	4604      	mov	r4, r0
   14fea:	6043      	str	r3, [r0, #4]
   14fec:	8103      	strh	r3, [r0, #8]
   14fee:	7403      	strb	r3, [r0, #16]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:147
{
    mPrintfSemaphore = xSemaphoreCreateMutex();
   14ff0:	2001      	movs	r0, #1
   14ff2:	f001 fc77 	bl	168e4 <xQueueCreateMutex>
   14ff6:	60e0      	str	r0, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:149
    vTraceSetMutexName(mPrintfSemaphore, "printf sem");
}
   14ff8:	4620      	mov	r0, r4
   14ffa:	bd10      	pop	{r4, pc}
   14ffc:	000216f0 	.word	0x000216f0

00015000 <CharDev::~CharDev()>:
_ZN7CharDevD2Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:151

CharDev::~CharDev()
   15000:	4b04      	ldr	r3, [pc, #16]	; (15014 <CharDev::~CharDev()+0x14>)
   15002:	b510      	push	{r4, lr}
   15004:	4604      	mov	r4, r0
   15006:	6003      	str	r3, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:153
{
    if (mpPrintfMem) {
   15008:	6840      	ldr	r0, [r0, #4]
   1500a:	b108      	cbz	r0, 15010 <CharDev::~CharDev()+0x10>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:154
        free(mpPrintfMem);
   1500c:	f005 fef4 	bl	1adf8 <free>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:156
    }
}
   15010:	4620      	mov	r0, r4
   15012:	bd10      	pop	{r4, pc}
   15014:	000216f0 	.word	0x000216f0

00015018 <spi1_lock>:
spi1_lock():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:29
static SemaphoreHandle_t mSpi0Lock = 0;



void spi1_lock(void)
{
   15018:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:30
    if(!mSpi0Lock) {
   1501a:	4c0a      	ldr	r4, [pc, #40]	; (15044 <spi1_lock+0x2c>)
   1501c:	6823      	ldr	r3, [r4, #0]
   1501e:	b91b      	cbnz	r3, 15028 <spi1_lock+0x10>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:31
        mSpi0Lock = xSemaphoreCreateMutex();
   15020:	2001      	movs	r0, #1
   15022:	f001 fc5f 	bl	168e4 <xQueueCreateMutex>
   15026:	6020      	str	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:37
        // Optional: Provide names of the FreeRTOS objects for the Trace Facility
        vTraceSetMutexName(mSpi0Lock, "SPI-0 Mutex");
    }


    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   15028:	f002 fa22 	bl	17470 <xTaskGetSchedulerState>
   1502c:	2802      	cmp	r0, #2
   1502e:	d108      	bne.n	15042 <spi1_lock+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:38
        xSemaphoreTake(mSpi0Lock, portMAX_DELAY);
   15030:	2300      	movs	r3, #0
   15032:	6820      	ldr	r0, [r4, #0]
   15034:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:40
    }
}
   15038:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:38
        xSemaphoreTake(mSpi0Lock, portMAX_DELAY);
   1503c:	4619      	mov	r1, r3
   1503e:	f001 bcd7 	b.w	169f0 <xQueueGenericReceive>
   15042:	bd10      	pop	{r4, pc}
   15044:	2007c4fc 	.word	0x2007c4fc

00015048 <spi1_unlock>:
spi1_unlock():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:43

void spi1_unlock(void)
{
   15048:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:44
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   1504a:	f002 fa11 	bl	17470 <xTaskGetSchedulerState>
   1504e:	2802      	cmp	r0, #2
   15050:	d108      	bne.n	15064 <spi1_unlock+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:47
        xSemaphoreGive(mSpi0Lock);
    }
}
   15052:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:45
        xSemaphoreGive(mSpi0Lock);
   15056:	2300      	movs	r3, #0
   15058:	4803      	ldr	r0, [pc, #12]	; (15068 <spi1_unlock+0x20>)
   1505a:	461a      	mov	r2, r3
   1505c:	4619      	mov	r1, r3
   1505e:	6800      	ldr	r0, [r0, #0]
   15060:	f001 bbbe 	b.w	167e0 <xQueueGenericSend>
   15064:	bd10      	pop	{r4, pc}
   15066:	bf00      	nop
   15068:	2007c4fc 	.word	0x2007c4fc

0001506c <RIT_IRQHandler>:
RIT_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:29
static void_func_t g_rit_callback = 0; /**< RIT Callback function pointer */


/** RIT Interrupt function (see startup.cpp) */
void RIT_IRQHandler()
{
   1506c:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:31
    const uint32_t isr_flag_bitmask = (1 << 0);
    g_rit_callback();
   1506e:	4b04      	ldr	r3, [pc, #16]	; (15080 <RIT_IRQHandler+0x14>)
   15070:	681b      	ldr	r3, [r3, #0]
   15072:	4798      	blx	r3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:32
    LPC_RIT->RICTRL |= isr_flag_bitmask;
   15074:	4a03      	ldr	r2, [pc, #12]	; (15084 <RIT_IRQHandler+0x18>)
   15076:	7a13      	ldrb	r3, [r2, #8]
   15078:	f043 0301 	orr.w	r3, r3, #1
   1507c:	7213      	strb	r3, [r2, #8]
   1507e:	bd08      	pop	{r3, pc}
   15080:	2007c500 	.word	0x2007c500
   15084:	400b0000 	.word	0x400b0000

00015088 <CAN_tx_now>:
CAN_tx_now():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:165
        go_cmd_tx1 = 0x21,
        go_cmd_tx2 = 0x41,
        go_cmd_tx3 = 0x81,
    };

    LPC_CAN_TypeDef *pCAN = struct_ptr->pCanRegs;
   15088:	6802      	ldr	r2, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:156
{
   1508a:	b530      	push	{r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:166
    const uint32_t can_sr_reg = pCAN->SR;
   1508c:	69d3      	ldr	r3, [r2, #28]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:170
    volatile can_msg_t *pHwMsgRegs = NULL;
    uint32_t go_cmd = go_cmd_invalid;

    if (can_sr_reg & tx1_avail){
   1508e:	f013 0304 	ands.w	r3, r3, #4
   15092:	d010      	beq.n	150b6 <CAN_tx_now+0x2e>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:199
    // Higher number will be sent later, but how do we handle the rollover from 255 to 0 because then the
    // newly written 0 will be sent, and buffer that contains higher TPM can starve.
    const uint8_t tpm = struct_ptr->txMsgCount;
    msg_ptr->frame |= tpm;
#endif
    *pHwMsgRegs = *msg_ptr;
   15094:	f102 0330 	add.w	r3, r2, #48	; 0x30
   15098:	f101 0410 	add.w	r4, r1, #16
   1509c:	f851 5b04 	ldr.w	r5, [r1], #4
   150a0:	42a1      	cmp	r1, r4
   150a2:	f843 5b04 	str.w	r5, [r3], #4
   150a6:	d1f9      	bne.n	1509c <CAN_tx_now+0x14>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:200
    struct_ptr->txMsgCount++;
   150a8:	8a43      	ldrh	r3, [r0, #18]
   150aa:	3301      	adds	r3, #1
   150ac:	8243      	strh	r3, [r0, #18]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:208
    go_cmd &= (0xF0);
    go_cmd = (1 << 4); /* Self reception */
    #endif

    /* Send the message! */
    pCAN->CMR = go_cmd;
   150ae:	2321      	movs	r3, #33	; 0x21
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:209
    return true;
   150b0:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:208
    pCAN->CMR = go_cmd;
   150b2:	6053      	str	r3, [r2, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:209
    return true;
   150b4:	bd30      	pop	{r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:186
        return false;
   150b6:	4618      	mov	r0, r3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:210
}
   150b8:	bd30      	pop	{r4, r5, pc}
   150ba:	Address 0x00000000000150ba is out of bounds.


000150bc <CAN_handle_isr>:
CAN_handle_isr():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:213

static void CAN_handle_isr(const can_t can)
{
   150bc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:215
    can_struct_t *pStruct = CAN_STRUCT_PTR(can);
    LPC_CAN_TypeDef *pCAN = pStruct->pCanRegs;
   150c0:	4c26      	ldr	r4, [pc, #152]	; (1515c <CAN_handle_isr+0xa0>)
   150c2:	0145      	lsls	r5, r0, #5
   150c4:	f854 8005 	ldr.w	r8, [r4, r5]
   150c8:	1967      	adds	r7, r4, r5
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:217
    const uint32_t rbs = (1 << 0);
    const uint32_t ibits = pCAN->ICR;
   150ca:	f8d8 600c 	ldr.w	r6, [r8, #12]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:222
    UBaseType_t count;
    can_msg_t msg;

    /* Handle the received message */
    if ((ibits & intr_rx) | (pCAN->GSR & rbs)) {
   150ce:	f8d8 3008 	ldr.w	r3, [r8, #8]
   150d2:	4333      	orrs	r3, r6
   150d4:	07d9      	lsls	r1, r3, #31
   150d6:	d516      	bpl.n	15106 <CAN_handle_isr+0x4a>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:223
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->rxQ)) > pStruct->rxQWatermark) {
   150d8:	6878      	ldr	r0, [r7, #4]
   150da:	f001 fd60 	bl	16b9e <uxQueueMessagesWaitingFromISR>
   150de:	89fb      	ldrh	r3, [r7, #14]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
            pStruct->rxQWatermark = count;
        }

        can_msg_t *pHwMsgRegs = (can_msg_t*) &(pCAN->RFS);
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   150e0:	f108 0120 	add.w	r1, r8, #32
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:223
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->rxQ)) > pStruct->rxQWatermark) {
   150e4:	4298      	cmp	r0, r3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   150e6:	f04f 0300 	mov.w	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:224
            pStruct->rxQWatermark = count;
   150ea:	bf88      	it	hi
   150ec:	81f8      	strhhi	r0, [r7, #14]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   150ee:	1967      	adds	r7, r4, r5
   150f0:	461a      	mov	r2, r3
   150f2:	6878      	ldr	r0, [r7, #4]
   150f4:	f001 fc08 	bl	16908 <xQueueGenericSendFromISR>
   150f8:	b358      	cbz	r0, 15152 <CAN_handle_isr+0x96>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:229
            pStruct->rxMsgCount++;
   150fa:	8abb      	ldrh	r3, [r7, #20]
   150fc:	3301      	adds	r3, #1
   150fe:	82bb      	strh	r3, [r7, #20]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:234
        }
        else {
            pStruct->droppedRxMsgs++;
        }
        pCAN->CMR = 0x04; // Release the receive buffer, no need to bitmask
   15100:	2304      	movs	r3, #4
   15102:	f8c8 3004 	str.w	r3, [r8, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:238
    }

    /* A transmit finished, send any queued message(s) */
    if (ibits & intr_all_tx) {
   15106:	f240 6302 	movw	r3, #1538	; 0x602
   1510a:	421e      	tst	r6, r3
   1510c:	d012      	beq.n	15134 <CAN_handle_isr+0x78>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:239
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->txQ)) > pStruct->txQWatermark) {
   1510e:	1967      	adds	r7, r4, r5
   15110:	68b8      	ldr	r0, [r7, #8]
   15112:	f001 fd44 	bl	16b9e <uxQueueMessagesWaitingFromISR>
   15116:	8a3b      	ldrh	r3, [r7, #16]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:242
            pStruct->txQWatermark = count;
        }
        if (xQueueReceiveFromISR(pStruct->txQ, &msg, NULL)) {
   15118:	2200      	movs	r2, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:239
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->txQ)) > pStruct->txQWatermark) {
   1511a:	4298      	cmp	r0, r3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:240
            pStruct->txQWatermark = count;
   1511c:	bf88      	it	hi
   1511e:	8238      	strhhi	r0, [r7, #16]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:242
        if (xQueueReceiveFromISR(pStruct->txQ, &msg, NULL)) {
   15120:	1967      	adds	r7, r4, r5
   15122:	4669      	mov	r1, sp
   15124:	68b8      	ldr	r0, [r7, #8]
   15126:	f001 fcfd 	bl	16b24 <xQueueReceiveFromISR>
   1512a:	b118      	cbz	r0, 15134 <CAN_handle_isr+0x78>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:243
            CAN_tx_now(pStruct, &msg);
   1512c:	4669      	mov	r1, sp
   1512e:	4638      	mov	r0, r7
   15130:	f7ff ffaa 	bl	15088 <CAN_tx_now>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:250
    }

    /* We only enable interrupt when a valid callback exists, so no need
     * to check for the callback function being NULL
     */
    if (ibits & g_can_bus_err_intr) {
   15134:	06b2      	lsls	r2, r6, #26
   15136:	d503      	bpl.n	15140 <CAN_handle_isr+0x84>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:251
        pStruct->bus_error(ibits);
   15138:	1963      	adds	r3, r4, r5
   1513a:	699b      	ldr	r3, [r3, #24]
   1513c:	4630      	mov	r0, r6
   1513e:	4798      	blx	r3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:253
    }
    if (ibits & intr_ovrn) {
   15140:	0733      	lsls	r3, r6, #28
   15142:	d503      	bpl.n	1514c <CAN_handle_isr+0x90>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:254
        pStruct->data_overrun(ibits);
   15144:	442c      	add	r4, r5
   15146:	69e3      	ldr	r3, [r4, #28]
   15148:	4630      	mov	r0, r6
   1514a:	4798      	blx	r3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:256
    }
}
   1514c:	b004      	add	sp, #16
   1514e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:232
            pStruct->droppedRxMsgs++;
   15152:	89bb      	ldrh	r3, [r7, #12]
   15154:	3301      	adds	r3, #1
   15156:	81bb      	strh	r3, [r7, #12]
   15158:	e7d2      	b.n	15100 <CAN_handle_isr+0x44>
   1515a:	bf00      	nop
   1515c:	2007c098 	.word	0x2007c098

00015160 <CAN_IRQHandler>:
CAN_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:268
#ifdef __cplusplus
extern "C" {
#endif
void CAN_IRQHandler(void)
{
    const uint32_t pconp = LPC_SC->PCONP;
   15160:	4b08      	ldr	r3, [pc, #32]	; (15184 <CAN_IRQHandler+0x24>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:267
{
   15162:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:268
    const uint32_t pconp = LPC_SC->PCONP;
   15164:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:271

    /* Reading registers without CAN powered up will cause DABORT exception */
    if (pconp & can1_pconp_mask) {
   15168:	04a2      	lsls	r2, r4, #18
   1516a:	d502      	bpl.n	15172 <CAN_IRQHandler+0x12>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:272
        CAN_handle_isr(can1);
   1516c:	2000      	movs	r0, #0
   1516e:	f7ff ffa5 	bl	150bc <CAN_handle_isr>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:275
    }

    if (pconp & can2_pconp_mask) {
   15172:	0463      	lsls	r3, r4, #17
   15174:	d504      	bpl.n	15180 <CAN_IRQHandler+0x20>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:278
        CAN_handle_isr(can2);
    }
}
   15176:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:276
        CAN_handle_isr(can2);
   1517a:	2001      	movs	r0, #1
   1517c:	f7ff bf9e 	b.w	150bc <CAN_handle_isr>
   15180:	bd10      	pop	{r4, pc}
   15182:	bf00      	nop
   15184:	400fc000 	.word	0x400fc000

00015188 <Uart0::~Uart0()>:
_ZN5Uart0D2Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart0 : public UartDev, public SingletonTemplate<Uart0>
   15188:	b510      	push	{r4, lr}
   1518a:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
        ~UartDev() { } /** Nothing to clean up */
   1518c:	4b02      	ldr	r3, [pc, #8]	; (15198 <Uart0::~Uart0()+0x10>)
   1518e:	6003      	str	r3, [r0, #0]
   15190:	f7ff ff36 	bl	15000 <CharDev::~CharDev()>
_ZN5Uart0D2Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:39
   15194:	4620      	mov	r0, r4
   15196:	bd10      	pop	{r4, pc}
   15198:	000216c0 	.word	0x000216c0

0001519c <Uart0::~Uart0()>:
_ZN5Uart0D0Ev():
   1519c:	b510      	push	{r4, lr}
   1519e:	4604      	mov	r4, r0
   151a0:	f7ff fff2 	bl	15188 <Uart0::~Uart0()>
   151a4:	4620      	mov	r0, r4
   151a6:	212c      	movs	r1, #44	; 0x2c
   151a8:	f003 ff1d 	bl	18fe6 <operator delete(void*, unsigned int)>
   151ac:	4620      	mov	r0, r4
   151ae:	bd10      	pop	{r4, pc}

000151b0 <Uart0::Uart0()>:
_ZN5Uart0C2Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:52
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart0::Uart0() : UartDev((unsigned int*)LPC_UART0_BASE)
   151b0:	b510      	push	{r4, lr}
   151b2:	4604      	mov	r4, r0
   151b4:	4903      	ldr	r1, [pc, #12]	; (151c4 <Uart0::Uart0()+0x14>)
   151b6:	f7ff fe57 	bl	14e68 <UartDev::UartDev(unsigned int*)>
   151ba:	4b03      	ldr	r3, [pc, #12]	; (151c8 <Uart0::Uart0()+0x18>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:55
{
    // Nothing to do here other than handing off LPC_UART0_Base address to UART_Base
}
   151bc:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:52
Uart0::Uart0() : UartDev((unsigned int*)LPC_UART0_BASE)
   151be:	6023      	str	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:55
}
   151c0:	bd10      	pop	{r4, pc}
   151c2:	bf00      	nop
   151c4:	4000c000 	.word	0x4000c000
   151c8:	00021758 	.word	0x00021758

000151cc <UART0_IRQHandler>:
UART0_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:34
    {
   151cc:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   151ce:	4c07      	ldr	r4, [pc, #28]	; (151ec <UART0_IRQHandler+0x20>)
   151d0:	6823      	ldr	r3, [r4, #0]
   151d2:	b933      	cbnz	r3, 151e2 <UART0_IRQHandler+0x16>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   151d4:	202c      	movs	r0, #44	; 0x2c
   151d6:	f003 f967 	bl	184a8 <operator new(unsigned int)>
   151da:	4605      	mov	r5, r0
   151dc:	f7ff ffe8 	bl	151b0 <Uart0::Uart0()>
   151e0:	6025      	str	r5, [r4, #0]
UART0_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:35
        Uart0::getInstance().handleInterrupt();
   151e2:	6820      	ldr	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:36
    }
   151e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:35
        Uart0::getInstance().handleInterrupt();
   151e8:	f7ff bdde 	b.w	14da8 <UartDev::handleInterrupt()>
   151ec:	2007c504 	.word	0x2007c504

000151f0 <Uart3::~Uart3()>:
_ZN5Uart3D2Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/uart3.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart3 : public UartDev, public SingletonTemplate<Uart3>
   151f0:	b510      	push	{r4, lr}
   151f2:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
   151f4:	4b02      	ldr	r3, [pc, #8]	; (15200 <Uart3::~Uart3()+0x10>)
   151f6:	6003      	str	r3, [r0, #0]
   151f8:	f7ff ff02 	bl	15000 <CharDev::~CharDev()>
_ZN5Uart3D2Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/uart3.hpp:39
   151fc:	4620      	mov	r0, r4
   151fe:	bd10      	pop	{r4, pc}
   15200:	000216c0 	.word	0x000216c0

00015204 <Uart3::~Uart3()>:
_ZN5Uart3D0Ev():
   15204:	b510      	push	{r4, lr}
   15206:	4604      	mov	r4, r0
   15208:	f7ff fff2 	bl	151f0 <Uart3::~Uart3()>
   1520c:	4620      	mov	r0, r4
   1520e:	212c      	movs	r1, #44	; 0x2c
   15210:	f003 fee9 	bl	18fe6 <operator delete(void*, unsigned int)>
   15214:	4620      	mov	r0, r4
   15216:	bd10      	pop	{r4, pc}

00015218 <Uart3::init(unsigned int, int, int)>:
_ZN5Uart34initEjii():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:40
        Uart3::getInstance().handleInterrupt();
    }
}

bool Uart3::init(unsigned int baudRate, int rxQSize, int txQSize)
{
   15218:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1521a:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:43
    // Configure PINSEL for UART3.
    // UART3 RX/TX is at P4.28 and P4.29
    LPC_PINCON->PINSEL9 &= ~(0xF << 24); // Clear values
   1521c:	490d      	ldr	r1, [pc, #52]	; (15254 <Uart3::init(unsigned int, int, int)+0x3c>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:40
{
   1521e:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:43
    LPC_PINCON->PINSEL9 &= ~(0xF << 24); // Clear values
   15220:	6a48      	ldr	r0, [r1, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:40
{
   15222:	4616      	mov	r6, r2
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:43
    LPC_PINCON->PINSEL9 &= ~(0xF << 24); // Clear values
   15224:	f020 6070 	bic.w	r0, r0, #251658240	; 0xf000000
   15228:	6248      	str	r0, [r1, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:44
    LPC_PINCON->PINSEL9 |=  (0xF << 24); // Set values for UART3 Rx/Tx
   1522a:	6a48      	ldr	r0, [r1, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:40
{
   1522c:	461f      	mov	r7, r3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:44
    LPC_PINCON->PINSEL9 |=  (0xF << 24); // Set values for UART3 Rx/Tx
   1522e:	f040 6070 	orr.w	r0, r0, #251658240	; 0xf000000
   15232:	6248      	str	r0, [r1, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:47

    // Set UART3 Peripheral Clock divider to 1
    lpc_pclk(pclk_uart3, clkdiv_1);
   15234:	2101      	movs	r1, #1
   15236:	2019      	movs	r0, #25
   15238:	f7fb f914 	bl	10464 <lpc_pclk>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:48
    const unsigned int pclk = sys_get_cpu_clock();
   1523c:	f7fb f9e0 	bl	10600 <sys_get_cpu_clock>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:50

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
   15240:	9700      	str	r7, [sp, #0]
   15242:	4601      	mov	r1, r0
   15244:	4633      	mov	r3, r6
   15246:	462a      	mov	r2, r5
   15248:	4620      	mov	r0, r4
   1524a:	f7ff fe21 	bl	14e90 <UartDev::init(unsigned int, unsigned int, int, int)>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:51
}
   1524e:	b003      	add	sp, #12
   15250:	bdf0      	pop	{r4, r5, r6, r7, pc}
   15252:	bf00      	nop
   15254:	4002c000 	.word	0x4002c000

00015258 <Uart3::Uart3()>:
_ZN5Uart3C2Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:53

Uart3::Uart3() : UartDev((unsigned int*)LPC_UART3_BASE)
   15258:	b510      	push	{r4, lr}
   1525a:	4604      	mov	r4, r0
   1525c:	4903      	ldr	r1, [pc, #12]	; (1526c <Uart3::Uart3()+0x14>)
   1525e:	f7ff fe03 	bl	14e68 <UartDev::UartDev(unsigned int*)>
   15262:	4b03      	ldr	r3, [pc, #12]	; (15270 <Uart3::Uart3()+0x18>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:56
{
    // Nothing to do here other than handing off LPC_UART3_Base address to UART_Base
}
   15264:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:53
Uart3::Uart3() : UartDev((unsigned int*)LPC_UART3_BASE)
   15266:	6023      	str	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:56
}
   15268:	bd10      	pop	{r4, pc}
   1526a:	bf00      	nop
   1526c:	4009c000 	.word	0x4009c000
   15270:	000217c0 	.word	0x000217c0

00015274 <UART3_IRQHandler>:
UART3_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:34
    {
   15274:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart3E11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   15276:	4c07      	ldr	r4, [pc, #28]	; (15294 <UART3_IRQHandler+0x20>)
   15278:	6823      	ldr	r3, [r4, #0]
   1527a:	b933      	cbnz	r3, 1528a <UART3_IRQHandler+0x16>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1527c:	202c      	movs	r0, #44	; 0x2c
   1527e:	f003 f913 	bl	184a8 <operator new(unsigned int)>
   15282:	4605      	mov	r5, r0
   15284:	f7ff ffe8 	bl	15258 <Uart3::Uart3()>
   15288:	6025      	str	r5, [r4, #0]
UART3_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:35
        Uart3::getInstance().handleInterrupt();
   1528a:	6820      	ldr	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:36
    }
   1528c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:35
        Uart3::getInstance().handleInterrupt();
   15290:	f7ff bd8a 	b.w	14da8 <UartDev::handleInterrupt()>
   15294:	2007c508 	.word	0x2007c508

00015298 <handle_eint_list>:
handle_eint_list():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:55
 * @note isr_bits_ptr are cleared if the callback was made.  If the bits are not cleared then
 *       the interrupt was set, and no callback was found.  This shouldn't happen though :)
 */
static inline void handle_eint_list(uint32_t *isr_bits_ptr, volatile uint32_t *int_clr_ptr,
                                    eint3_entry_t *list_head_ptr)
{
   15298:	b570      	push	{r4, r5, r6, lr}
   1529a:	4605      	mov	r5, r0
   1529c:	460e      	mov	r6, r1
   1529e:	4614      	mov	r4, r2
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:59
    eint3_entry_t *e = list_head_ptr;

    /* Loop through our list to find which pin triggered this interrupt */
    while (e && *isr_bits_ptr) {
   152a0:	b10c      	cbz	r4, 152a6 <handle_eint_list+0xe>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:59 (discriminator 1)
   152a2:	682b      	ldr	r3, [r5, #0]
   152a4:	b903      	cbnz	r3, 152a8 <handle_eint_list+0x10>
   152a6:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:61
        /* If we find the pin, make the callback and clear the interrupt source*/
        if (e->pin_mask & *isr_bits_ptr) {
   152a8:	6822      	ldr	r2, [r4, #0]
   152aa:	4213      	tst	r3, r2
   152ac:	d008      	beq.n	152c0 <handle_eint_list+0x28>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:62
            (e->callback)();
   152ae:	6863      	ldr	r3, [r4, #4]
   152b0:	4798      	blx	r3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:63
            *isr_bits_ptr &= ~(e->pin_mask);
   152b2:	6822      	ldr	r2, [r4, #0]
   152b4:	682b      	ldr	r3, [r5, #0]
   152b6:	ea23 0302 	bic.w	r3, r3, r2
   152ba:	602b      	str	r3, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:64
            *int_clr_ptr = e->pin_mask;
   152bc:	6823      	ldr	r3, [r4, #0]
   152be:	6033      	str	r3, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:66
        }
        e = e->next;
   152c0:	68a4      	ldr	r4, [r4, #8]
   152c2:	e7ed      	b.n	152a0 <handle_eint_list+0x8>

000152c4 <eint3_enable.isra.0>:
eint3_enable():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:114
 * @param [in] type           The type of the interrupt (rising or falling)
 * @param [in] func           The callback function.
 * @param [in] list_head_ptr  The pointer of the linked list to add the interrupt configuration to.
 * @param [in] int_en_reg_ptr The pointer of CPU register to enable the interrupt
 */
static void eint3_enable(uint8_t pin_num, eint_intr_t type, void_func_t func,
   152c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:117
                         eint3_entry_t **list_head_ptr, volatile uint32_t *int_en_reg_ptr)
{
    const uint32_t pin_mask = (UINT32_C(1) << pin_num);
   152c6:	2401      	movs	r4, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:120
    eint3_entry_t *e = NULL;

    if (0 != pin_mask && NULL != func && NULL != (e = malloc(sizeof(*e))) )
   152c8:	4084      	lsls	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:114
static void eint3_enable(uint8_t pin_num, eint_intr_t type, void_func_t func,
   152ca:	460f      	mov	r7, r1
   152cc:	4616      	mov	r6, r2
   152ce:	461d      	mov	r5, r3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:120
    if (0 != pin_mask && NULL != func && NULL != (e = malloc(sizeof(*e))) )
   152d0:	d010      	beq.n	152f4 <eint3_enable.isra.0+0x30>
   152d2:	b179      	cbz	r1, 152f4 <eint3_enable.isra.0+0x30>
   152d4:	200c      	movs	r0, #12
   152d6:	f005 fd87 	bl	1ade8 <malloc>
   152da:	b158      	cbz	r0, 152f4 <eint3_enable.isra.0+0x30>
NVIC_EnableIRQ():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   152dc:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
eint3_enable():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:125
    {
        /* Insert new entry at the head of the list */
        e->callback = func;
        e->pin_mask = pin_mask;
        e->next = *list_head_ptr;
   152e0:	6833      	ldr	r3, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:124
        e->pin_mask = pin_mask;
   152e2:	e880 0090 	stmia.w	r0, {r4, r7}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:125
        e->next = *list_head_ptr;
   152e6:	6083      	str	r3, [r0, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
        *list_head_ptr = e;

        /* Enable the interrupt */
        *int_en_reg_ptr |= e->pin_mask;
   152e8:	682b      	ldr	r3, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:126
        *list_head_ptr = e;
   152ea:	6030      	str	r0, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
        *int_en_reg_ptr |= e->pin_mask;
   152ec:	431c      	orrs	r4, r3
NVIC_EnableIRQ():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   152ee:	4b02      	ldr	r3, [pc, #8]	; (152f8 <eint3_enable.isra.0+0x34>)
eint3_enable():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
   152f0:	602c      	str	r4, [r5, #0]
NVIC_EnableIRQ():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   152f2:	601a      	str	r2, [r3, #0]
   152f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   152f6:	bf00      	nop
   152f8:	e000e100 	.word	0xe000e100

000152fc <EINT3_IRQHandler>:
EINT3_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:75
{
   152fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   152fe:	4c18      	ldr	r4, [pc, #96]	; (15360 <EINT3_IRQHandler+0x64>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   15300:	4918      	ldr	r1, [pc, #96]	; (15364 <EINT3_IRQHandler+0x68>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   15302:	6863      	ldr	r3, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   15304:	4668      	mov	r0, sp
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   15306:	9300      	str	r3, [sp, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:78
    uint32_t p0_falling = LPC_GPIOINT->IO0IntStatF;
   15308:	68a3      	ldr	r3, [r4, #8]
   1530a:	9301      	str	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:79
    uint32_t p2_rising  = LPC_GPIOINT->IO2IntStatR;
   1530c:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1530e:	9302      	str	r3, [sp, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:80
    uint32_t p2_falling = LPC_GPIOINT->IO2IntStatF;
   15310:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   15312:	9303      	str	r3, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   15314:	4b14      	ldr	r3, [pc, #80]	; (15368 <EINT3_IRQHandler+0x6c>)
   15316:	681a      	ldr	r2, [r3, #0]
   15318:	f7ff ffbe 	bl	15298 <handle_eint_list>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:86
    handle_eint_list(&p0_falling, &(LPC_GPIOINT->IO0IntClr), gp_port0_falling_list);
   1531c:	4b13      	ldr	r3, [pc, #76]	; (1536c <EINT3_IRQHandler+0x70>)
   1531e:	4911      	ldr	r1, [pc, #68]	; (15364 <EINT3_IRQHandler+0x68>)
   15320:	681a      	ldr	r2, [r3, #0]
   15322:	a801      	add	r0, sp, #4
   15324:	f7ff ffb8 	bl	15298 <handle_eint_list>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:87
    handle_eint_list(&p2_rising,  &(LPC_GPIOINT->IO2IntClr), gp_port2_rising_list);
   15328:	4b11      	ldr	r3, [pc, #68]	; (15370 <EINT3_IRQHandler+0x74>)
   1532a:	4912      	ldr	r1, [pc, #72]	; (15374 <EINT3_IRQHandler+0x78>)
   1532c:	681a      	ldr	r2, [r3, #0]
   1532e:	a802      	add	r0, sp, #8
   15330:	f7ff ffb2 	bl	15298 <handle_eint_list>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:88
    handle_eint_list(&p2_falling, &(LPC_GPIOINT->IO2IntClr), gp_port2_falling_list);
   15334:	4b10      	ldr	r3, [pc, #64]	; (15378 <EINT3_IRQHandler+0x7c>)
   15336:	490f      	ldr	r1, [pc, #60]	; (15374 <EINT3_IRQHandler+0x78>)
   15338:	681a      	ldr	r2, [r3, #0]
   1533a:	a803      	add	r0, sp, #12
   1533c:	f7ff ffac 	bl	15298 <handle_eint_list>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:91
    if (p0_rising || p0_falling) {
   15340:	9b00      	ldr	r3, [sp, #0]
   15342:	b90b      	cbnz	r3, 15348 <EINT3_IRQHandler+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:91 (discriminator 1)
   15344:	9b01      	ldr	r3, [sp, #4]
   15346:	b113      	cbz	r3, 1534e <EINT3_IRQHandler+0x52>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:92
        LPC_GPIOINT->IO0IntClr = 0xFFFFFFFF;
   15348:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1534c:	60e3      	str	r3, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:94
    if (p2_rising || p2_falling) {
   1534e:	9b02      	ldr	r3, [sp, #8]
   15350:	b90b      	cbnz	r3, 15356 <EINT3_IRQHandler+0x5a>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:94 (discriminator 1)
   15352:	9b03      	ldr	r3, [sp, #12]
   15354:	b113      	cbz	r3, 1535c <EINT3_IRQHandler+0x60>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:95
        LPC_GPIOINT->IO2IntClr = 0xFFFFFFFF;
   15356:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1535a:	62e3      	str	r3, [r4, #44]	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:97
}
   1535c:	b004      	add	sp, #16
   1535e:	bd10      	pop	{r4, pc}
   15360:	40028080 	.word	0x40028080
   15364:	4002808c 	.word	0x4002808c
   15368:	2007c510 	.word	0x2007c510
   1536c:	2007c50c 	.word	0x2007c50c
   15370:	2007c518 	.word	0x2007c518
   15374:	400280ac 	.word	0x400280ac
   15378:	2007c514 	.word	0x2007c514

0001537c <eint3_enable_port0>:
eint3_enable_port0():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:138
        NVIC_EnableIRQ(EINT3_IRQn);
    }
}

void eint3_enable_port0(uint8_t pin_num, eint_intr_t type, void_func_t func)
{
   1537c:	b410      	push	{r4}
   1537e:	4614      	mov	r4, r2
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:139
    eint3_enable(pin_num, type, func,
   15380:	2900      	cmp	r1, #0
   15382:	4a06      	ldr	r2, [pc, #24]	; (1539c <eint3_enable_port0+0x20>)
   15384:	4906      	ldr	r1, [pc, #24]	; (153a0 <eint3_enable_port0+0x24>)
   15386:	4b07      	ldr	r3, [pc, #28]	; (153a4 <eint3_enable_port0+0x28>)
   15388:	bf18      	it	ne
   1538a:	4613      	movne	r3, r2
   1538c:	4a06      	ldr	r2, [pc, #24]	; (153a8 <eint3_enable_port0+0x2c>)
   1538e:	bf18      	it	ne
   15390:	460a      	movne	r2, r1
   15392:	4621      	mov	r1, r4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:142
                 (eint_rising_edge == type) ? &gp_port0_rising_list : &gp_port0_falling_list,
                 (eint_rising_edge == type) ? &(LPC_GPIOINT->IO0IntEnR) : &(LPC_GPIOINT->IO0IntEnF));
}
   15394:	bc10      	pop	{r4}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:139
    eint3_enable(pin_num, type, func,
   15396:	f7ff bf95 	b.w	152c4 <eint3_enable.isra.0>
   1539a:	bf00      	nop
   1539c:	40028094 	.word	0x40028094
   153a0:	2007c50c 	.word	0x2007c50c
   153a4:	40028090 	.word	0x40028090
   153a8:	2007c510 	.word	0x2007c510

000153ac <lpc_timer_get_struct>:
lpc_timer_get_struct():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:52

/**
 * @returns the timer structure pointer based on the timer parameter
 */
static inline LPC_TIM_TypeDef* lpc_timer_get_struct(const lpc_timer_t timer)
{
   153ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   153ae:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:53
    const uint32_t timer_mem_bases[] = { LPC_TIM0_BASE, LPC_TIM1_BASE, LPC_TIM2_BASE, LPC_TIM3_BASE };
   153b0:	4b05      	ldr	r3, [pc, #20]	; (153c8 <lpc_timer_get_struct+0x1c>)
   153b2:	f10d 0e10 	add.w	lr, sp, #16
   153b6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   153b8:	e90e 000f 	stmdb	lr, {r0, r1, r2, r3}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:54
    return (LPC_TIM_TypeDef*) timer_mem_bases[timer];
   153bc:	eb0e 0484 	add.w	r4, lr, r4, lsl #2
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:55
}
   153c0:	f854 0c10 	ldr.w	r0, [r4, #-16]
   153c4:	b004      	add	sp, #16
   153c6:	bd10      	pop	{r4, pc}
   153c8:	000217d4 	.word	0x000217d4

000153cc <lpc_timer_enable>:
lpc_timer_enable():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:25
#include "lpc_sys.h"



void lpc_timer_enable(const lpc_timer_t timer, const uint32_t us_per_tick)
{
   153cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   153ce:	460f      	mov	r7, r1
   153d0:	4606      	mov	r6, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:26
    LPC_TIM_TypeDef *pTimerStruct = lpc_timer_get_struct(timer);
   153d2:	f7ff ffeb 	bl	153ac <lpc_timer_get_struct>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:27
    const lpc_pconp_t pconp[] = { pconp_timer0, pconp_timer1, pconp_timer2, pconp_timer3 };
   153d6:	2317      	movs	r3, #23
   153d8:	2401      	movs	r4, #1
   153da:	2216      	movs	r2, #22
   153dc:	2102      	movs	r1, #2
   153de:	f88d 3003 	strb.w	r3, [sp, #3]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   153e2:	f88d 3007 	strb.w	r3, [sp, #7]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31

    /* Power on the timer, and set the pclk = cpu clock (divide by 1) */
    lpc_pconp(pconp[timer], true);
   153e6:	ab02      	add	r3, sp, #8
   153e8:	441e      	add	r6, r3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:27
    const lpc_pconp_t pconp[] = { pconp_timer0, pconp_timer1, pconp_timer2, pconp_timer3 };
   153ea:	f88d 2002 	strb.w	r2, [sp, #2]
   153ee:	f88d 1001 	strb.w	r1, [sp, #1]
   153f2:	f88d 4000 	strb.w	r4, [sp]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:26
    LPC_TIM_TypeDef *pTimerStruct = lpc_timer_get_struct(timer);
   153f6:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   153f8:	f88d 1005 	strb.w	r1, [sp, #5]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31
    lpc_pconp(pconp[timer], true);
   153fc:	f816 0c08 	ldrb.w	r0, [r6, #-8]
   15400:	4621      	mov	r1, r4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   15402:	f88d 2006 	strb.w	r2, [sp, #6]
   15406:	f88d 4004 	strb.w	r4, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31
    lpc_pconp(pconp[timer], true);
   1540a:	f7fb f811 	bl	10430 <lpc_pconp>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:32
    lpc_pclk (pclk [timer], clkdiv_1);
   1540e:	4621      	mov	r1, r4
   15410:	f816 0c04 	ldrb.w	r0, [r6, #-4]
   15414:	f7fb f826 	bl	10464 <lpc_pclk>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:35

    /* Enable the timer, and increment on PCLK */
    pTimerStruct->TC = 0;
   15418:	2300      	movs	r3, #0
   1541a:	60ab      	str	r3, [r5, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:36
    pTimerStruct->TCR = 1;
   1541c:	606c      	str	r4, [r5, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:37
    pTimerStruct->CTCR = 0;
   1541e:	672b      	str	r3, [r5, #112]	; 0x70
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:40

    /* Set the resolution */
    pTimerStruct->PR = (sys_get_cpu_clock() / (1000*1000) * us_per_tick);
   15420:	f7fb f8ee 	bl	10600 <sys_get_cpu_clock>
   15424:	4b03      	ldr	r3, [pc, #12]	; (15434 <lpc_timer_enable+0x68>)
   15426:	fbb0 f0f3 	udiv	r0, r0, r3
   1542a:	4347      	muls	r7, r0
   1542c:	60ef      	str	r7, [r5, #12]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:41
}
   1542e:	b003      	add	sp, #12
   15430:	bdf0      	pop	{r4, r5, r6, r7, pc}
   15432:	bf00      	nop
   15434:	000f4240 	.word	0x000f4240

00015438 <ssp1_dma_init>:
ssp1_dma_init():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:47
    err_spiFifo = 3
};


void ssp1_dma_init()
{
   15438:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:49
    // Power up and enable GPDMA
    lpc_pconp(pconp_gpdma, true);
   1543a:	2101      	movs	r1, #1
   1543c:	201d      	movs	r0, #29
   1543e:	f7fa fff7 	bl	10430 <lpc_pconp>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:50
    LPC_GPDMA->DMACConfig = 1;
   15442:	2201      	movs	r2, #1
   15444:	4b02      	ldr	r3, [pc, #8]	; (15450 <ssp1_dma_init+0x18>)
   15446:	631a      	str	r2, [r3, #48]	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:51 (discriminator 1)
    while (!(LPC_GPDMA->DMACConfig & 1));
   15448:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   1544a:	07d2      	lsls	r2, r2, #31
   1544c:	d5fc      	bpl.n	15448 <ssp1_dma_init+0x10>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:52
}
   1544e:	bd08      	pop	{r3, pc}
   15450:	50004000 	.word	0x50004000

00015454 <ssp1_dma_transfer_block>:
ssp1_dma_transfer_block():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:58

unsigned ssp1_dma_transfer_block(unsigned char* pBuffer, uint32_t num_bytes, char is_write_op)
{
    uint8_t errorMask = 0;

    uint32_t dummyBuffer = 0xffffffff;
   15454:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:55
{
   15458:	b537      	push	{r0, r1, r2, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:65
                                          (LPC_GPDMACH0_BASE + SPI_DMA_RX_NUM*0x20);
    LPC_GPDMACH_TypeDef *pDmaTxChannel = (LPC_GPDMACH_TypeDef *)
                                          (LPC_GPDMACH0_BASE + SPI_DMA_TX_NUM*0x20);

    // DMA is limited to 12-bit transfer size
    if(num_bytes >= 0x1000) {
   1545a:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:58
    uint32_t dummyBuffer = 0xffffffff;
   1545e:	9301      	str	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:65
    if(num_bytes >= 0x1000) {
   15460:	d24a      	bcs.n	154f8 <ssp1_dma_transfer_block+0xa4>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:70
        errorMask |= err_Len;
        return 1;
    }
    // DMA channels should not be busy
    if( (pDmaRxChannel->DMACCConfig & 1) || (pDmaTxChannel->DMACCConfig & 1) ) {
   15462:	4b27      	ldr	r3, [pc, #156]	; (15500 <ssp1_dma_transfer_block+0xac>)
   15464:	691c      	ldr	r4, [r3, #16]
   15466:	07e5      	lsls	r5, r4, #31
   15468:	d448      	bmi.n	154fc <ssp1_dma_transfer_block+0xa8>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:70 (discriminator 1)
   1546a:	4c26      	ldr	r4, [pc, #152]	; (15504 <ssp1_dma_transfer_block+0xb0>)
   1546c:	6924      	ldr	r4, [r4, #16]
   1546e:	07e4      	lsls	r4, r4, #31
   15470:	d444      	bmi.n	154fc <ssp1_dma_transfer_block+0xa8>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:74
        errorMask |= err_busy;
        return 2;
    }
    while( LPC_SSP1->SR & (1<<2)) {
   15472:	4c25      	ldr	r4, [pc, #148]	; (15508 <ssp1_dma_transfer_block+0xb4>)
   15474:	68e5      	ldr	r5, [r4, #12]
   15476:	076d      	lsls	r5, r5, #29
   15478:	d435      	bmi.n	154e6 <ssp1_dma_transfer_block+0x92>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:130

    /**
     * Clear existing terminal count and error interrupts otherwise
     * DMA will not start.
     */
    LPC_GPDMA->DMACIntTCClear = (1 << SPI_DMA_RX_NUM) | (1 << SPI_DMA_TX_NUM);
   1547a:	2503      	movs	r5, #3
   1547c:	4c23      	ldr	r4, [pc, #140]	; (1550c <ssp1_dma_transfer_block+0xb8>)
   1547e:	60a5      	str	r5, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:131
    LPC_GPDMA->DMACIntErrClr  = (1 << SPI_DMA_RX_NUM) | (1 << SPI_DMA_TX_NUM);
   15480:	6125      	str	r5, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:142
     *      - Don't increment destination
     * For read operation:
     *      - Read data into pBuffer
     *      - Increment destination
     */
    pDmaRxChannel->DMACCSrcAddr  = (uint32_t)(&(LPC_SSP1->DR));
   15482:	4d23      	ldr	r5, [pc, #140]	; (15510 <ssp1_dma_transfer_block+0xbc>)
   15484:	601d      	str	r5, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:143
    if(is_write_op) {
   15486:	2a00      	cmp	r2, #0
   15488:	d02f      	beq.n	154ea <ssp1_dma_transfer_block+0x96>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:144
        pDmaRxChannel->DMACCDestAddr = (uint32_t)(&dummyBuffer);
   1548a:	ac01      	add	r4, sp, #4
   1548c:	605c      	str	r4, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:145
        pDmaRxChannel->DMACCControl = num_bytes | TCIE_BIT;
   1548e:	f041 4400 	orr.w	r4, r1, #2147483648	; 0x80000000
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:149
    }
    else {
        pDmaRxChannel->DMACCDestAddr = (uint32_t)pBuffer;
        pDmaRxChannel->DMACCControl = num_bytes | DST_INCR_BIT | TCIE_BIT;
   15492:	60dc      	str	r4, [r3, #12]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:151
    }
    pDmaRxChannel->DMACCLLI = 0;
   15494:	2400      	movs	r4, #0
   15496:	609c      	str	r4, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:152
    pDmaRxChannel->DMACCConfig = (SSP1_RX_CHAN << 1) | P_TO_M_BIT;
   15498:	f241 0406 	movw	r4, #4102	; 0x1006
   1549c:	611c      	str	r4, [r3, #16]
   1549e:	4c19      	ldr	r4, [pc, #100]	; (15504 <ssp1_dma_transfer_block+0xb0>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:163
     *      - Increment source data
     * For read operation:
     *      - Source data is buffer with 0xFF
     *      - Don't increment source data
     */
    if(is_write_op) {
   154a0:	b33a      	cbz	r2, 154f2 <ssp1_dma_transfer_block+0x9e>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:164
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(pBuffer);
   154a2:	6020      	str	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:165
        pDmaTxChannel->DMACCControl = num_bytes | SRC_INCR_BIT;
   154a4:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:172
    else {
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(&dummyBuffer);
        pDmaTxChannel->DMACCControl = num_bytes;
    }
    pDmaTxChannel->DMACCDestAddr = (uint32_t)(&(LPC_SSP1->DR));
    pDmaTxChannel->DMACCLLI = 0;
   154a8:	2200      	movs	r2, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:169
        pDmaTxChannel->DMACCControl = num_bytes;
   154aa:	60e1      	str	r1, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:171
    pDmaTxChannel->DMACCDestAddr = (uint32_t)(&(LPC_SSP1->DR));
   154ac:	6065      	str	r5, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:172
    pDmaTxChannel->DMACCLLI = 0;
   154ae:	60a2      	str	r2, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:173
    pDmaTxChannel->DMACCConfig = (SSP1_TX_CHAN << 6) | M_TO_P_BIT;
   154b0:	f44f 6208 	mov.w	r2, #2176	; 0x880
   154b4:	6122      	str	r2, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:179

    /**
     * Channel must be fully configured and then enabled separately.
     * Setting DMACR's Rx/Tx bits should trigger the DMA
     */
    pDmaRxChannel->DMACCConfig |= 1;
   154b6:	691a      	ldr	r2, [r3, #16]
   154b8:	f042 0201 	orr.w	r2, r2, #1
   154bc:	611a      	str	r2, [r3, #16]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:180
    pDmaTxChannel->DMACCConfig |= 1;
   154be:	6922      	ldr	r2, [r4, #16]
   154c0:	f042 0201 	orr.w	r2, r2, #1
   154c4:	6122      	str	r2, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:181
    LPC_SSP1->DMACR |= 3; // RX: B0, TX: B1
   154c6:	4a10      	ldr	r2, [pc, #64]	; (15508 <ssp1_dma_transfer_block+0xb4>)
   154c8:	6a51      	ldr	r1, [r2, #36]	; 0x24
   154ca:	f041 0103 	orr.w	r1, r1, #3
   154ce:	6251      	str	r1, [r2, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:183 (discriminator 1)

    while( (pDmaRxChannel->DMACCControl & 0xfff) );
   154d0:	68d8      	ldr	r0, [r3, #12]
   154d2:	f3c0 000b 	ubfx	r0, r0, #0, #12
   154d6:	2800      	cmp	r0, #0
   154d8:	d1fa      	bne.n	154d0 <ssp1_dma_transfer_block+0x7c>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:184
    LPC_SSP1->DMACR &= ~3;
   154da:	6a53      	ldr	r3, [r2, #36]	; 0x24
   154dc:	f023 0303 	bic.w	r3, r3, #3
   154e0:	6253      	str	r3, [r2, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:187

    return 0;
}
   154e2:	b003      	add	sp, #12
   154e4:	bd30      	pop	{r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:76
        char dummy = LPC_SSP1->DR;
   154e6:	68a5      	ldr	r5, [r4, #8]
   154e8:	e7c4      	b.n	15474 <ssp1_dma_transfer_block+0x20>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:148
        pDmaRxChannel->DMACCDestAddr = (uint32_t)pBuffer;
   154ea:	6058      	str	r0, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:149
        pDmaRxChannel->DMACCControl = num_bytes | DST_INCR_BIT | TCIE_BIT;
   154ec:	f041 4408 	orr.w	r4, r1, #2281701376	; 0x88000000
   154f0:	e7cf      	b.n	15492 <ssp1_dma_transfer_block+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:168
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(&dummyBuffer);
   154f2:	aa01      	add	r2, sp, #4
   154f4:	6022      	str	r2, [r4, #0]
   154f6:	e7d7      	b.n	154a8 <ssp1_dma_transfer_block+0x54>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:67
        return 1;
   154f8:	2001      	movs	r0, #1
   154fa:	e7f2      	b.n	154e2 <ssp1_dma_transfer_block+0x8e>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:72
        return 2;
   154fc:	2002      	movs	r0, #2
   154fe:	e7f0      	b.n	154e2 <ssp1_dma_transfer_block+0x8e>
   15500:	50004120 	.word	0x50004120
   15504:	50004100 	.word	0x50004100
   15508:	40030000 	.word	0x40030000
   1550c:	50004000 	.word	0x50004000
   15510:	40030008 	.word	0x40030008

00015514 <Uart2::~Uart2()>:
_ZN5Uart2D2Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/uart2.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart2 : public UartDev, public SingletonTemplate<Uart2>
   15514:	b510      	push	{r4, lr}
   15516:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
   15518:	4b02      	ldr	r3, [pc, #8]	; (15524 <Uart2::~Uart2()+0x10>)
   1551a:	6003      	str	r3, [r0, #0]
   1551c:	f7ff fd70 	bl	15000 <CharDev::~CharDev()>
_ZN5Uart2D2Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/uart2.hpp:39
   15520:	4620      	mov	r0, r4
   15522:	bd10      	pop	{r4, pc}
   15524:	000216c0 	.word	0x000216c0

00015528 <Uart2::~Uart2()>:
_ZN5Uart2D0Ev():
   15528:	b510      	push	{r4, lr}
   1552a:	4604      	mov	r4, r0
   1552c:	f7ff fff2 	bl	15514 <Uart2::~Uart2()>
   15530:	4620      	mov	r0, r4
   15532:	212c      	movs	r1, #44	; 0x2c
   15534:	f003 fd57 	bl	18fe6 <operator delete(void*, unsigned int)>
   15538:	4620      	mov	r0, r4
   1553a:	bd10      	pop	{r4, pc}

0001553c <Uart2::Uart2()>:
_ZN5Uart2C2Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:54
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart2::Uart2() : UartDev((unsigned int*)LPC_UART2_BASE)
   1553c:	b510      	push	{r4, lr}
   1553e:	4604      	mov	r4, r0
   15540:	4903      	ldr	r1, [pc, #12]	; (15550 <Uart2::Uart2()+0x14>)
   15542:	f7ff fc91 	bl	14e68 <UartDev::UartDev(unsigned int*)>
   15546:	4b03      	ldr	r3, [pc, #12]	; (15554 <Uart2::Uart2()+0x18>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:57
{
    // Nothing to do here other than handing off LPC_UART2_Base address to UART_Base
}
   15548:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:54
Uart2::Uart2() : UartDev((unsigned int*)LPC_UART2_BASE)
   1554a:	6023      	str	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:57
}
   1554c:	bd10      	pop	{r4, pc}
   1554e:	bf00      	nop
   15550:	40098000 	.word	0x40098000
   15554:	00021838 	.word	0x00021838

00015558 <UART2_IRQHandler>:
UART2_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:34
    {
   15558:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart2E11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1555a:	4c07      	ldr	r4, [pc, #28]	; (15578 <UART2_IRQHandler+0x20>)
   1555c:	6823      	ldr	r3, [r4, #0]
   1555e:	b933      	cbnz	r3, 1556e <UART2_IRQHandler+0x16>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   15560:	202c      	movs	r0, #44	; 0x2c
   15562:	f002 ffa1 	bl	184a8 <operator new(unsigned int)>
   15566:	4605      	mov	r5, r0
   15568:	f7ff ffe8 	bl	1553c <Uart2::Uart2()>
   1556c:	6025      	str	r5, [r4, #0]
UART2_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:35
        Uart2::getInstance().handleInterrupt();
   1556e:	6820      	ldr	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:36
    }
   15570:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:35
        Uart2::getInstance().handleInterrupt();
   15574:	f7ff bc18 	b.w	14da8 <UartDev::handleInterrupt()>
   15578:	2007c51c 	.word	0x2007c51c

0001557c <adc0_start_conversion>:
adc0_start_conversion():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:91
    const uint32_t start_conversion = (1 << 24);
    const uint32_t channel_masks = 0xFF;
    const uint32_t start_conversion_masks = (7 << 24); // Clear B26:B25:B24

    // Clear previously selected channel
    LPC_ADC->ADCR &= ~(channel_masks | start_conversion_masks);
   1557c:	4a07      	ldr	r2, [pc, #28]	; (1559c <adc0_start_conversion+0x20>)
   1557e:	6813      	ldr	r3, [r2, #0]
   15580:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
   15584:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
   15588:	6013      	str	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:94

    // Set the channel number and start the conversion now
    LPC_ADC->ADCR |= (1 << channel_num) | start_conversion;
   1558a:	2301      	movs	r3, #1
   1558c:	6811      	ldr	r1, [r2, #0]
   1558e:	fa03 f000 	lsl.w	r0, r3, r0
   15592:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   15596:	4308      	orrs	r0, r1
   15598:	6010      	str	r0, [r2, #0]
   1559a:	4770      	bx	lr
   1559c:	40034000 	.word	0x40034000

000155a0 <ADC_IRQHandler>:
ADC_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:46
    BaseType_t switch_required = 0;
   155a0:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:44
{
   155a2:	b507      	push	{r0, r1, r2, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   155a4:	4a0d      	ldr	r2, [pc, #52]	; (155dc <ADC_IRQHandler+0x3c>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:46
    BaseType_t switch_required = 0;
   155a6:	9301      	str	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   155a8:	6852      	ldr	r2, [r2, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:49
    xQueueSendFromISR(g_adc_result_queue, &result, &switch_required);
   155aa:	480d      	ldr	r0, [pc, #52]	; (155e0 <ADC_IRQHandler+0x40>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   155ac:	f3c2 120b 	ubfx	r2, r2, #4, #12
   155b0:	f8ad 2002 	strh.w	r2, [sp, #2]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:49
    xQueueSendFromISR(g_adc_result_queue, &result, &switch_required);
   155b4:	f10d 0102 	add.w	r1, sp, #2
   155b8:	aa01      	add	r2, sp, #4
   155ba:	6800      	ldr	r0, [r0, #0]
   155bc:	f001 f9a4 	bl	16908 <xQueueGenericSendFromISR>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:51
    portEND_SWITCHING_ISR(switch_required);
   155c0:	9b01      	ldr	r3, [sp, #4]
   155c2:	b13b      	cbz	r3, 155d4 <ADC_IRQHandler+0x34>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:51 (discriminator 1)
   155c4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   155c8:	4b06      	ldr	r3, [pc, #24]	; (155e4 <ADC_IRQHandler+0x44>)
   155ca:	601a      	str	r2, [r3, #0]
   155cc:	f3bf 8f4f 	dsb	sy
   155d0:	f3bf 8f6f 	isb	sy
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:52
}
   155d4:	b003      	add	sp, #12
   155d6:	f85d fb04 	ldr.w	pc, [sp], #4
   155da:	bf00      	nop
   155dc:	40034000 	.word	0x40034000
   155e0:	2007c524 	.word	0x2007c524
   155e4:	e000ed04 	.word	0xe000ed04

000155e8 <adc0_init>:
adc0_init():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:55
{
   155e8:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:58
    const uint32_t adc_clock = (sys_get_cpu_clock() / 8);  // We configure ADC clock = CPU/8
   155ea:	f7fb f809 	bl	10600 <sys_get_cpu_clock>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:61
    lpc_pconp(pconp_adc, true);
   155ee:	2101      	movs	r1, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:58
    const uint32_t adc_clock = (sys_get_cpu_clock() / 8);  // We configure ADC clock = CPU/8
   155f0:	08c4      	lsrs	r4, r0, #3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:61
    lpc_pconp(pconp_adc, true);
   155f2:	200c      	movs	r0, #12
   155f4:	f7fa ff1c 	bl	10430 <lpc_pconp>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:62
    lpc_pclk(pclk_adc, clkdiv_8);
   155f8:	2103      	movs	r1, #3
   155fa:	200c      	movs	r0, #12
   155fc:	f7fa ff32 	bl	10464 <lpc_pclk>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:63
    LPC_ADC->ADCR = enable_adc_bitmask;
   15600:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
   15604:	4a10      	ldr	r2, [pc, #64]	; (15648 <adc0_init+0x60>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:67
        if( (adc_clock / i) < max_adc_clock) {
   15606:	4911      	ldr	r1, [pc, #68]	; (1564c <adc0_init+0x64>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:63
    LPC_ADC->ADCR = enable_adc_bitmask;
   15608:	6013      	str	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:66
    for(i=2; i < 255; i+=2) {
   1560a:	2302      	movs	r3, #2
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:67
        if( (adc_clock / i) < max_adc_clock) {
   1560c:	fbb4 f0f3 	udiv	r0, r4, r3
   15610:	4288      	cmp	r0, r1
   15612:	d814      	bhi.n	1563e <adc0_init+0x56>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:68
            LPC_ADC->ADCR |= (i << 8);
   15614:	6811      	ldr	r1, [r2, #0]
   15616:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
   1561a:	6013      	str	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:73
    g_adc_mutex = xSemaphoreCreateMutex();
   1561c:	2001      	movs	r0, #1
   1561e:	f001 f961 	bl	168e4 <xQueueCreateMutex>
   15622:	4b0b      	ldr	r3, [pc, #44]	; (15650 <adc0_init+0x68>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
    g_adc_result_queue = xQueueCreate(1, sizeof(uint16_t));
   15624:	2200      	movs	r2, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:73
    g_adc_mutex = xSemaphoreCreateMutex();
   15626:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
    g_adc_result_queue = xQueueCreate(1, sizeof(uint16_t));
   15628:	2102      	movs	r1, #2
   1562a:	2001      	movs	r0, #1
   1562c:	f001 f8b6 	bl	1679c <xQueueGenericCreate>
NVIC_EnableIRQ():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   15630:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
adc0_init():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
   15634:	4b07      	ldr	r3, [pc, #28]	; (15654 <adc0_init+0x6c>)
   15636:	6018      	str	r0, [r3, #0]
NVIC_EnableIRQ():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   15638:	4b07      	ldr	r3, [pc, #28]	; (15658 <adc0_init+0x70>)
   1563a:	601a      	str	r2, [r3, #0]
   1563c:	bd10      	pop	{r4, pc}
adc0_init():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:66 (discriminator 2)
    for(i=2; i < 255; i+=2) {
   1563e:	3302      	adds	r3, #2
   15640:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   15644:	d1e2      	bne.n	1560c <adc0_init+0x24>
   15646:	e7e9      	b.n	1561c <adc0_init+0x34>
   15648:	40034000 	.word	0x40034000
   1564c:	00c65d3f 	.word	0x00c65d3f
   15650:	2007c520 	.word	0x2007c520
   15654:	2007c524 	.word	0x2007c524
   15658:	e000e100 	.word	0xe000e100

0001565c <adc0_get_reading>:
adc0_get_reading():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:98
}

uint16_t adc0_get_reading(uint8_t channel_num)
{
   1565c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:99
    uint16_t result = 0;
   1565e:	2400      	movs	r4, #0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:102
    const uint8_t max_channels = 8;

    if (channel_num >= max_channels) {
   15660:	2807      	cmp	r0, #7
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:98
{
   15662:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:99
    uint16_t result = 0;
   15664:	f8ad 4006 	strh.w	r4, [sp, #6]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:102
    if (channel_num >= max_channels) {
   15668:	d81d      	bhi.n	156a6 <adc0_get_reading+0x4a>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:105
        result = 0;
    }
    else if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   1566a:	f001 ff01 	bl	17470 <xTaskGetSchedulerState>
   1566e:	2802      	cmp	r0, #2
   15670:	4e15      	ldr	r6, [pc, #84]	; (156c8 <adc0_get_reading+0x6c>)
   15672:	d11c      	bne.n	156ae <adc0_get_reading+0x52>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:107
    {
        xSemaphoreTake(g_adc_mutex, portMAX_DELAY);
   15674:	4f15      	ldr	r7, [pc, #84]	; (156cc <adc0_get_reading+0x70>)
   15676:	4623      	mov	r3, r4
   15678:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1567c:	4621      	mov	r1, r4
   1567e:	6838      	ldr	r0, [r7, #0]
   15680:	f001 f9b6 	bl	169f0 <xQueueGenericReceive>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:109
        {
            adc0_start_conversion(channel_num);
   15684:	4628      	mov	r0, r5
   15686:	f7ff ff79 	bl	1557c <adc0_start_conversion>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:110
            xQueueReceive(g_adc_result_queue, &result, portMAX_DELAY);
   1568a:	4623      	mov	r3, r4
   1568c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15690:	f10d 0106 	add.w	r1, sp, #6
   15694:	6830      	ldr	r0, [r6, #0]
   15696:	f001 f9ab 	bl	169f0 <xQueueGenericReceive>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:112
        }
        xSemaphoreGive(g_adc_mutex);
   1569a:	4623      	mov	r3, r4
   1569c:	4622      	mov	r2, r4
   1569e:	4621      	mov	r1, r4
   156a0:	6838      	ldr	r0, [r7, #0]
   156a2:	f001 f89d 	bl	167e0 <xQueueGenericSend>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:124
            ;
        }
    }

    return result;
}
   156a6:	f8bd 0006 	ldrh.w	r0, [sp, #6]
   156aa:	b003      	add	sp, #12
   156ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:116
        adc0_start_conversion(channel_num);
   156ae:	4628      	mov	r0, r5
   156b0:	f7ff ff64 	bl	1557c <adc0_start_conversion>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:117 (discriminator 1)
        while(! xQueueReceive(g_adc_result_queue, &result, 0))
   156b4:	2300      	movs	r3, #0
   156b6:	f10d 0106 	add.w	r1, sp, #6
   156ba:	461a      	mov	r2, r3
   156bc:	6830      	ldr	r0, [r6, #0]
   156be:	f001 f997 	bl	169f0 <xQueueGenericReceive>
   156c2:	2800      	cmp	r0, #0
   156c4:	d0f6      	beq.n	156b4 <adc0_get_reading+0x58>
   156c6:	e7ee      	b.n	156a6 <adc0_get_reading+0x4a>
   156c8:	2007c524 	.word	0x2007c524
   156cc:	2007c520 	.word	0x2007c520

000156d0 <rtc_gettime>:
rtc_gettime():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:56
        rtc_settime(&time);
    }
}

rtc_t rtc_gettime (void)
{
   156d0:	b5f0      	push	{r4, r5, r6, r7, lr}
   156d2:	b087      	sub	sp, #28
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:58
    // Read the struct from LPC Memory Map
    rtc_t t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   156d4:	466c      	mov	r4, sp
   156d6:	4d0f      	ldr	r5, [pc, #60]	; (15714 <rtc_gettime+0x44>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:56
{
   156d8:	4607      	mov	r7, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:58
    rtc_t t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   156da:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   156de:	e88d 0007 	stmia.w	sp, {r0, r1, r2}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:59
    rtc_t t2 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   156e2:	ae03      	add	r6, sp, #12
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:65

    // Two times read must be the same to make sure we don't read
    // the different registers in the middle of time update.
    while (0 != memcmp(&t1, &t2, sizeof(t1))) {
        t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
        t2 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   156e4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   156e8:	e886 0007 	stmia.w	r6, {r0, r1, r2}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:63
    while (0 != memcmp(&t1, &t2, sizeof(t1))) {
   156ec:	220c      	movs	r2, #12
   156ee:	4631      	mov	r1, r6
   156f0:	4620      	mov	r0, r4
   156f2:	f005 fba9 	bl	1ae48 <memcmp>
   156f6:	b938      	cbnz	r0, 15708 <rtc_gettime+0x38>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:68
    }

    return t1;
   156f8:	cc03      	ldmia	r4!, {r0, r1}
   156fa:	6038      	str	r0, [r7, #0]
   156fc:	6820      	ldr	r0, [r4, #0]
   156fe:	6079      	str	r1, [r7, #4]
   15700:	60b8      	str	r0, [r7, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:69
}
   15702:	4638      	mov	r0, r7
   15704:	b007      	add	sp, #28
   15706:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:64
        t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   15708:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   1570c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   15710:	e7e8      	b.n	156e4 <rtc_gettime+0x14>
   15712:	bf00      	nop
   15714:	40024014 	.word	0x40024014

00015718 <rtc_settime>:
rtc_settime():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:74

void rtc_settime (const rtc_t *rtc)
{
    /* Disable the RTC first */
    LPC_RTC->CCR = 0;
   15718:	2200      	movs	r2, #0
   1571a:	4b18      	ldr	r3, [pc, #96]	; (1577c <rtc_settime+0x64>)
   1571c:	721a      	strb	r2, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:80

    /*
     * Update RTC registers :
     * Note: Cannot write to consolidated registers since they are read-only
     */
    LPC_RTC->SEC   = rtc->sec;
   1571e:	7802      	ldrb	r2, [r0, #0]
   15720:	f3c2 0205 	ubfx	r2, r2, #0, #6
   15724:	f883 2020 	strb.w	r2, [r3, #32]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:81
	LPC_RTC->MIN   = rtc->min;
   15728:	7842      	ldrb	r2, [r0, #1]
   1572a:	f3c2 0205 	ubfx	r2, r2, #0, #6
   1572e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:82
	LPC_RTC->HOUR  = rtc->hour;
   15732:	7882      	ldrb	r2, [r0, #2]
   15734:	f3c2 0204 	ubfx	r2, r2, #0, #5
   15738:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:83
	LPC_RTC->DOW   = rtc->dow;
   1573c:	78c2      	ldrb	r2, [r0, #3]
   1573e:	f3c2 0202 	ubfx	r2, r2, #0, #3
   15742:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:84
	LPC_RTC->DOM   = rtc->day;
   15746:	7902      	ldrb	r2, [r0, #4]
   15748:	f3c2 0204 	ubfx	r2, r2, #0, #5
   1574c:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:85
	LPC_RTC->MONTH = rtc->month;
   15750:	7942      	ldrb	r2, [r0, #5]
   15752:	f3c2 0203 	ubfx	r2, r2, #0, #4
   15756:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:86
	LPC_RTC->YEAR  = rtc->year;
   1575a:	79c1      	ldrb	r1, [r0, #7]
   1575c:	7982      	ldrb	r2, [r0, #6]
   1575e:	f001 010f 	and.w	r1, r1, #15
   15762:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:87
	LPC_RTC->DOY   = rtc->doy;
   15766:	7a41      	ldrb	r1, [r0, #9]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:86
	LPC_RTC->YEAR  = rtc->year;
   15768:	879a      	strh	r2, [r3, #60]	; 0x3c
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:87
	LPC_RTC->DOY   = rtc->doy;
   1576a:	7a02      	ldrb	r2, [r0, #8]
   1576c:	f001 010f 	and.w	r1, r1, #15
   15770:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   15774:	869a      	strh	r2, [r3, #52]	; 0x34
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:90

	/* Restart RTC */
	LPC_RTC->CCR = 1;
   15776:	2201      	movs	r2, #1
   15778:	721a      	strb	r2, [r3, #8]
   1577a:	4770      	bx	lr
   1577c:	40024000 	.word	0x40024000

00015780 <rtc_init>:
rtc_init():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:30
{
   15780:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:31
    lpc_pconp(pconp_rtc, true);
   15782:	2101      	movs	r1, #1
   15784:	2009      	movs	r0, #9
   15786:	f7fa fe53 	bl	10430 <lpc_pconp>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:32
    LPC_RTC->CCR = 1;           // Enable RTC
   1578a:	2201      	movs	r2, #1
   1578c:	4b2f      	ldr	r3, [pc, #188]	; (1584c <rtc_init+0xcc>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:35
    rtc_t time = rtc_gettime();
   1578e:	a801      	add	r0, sp, #4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:32
    LPC_RTC->CCR = 1;           // Enable RTC
   15790:	721a      	strb	r2, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:35
    rtc_t time = rtc_gettime();
   15792:	f7ff ff9d 	bl	156d0 <rtc_gettime>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:38
    if(time.year < years[0] || time.year > years[1] ||
   15796:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   1579a:	f603 0326 	addw	r3, r3, #2086	; 0x826
   1579e:	f3c3 030b 	ubfx	r3, r3, #0, #12
   157a2:	2b0f      	cmp	r3, #15
   157a4:	d81e      	bhi.n	157e4 <rtc_init+0x64>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 2)
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   157a6:	f89d 3005 	ldrb.w	r3, [sp, #5]
   157aa:	f003 033f 	and.w	r3, r3, #63	; 0x3f
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:38 (discriminator 2)
    if(time.year < years[0] || time.year > years[1] ||
   157ae:	2b3b      	cmp	r3, #59	; 0x3b
   157b0:	dc18      	bgt.n	157e4 <rtc_init+0x64>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   157b2:	f89d 3004 	ldrb.w	r3, [sp, #4]
   157b6:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   157ba:	2b3b      	cmp	r3, #59	; 0x3b
   157bc:	dc12      	bgt.n	157e4 <rtc_init+0x64>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 1)
   157be:	f89d 3006 	ldrb.w	r3, [sp, #6]
   157c2:	f003 031f 	and.w	r3, r3, #31
   157c6:	2b17      	cmp	r3, #23
   157c8:	dc0c      	bgt.n	157e4 <rtc_init+0x64>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:40 (discriminator 2)
       time.doy > 365 || time.month > 12 || time.day > 31)
   157ca:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   157ce:	f3c3 030b 	ubfx	r3, r3, #0, #12
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 2)
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   157d2:	f5b3 7fb7 	cmp.w	r3, #366	; 0x16e
   157d6:	da05      	bge.n	157e4 <rtc_init+0x64>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:40
       time.doy > 365 || time.month > 12 || time.day > 31)
   157d8:	f89d 3009 	ldrb.w	r3, [sp, #9]
   157dc:	f003 030f 	and.w	r3, r3, #15
   157e0:	2b0c      	cmp	r3, #12
   157e2:	dd2f      	ble.n	15844 <rtc_init+0xc4>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:42
        time.day = 1;
   157e4:	2201      	movs	r2, #1
   157e6:	f89d 3008 	ldrb.w	r3, [sp, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:51
        rtc_settime(&time);
   157ea:	a801      	add	r0, sp, #4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:42
        time.day = 1;
   157ec:	f362 0304 	bfi	r3, r2, #0, #5
   157f0:	f88d 3008 	strb.w	r3, [sp, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:43
        time.month = 1;
   157f4:	f89d 3009 	ldrb.w	r3, [sp, #9]
   157f8:	f362 0303 	bfi	r3, r2, #0, #4
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:44
        time.year = years[0];
   157fc:	f240 72da 	movw	r2, #2010	; 0x7da
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:43
        time.month = 1;
   15800:	f88d 3009 	strb.w	r3, [sp, #9]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:44
        time.year = years[0];
   15804:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   15808:	f362 030b 	bfi	r3, r2, #0, #12
   1580c:	f8ad 300a 	strh.w	r3, [sp, #10]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:46
        time.dow  = 0;
   15810:	f89d 3007 	ldrb.w	r3, [sp, #7]
   15814:	f36f 0302 	bfc	r3, #0, #3
   15818:	f88d 3007 	strb.w	r3, [sp, #7]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:47
        time.hour = 0;
   1581c:	f89d 3006 	ldrb.w	r3, [sp, #6]
   15820:	f36f 0304 	bfc	r3, #0, #5
   15824:	f88d 3006 	strb.w	r3, [sp, #6]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:48
        time.min  = 0;
   15828:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1582c:	f36f 0305 	bfc	r3, #0, #6
   15830:	f88d 3005 	strb.w	r3, [sp, #5]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:49
        time.sec  = 0;
   15834:	f89d 3004 	ldrb.w	r3, [sp, #4]
   15838:	f36f 0305 	bfc	r3, #0, #6
   1583c:	f88d 3004 	strb.w	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:51
        rtc_settime(&time);
   15840:	f7ff ff6a 	bl	15718 <rtc_settime>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:53
}
   15844:	b005      	add	sp, #20
   15846:	f85d fb04 	ldr.w	pc, [sp], #4
   1584a:	bf00      	nop
   1584c:	40024000 	.word	0x40024000

00015850 <I2C2::init(unsigned int)>:
_ZN4I2C24initEj():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:41
}



bool I2C2::init(unsigned int speedInKhz)
{
   15850:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
     * means that they are pulled high, otherwise there may be a short circuit.
     *
     * I2C2 is on P0.10, and P0.11
     */
    const uint32_t i2c_pin_mask = ( (1<<10) | (1<<11) );
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   15852:	4b18      	ldr	r3, [pc, #96]	; (158b4 <I2C2::init(unsigned int)+0x64>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:41
{
   15854:	460e      	mov	r6, r1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   15856:	695c      	ldr	r4, [r3, #20]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51

    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   15858:	4b17      	ldr	r3, [pc, #92]	; (158b8 <I2C2::init(unsigned int)+0x68>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:41
{
   1585a:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51
    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   1585c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:60
    LPC_PINCON->PINMODE_OD0 |= i2c_pin_mask;

    LPC_PINCON->PINSEL0 &= ~(0xF << 20);  // Clear
    LPC_PINCON->PINSEL0 |=  (0xA << 20);  // Enable I2C Pins: SDA, SCL

    lpc_pclk(pclk_i2c2, clkdiv_8);
   1585e:	201a      	movs	r0, #26
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51
    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   15860:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
   15864:	641a      	str	r2, [r3, #64]	; 0x40
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:52
    LPC_PINCON->PINMODE0 |=  (0xA << 20); // Disable both pull-up and pull-down
   15866:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   15868:	f404 6440 	and.w	r4, r4, #3072	; 0xc00
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:52
    LPC_PINCON->PINMODE0 |=  (0xA << 20); // Disable both pull-up and pull-down
   1586c:	f442 0220 	orr.w	r2, r2, #10485760	; 0xa00000
   15870:	641a      	str	r2, [r3, #64]	; 0x40
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:55
    LPC_PINCON->PINMODE_OD0 |= i2c_pin_mask;
   15872:	6e99      	ldr	r1, [r3, #104]	; 0x68
   15874:	f441 6140 	orr.w	r1, r1, #3072	; 0xc00
   15878:	6699      	str	r1, [r3, #104]	; 0x68
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:57
    LPC_PINCON->PINSEL0 &= ~(0xF << 20);  // Clear
   1587a:	6819      	ldr	r1, [r3, #0]
   1587c:	f421 0170 	bic.w	r1, r1, #15728640	; 0xf00000
   15880:	6019      	str	r1, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:58
    LPC_PINCON->PINSEL0 |=  (0xA << 20);  // Enable I2C Pins: SDA, SCL
   15882:	6819      	ldr	r1, [r3, #0]
   15884:	f441 0120 	orr.w	r1, r1, #10485760	; 0xa00000
   15888:	6019      	str	r1, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:60
    lpc_pclk(pclk_i2c2, clkdiv_8);
   1588a:	2103      	movs	r1, #3
   1588c:	f7fa fdea 	bl	10464 <lpc_pclk>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:61
    const uint32_t pclk = sys_get_cpu_clock() / 8;
   15890:	f7fa feb6 	bl	10600 <sys_get_cpu_clock>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:69
     * I2C wires should be pulled high for normal operation, so if they are, initialize I2C
     * otherwise disable operations on I2C since I2C has a likely hardware BUS fault such as:
     *  - I2C SDA/SCL with no pull-up
     *  - I2C SDA/SCL shorted to ground
     */
    if (i2c_wires_are_pulled_high) {
   15894:	f5b4 6f40 	cmp.w	r4, #3072	; 0xc00
   15898:	d106      	bne.n	158a8 <I2C2::init(unsigned int)+0x58>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:70
        return I2C_Base::init(pclk, speedInKhz);
   1589a:	4632      	mov	r2, r6
   1589c:	08c1      	lsrs	r1, r0, #3
   1589e:	4628      	mov	r0, r5
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
    }
    else {
        disableOperation();
        return false;
    }
}
   158a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:70
        return I2C_Base::init(pclk, speedInKhz);
   158a4:	f7ff b8de 	b.w	14a64 <I2C_Base::init(unsigned long, unsigned long)>
_ZN8I2C_Base16disableOperationEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.hpp:139
        /**
         * Disables I2C operation
         * This can be used to disable all I2C operations in case of severe I2C Bus Failure
         * @warning Once disabled, I2C cannot be enabled again
         */
        void disableOperation() { mDisableOperation = true; }
   158a8:	2301      	movs	r3, #1
_ZN4I2C24initEj():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
}
   158aa:	2000      	movs	r0, #0
_ZN8I2C_Base16disableOperationEv():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.hpp:139
   158ac:	f885 3105 	strb.w	r3, [r5, #261]	; 0x105
_ZN4I2C24initEj():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
   158b0:	bd70      	pop	{r4, r5, r6, pc}
   158b2:	bf00      	nop
   158b4:	2009c000 	.word	0x2009c000
   158b8:	4002c000 	.word	0x4002c000

000158bc <I2C2::I2C2()>:
_ZN4I2C2C2Ev():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:83
__attribute__ ((weak)) bool I2C2::initSlave(const uint8_t slaveAddr, uint8_t * buffer, uint32_t buffer_size)
{
    return false;
}

I2C2::I2C2() : I2C_Base((LPC_I2C_TypeDef*) LPC_I2C2_BASE)
   158bc:	b510      	push	{r4, lr}
   158be:	4604      	mov	r4, r0
   158c0:	4902      	ldr	r1, [pc, #8]	; (158cc <I2C2::I2C2()+0x10>)
   158c2:	f7ff f8a1 	bl	14a08 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:86
{

}
   158c6:	4620      	mov	r0, r4
   158c8:	bd10      	pop	{r4, pc}
   158ca:	bf00      	nop
   158cc:	400a0000 	.word	0x400a0000

000158d0 <I2C2_IRQHandler>:
I2C2_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:33
    {
   158d0:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   158d2:	4c08      	ldr	r4, [pc, #32]	; (158f4 <I2C2_IRQHandler+0x24>)
   158d4:	6823      	ldr	r3, [r4, #0]
   158d6:	b93b      	cbnz	r3, 158e8 <I2C2_IRQHandler+0x18>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   158d8:	f44f 7094 	mov.w	r0, #296	; 0x128
   158dc:	f002 fde4 	bl	184a8 <operator new(unsigned int)>
   158e0:	4605      	mov	r5, r0
   158e2:	f7ff ffeb 	bl	158bc <I2C2::I2C2()>
   158e6:	6025      	str	r5, [r4, #0]
I2C2_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:34
        I2C2::getInstance().handleInterrupt();
   158e8:	6820      	ldr	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:35
    }
   158ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:34
        I2C2::getInstance().handleInterrupt();
   158ee:	f7ff b99d 	b.w	14c2c <I2C_Base::handleInterrupt()>
   158f2:	bf00      	nop
   158f4:	2007c528 	.word	0x2007c528

000158f8 <tlm_component_find_by_name>:
tlm_component_find_by_name():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:29

/** Private member of this file */
static c_list_ptr mp_tlm_component_list = NULL;

static bool tlm_component_find_by_name(void *elm_ptr, void *arg1, void *arg2, void *arg3)
{
   158f8:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:32
    tlm_component *comp = elm_ptr;
    char *new_comp_name = arg1;
    return (0 != strcmp(comp->name, new_comp_name));
   158fa:	6800      	ldr	r0, [r0, #0]
   158fc:	f006 ffeb 	bl	1c8d6 <strcmp>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:33
}
   15900:	3000      	adds	r0, #0
   15902:	bf18      	it	ne
   15904:	2001      	movne	r0, #1
   15906:	bd08      	pop	{r3, pc}

00015908 <tlm_component_get_by_name>:
tlm_component_get_by_name():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:85

    return new_comp;
}

tlm_component* tlm_component_get_by_name(const char *name)
{
   15908:	b507      	push	{r0, r1, r2, lr}
   1590a:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:88
    tlm_component *comp = NULL;

    if (NULL != name) {
   1590c:	b130      	cbz	r0, 1591c <tlm_component_get_by_name+0x14>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:89
        comp = c_list_find_elm(mp_tlm_component_list, tlm_component_find_by_name,
   1590e:	4602      	mov	r2, r0
   15910:	4804      	ldr	r0, [pc, #16]	; (15924 <tlm_component_get_by_name+0x1c>)
   15912:	9300      	str	r3, [sp, #0]
   15914:	4904      	ldr	r1, [pc, #16]	; (15928 <tlm_component_get_by_name+0x20>)
   15916:	6800      	ldr	r0, [r0, #0]
   15918:	f000 fb6a 	bl	15ff0 <c_list_find_elm>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:94
                               (void*)name, NULL, NULL);
    }

    return comp;
}
   1591c:	b003      	add	sp, #12
   1591e:	f85d fb04 	ldr.w	pc, [sp], #4
   15922:	bf00      	nop
   15924:	2007c52c 	.word	0x2007c52c
   15928:	000158f9 	.word	0x000158f9

0001592c <tlm_component_add>:
tlm_component_add():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:44
{
   1592c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:45
    if (NULL == name || *name == '\0') {
   1592e:	4606      	mov	r6, r0
   15930:	b910      	cbnz	r0, 15938 <tlm_component_add+0xc>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:46
        return NULL;
   15932:	2400      	movs	r4, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:82
}
   15934:	4620      	mov	r0, r4
   15936:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:45 (discriminator 1)
    if (NULL == name || *name == '\0') {
   15938:	7803      	ldrb	r3, [r0, #0]
   1593a:	2b00      	cmp	r3, #0
   1593c:	d0f9      	beq.n	15932 <tlm_component_add+0x6>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:50
    if(NULL == mp_tlm_component_list) {
   1593e:	4d15      	ldr	r5, [pc, #84]	; (15994 <tlm_component_add+0x68>)
   15940:	682b      	ldr	r3, [r5, #0]
   15942:	b913      	cbnz	r3, 1594a <tlm_component_add+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:51
        mp_tlm_component_list = c_list_create();
   15944:	f000 fb2e 	bl	15fa4 <c_list_create>
   15948:	6028      	str	r0, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:55
    if (NULL != tlm_component_get_by_name(name)) {
   1594a:	4630      	mov	r0, r6
   1594c:	f7ff ffdc 	bl	15908 <tlm_component_get_by_name>
   15950:	4607      	mov	r7, r0
   15952:	2800      	cmp	r0, #0
   15954:	d1ed      	bne.n	15932 <tlm_component_add+0x6>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:60
    tlm_component *new_comp = malloc(sizeof(tlm_component));
   15956:	2008      	movs	r0, #8
   15958:	f005 fa46 	bl	1ade8 <malloc>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:61
    if(NULL == new_comp) {
   1595c:	4604      	mov	r4, r0
   1595e:	2800      	cmp	r0, #0
   15960:	d0e7      	beq.n	15932 <tlm_component_add+0x6>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:67
    new_comp->name = name;
   15962:	e880 00c0 	stmia.w	r0, {r6, r7}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:68
    new_comp->var_list = c_list_create();
   15966:	f000 fb1d 	bl	15fa4 <c_list_create>
   1596a:	6060      	str	r0, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:69
    if(NULL == new_comp->var_list) {
   1596c:	b918      	cbnz	r0, 15976 <tlm_component_add+0x4a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:70
        free(new_comp);
   1596e:	4620      	mov	r0, r4
   15970:	f005 fa42 	bl	1adf8 <free>
   15974:	e7dd      	b.n	15932 <tlm_component_add+0x6>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:75
    if(!c_list_insert_elm_end(mp_tlm_component_list, new_comp)) {
   15976:	6828      	ldr	r0, [r5, #0]
   15978:	4621      	mov	r1, r4
   1597a:	f000 fb1d 	bl	15fb8 <c_list_insert_elm_end>
   1597e:	4605      	mov	r5, r0
   15980:	2800      	cmp	r0, #0
   15982:	d1d7      	bne.n	15934 <tlm_component_add+0x8>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:76
        free(new_comp->var_list);
   15984:	6860      	ldr	r0, [r4, #4]
   15986:	f005 fa37 	bl	1adf8 <free>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:77
        free(new_comp);
   1598a:	4620      	mov	r0, r4
   1598c:	f005 fa34 	bl	1adf8 <free>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:78
        return NULL;
   15990:	462c      	mov	r4, r5
   15992:	e7cf      	b.n	15934 <tlm_component_add+0x8>
   15994:	2007c52c 	.word	0x2007c52c

00015998 <tlm_variable_check_dup>:
tlm_variable_check_dup():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:32


/** Private function of this file */
static bool tlm_variable_check_dup(void *elm_ptr, void *arg1,
                                     void *arg2, void *arg3)
{
   15998:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:36
    tlm_reg_var_type *reg_var = elm_ptr;
    tlm_reg_var_type *new_var = arg1;

    return (reg_var->data_ptr != new_var->data_ptr &&
   1599a:	6842      	ldr	r2, [r0, #4]
   1599c:	684b      	ldr	r3, [r1, #4]
   1599e:	429a      	cmp	r2, r3
   159a0:	d007      	beq.n	159b2 <tlm_variable_check_dup+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:37 (discriminator 1)
            0 != strcmp(reg_var->name, new_var->name)
   159a2:	6809      	ldr	r1, [r1, #0]
   159a4:	6800      	ldr	r0, [r0, #0]
   159a6:	f006 ff96 	bl	1c8d6 <strcmp>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:36 (discriminator 1)
    return (reg_var->data_ptr != new_var->data_ptr &&
   159aa:	3000      	adds	r0, #0
   159ac:	bf18      	it	ne
   159ae:	2001      	movne	r0, #1
   159b0:	bd08      	pop	{r3, pc}
   159b2:	2000      	movs	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:39
            );
}
   159b4:	bd08      	pop	{r3, pc}

000159b6 <tlm_component_find_callback>:
tlm_component_find_callback():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:43

/** Private function of this file */
static bool tlm_component_find_callback(void *elm_ptr, void *arg1, void *arg2, void *arg3)
{
   159b6:	b508      	push	{r3, lr}
   159b8:	460b      	mov	r3, r1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:50
    const char *name = arg1;

    /* If we locate the name, make copy of the pointer, and return false
     * to stop iterating further through the list
     */
    return (0 != strcmp(name, reg_var->name));
   159ba:	6801      	ldr	r1, [r0, #0]
   159bc:	4618      	mov	r0, r3
   159be:	f006 ff8a 	bl	1c8d6 <strcmp>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:51
}
   159c2:	3000      	adds	r0, #0
   159c4:	bf18      	it	ne
   159c6:	2001      	movne	r0, #1
   159c8:	bd08      	pop	{r3, pc}
   159ca:	Address 0x00000000000159ca is out of bounds.


000159cc <tlm_variable_register>:
tlm_variable_register():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:61
                             const char *name,
                             const void *data_ptr,
                             const uint16_t data_size,
                             const uint16_t arr_size,
                             tlm_type type)
{
   159cc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   159d0:	4689      	mov	r9, r1
   159d2:	4690      	mov	r8, r2
   159d4:	461f      	mov	r7, r3
   159d6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62
    if(NULL == comp_ptr || NULL == name || NULL == data_ptr || 0 == data_size) {
   159da:	4606      	mov	r6, r0
   159dc:	b920      	cbnz	r0, 159e8 <tlm_variable_register+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:63
        return false;
   159de:	2500      	movs	r5, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:92
        free(new_var);
        return false;
    }

    return true;
}
   159e0:	4628      	mov	r0, r5
   159e2:	b003      	add	sp, #12
   159e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62 (discriminator 1)
    if(NULL == comp_ptr || NULL == name || NULL == data_ptr || 0 == data_size) {
   159e8:	2900      	cmp	r1, #0
   159ea:	d0f8      	beq.n	159de <tlm_variable_register+0x12>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62 (discriminator 2)
   159ec:	2a00      	cmp	r2, #0
   159ee:	d0f6      	beq.n	159de <tlm_variable_register+0x12>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62 (discriminator 3)
   159f0:	2b00      	cmp	r3, #0
   159f2:	d0f4      	beq.n	159de <tlm_variable_register+0x12>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:66
    tlm_reg_var_type *new_var = malloc(sizeof(tlm_reg_var_type));
   159f4:	2014      	movs	r0, #20
   159f6:	f005 f9f7 	bl	1ade8 <malloc>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:67
    if(NULL == new_var) {
   159fa:	4604      	mov	r4, r0
   159fc:	2800      	cmp	r0, #0
   159fe:	d0ee      	beq.n	159de <tlm_variable_register+0x12>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:78
    new_var->elm_type = type;
   15a00:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:77
    new_var->elm_arr_size = 0 == arr_size ? 1 : arr_size;
   15a04:	2d00      	cmp	r5, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:78
    new_var->elm_type = type;
   15a06:	7403      	strb	r3, [r0, #16]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:77
    new_var->elm_arr_size = 0 == arr_size ? 1 : arr_size;
   15a08:	bf08      	it	eq
   15a0a:	2501      	moveq	r5, #1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:80
    if (!c_list_for_each_elm(comp_ptr->var_list, tlm_variable_check_dup,
   15a0c:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:77
    new_var->elm_arr_size = 0 == arr_size ? 1 : arr_size;
   15a0e:	60c5      	str	r5, [r0, #12]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:74
    new_var->name = name;
   15a10:	f8c0 9000 	str.w	r9, [r0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:75
    new_var->data_ptr = data_ptr;
   15a14:	f8c0 8004 	str.w	r8, [r0, #4]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:76
    new_var->elm_size_bytes = data_size;
   15a18:	6087      	str	r7, [r0, #8]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:80
    if (!c_list_for_each_elm(comp_ptr->var_list, tlm_variable_check_dup,
   15a1a:	9300      	str	r3, [sp, #0]
   15a1c:	4602      	mov	r2, r0
   15a1e:	4909      	ldr	r1, [pc, #36]	; (15a44 <tlm_variable_register+0x78>)
   15a20:	6870      	ldr	r0, [r6, #4]
   15a22:	f000 fafb 	bl	1601c <c_list_for_each_elm>
   15a26:	4605      	mov	r5, r0
   15a28:	b918      	cbnz	r0, 15a32 <tlm_variable_register+0x66>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:87
        free(new_var);
   15a2a:	4620      	mov	r0, r4
   15a2c:	f005 f9e4 	bl	1adf8 <free>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:88
        return false;
   15a30:	e7d6      	b.n	159e0 <tlm_variable_register+0x14>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:86
    if (!c_list_insert_elm_end(comp_ptr->var_list, new_var)) {
   15a32:	4621      	mov	r1, r4
   15a34:	6870      	ldr	r0, [r6, #4]
   15a36:	f000 fabf 	bl	15fb8 <c_list_insert_elm_end>
   15a3a:	4605      	mov	r5, r0
   15a3c:	2800      	cmp	r0, #0
   15a3e:	d1cf      	bne.n	159e0 <tlm_variable_register+0x14>
   15a40:	e7f3      	b.n	15a2a <tlm_variable_register+0x5e>
   15a42:	bf00      	nop
   15a44:	00015999 	.word	0x00015999

00015a48 <tlm_variable_get_by_name>:
tlm_variable_get_by_name():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:95

const tlm_reg_var_type* tlm_variable_get_by_name(tlm_component *comp_ptr, const char *name)
{
   15a48:	b513      	push	{r0, r1, r4, lr}
   15a4a:	460a      	mov	r2, r1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:97
    tlm_reg_var_type *reg_var = NULL;
    if (NULL != comp_ptr && NULL != name && '\0' != *name) {
   15a4c:	b140      	cbz	r0, 15a60 <tlm_variable_get_by_name+0x18>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:97 (discriminator 1)
   15a4e:	b149      	cbz	r1, 15a64 <tlm_variable_get_by_name+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:97 (discriminator 2)
   15a50:	780c      	ldrb	r4, [r1, #0]
   15a52:	2300      	movs	r3, #0
   15a54:	b144      	cbz	r4, 15a68 <tlm_variable_get_by_name+0x20>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:98
        reg_var = c_list_find_elm(comp_ptr->var_list, tlm_component_find_callback,
   15a56:	9300      	str	r3, [sp, #0]
   15a58:	4904      	ldr	r1, [pc, #16]	; (15a6c <tlm_variable_get_by_name+0x24>)
   15a5a:	6840      	ldr	r0, [r0, #4]
   15a5c:	f000 fac8 	bl	15ff0 <c_list_find_elm>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:102
                                  (void*)name, NULL, NULL);
    }
    return reg_var;
}
   15a60:	b002      	add	sp, #8
   15a62:	bd10      	pop	{r4, pc}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:96
    tlm_reg_var_type *reg_var = NULL;
   15a64:	4608      	mov	r0, r1
   15a66:	e7fb      	b.n	15a60 <tlm_variable_get_by_name+0x18>
   15a68:	4620      	mov	r0, r4
   15a6a:	e7f9      	b.n	15a60 <tlm_variable_get_by_name+0x18>
   15a6c:	000159b7 	.word	0x000159b7

00015a70 <tlm_stream_decode_file>:
tlm_stream_decode_file():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:267
                               );
    }
}

bool tlm_stream_decode_file(FILE *file)
{
   15a70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a74:	b0c9      	sub	sp, #292	; 0x124
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:278
     * A file can contain telemetry of multiple components so it may have
     * START ... END
     * START ... END
     * We will continue to decode till end of file.
     */
    char line[128] = { 0 };
   15a76:	ae08      	add	r6, sp, #32
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:267
{
   15a78:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:278
    char line[128] = { 0 };
   15a7a:	2280      	movs	r2, #128	; 0x80
   15a7c:	2100      	movs	r1, #0
   15a7e:	4630      	mov	r0, r6
   15a80:	f005 fa16 	bl	1aeb0 <memset>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:270
    bool success = false;
   15a84:	2400      	movs	r4, #0
tlm_stream_decode():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:123
    char *tok_name     = strtok_r(header, ":", &tok_itr);
   15a86:	f8df a19c 	ldr.w	sl, [pc, #412]	; 15c24 <tlm_stream_decode_file+0x1b4>
tlm_stream_decode_file():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:279
    while (fgets(line, sizeof(line)-1, file)) {
   15a8a:	462a      	mov	r2, r5
   15a8c:	217f      	movs	r1, #127	; 0x7f
   15a8e:	4630      	mov	r0, r6
   15a90:	f004 ff44 	bl	1a91c <fgets>
   15a94:	b918      	cbnz	r0, 15a9e <tlm_stream_decode_file+0x2e>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:310
        }
    } // fgets()

    /* success only changed to true if we got atleast one "START" in the file */
    return success;
}
   15a96:	4620      	mov	r0, r4
   15a98:	b049      	add	sp, #292	; 0x124
   15a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:280
        if (line == strstr(line, "START:")) {
   15a9e:	4960      	ldr	r1, [pc, #384]	; (15c20 <tlm_stream_decode_file+0x1b0>)
   15aa0:	4630      	mov	r0, r6
   15aa2:	f006 ff59 	bl	1c958 <strstr>
   15aa6:	4286      	cmp	r6, r0
   15aa8:	d1ef      	bne.n	15a8a <tlm_stream_decode_file+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:281
            char *name = strstr(line, ":") + 1;
   15aaa:	213a      	movs	r1, #58	; 0x3a
   15aac:	f006 ff05 	bl	1c8ba <strchr>
   15ab0:	f100 0801 	add.w	r8, r0, #1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:282
            char *count = strstr(name, ":");
   15ab4:	213a      	movs	r1, #58	; 0x3a
   15ab6:	4640      	mov	r0, r8
   15ab8:	f006 feff 	bl	1c8ba <strchr>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:283
            if (NULL != count) {
   15abc:	4607      	mov	r7, r0
   15abe:	2800      	cmp	r0, #0
   15ac0:	d0e3      	beq.n	15a8a <tlm_stream_decode_file+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:284
                *count++ = '\0';
   15ac2:	2300      	movs	r3, #0
   15ac4:	7003      	strb	r3, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:285
                component = tlm_component_get_by_name(name);
   15ac6:	4640      	mov	r0, r8
   15ac8:	f7ff ff1e 	bl	15908 <tlm_component_get_by_name>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:286
                if (NULL != component) {
   15acc:	9001      	str	r0, [sp, #4]
   15ace:	2800      	cmp	r0, #0
   15ad0:	d0db      	beq.n	15a8a <tlm_stream_decode_file+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:287
                    num_vars_in_stream = atoi(count);
   15ad2:	1c78      	adds	r0, r7, #1
   15ad4:	f004 fd5b 	bl	1a58e <atoi>
   15ad8:	4680      	mov	r8, r0
tlm_stream_decode():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:107
    char header[128] = { 0 };
   15ada:	f10d 09a0 	add.w	r9, sp, #160	; 0xa0
tlm_stream_decode_file():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:297
        while (num_vars_in_stream > 0) {
   15ade:	f1b8 0f00 	cmp.w	r8, #0
   15ae2:	d101      	bne.n	15ae8 <tlm_stream_decode_file+0x78>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:288
                    success = true;
   15ae4:	2401      	movs	r4, #1
   15ae6:	e7d0      	b.n	15a8a <tlm_stream_decode_file+0x1a>
tlm_stream_decode():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:108
    int i = 0, colon_count = 0;
   15ae8:	2400      	movs	r4, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:107
    char header[128] = { 0 };
   15aea:	2280      	movs	r2, #128	; 0x80
   15aec:	2100      	movs	r1, #0
   15aee:	4648      	mov	r0, r9
   15af0:	f005 f9de 	bl	1aeb0 <memset>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:108
    int i = 0, colon_count = 0;
   15af4:	4627      	mov	r7, r4
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:111
        int c = fgetc(file);
   15af6:	4628      	mov	r0, r5
   15af8:	f004 fea6 	bl	1a848 <fgetc>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:112
        if (c == EOF) {
   15afc:	1c43      	adds	r3, r0, #1
   15afe:	d019      	beq.n	15b34 <tlm_stream_decode_file+0xc4>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:115
        if (c == ':' && (++colon_count) >= colon_count_of_hex_data) {
   15b00:	283a      	cmp	r0, #58	; 0x3a
   15b02:	d119      	bne.n	15b38 <tlm_stream_decode_file+0xc8>
   15b04:	3701      	adds	r7, #1
   15b06:	2f03      	cmp	r7, #3
   15b08:	dd16      	ble.n	15b38 <tlm_stream_decode_file+0xc8>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:122
    char *tok_itr = 0;
   15b0a:	2400      	movs	r4, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:123
    char *tok_name     = strtok_r(header, ":", &tok_itr);
   15b0c:	aa07      	add	r2, sp, #28
   15b0e:	4651      	mov	r1, sl
   15b10:	4648      	mov	r0, r9
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:122
    char *tok_itr = 0;
   15b12:	9407      	str	r4, [sp, #28]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:123
    char *tok_name     = strtok_r(header, ":", &tok_itr);
   15b14:	f007 fd8d 	bl	1d632 <strtok_r>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:124
    char *tok_var_size = strtok_r(NULL, ":", &tok_itr);
   15b18:	aa07      	add	r2, sp, #28
   15b1a:	4651      	mov	r1, sl
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:123
    char *tok_name     = strtok_r(header, ":", &tok_itr);
   15b1c:	4607      	mov	r7, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:124
    char *tok_var_size = strtok_r(NULL, ":", &tok_itr);
   15b1e:	4620      	mov	r0, r4
   15b20:	f007 fd87 	bl	1d632 <strtok_r>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:125
    char *tok_arr_size = strtok_r(NULL, ":", &tok_itr);
   15b24:	aa07      	add	r2, sp, #28
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:124
    char *tok_var_size = strtok_r(NULL, ":", &tok_itr);
   15b26:	4683      	mov	fp, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:125
    char *tok_arr_size = strtok_r(NULL, ":", &tok_itr);
   15b28:	4651      	mov	r1, sl
   15b2a:	4620      	mov	r0, r4
   15b2c:	f007 fd81 	bl	1d632 <strtok_r>
   15b30:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:126
    if (NULL != tok_name && NULL != tok_var_size && NULL != tok_arr_size) {
   15b32:	b93f      	cbnz	r7, 15b44 <tlm_stream_decode_file+0xd4>
tlm_stream_decode_file():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:303
                return success;
   15b34:	2400      	movs	r4, #0
   15b36:	e7ae      	b.n	15a96 <tlm_stream_decode_file+0x26>
tlm_stream_decode():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:118
        header[i] = c;
   15b38:	f809 0004 	strb.w	r0, [r9, r4]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:110
    for ( ; i < sizeof(header)-1; i++) {
   15b3c:	3401      	adds	r4, #1
   15b3e:	2c7f      	cmp	r4, #127	; 0x7f
   15b40:	d1d9      	bne.n	15af6 <tlm_stream_decode_file+0x86>
   15b42:	e7e2      	b.n	15b0a <tlm_stream_decode_file+0x9a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:126
    if (NULL != tok_name && NULL != tok_var_size && NULL != tok_arr_size) {
   15b44:	f1bb 0f00 	cmp.w	fp, #0
   15b48:	d0f4      	beq.n	15b34 <tlm_stream_decode_file+0xc4>
   15b4a:	2800      	cmp	r0, #0
   15b4c:	d0f2      	beq.n	15b34 <tlm_stream_decode_file+0xc4>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:127
        exp_byte_cnt = atoi(tok_var_size) * atoi(tok_arr_size);
   15b4e:	4658      	mov	r0, fp
   15b50:	f004 fd1d 	bl	1a58e <atoi>
   15b54:	4683      	mov	fp, r0
   15b56:	4620      	mov	r0, r4
   15b58:	f004 fd19 	bl	1a58e <atoi>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:134
    const tlm_reg_var_type *reg_var = tlm_variable_get_by_name(p_comp, tok_name);
   15b5c:	4639      	mov	r1, r7
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:127
        exp_byte_cnt = atoi(tok_var_size) * atoi(tok_arr_size);
   15b5e:	fb00 fb0b 	mul.w	fp, r0, fp
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:134
    const tlm_reg_var_type *reg_var = tlm_variable_get_by_name(p_comp, tok_name);
   15b62:	9801      	ldr	r0, [sp, #4]
   15b64:	f7ff ff70 	bl	15a48 <tlm_variable_get_by_name>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:135
    if (NULL != reg_var &&
   15b68:	b180      	cbz	r0, 15b8c <tlm_stream_decode_file+0x11c>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:136
        (reg_var->elm_size_bytes) * (reg_var->elm_arr_size) == exp_byte_cnt)
   15b6a:	6882      	ldr	r2, [r0, #8]
   15b6c:	68c3      	ldr	r3, [r0, #12]
   15b6e:	4353      	muls	r3, r2
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:135
    if (NULL != reg_var &&
   15b70:	459b      	cmp	fp, r3
   15b72:	d10b      	bne.n	15b8c <tlm_stream_decode_file+0x11c>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:138
        char *dst = (char*)(reg_var->data_ptr);
   15b74:	6847      	ldr	r7, [r0, #4]
   15b76:	eb07 030b 	add.w	r3, r7, fp
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:139
        int terminator = EOF;
   15b7a:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
   15b7e:	9303      	str	r3, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:141
        for ( ; exp_byte_cnt != 0; --exp_byte_cnt) {
   15b80:	9b03      	ldr	r3, [sp, #12]
   15b82:	429f      	cmp	r7, r3
   15b84:	d105      	bne.n	15b92 <tlm_stream_decode_file+0x122>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:159
        if ('\n' != terminator) {
   15b86:	f1bb 0f0a 	cmp.w	fp, #10
   15b8a:	d1d3      	bne.n	15b34 <tlm_stream_decode_file+0xc4>
tlm_stream_decode_file():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:299
                --num_vars_in_stream;
   15b8c:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
   15b90:	e7a5      	b.n	15ade <tlm_stream_decode_file+0x6e>
tlm_stream_decode():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:142
            char byte1 = fgetc(file);
   15b92:	4628      	mov	r0, r5
   15b94:	f004 fe58 	bl	1a848 <fgetc>
   15b98:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:143
            char byte2 = fgetc(file);
   15b9a:	4628      	mov	r0, r5
   15b9c:	f004 fe54 	bl	1a848 <fgetc>
   15ba0:	9002      	str	r0, [sp, #8]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:144
            terminator = fgetc(file); /* could be comma, \n or EOF */
   15ba2:	4628      	mov	r0, r5
   15ba4:	f004 fe50 	bl	1a848 <fgetc>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:145
            if (EOF == terminator) {
   15ba8:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:144
            terminator = fgetc(file); /* could be comma, \n or EOF */
   15bac:	4683      	mov	fp, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:145
            if (EOF == terminator) {
   15bae:	d0c1      	beq.n	15b34 <tlm_stream_decode_file+0xc4>
hex_to_byte():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:36
    if (isdigit(d1)) value += d1 - '0';
   15bb0:	f005 f8a8 	bl	1ad04 <__locale_ctype_ptr>
   15bb4:	b2e3      	uxtb	r3, r4
   15bb6:	1c5a      	adds	r2, r3, #1
   15bb8:	5c81      	ldrb	r1, [r0, r2]
   15bba:	0748      	lsls	r0, r1, #29
   15bbc:	d512      	bpl.n	15be4 <tlm_stream_decode_file+0x174>
   15bbe:	3c30      	subs	r4, #48	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:41
    if (isdigit(d2)) value += d2 - '0';
   15bc0:	f005 f8a0 	bl	1ad04 <__locale_ctype_ptr>
   15bc4:	f89d 3008 	ldrb.w	r3, [sp, #8]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:37
    else value += tolower(d1) - 'a' + 10;
   15bc8:	b2e4      	uxtb	r4, r4
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:41
    if (isdigit(d2)) value += d2 - '0';
   15bca:	1c5a      	adds	r2, r3, #1
   15bcc:	5c81      	ldrb	r1, [r0, r2]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:39
    value <<= 4;
   15bce:	0124      	lsls	r4, r4, #4
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:41
    if (isdigit(d2)) value += d2 - '0';
   15bd0:	0749      	lsls	r1, r1, #29
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:39
    value <<= 4;
   15bd2:	b2e4      	uxtb	r4, r4
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:41
    if (isdigit(d2)) value += d2 - '0';
   15bd4:	d515      	bpl.n	15c02 <tlm_stream_decode_file+0x192>
   15bd6:	9b02      	ldr	r3, [sp, #8]
   15bd8:	3b30      	subs	r3, #48	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:42
    else value += tolower(d2) - 'a' + 10;
   15bda:	441c      	add	r4, r3
   15bdc:	b2e4      	uxtb	r4, r4
tlm_stream_decode():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:151
            memcpy(dst, &byte, sizeof(byte));
   15bde:	f807 4b01 	strb.w	r4, [r7], #1
   15be2:	e7cd      	b.n	15b80 <tlm_stream_decode_file+0x110>
   15be4:	9305      	str	r3, [sp, #20]
   15be6:	9204      	str	r2, [sp, #16]
hex_to_byte():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:37
    else value += tolower(d1) - 'a' + 10;
   15be8:	f005 f88c 	bl	1ad04 <__locale_ctype_ptr>
   15bec:	9a04      	ldr	r2, [sp, #16]
   15bee:	9b05      	ldr	r3, [sp, #20]
   15bf0:	5c82      	ldrb	r2, [r0, r2]
   15bf2:	f002 0203 	and.w	r2, r2, #3
   15bf6:	2a01      	cmp	r2, #1
   15bf8:	bf08      	it	eq
   15bfa:	3320      	addeq	r3, #32
   15bfc:	f1a3 0457 	sub.w	r4, r3, #87	; 0x57
   15c00:	e7de      	b.n	15bc0 <tlm_stream_decode_file+0x150>
   15c02:	9204      	str	r2, [sp, #16]
   15c04:	9302      	str	r3, [sp, #8]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:42
    else value += tolower(d2) - 'a' + 10;
   15c06:	f005 f87d 	bl	1ad04 <__locale_ctype_ptr>
   15c0a:	9a04      	ldr	r2, [sp, #16]
   15c0c:	9b02      	ldr	r3, [sp, #8]
   15c0e:	5c82      	ldrb	r2, [r0, r2]
   15c10:	f002 0203 	and.w	r2, r2, #3
   15c14:	2a01      	cmp	r2, #1
   15c16:	bf08      	it	eq
   15c18:	3320      	addeq	r3, #32
   15c1a:	3b57      	subs	r3, #87	; 0x57
   15c1c:	e7dd      	b.n	15bda <tlm_stream_decode_file+0x16a>
   15c1e:	bf00      	nop
   15c20:	0002185b 	.word	0x0002185b
   15c24:	00021865 	.word	0x00021865

00015c28 <for_each_recur_alarm_callback>:
for_each_recur_alarm_callback():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:50
}

static bool for_each_recur_alarm_callback(void *item, void *arg1, void *arg2, void *arg3)
{
    long *do_yield = arg1;
    long yield_required = 0;
   15c28:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:48
{
   15c2a:	b513      	push	{r0, r1, r4, lr}
   15c2c:	460c      	mov	r4, r1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:50
    long yield_required = 0;
   15c2e:	a902      	add	r1, sp, #8
   15c30:	f841 3d04 	str.w	r3, [r1, #-4]!
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:53

    SemaphoreHandle_t *signal = (SemaphoreHandle_t*)item;
    xSemaphoreGiveFromISR(*signal, &yield_required);
   15c34:	6800      	ldr	r0, [r0, #0]
   15c36:	f000 fea7 	bl	16988 <xQueueGiveFromISR>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:54
    if (yield_required) {
   15c3a:	9b01      	ldr	r3, [sp, #4]
   15c3c:	b11b      	cbz	r3, 15c46 <for_each_recur_alarm_callback+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:55
        *do_yield |= 1;
   15c3e:	6823      	ldr	r3, [r4, #0]
   15c40:	f043 0301 	orr.w	r3, r3, #1
   15c44:	6023      	str	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:59
    }

    return 1;
}
   15c46:	2001      	movs	r0, #1
   15c48:	b002      	add	sp, #8
   15c4a:	bd10      	pop	{r4, pc}

00015c4c <for_each_alarm_callback>:
for_each_alarm_callback():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:62

static bool for_each_alarm_callback(void *item, void *arg1, void *arg2, void *arg3)
{
   15c4c:	b530      	push	{r4, r5, lr}
   15c4e:	4604      	mov	r4, r0
   15c50:	b085      	sub	sp, #20
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:63
    const rtc_t time = rtc_gettime();
   15c52:	a801      	add	r0, sp, #4
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:62
{
   15c54:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:63
    const rtc_t time = rtc_gettime();
   15c56:	f7ff fd3b 	bl	156d0 <rtc_gettime>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:66
    sem_alarm_t *a = (sem_alarm_t*)item;

    if(a->time.hour == time.hour &&
   15c5a:	f89d 3006 	ldrb.w	r3, [sp, #6]
   15c5e:	7922      	ldrb	r2, [r4, #4]
   15c60:	f003 031f 	and.w	r3, r3, #31
   15c64:	429a      	cmp	r2, r3
   15c66:	d11b      	bne.n	15ca0 <for_each_alarm_callback+0x54>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:67 (discriminator 1)
       a->time.min == time.min &&
   15c68:	f89d 3005 	ldrb.w	r3, [sp, #5]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:66 (discriminator 1)
    if(a->time.hour == time.hour &&
   15c6c:	7962      	ldrb	r2, [r4, #5]
   15c6e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   15c72:	429a      	cmp	r2, r3
   15c74:	d114      	bne.n	15ca0 <for_each_alarm_callback+0x54>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:68
       a->time.sec == time.sec)
   15c76:	f89d 3004 	ldrb.w	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:67
       a->time.min == time.min &&
   15c7a:	79a2      	ldrb	r2, [r4, #6]
   15c7c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   15c80:	429a      	cmp	r2, r3
   15c82:	d10d      	bne.n	15ca0 <for_each_alarm_callback+0x54>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:71
    {
        long *do_yield = arg1;
        long switch_required = 0;
   15c84:	2300      	movs	r3, #0
   15c86:	a904      	add	r1, sp, #16
   15c88:	f841 3d10 	str.w	r3, [r1, #-16]!
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:72
        xSemaphoreGiveFromISR(*(a->pAlarm), &switch_required);
   15c8c:	6823      	ldr	r3, [r4, #0]
   15c8e:	6818      	ldr	r0, [r3, #0]
   15c90:	f000 fe7a 	bl	16988 <xQueueGiveFromISR>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:73
        if (switch_required) {
   15c94:	9b00      	ldr	r3, [sp, #0]
   15c96:	b11b      	cbz	r3, 15ca0 <for_each_alarm_callback+0x54>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:74
            *do_yield |= 1;
   15c98:	682b      	ldr	r3, [r5, #0]
   15c9a:	f043 0301 	orr.w	r3, r3, #1
   15c9e:	602b      	str	r3, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:78
        }
    }
    return 1;
}
   15ca0:	2001      	movs	r0, #1
   15ca2:	b005      	add	sp, #20
   15ca4:	bd30      	pop	{r4, r5, pc}
   15ca6:	Address 0x0000000000015ca6 is out of bounds.


00015ca8 <RTC_IRQHandler>:
RTC_IRQHandler():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:133

#ifdef __cplusplus
extern "C" {
#endif
void RTC_IRQHandler(void)
{
   15ca8:	b530      	push	{r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:135
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
    long do_yield = 0;
   15caa:	2500      	movs	r5, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   15cac:	4a23      	ldr	r2, [pc, #140]	; (15d3c <RTC_IRQHandler+0x94>)
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:133
{
   15cae:	b087      	sub	sp, #28
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   15cb0:	7813      	ldrb	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:138

    const rtc_t time = rtc_gettime();
    c_list_for_each_elm(g_list_recur_alarms[everySecond], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   15cb2:	4c23      	ldr	r4, [pc, #140]	; (15d40 <RTC_IRQHandler+0x98>)
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   15cb4:	f043 0301 	orr.w	r3, r3, #1
   15cb8:	7013      	strb	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:137
    const rtc_t time = rtc_gettime();
   15cba:	a803      	add	r0, sp, #12
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:135
    long do_yield = 0;
   15cbc:	9502      	str	r5, [sp, #8]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:137
    const rtc_t time = rtc_gettime();
   15cbe:	f7ff fd07 	bl	156d0 <rtc_gettime>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:138
    c_list_for_each_elm(g_list_recur_alarms[everySecond], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   15cc2:	462b      	mov	r3, r5
   15cc4:	9500      	str	r5, [sp, #0]
   15cc6:	aa02      	add	r2, sp, #8
   15cc8:	491e      	ldr	r1, [pc, #120]	; (15d44 <RTC_IRQHandler+0x9c>)
   15cca:	6820      	ldr	r0, [r4, #0]
   15ccc:	f000 f9a6 	bl	1601c <c_list_for_each_elm>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:139
    if(0 == time.sec) {
   15cd0:	f89d 300c 	ldrb.w	r3, [sp, #12]
   15cd4:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   15cd8:	d11b      	bne.n	15d12 <RTC_IRQHandler+0x6a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:140
        c_list_for_each_elm(g_list_recur_alarms[everyMinute], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   15cda:	9300      	str	r3, [sp, #0]
   15cdc:	aa02      	add	r2, sp, #8
   15cde:	4919      	ldr	r1, [pc, #100]	; (15d44 <RTC_IRQHandler+0x9c>)
   15ce0:	6860      	ldr	r0, [r4, #4]
   15ce2:	f000 f99b 	bl	1601c <c_list_for_each_elm>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:141
        if(0 == time.min) {
   15ce6:	f89d 300d 	ldrb.w	r3, [sp, #13]
   15cea:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   15cee:	d110      	bne.n	15d12 <RTC_IRQHandler+0x6a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:142
            c_list_for_each_elm(g_list_recur_alarms[everyHour], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   15cf0:	9300      	str	r3, [sp, #0]
   15cf2:	aa02      	add	r2, sp, #8
   15cf4:	4913      	ldr	r1, [pc, #76]	; (15d44 <RTC_IRQHandler+0x9c>)
   15cf6:	68a0      	ldr	r0, [r4, #8]
   15cf8:	f000 f990 	bl	1601c <c_list_for_each_elm>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:143
            if(0 == time.hour) {
   15cfc:	f89d 300e 	ldrb.w	r3, [sp, #14]
   15d00:	f013 031f 	ands.w	r3, r3, #31
   15d04:	d105      	bne.n	15d12 <RTC_IRQHandler+0x6a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:144
                c_list_for_each_elm(g_list_recur_alarms[everyDay], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   15d06:	9300      	str	r3, [sp, #0]
   15d08:	aa02      	add	r2, sp, #8
   15d0a:	490e      	ldr	r1, [pc, #56]	; (15d44 <RTC_IRQHandler+0x9c>)
   15d0c:	68e0      	ldr	r0, [r4, #12]
   15d0e:	f000 f985 	bl	1601c <c_list_for_each_elm>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:149
            }
        }
    }

    c_list_for_each_elm(g_list_timed_alarms, for_each_alarm_callback, &do_yield, NULL, NULL);
   15d12:	2300      	movs	r3, #0
   15d14:	480c      	ldr	r0, [pc, #48]	; (15d48 <RTC_IRQHandler+0xa0>)
   15d16:	9300      	str	r3, [sp, #0]
   15d18:	aa02      	add	r2, sp, #8
   15d1a:	490c      	ldr	r1, [pc, #48]	; (15d4c <RTC_IRQHandler+0xa4>)
   15d1c:	6800      	ldr	r0, [r0, #0]
   15d1e:	f000 f97d 	bl	1601c <c_list_for_each_elm>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:150
    portEND_SWITCHING_ISR(do_yield);
   15d22:	9b02      	ldr	r3, [sp, #8]
   15d24:	b13b      	cbz	r3, 15d36 <RTC_IRQHandler+0x8e>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:150 (discriminator 1)
   15d26:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   15d2a:	4b09      	ldr	r3, [pc, #36]	; (15d50 <RTC_IRQHandler+0xa8>)
   15d2c:	601a      	str	r2, [r3, #0]
   15d2e:	f3bf 8f4f 	dsb	sy
   15d32:	f3bf 8f6f 	isb	sy
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:151
}
   15d36:	b007      	add	sp, #28
   15d38:	bd30      	pop	{r4, r5, pc}
   15d3a:	bf00      	nop
   15d3c:	40024000 	.word	0x40024000
   15d40:	2007c530 	.word	0x2007c530
   15d44:	00015c29 	.word	0x00015c29
   15d48:	2007c540 	.word	0x2007c540
   15d4c:	00015c4d 	.word	0x00015c4d
   15d50:	e000ed04 	.word	0xe000ed04

00015d54 <logger_write_to_file>:
logger_write_to_file():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:61
 * Writes the buffer to the file.
 * @param [in] buffer   The data pointer to write from
 * @param [in] bytes_to_write  The number of bytes to write
 */
static bool logger_write_to_file(const void * buffer, const uint32_t bytes_to_write)
{
   15d54:	b5f0      	push	{r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:64
    bool success = false;
    FRESULT err = 0;
    UINT bytes_written = 0;
   15d56:	2400      	movs	r4, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:61
{
   15d58:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
   15d5c:	460d      	mov	r5, r1
   15d5e:	4607      	mov	r7, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:64
    UINT bytes_written = 0;
   15d60:	9402      	str	r4, [sp, #8]
sys_get_uptime_ms():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   15d62:	f7fa fac9 	bl	102f8 <sys_get_uptime_us>
   15d66:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15d6a:	2300      	movs	r3, #0
   15d6c:	f004 fa80 	bl	1a270 <__aeabi_uldivmod>
logger_write_to_file():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:69
    const UINT bytes_to_write_uint = bytes_to_write;
    const uint32_t start_time = sys_get_uptime_ms();

    #if (!FILE_LOGGER_KEEP_FILE_OPEN)
    FIL fatfs_file = { 0 };
   15d70:	f44f 7209 	mov.w	r2, #548	; 0x224
sys_get_uptime_ms():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   15d74:	4606      	mov	r6, r0
logger_write_to_file():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:69
   15d76:	4621      	mov	r1, r4
   15d78:	a803      	add	r0, sp, #12
   15d7a:	f005 f899 	bl	1aeb0 <memset>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:72
    #endif

    if (0 == bytes_to_write_uint) {
   15d7e:	2d00      	cmp	r5, #0
   15d80:	d038      	beq.n	15df4 <logger_write_to_file+0xa0>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:83
    {
        f_sync(gp_file_ptr);
    }
    #else
    /* File not opened, open it, seek it, and then write it */
    else if(FR_OK == (err = f_open(&fatfs_file, FILE_LOGGER_FILENAME, FA_OPEN_ALWAYS | FA_WRITE)))
   15d82:	2212      	movs	r2, #18
   15d84:	491c      	ldr	r1, [pc, #112]	; (15df8 <logger_write_to_file+0xa4>)
   15d86:	a803      	add	r0, sp, #12
   15d88:	f7fb fe1a 	bl	119c0 <f_open>
   15d8c:	4604      	mov	r4, r0
   15d8e:	bb68      	cbnz	r0, 15dec <logger_write_to_file+0x98>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:85
    {
        if (FR_OK == (err = f_lseek(&fatfs_file, f_size(&fatfs_file))))
   15d90:	9906      	ldr	r1, [sp, #24]
   15d92:	a803      	add	r0, sp, #12
   15d94:	f7fc f890 	bl	11eb8 <f_lseek>
   15d98:	4604      	mov	r4, r0
   15d9a:	b930      	cbnz	r0, 15daa <logger_write_to_file+0x56>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:87
        {
            err = f_write(&fatfs_file, buffer, bytes_to_write_uint, &bytes_written);
   15d9c:	ab02      	add	r3, sp, #8
   15d9e:	462a      	mov	r2, r5
   15da0:	4639      	mov	r1, r7
   15da2:	a803      	add	r0, sp, #12
   15da4:	f7fb ff5b 	bl	11c5e <f_write>
   15da8:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:89
        }
        f_close(&fatfs_file);
   15daa:	a803      	add	r0, sp, #12
   15dac:	f7fc f872 	bl	11e94 <f_close>
sys_get_uptime_ms():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   15db0:	f7fa faa2 	bl	102f8 <sys_get_uptime_us>
   15db4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15db8:	2300      	movs	r3, #0
   15dba:	f004 fa59 	bl	1a270 <__aeabi_uldivmod>
logger_write_to_file():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:98
        printf("Failed file write: ");
    }

    /* Capture the time */
    const uint32_t diff_time = sys_get_uptime_ms() - start_time;
    if (diff_time > g_highest_file_write_time) {
   15dbe:	4b0f      	ldr	r3, [pc, #60]	; (15dfc <logger_write_to_file+0xa8>)
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:97
    const uint32_t diff_time = sys_get_uptime_ms() - start_time;
   15dc0:	1b80      	subs	r0, r0, r6
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:98
    if (diff_time > g_highest_file_write_time) {
   15dc2:	881a      	ldrh	r2, [r3, #0]
   15dc4:	4290      	cmp	r0, r2
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:103
        g_highest_file_write_time = diff_time;
    }

    /* To be successful, bytes written should be the same count as the bytes intended to be written */
    success = (bytes_to_write_uint == bytes_written);
   15dc6:	9a02      	ldr	r2, [sp, #8]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:99
        g_highest_file_write_time = diff_time;
   15dc8:	bf88      	it	hi
   15dca:	8018      	strhhi	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:103
    success = (bytes_to_write_uint == bytes_written);
   15dcc:	4295      	cmp	r5, r2
   15dce:	bf0c      	ite	eq
   15dd0:	2601      	moveq	r6, #1
   15dd2:	2600      	movne	r6, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:106

    /* We don't want to silently fail, so print a message in case an error occurs */
    if (!success) {
   15dd4:	d006      	beq.n	15de4 <logger_write_to_file+0x90>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:107
        printf("Error %u writing logfile. %u/%u written. Fptr: %u\n",
   15dd6:	9b05      	ldr	r3, [sp, #20]
   15dd8:	4621      	mov	r1, r4
   15dda:	9300      	str	r3, [sp, #0]
   15ddc:	4808      	ldr	r0, [pc, #32]	; (15e00 <logger_write_to_file+0xac>)
   15dde:	462b      	mov	r3, r5
   15de0:	f006 fa12 	bl	1c208 <iprintf>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:116
                (unsigned)err, (unsigned)bytes_written, (unsigned)bytes_to_write, (unsigned) fatfs_file.fptr);
#endif
    }

    return success;
}
   15de4:	4630      	mov	r0, r6
   15de6:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
   15dea:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:93
        printf("Failed file write: ");
   15dec:	4805      	ldr	r0, [pc, #20]	; (15e04 <logger_write_to_file+0xb0>)
   15dee:	f006 fa0b 	bl	1c208 <iprintf>
   15df2:	e7dd      	b.n	15db0 <logger_write_to_file+0x5c>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:63
    FRESULT err = 0;
   15df4:	462c      	mov	r4, r5
   15df6:	e7db      	b.n	15db0 <logger_write_to_file+0x5c>
   15df8:	00021893 	.word	0x00021893
   15dfc:	2007c54c 	.word	0x2007c54c
   15e00:	000218b1 	.word	0x000218b1
   15e04:	0002189d 	.word	0x0002189d

00015e08 <logger_task>:
logger_task():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
{
    /* Use "char * const" to disallow this pointer to be moved.
     * We don't want to use "const char *" because we do want to be able to
     * write to this pointer instead of using excessive casts later.
     */
    char * const start_ptr = gp_file_buffer;
   15e08:	4b2f      	ldr	r3, [pc, #188]	; (15ec8 <logger_task+0xc0>)
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:173
{
   15e0a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   15e0e:	681d      	ldr	r5, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192
    {
        /* Receive the log message we wish to write to our buffer.
         * Timeout or NULL pointer received is the signal to flush the data.
         */
        log_msg = NULL;
        if (!xQueueReceive(g_write_buffer_queue, &log_msg, OS_MS(1000 * FILE_LOGGER_FLUSH_TIME_SEC)) ||
   15e10:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 15ed0 <logger_task+0xc8>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   15e14:	462e      	mov	r6, r5
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        }

        /* Update the watermark of the number of messages we see in the queue and note that we
         * add one to account for the message we just dequeued.
         */
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   15e16:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 15ed4 <logger_task+0xcc>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:179
    char * const end_ptr = start_ptr + FILE_LOGGER_BUFFER_SIZE;
   15e1a:	f505 6880 	add.w	r8, r5, #1024	; 0x400
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:191
        log_msg = NULL;
   15e1e:	2300      	movs	r3, #0
   15e20:	af02      	add	r7, sp, #8
   15e22:	f847 3d04 	str.w	r3, [r7, #-4]!
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192
        if (!xQueueReceive(g_write_buffer_queue, &log_msg, OS_MS(1000 * FILE_LOGGER_FLUSH_TIME_SEC)) ||
   15e26:	f64e 2260 	movw	r2, #60000	; 0xea60
   15e2a:	4639      	mov	r1, r7
   15e2c:	f8d9 0000 	ldr.w	r0, [r9]
   15e30:	f000 fdde 	bl	169f0 <xQueueGenericReceive>
   15e34:	b108      	cbz	r0, 15e3a <logger_task+0x32>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192 (discriminator 1)
   15e36:	9b01      	ldr	r3, [sp, #4]
   15e38:	b92b      	cbnz	r3, 15e46 <logger_task+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:195
            logger_write_to_file(start_ptr, (write_ptr - start_ptr));
   15e3a:	1b71      	subs	r1, r6, r5
   15e3c:	4628      	mov	r0, r5
   15e3e:	f7ff ff89 	bl	15d54 <logger_write_to_file>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   15e42:	462e      	mov	r6, r5
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:197
            continue;
   15e44:	e7eb      	b.n	15e1e <logger_task+0x16>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   15e46:	f8d9 0000 	ldr.w	r0, [r9]
   15e4a:	f000 fe9f 	bl	16b8c <uxQueueMessagesWaiting>
   15e4e:	f8ba 3000 	ldrh.w	r3, [sl]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:208
            g_buffer_watermark = len;
        }

        /* Get the length and append the newline character */
        len = strlen(log_msg);
   15e52:	9c01      	ldr	r4, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   15e54:	3001      	adds	r0, #1
   15e56:	4298      	cmp	r0, r3
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:204
            g_buffer_watermark = len;
   15e58:	bf88      	it	hi
   15e5a:	f8aa 0000 	strhhi.w	r0, [sl]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:208
        len = strlen(log_msg);
   15e5e:	4620      	mov	r0, r4
   15e60:	f006 fd4b 	bl	1c8fa <strlen>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:209
        log_msg[len] = '\n';
   15e64:	230a      	movs	r3, #10
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   15e66:	2100      	movs	r1, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:209
        log_msg[len] = '\n';
   15e68:	5423      	strb	r3, [r4, r0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   15e6a:	f100 0b01 	add.w	fp, r0, #1
   15e6e:	9a01      	ldr	r2, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:224
            continue;
        }
        #endif

        /* If we will overflow our buffer we need to write the full buffer and do partial copy */
        if (len + write_ptr >= end_ptr)
   15e70:	eb06 040b 	add.w	r4, r6, fp
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   15e74:	f802 100b 	strb.w	r1, [r2, fp]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:224
        if (len + write_ptr >= end_ptr)
   15e78:	45a0      	cmp	r8, r4
   15e7a:	9901      	ldr	r1, [sp, #4]
   15e7c:	d81f      	bhi.n	15ebe <logger_task+0xb6>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:230
        {
            /* This could be zero when we write the last byte in the buffer */
            buffer_overflow_cnt = (len + write_ptr - end_ptr);

            /* Copy the partial message up until the end of the buffer */
            memcpy(write_ptr, log_msg, (end_ptr - write_ptr));
   15e7e:	eba8 0206 	sub.w	r2, r8, r6
   15e82:	4630      	mov	r0, r6
   15e84:	f004 ffef 	bl	1ae66 <memcpy>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:227
            buffer_overflow_cnt = (len + write_ptr - end_ptr);
   15e88:	eba4 0408 	sub.w	r4, r4, r8
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:233

            /* Write the entire buffer to the file */
            logger_write_to_file(start_ptr, (end_ptr - start_ptr));
   15e8c:	f44f 6180 	mov.w	r1, #1024	; 0x400
   15e90:	4628      	mov	r0, r5
   15e92:	f7ff ff5f 	bl	15d54 <logger_write_to_file>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:239

            /* Optional: Zero out the buffer space */
            // memset(start_ptr, '\0', buffer_size);

            /* Copy the left-over message to the start of "fresh" buffer space (after writing to the file) */
            if (buffer_overflow_cnt > 0) {
   15e96:	b13c      	cbz	r4, 15ea8 <logger_task+0xa0>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:240
                memcpy(start_ptr, (log_msg + len - buffer_overflow_cnt), buffer_overflow_cnt);
   15e98:	9901      	ldr	r1, [sp, #4]
   15e9a:	ebab 0b04 	sub.w	fp, fp, r4
   15e9e:	4622      	mov	r2, r4
   15ea0:	4459      	add	r1, fp
   15ea2:	4628      	mov	r0, r5
   15ea4:	f004 ffdf 	bl	1ae66 <memcpy>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:242
            }
            write_ptr = start_ptr + buffer_overflow_cnt;
   15ea8:	442c      	add	r4, r5
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:251
            memcpy(write_ptr, log_msg, len);
            write_ptr += len;
        }

        /* Put the data pointer back to the available buffers */
        xQueueSend(g_empty_buffer_queue, &log_msg, portMAX_DELAY);
   15eaa:	4808      	ldr	r0, [pc, #32]	; (15ecc <logger_task+0xc4>)
   15eac:	2300      	movs	r3, #0
   15eae:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15eb2:	4639      	mov	r1, r7
   15eb4:	6800      	ldr	r0, [r0, #0]
   15eb6:	f000 fc93 	bl	167e0 <xQueueGenericSend>
   15eba:	4626      	mov	r6, r4
   15ebc:	e7af      	b.n	15e1e <logger_task+0x16>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:246
            memcpy(write_ptr, log_msg, len);
   15ebe:	465a      	mov	r2, fp
   15ec0:	4630      	mov	r0, r6
   15ec2:	f004 ffd0 	bl	1ae66 <memcpy>
   15ec6:	e7f0      	b.n	15eaa <logger_task+0xa2>
   15ec8:	2007c554 	.word	0x2007c554
   15ecc:	2007c548 	.word	0x2007c548
   15ed0:	2007c550 	.word	0x2007c550
   15ed4:	2007c544 	.word	0x2007c544

00015ed8 <logger_init>:
logger_init():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:376
{
    return g_buffer_watermark;
}

void logger_init(uint8_t logger_priority)
{
   15ed8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
logger_initialized():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   15edc:	4c2b      	ldr	r4, [pc, #172]	; (15f8c <logger_init+0xb4>)
logger_init():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:376
{
   15ede:	4680      	mov	r8, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:378
    /* Prevent double init */
    if (!logger_initialized())
   15ee0:	6825      	ldr	r5, [r4, #0]
   15ee2:	2d00      	cmp	r5, #0
   15ee4:	d14a      	bne.n	15f7c <logger_init+0xa4>
logger_internal_init():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:275
    gp_file_buffer = (char*) malloc(FILE_LOGGER_BUFFER_SIZE);
   15ee6:	f44f 6080 	mov.w	r0, #1024	; 0x400
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:271
    char * ptr = NULL;
   15eea:	9503      	str	r5, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:275
    gp_file_buffer = (char*) malloc(FILE_LOGGER_BUFFER_SIZE);
   15eec:	f004 ff7c 	bl	1ade8 <malloc>
   15ef0:	4e27      	ldr	r6, [pc, #156]	; (15f90 <logger_init+0xb8>)
   15ef2:	6020      	str	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:276
    if (NULL == gp_file_buffer) {
   15ef4:	b9a8      	cbnz	r0, 15f22 <logger_init+0x4a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:327
        if (gp_file_buffer) {
   15ef6:	6820      	ldr	r0, [r4, #0]
   15ef8:	2800      	cmp	r0, #0
   15efa:	d142      	bne.n	15f82 <logger_init+0xaa>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:332
        if (g_empty_buffer_queue) {
   15efc:	6833      	ldr	r3, [r6, #0]
   15efe:	b163      	cbz	r3, 15f1a <logger_init+0x42>
   15f00:	240a      	movs	r4, #10
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:334
                if (xQueueReceive(g_empty_buffer_queue, &ptr, 0)) {
   15f02:	2300      	movs	r3, #0
   15f04:	a903      	add	r1, sp, #12
   15f06:	461a      	mov	r2, r3
   15f08:	6830      	ldr	r0, [r6, #0]
   15f0a:	f000 fd71 	bl	169f0 <xQueueGenericReceive>
   15f0e:	b110      	cbz	r0, 15f16 <logger_init+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:335
                    free (ptr);
   15f10:	9803      	ldr	r0, [sp, #12]
   15f12:	f004 ff71 	bl	1adf8 <free>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:333
            for (i = 0; i < FILE_LOGGER_NUM_BUFFERS; i++) {
   15f16:	3c01      	subs	r4, #1
   15f18:	d1f3      	bne.n	15f02 <logger_init+0x2a>
logger_init():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:381
    {
        if (!logger_internal_init(logger_priority)) {
            printf("ERROR: logger initialization failure\n");
   15f1a:	481e      	ldr	r0, [pc, #120]	; (15f94 <logger_init+0xbc>)
   15f1c:	f006 f9e8 	bl	1c2f0 <puts>
   15f20:	e02c      	b.n	15f7c <logger_init+0xa4>
logger_internal_init():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:281
    g_write_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   15f22:	462a      	mov	r2, r5
   15f24:	2104      	movs	r1, #4
   15f26:	200a      	movs	r0, #10
   15f28:	f000 fc38 	bl	1679c <xQueueGenericCreate>
   15f2c:	4f1a      	ldr	r7, [pc, #104]	; (15f98 <logger_init+0xc0>)
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   15f2e:	462a      	mov	r2, r5
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:281
    g_write_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   15f30:	6038      	str	r0, [r7, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   15f32:	2104      	movs	r1, #4
   15f34:	200a      	movs	r0, #10
   15f36:	f000 fc31 	bl	1679c <xQueueGenericCreate>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:283
    if (NULL == g_write_buffer_queue || NULL == g_empty_buffer_queue) {
   15f3a:	683b      	ldr	r3, [r7, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   15f3c:	6030      	str	r0, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:283
    if (NULL == g_write_buffer_queue || NULL == g_empty_buffer_queue) {
   15f3e:	2b00      	cmp	r3, #0
   15f40:	d0d9      	beq.n	15ef6 <logger_init+0x1e>
   15f42:	2800      	cmp	r0, #0
   15f44:	d0d7      	beq.n	15ef6 <logger_init+0x1e>
   15f46:	250a      	movs	r5, #10
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:293
        ptr = (char*) malloc(FILE_LOGGER_LOG_MSG_MAX_LEN);
   15f48:	2096      	movs	r0, #150	; 0x96
   15f4a:	f004 ff4d 	bl	1ade8 <malloc>
   15f4e:	9003      	str	r0, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:295
        if (NULL == ptr) {
   15f50:	2800      	cmp	r0, #0
   15f52:	d0d0      	beq.n	15ef6 <logger_init+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:303
        xQueueSend(g_empty_buffer_queue, &ptr, 0);
   15f54:	2300      	movs	r3, #0
   15f56:	a903      	add	r1, sp, #12
   15f58:	461a      	mov	r2, r3
   15f5a:	6830      	ldr	r0, [r6, #0]
   15f5c:	f000 fc40 	bl	167e0 <xQueueGenericSend>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:291
    for (i = 0; i < FILE_LOGGER_NUM_BUFFERS; i++)
   15f60:	3d01      	subs	r5, #1
   15f62:	d1f1      	bne.n	15f48 <logger_init+0x70>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:318
    if (!xTaskCreate(logger_task, "logger", FILE_LOGGER_STACK_SIZE, NULL, logger_priority, NULL))
   15f64:	9501      	str	r5, [sp, #4]
logger_init():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:380
        if (!logger_internal_init(logger_priority)) {
   15f66:	f8cd 8000 	str.w	r8, [sp]
logger_internal_init():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:318
    if (!xTaskCreate(logger_task, "logger", FILE_LOGGER_STACK_SIZE, NULL, logger_priority, NULL))
   15f6a:	462b      	mov	r3, r5
   15f6c:	f44f 72c0 	mov.w	r2, #384	; 0x180
   15f70:	490a      	ldr	r1, [pc, #40]	; (15f9c <logger_init+0xc4>)
   15f72:	480b      	ldr	r0, [pc, #44]	; (15fa0 <logger_init+0xc8>)
   15f74:	f000 fea0 	bl	16cb8 <xTaskCreate>
   15f78:	2800      	cmp	r0, #0
   15f7a:	d0bc      	beq.n	15ef6 <logger_init+0x1e>
logger_init():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:384
        }
    }
}
   15f7c:	b004      	add	sp, #16
   15f7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
logger_internal_init():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:328
            free(gp_file_buffer);
   15f82:	f004 ff39 	bl	1adf8 <free>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:329
            gp_file_buffer = NULL;
   15f86:	2300      	movs	r3, #0
   15f88:	6023      	str	r3, [r4, #0]
   15f8a:	e7b7      	b.n	15efc <logger_init+0x24>
   15f8c:	2007c554 	.word	0x2007c554
   15f90:	2007c548 	.word	0x2007c548
   15f94:	0002186e 	.word	0x0002186e
   15f98:	2007c550 	.word	0x2007c550
   15f9c:	00021867 	.word	0x00021867
   15fa0:	00015e09 	.word	0x00015e09

00015fa4 <c_list_create>:
c_list_create():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:45
}c_list_type;



c_list_ptr c_list_create(void)
{
   15fa4:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:46
    c_list_type* new_list = (c_list_type*)malloc(sizeof(c_list_type));
   15fa6:	200c      	movs	r0, #12
   15fa8:	f004 ff1e 	bl	1ade8 <malloc>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:47
    if(NULL != new_list) {
   15fac:	b118      	cbz	r0, 15fb6 <c_list_create+0x12>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:48
        memset(new_list, 0, sizeof(c_list_type));
   15fae:	2300      	movs	r3, #0
   15fb0:	6003      	str	r3, [r0, #0]
   15fb2:	6043      	str	r3, [r0, #4]
   15fb4:	6083      	str	r3, [r0, #8]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:51
    }
    return new_list;
}
   15fb6:	bd08      	pop	{r3, pc}

00015fb8 <c_list_insert_elm_end>:
c_list_insert_elm_end():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:87
    const c_list_type *list = p;
    return list ? list->node_count : 0;
}

bool c_list_insert_elm_end(c_list_ptr p, const void *elm_ptr)
{
   15fb8:	b538      	push	{r3, r4, r5, lr}
   15fba:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:89
    c_list_type *list = p;
    if(!list) {
   15fbc:	4604      	mov	r4, r0
   15fbe:	b908      	cbnz	r0, 15fc4 <c_list_insert_elm_end+0xc>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:90
        return false;
   15fc0:	2000      	movs	r0, #0
   15fc2:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:94
    }

    /* Allocate memory for the new node and copy the data */
    c_data_node_type *new_node = malloc(sizeof(c_data_node_type));
   15fc4:	2008      	movs	r0, #8
   15fc6:	f004 ff0f 	bl	1ade8 <malloc>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:95
    if(NULL == new_node) {
   15fca:	2800      	cmp	r0, #0
   15fcc:	d0f8      	beq.n	15fc0 <c_list_insert_elm_end+0x8>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:98
        return false;
    }
    new_node->next = NULL;
   15fce:	2300      	movs	r3, #0
   15fd0:	6043      	str	r3, [r0, #4]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:101
    new_node->data_ptr = (void*)elm_ptr;

    if(NULL == list->head) {
   15fd2:	6823      	ldr	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:99
    new_node->data_ptr = (void*)elm_ptr;
   15fd4:	6005      	str	r5, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:101
    if(NULL == list->head) {
   15fd6:	b933      	cbnz	r3, 15fe6 <c_list_insert_elm_end+0x2e>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:102
        list->head = new_node;
   15fd8:	6020      	str	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:112
            (list->tail)->next = new_node;
        }
        list->tail = new_node;
    }

    ++(list->node_count);
   15fda:	68a3      	ldr	r3, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:109
        list->tail = new_node;
   15fdc:	6060      	str	r0, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:112
    ++(list->node_count);
   15fde:	3301      	adds	r3, #1
   15fe0:	60a3      	str	r3, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:113
    return true;
   15fe2:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:114
}
   15fe4:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:106
        if (list->tail) {
   15fe6:	6863      	ldr	r3, [r4, #4]
   15fe8:	2b00      	cmp	r3, #0
   15fea:	d0f6      	beq.n	15fda <c_list_insert_elm_end+0x22>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:107
            (list->tail)->next = new_node;
   15fec:	6058      	str	r0, [r3, #4]
   15fee:	e7f4      	b.n	15fda <c_list_insert_elm_end+0x22>

00015ff0 <c_list_find_elm>:
c_list_find_elm():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:178
    }
}

void* c_list_find_elm(c_list_ptr p, c_list_callback_t callback,
                      void *arg1, void *arg2, void *arg3)
{
   15ff0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   15ff2:	460d      	mov	r5, r1
   15ff4:	4616      	mov	r6, r2
   15ff6:	461f      	mov	r7, r3
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:180
    c_list_type *list = p;
    if(!list || !callback) {
   15ff8:	b908      	cbnz	r0, 15ffe <c_list_find_elm+0xe>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:181
        return NULL;
   15ffa:	2000      	movs	r0, #0
   15ffc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:180 (discriminator 1)
    if(!list || !callback) {
   15ffe:	2900      	cmp	r1, #0
   16000:	d0fb      	beq.n	15ffa <c_list_find_elm+0xa>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:184
    }

    c_data_node_type *iterator = list->head;
   16002:	6804      	ldr	r4, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:185
    while(NULL != iterator) {
   16004:	2c00      	cmp	r4, #0
   16006:	d0f8      	beq.n	15ffa <c_list_find_elm+0xa>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:186
        if(!callback(iterator->data_ptr, arg1, arg2, arg3)) {
   16008:	9b06      	ldr	r3, [sp, #24]
   1600a:	463a      	mov	r2, r7
   1600c:	4631      	mov	r1, r6
   1600e:	6820      	ldr	r0, [r4, #0]
   16010:	47a8      	blx	r5
   16012:	b908      	cbnz	r0, 16018 <c_list_find_elm+0x28>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:187
            return iterator->data_ptr;
   16014:	6820      	ldr	r0, [r4, #0]
   16016:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:189
        }
        iterator = iterator->next;
   16018:	6864      	ldr	r4, [r4, #4]
   1601a:	e7f3      	b.n	16004 <c_list_find_elm+0x14>

0001601c <c_list_for_each_elm>:
c_list_for_each_elm():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:233
    return false;
}

bool c_list_for_each_elm(const c_list_ptr p, c_list_callback_t func,
                           void *arg1, void *arg2, void *arg3)
{
   1601c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1601e:	460d      	mov	r5, r1
   16020:	4616      	mov	r6, r2
   16022:	461f      	mov	r7, r3
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:236
    const c_list_type *list = p;

    if(list && func) {
   16024:	b908      	cbnz	r0, 1602a <c_list_for_each_elm+0xe>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:246
            }
            iterator = iterator->next;
        }
    }

    return true;
   16026:	2001      	movs	r0, #1
   16028:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:236 (discriminator 1)
    if(list && func) {
   1602a:	2900      	cmp	r1, #0
   1602c:	d0fb      	beq.n	16026 <c_list_for_each_elm+0xa>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:237
        c_data_node_type *iterator = list->head;
   1602e:	6804      	ldr	r4, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:238
        while(NULL != iterator) {
   16030:	2c00      	cmp	r4, #0
   16032:	d0f8      	beq.n	16026 <c_list_for_each_elm+0xa>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:239
            if(!func(iterator->data_ptr, arg1, arg2, arg3)) {
   16034:	9b06      	ldr	r3, [sp, #24]
   16036:	463a      	mov	r2, r7
   16038:	4631      	mov	r1, r6
   1603a:	6820      	ldr	r0, [r4, #0]
   1603c:	47a8      	blx	r5
   1603e:	b108      	cbz	r0, 16044 <c_list_for_each_elm+0x28>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:242
            iterator = iterator->next;
   16040:	6864      	ldr	r4, [r4, #4]
   16042:	e7f5      	b.n	16030 <c_list_for_each_elm+0x14>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:247
}
   16044:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016046 <scheduler_task::init()>:
_ZN14scheduler_task4initEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/scheduler_task.hpp:249
         * @warning  DO NOT USE FreeRTOS blocking API in this function
         * @note You should use init() instead of the constructor to initialize and allocate memory
         *       because the status of init() is checked and reported, but a failure at constructor
         *       will not be easily caught (or reported).
         */
        virtual bool init(void)   { return true; }
   16046:	2001      	movs	r0, #1
   16048:	4770      	bx	lr

0001604a <scheduler_task::regTlm()>:
_ZN14scheduler_task6regTlmEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/scheduler_task.hpp:256
        /**
         * Optional: Override this function to register your telemetry before FreeRTOS starts.
         * @return   true upon success.
         * @warning  DO NOT USE FreeRTOS blocking API in this function
         */
        virtual bool regTlm(void) { return true; }
   1604a:	2001      	movs	r0, #1
   1604c:	4770      	bx	lr

0001604e <scheduler_task::taskEntry()>:
_ZN14scheduler_task9taskEntryEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/scheduler_task.hpp:268
         * taskEntry() to take place before the run() method is called.
         *
         * @warning  Do not suspend your task otherwise all tasks will get suspended.
         * @return   true upon success.
         */
        virtual bool taskEntry(void) { return true; }
   1604e:	2001      	movs	r0, #1
   16050:	4770      	bx	lr

00016052 <__sputc_r>:
__sputc_r():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:689
_ELIDABLE_INLINE int __sputc_r(struct _reent *_ptr, int _c, FILE *_p) {
#ifdef __SCLE
	if ((_p->_flags & __SCLE) && _c == '\n')
	  __sputc_r (_ptr, '\r', _p);
#endif
	if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
   16052:	6893      	ldr	r3, [r2, #8]
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:684
_ELIDABLE_INLINE int __sputc_r(struct _reent *_ptr, int _c, FILE *_p) {
   16054:	b410      	push	{r4}
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:689
	if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
   16056:	3b01      	subs	r3, #1
   16058:	2b00      	cmp	r3, #0
   1605a:	6093      	str	r3, [r2, #8]
   1605c:	da08      	bge.n	16070 <__sputc_r+0x1e>
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:689 (discriminator 2)
   1605e:	6994      	ldr	r4, [r2, #24]
   16060:	42a3      	cmp	r3, r4
   16062:	db02      	blt.n	1606a <__sputc_r+0x18>
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:689 (discriminator 3)
   16064:	b2cb      	uxtb	r3, r1
   16066:	2b0a      	cmp	r3, #10
   16068:	d102      	bne.n	16070 <__sputc_r+0x1e>
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:693
		return (*_p->_p++ = _c);
	else
		return (__swbuf_r(_ptr, _c, _p));
}
   1606a:	bc10      	pop	{r4}
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:692
		return (__swbuf_r(_ptr, _c, _p));
   1606c:	f007 be0c 	b.w	1dc88 <__swbuf_r>
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:690
		return (*_p->_p++ = _c);
   16070:	6813      	ldr	r3, [r2, #0]
   16072:	1c58      	adds	r0, r3, #1
   16074:	6010      	str	r0, [r2, #0]
   16076:	7019      	strb	r1, [r3, #0]
   16078:	b2c8      	uxtb	r0, r1
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:693
}
   1607a:	bc10      	pop	{r4}
   1607c:	4770      	bx	lr
   1607e:	Address 0x000000000001607e is out of bounds.


00016080 <dbg_print(char const*, char const*)>:
_ZL9dbg_printPKcS0_():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:88
 * puts() uses very little stack space.
 */
static bool g_dbg_print = false;
static void dbg_print(const char *one, const char *two=NULL)
{
    if (g_dbg_print)
   16080:	4b0a      	ldr	r3, [pc, #40]	; (160ac <dbg_print(char const*, char const*)+0x2c>)
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:87
{
   16082:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:88
    if (g_dbg_print)
   16084:	781b      	ldrb	r3, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:87
{
   16086:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:88
    if (g_dbg_print)
   16088:	b17b      	cbz	r3, 160aa <dbg_print(char const*, char const*)+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:91
    {
        while(*one) {
            putchar(*one++);
   1608a:	4e09      	ldr	r6, [pc, #36]	; (160b0 <dbg_print(char const*, char const*)+0x30>)
   1608c:	1e44      	subs	r4, r0, #1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:90
        while(*one) {
   1608e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
   16092:	b121      	cbz	r1, 1609e <dbg_print(char const*, char const*)+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:91
            putchar(*one++);
   16094:	6830      	ldr	r0, [r6, #0]
   16096:	6882      	ldr	r2, [r0, #8]
   16098:	f7ff ffdb 	bl	16052 <__sputc_r>
   1609c:	e7f7      	b.n	1608e <dbg_print(char const*, char const*)+0xe>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:93
        }
        if (two) {
   1609e:	b125      	cbz	r5, 160aa <dbg_print(char const*, char const*)+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:94
            puts(two);
   160a0:	4628      	mov	r0, r5
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:97
        }
    }
}
   160a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:94
            puts(two);
   160a6:	f006 b923 	b.w	1c2f0 <puts>
   160aa:	bd70      	pop	{r4, r5, r6, pc}
   160ac:	2007c55c 	.word	0x2007c55c
   160b0:	2007c0e4 	.word	0x2007c0e4

000160b4 <printline(char const*, char const*)>:
_ZL9printlinePKcS0_():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:100

static void printline(const char *one, const char *two=NULL)
{
   160b4:	b570      	push	{r4, r5, r6, lr}
   160b6:	460c      	mov	r4, r1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:102
    while(*one) {
        putchar(*one++);
   160b8:	4e0b      	ldr	r6, [pc, #44]	; (160e8 <printline(char const*, char const*)+0x34>)
   160ba:	1e45      	subs	r5, r0, #1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:101
    while(*one) {
   160bc:	f815 1f01 	ldrb.w	r1, [r5, #1]!
   160c0:	b121      	cbz	r1, 160cc <printline(char const*, char const*)+0x18>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:102
        putchar(*one++);
   160c2:	6830      	ldr	r0, [r6, #0]
   160c4:	6882      	ldr	r2, [r0, #8]
   160c6:	f7ff ffc4 	bl	16052 <__sputc_r>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:101
    while(*one) {
   160ca:	e7f7      	b.n	160bc <printline(char const*, char const*)+0x8>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:105
    }

    if (two) {
   160cc:	b124      	cbz	r4, 160d8 <printline(char const*, char const*)+0x24>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:106
        puts(two);
   160ce:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:111
    }
    else {
        putchar('\n');
    }
}
   160d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:106
        puts(two);
   160d4:	f006 b90c 	b.w	1c2f0 <puts>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:109
        putchar('\n');
   160d8:	4b03      	ldr	r3, [pc, #12]	; (160e8 <printline(char const*, char const*)+0x34>)
   160da:	210a      	movs	r1, #10
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:111
}
   160dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:109
        putchar('\n');
   160e0:	6818      	ldr	r0, [r3, #0]
   160e2:	6882      	ldr	r2, [r0, #8]
   160e4:	f7ff bfb5 	b.w	16052 <__sputc_r>
   160e8:	2007c0e4 	.word	0x2007c0e4

000160ec <scheduler_c_task_private(void*)>:
_Z24scheduler_c_task_privatePv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:122
void scheduler_c_task_private(void *task_ptr)
{
    scheduler_task& task = *(scheduler_task*)task_ptr;

    /* Have the responsible task call taskEntry() for each task */
    if (gTaskEntryTaskHandle == task.getTaskHandle()) {
   160ec:	4b3f      	ldr	r3, [pc, #252]	; (161ec <scheduler_c_task_private(void*)+0x100>)
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:118
{
   160ee:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:122
    if (gTaskEntryTaskHandle == task.getTaskHandle()) {
   160f2:	681a      	ldr	r2, [r3, #0]
   160f4:	6903      	ldr	r3, [r0, #16]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:118
{
   160f6:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:122
    if (gTaskEntryTaskHandle == task.getTaskHandle()) {
   160f8:	429a      	cmp	r2, r3
   160fa:	d136      	bne.n	1616a <scheduler_c_task_private(void*)+0x7e>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:124
        bool failure = false;
        uint32_t taskCount = 0;
   160fc:	2700      	movs	r7, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:123
        bool failure = false;
   160fe:	463d      	mov	r5, r7
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:126

        dbg_print("*  ");
   16100:	2100      	movs	r1, #0
   16102:	483b      	ldr	r0, [pc, #236]	; (161f0 <scheduler_c_task_private(void*)+0x104>)
   16104:	f7ff ffbc 	bl	16080 <dbg_print(char const*, char const*)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:127
        dbg_print(task.mName, " task calling taskEntry() for all tasks ... ");
   16108:	493a      	ldr	r1, [pc, #232]	; (161f4 <scheduler_c_task_private(void*)+0x108>)
   1610a:	6a60      	ldr	r0, [r4, #36]	; 0x24
   1610c:	f7ff ffb8 	bl	16080 <dbg_print(char const*, char const*)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:128
        dbg_print("*  Each task will then enter the run() loop\n");
   16110:	2100      	movs	r1, #0
   16112:	4839      	ldr	r0, [pc, #228]	; (161f8 <scheduler_c_task_private(void*)+0x10c>)
   16114:	f7ff ffb4 	bl	16080 <dbg_print(char const*, char const*)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:130

        task_list_t *e = gpTaskList;
   16118:	4b38      	ldr	r3, [pc, #224]	; (161fc <scheduler_c_task_private(void*)+0x110>)
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:137
            scheduler_task *t = e->task;
            e = e->next;
            ++taskCount;

            if (!t->taskEntry()) {
                printline(t->mName, "  --> FAILED taskEntry()");
   1611a:	f8df 90ec 	ldr.w	r9, [pc, #236]	; 16208 <scheduler_c_task_private(void*)+0x11c>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:130
        task_list_t *e = gpTaskList;
   1611e:	681e      	ldr	r6, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:131
        while (NULL != e) {
   16120:	b18e      	cbz	r6, 16146 <scheduler_c_task_private(void*)+0x5a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:132
            scheduler_task *t = e->task;
   16122:	f8d6 8000 	ldr.w	r8, [r6]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:134
            ++taskCount;
   16126:	3701      	adds	r7, #1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:136
            if (!t->taskEntry()) {
   16128:	f8d8 3000 	ldr.w	r3, [r8]
   1612c:	4640      	mov	r0, r8
   1612e:	691b      	ldr	r3, [r3, #16]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:133
            e = e->next;
   16130:	6876      	ldr	r6, [r6, #4]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:136
            if (!t->taskEntry()) {
   16132:	4798      	blx	r3
   16134:	2800      	cmp	r0, #0
   16136:	d1f3      	bne.n	16120 <scheduler_c_task_private(void*)+0x34>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:137
                printline(t->mName, "  --> FAILED taskEntry()");
   16138:	4649      	mov	r1, r9
   1613a:	f8d8 0024 	ldr.w	r0, [r8, #36]	; 0x24
   1613e:	f7ff ffb9 	bl	160b4 <printline(char const*, char const*)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:138
                failure = true;
   16142:	2501      	movs	r5, #1
   16144:	e7ec      	b.n	16120 <scheduler_c_task_private(void*)+0x34>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:142
            }
        }

        if (failure) {
   16146:	b955      	cbnz	r5, 1615e <scheduler_c_task_private(void*)+0x72>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:149 (discriminator 3)
            vTaskEndScheduler();
        }
        else {
            /* Give permission for everyone to start the run() loop */
            for (uint32_t i=0; i < taskCount; i++) {
                xSemaphoreGive(gRunTaskSemaphore);
   16148:	4e2d      	ldr	r6, [pc, #180]	; (16200 <scheduler_c_task_private(void*)+0x114>)
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:148 (discriminator 3)
            for (uint32_t i=0; i < taskCount; i++) {
   1614a:	42af      	cmp	r7, r5
   1614c:	d00d      	beq.n	1616a <scheduler_c_task_private(void*)+0x7e>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:149 (discriminator 2)
                xSemaphoreGive(gRunTaskSemaphore);
   1614e:	2300      	movs	r3, #0
   16150:	6830      	ldr	r0, [r6, #0]
   16152:	461a      	mov	r2, r3
   16154:	4619      	mov	r1, r3
   16156:	f000 fb43 	bl	167e0 <xQueueGenericSend>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:148 (discriminator 2)
            for (uint32_t i=0; i < taskCount; i++) {
   1615a:	3501      	adds	r5, #1
   1615c:	e7f5      	b.n	1614a <scheduler_c_task_private(void*)+0x5e>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:143
            printline("ERROR: Killing FreeRTOS due to error(s)");
   1615e:	4631      	mov	r1, r6
   16160:	4828      	ldr	r0, [pc, #160]	; (16204 <scheduler_c_task_private(void*)+0x118>)
   16162:	f7ff ffa7 	bl	160b4 <printline(char const*, char const*)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:144
            vTaskEndScheduler();
   16166:	f000 fee5 	bl	16f34 <vTaskEndScheduler>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:155
            }
        }
    }

    // Wait until we're given the go ahead by the task giving semaphore above
    xSemaphoreTake(gRunTaskSemaphore, portMAX_DELAY);
   1616a:	2300      	movs	r3, #0
   1616c:	4824      	ldr	r0, [pc, #144]	; (16200 <scheduler_c_task_private(void*)+0x114>)
   1616e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16172:	4619      	mov	r1, r3
   16174:	6800      	ldr	r0, [r0, #0]
   16176:	f000 fc3b 	bl	169f0 <xQueueGenericReceive>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:157

    TickType_t xLastWakeTime = xTaskGetTickCount();
   1617a:	f000 fef3 	bl	16f64 <xTaskGetTickCount>
   1617e:	ae02      	add	r6, sp, #8
   16180:	f846 0d04 	str.w	r0, [r6, #-4]!
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:158
    TickType_t xNextStatTime = xTaskGetTickCount();
   16184:	f000 feee 	bl	16f64 <xTaskGetTickCount>
   16188:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:170
        }
        #endif

        // Run the task code and suspend when an error occurs
        if (!task.run((void*)task.mParam)) {
            printline(task.mName, " --> FAILURE detected; suspending this task ...");
   1618a:	f8df 8080 	ldr.w	r8, [pc, #128]	; 1620c <scheduler_c_task_private(void*)+0x120>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:163
        if (task.mQueueSet) {
   1618e:	6860      	ldr	r0, [r4, #4]
   16190:	b118      	cbz	r0, 1619a <scheduler_c_task_private(void*)+0xae>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:164
            task.mQueueSetType = xQueueSelectFromSet(task.mQueueSet, task.mQueueSetBlockTime);
   16192:	68e1      	ldr	r1, [r4, #12]
   16194:	f000 fd05 	bl	16ba2 <xQueueSelectFromSet>
   16198:	60a0      	str	r0, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:169
        if (!task.run((void*)task.mParam)) {
   1619a:	6823      	ldr	r3, [r4, #0]
   1619c:	6aa1      	ldr	r1, [r4, #40]	; 0x28
   1619e:	695b      	ldr	r3, [r3, #20]
   161a0:	4620      	mov	r0, r4
   161a2:	4798      	blx	r3
   161a4:	4607      	mov	r7, r0
   161a6:	b930      	cbnz	r0, 161b6 <scheduler_c_task_private(void*)+0xca>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:170
            printline(task.mName, " --> FAILURE detected; suspending this task ...");
   161a8:	6a60      	ldr	r0, [r4, #36]	; 0x24
   161aa:	4641      	mov	r1, r8
   161ac:	f7ff ff82 	bl	160b4 <printline(char const*, char const*)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:171
            vTaskSuspend(0);
   161b0:	4638      	mov	r0, r7
   161b2:	f001 f875 	bl	172a0 <vTaskSuspend>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:173
        }
        ++(task.mRunCount);
   161b6:	69a3      	ldr	r3, [r4, #24]
   161b8:	3301      	adds	r3, #1
   161ba:	61a3      	str	r3, [r4, #24]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:176

        // Update the task statistics once in a short while :
        if (0 != task.mStatUpdateRateMs && xTaskGetTickCount() > xNextStatTime) {
   161bc:	6a23      	ldr	r3, [r4, #32]
   161be:	b11b      	cbz	r3, 161c8 <scheduler_c_task_private(void*)+0xdc>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:176 (discriminator 1)
   161c0:	f000 fed0 	bl	16f64 <xTaskGetTickCount>
   161c4:	4285      	cmp	r5, r0
   161c6:	d306      	bcc.n	161d6 <scheduler_c_task_private(void*)+0xea>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:184
            // Convert to stack size in bytes instead of 4 bytes for this ARM CPU
            task.mFreeStack *= sizeof(int);
        }

        // Delay if set
        if (task.mTaskDelayMs) {
   161c8:	69e1      	ldr	r1, [r4, #28]
   161ca:	2900      	cmp	r1, #0
   161cc:	d0df      	beq.n	1618e <scheduler_c_task_private(void*)+0xa2>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:185
            vTaskDelayUntil( &xLastWakeTime, OS_MS(task.mTaskDelayMs));
   161ce:	4630      	mov	r0, r6
   161d0:	f000 ffc6 	bl	17160 <vTaskDelayUntil>
   161d4:	e7db      	b.n	1618e <scheduler_c_task_private(void*)+0xa2>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:177
            xNextStatTime = xTaskGetTickCount() + (task.mStatUpdateRateMs / MS_PER_TICK());
   161d6:	f000 fec5 	bl	16f64 <xTaskGetTickCount>
   161da:	6a25      	ldr	r5, [r4, #32]
   161dc:	4405      	add	r5, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:178
            task.mFreeStack = uxTaskGetStackHighWaterMark(task.mHandle);
   161de:	6920      	ldr	r0, [r4, #16]
   161e0:	f001 f936 	bl	17450 <uxTaskGetStackHighWaterMark>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:180
            task.mFreeStack *= sizeof(int);
   161e4:	0080      	lsls	r0, r0, #2
   161e6:	6160      	str	r0, [r4, #20]
   161e8:	e7ee      	b.n	161c8 <scheduler_c_task_private(void*)+0xdc>
   161ea:	bf00      	nop
   161ec:	2007c564 	.word	0x2007c564
   161f0:	00021ac7 	.word	0x00021ac7
   161f4:	00021acb 	.word	0x00021acb
   161f8:	00021af8 	.word	0x00021af8
   161fc:	2007c558 	.word	0x2007c558
   16200:	2007c560 	.word	0x2007c560
   16204:	00021b3e 	.word	0x00021b3e
   16208:	00021b25 	.word	0x00021b25
   1620c:	00021b66 	.word	0x00021b66

00016210 <scheduler_init_all(bool)>:
_Z18scheduler_init_allb():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:191
        }
    }
}

bool scheduler_init_all(bool register_internal_tlm)
{
   16210:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:196
    bool failure = false;
    uint32_t taskCount = 0;

    /* If no tasks ... */
    if (NULL == gpTaskList) {
   16214:	4d59      	ldr	r5, [pc, #356]	; (1637c <scheduler_init_all(bool)+0x16c>)
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:191
{
   16216:	4680      	mov	r8, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:196
    if (NULL == gpTaskList) {
   16218:	6829      	ldr	r1, [r5, #0]
   1621a:	b939      	cbnz	r1, 1622c <scheduler_init_all(bool)+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:197
        printline("ERROR: NO tasks added by scheduler_add_task()");
   1621c:	4858      	ldr	r0, [pc, #352]	; (16380 <scheduler_init_all(bool)+0x170>)
   1621e:	f7ff ff49 	bl	160b4 <printline(char const*, char const*)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:199
        failure = true;
        return failure;
   16222:	2401      	movs	r4, #1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:314
            }
        }
    } while(0);

    return failure;
}
   16224:	4620      	mov	r0, r4
   16226:	b003      	add	sp, #12
   16228:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:193
    uint32_t taskCount = 0;
   1622c:	f04f 0900 	mov.w	r9, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:192
    bool failure = false;
   16230:	464c      	mov	r4, r9
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:202
    dbg_print("*  Creating tasks ...\n");
   16232:	2100      	movs	r1, #0
   16234:	4853      	ldr	r0, [pc, #332]	; (16384 <scheduler_init_all(bool)+0x174>)
   16236:	f7ff ff23 	bl	16080 <dbg_print(char const*, char const*)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   1623a:	f8df b178 	ldr.w	fp, [pc, #376]	; 163b4 <scheduler_init_all(bool)+0x1a4>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:204
        task_list_t *e = gpTaskList;
   1623e:	682e      	ldr	r6, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:221
                printline(task->mName, "  --> FAILED xTaskCreate()");
   16240:	f8df a174 	ldr.w	sl, [pc, #372]	; 163b8 <scheduler_init_all(bool)+0x1a8>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:205
        while (NULL != e) {
   16244:	b1ce      	cbz	r6, 1627a <scheduler_init_all(bool)+0x6a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:207
            scheduler_task *task = e->task;
   16246:	6837      	ldr	r7, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:208
            e = e->next;
   16248:	6876      	ldr	r6, [r6, #4]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   1624a:	f107 0310 	add.w	r3, r7, #16
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:216
                             STACK_BYTES(task->mStackSize),  /* Stack */
   1624e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   16250:	9301      	str	r3, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:210
            UBaseType_t taskPriority = task->mPriority;
   16252:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   16256:	f3c2 028f 	ubfx	r2, r2, #2, #16
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:210
            UBaseType_t taskPriority = task->mPriority;
   1625a:	9300      	str	r3, [sp, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   1625c:	6a79      	ldr	r1, [r7, #36]	; 0x24
   1625e:	463b      	mov	r3, r7
   16260:	4658      	mov	r0, fp
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:206
            ++taskCount;
   16262:	f109 0901 	add.w	r9, r9, #1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   16266:	f000 fd27 	bl	16cb8 <xTaskCreate>
   1626a:	2800      	cmp	r0, #0
   1626c:	d1ea      	bne.n	16244 <scheduler_init_all(bool)+0x34>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:221
                printline(task->mName, "  --> FAILED xTaskCreate()");
   1626e:	4651      	mov	r1, sl
   16270:	6a78      	ldr	r0, [r7, #36]	; 0x24
   16272:	f7ff ff1f 	bl	160b4 <printline(char const*, char const*)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:222
                failure = true;
   16276:	2401      	movs	r4, #1
   16278:	e7e4      	b.n	16244 <scheduler_init_all(bool)+0x34>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:227
    gRunTaskSemaphore = xSemaphoreCreateCounting(taskCount, 0);
   1627a:	4631      	mov	r1, r6
   1627c:	4648      	mov	r0, r9
   1627e:	f000 faa6 	bl	167ce <xQueueCreateCountingSemaphore>
   16282:	4b41      	ldr	r3, [pc, #260]	; (16388 <scheduler_init_all(bool)+0x178>)
   16284:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:228
    if (NULL == gRunTaskSemaphore) {
   16286:	b920      	cbnz	r0, 16292 <scheduler_init_all(bool)+0x82>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:229
        printline("ERROR: Creating counting semaphore");
   16288:	4631      	mov	r1, r6
   1628a:	4840      	ldr	r0, [pc, #256]	; (1638c <scheduler_init_all(bool)+0x17c>)
   1628c:	f7ff ff12 	bl	160b4 <printline(char const*, char const*)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:230
        failure = true;
   16290:	2401      	movs	r4, #1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:237
    dbg_print("*  Initializing tasks ...\n");
   16292:	2100      	movs	r1, #0
   16294:	483e      	ldr	r0, [pc, #248]	; (16390 <scheduler_init_all(bool)+0x180>)
   16296:	f7ff fef3 	bl	16080 <dbg_print(char const*, char const*)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:246
                printline(task->getTaskName(), "  --> FAILED init()");
   1629a:	f8df 9120 	ldr.w	r9, [pc, #288]	; 163bc <scheduler_init_all(bool)+0x1ac>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:239
        task_list_t *e = gpTaskList;
   1629e:	682e      	ldr	r6, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:240
        while (NULL != e)
   162a0:	b16e      	cbz	r6, 162be <scheduler_init_all(bool)+0xae>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:242
            scheduler_task *task = e->task;
   162a2:	6837      	ldr	r7, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:243
            e = e->next;
   162a4:	6876      	ldr	r6, [r6, #4]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:245
            if (!task->init()) {
   162a6:	683b      	ldr	r3, [r7, #0]
   162a8:	4638      	mov	r0, r7
   162aa:	689b      	ldr	r3, [r3, #8]
   162ac:	4798      	blx	r3
   162ae:	2800      	cmp	r0, #0
   162b0:	d1f6      	bne.n	162a0 <scheduler_init_all(bool)+0x90>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:246
                printline(task->getTaskName(), "  --> FAILED init()");
   162b2:	4649      	mov	r1, r9
   162b4:	6a78      	ldr	r0, [r7, #36]	; 0x24
   162b6:	f7ff fefd 	bl	160b4 <printline(char const*, char const*)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:247
                failure = true;
   162ba:	2401      	movs	r4, #1
   162bc:	e7f0      	b.n	162a0 <scheduler_init_all(bool)+0x90>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:254
    dbg_print("*  Registering tasks' telemetry ...\n");
   162be:	4631      	mov	r1, r6
   162c0:	4834      	ldr	r0, [pc, #208]	; (16394 <scheduler_init_all(bool)+0x184>)
   162c2:	f7ff fedd 	bl	16080 <dbg_print(char const*, char const*)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:256
        task_list_t *e = gpTaskList;
   162c6:	682f      	ldr	r7, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:257
        while (NULL != e)
   162c8:	b387      	cbz	r7, 1632c <scheduler_init_all(bool)+0x11c>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:260
            e = e->next;
   162ca:	cfc0      	ldmia	r7, {r6, r7}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:262
            if (!task->regTlm()) {
   162cc:	6833      	ldr	r3, [r6, #0]
   162ce:	4630      	mov	r0, r6
   162d0:	68db      	ldr	r3, [r3, #12]
   162d2:	4798      	blx	r3
   162d4:	2800      	cmp	r0, #0
   162d6:	d04c      	beq.n	16372 <scheduler_init_all(bool)+0x162>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:267
            if (register_internal_tlm) {
   162d8:	f1b8 0f00 	cmp.w	r8, #0
   162dc:	d023      	beq.n	16326 <scheduler_init_all(bool)+0x116>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:269
                if (!tlm_variable_register(comp, "free_stack", &(task->mFreeStack),
   162de:	f04f 0901 	mov.w	r9, #1
   162e2:	f04f 0a02 	mov.w	sl, #2
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:268
                tlm_component *comp = tlm_component_add(task->mName);
   162e6:	6a70      	ldr	r0, [r6, #36]	; 0x24
   162e8:	f7ff fb20 	bl	1592c <tlm_component_add>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:269
                if (!tlm_variable_register(comp, "free_stack", &(task->mFreeStack),
   162ec:	2304      	movs	r3, #4
   162ee:	f106 0214 	add.w	r2, r6, #20
   162f2:	4929      	ldr	r1, [pc, #164]	; (16398 <scheduler_init_all(bool)+0x188>)
   162f4:	e88d 0600 	stmia.w	sp, {r9, sl}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:268
                tlm_component *comp = tlm_component_add(task->mName);
   162f8:	4683      	mov	fp, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:269
                if (!tlm_variable_register(comp, "free_stack", &(task->mFreeStack),
   162fa:	f7ff fb67 	bl	159cc <tlm_variable_register>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:273
                if (!tlm_variable_register(comp, "run_count", &(task->mRunCount),
   162fe:	e88d 0600 	stmia.w	sp, {r9, sl}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:271
                    failure = true;
   16302:	2800      	cmp	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:273
                if (!tlm_variable_register(comp, "run_count", &(task->mRunCount),
   16304:	f04f 0304 	mov.w	r3, #4
   16308:	f106 0218 	add.w	r2, r6, #24
   1630c:	4923      	ldr	r1, [pc, #140]	; (1639c <scheduler_init_all(bool)+0x18c>)
   1630e:	4658      	mov	r0, fp
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:271
                    failure = true;
   16310:	bf08      	it	eq
   16312:	464c      	moveq	r4, r9
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:273
                if (!tlm_variable_register(comp, "run_count", &(task->mRunCount),
   16314:	f7ff fb5a 	bl	159cc <tlm_variable_register>
   16318:	b928      	cbnz	r0, 16326 <scheduler_init_all(bool)+0x116>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:279
                printline(task->mName, "  --> FAILED telemetry registration");
   1631a:	4921      	ldr	r1, [pc, #132]	; (163a0 <scheduler_init_all(bool)+0x190>)
   1631c:	6a70      	ldr	r0, [r6, #36]	; 0x24
   1631e:	f7ff fec9 	bl	160b4 <printline(char const*, char const*)>
   16322:	2401      	movs	r4, #1
   16324:	e7d0      	b.n	162c8 <scheduler_init_all(bool)+0xb8>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:278
            if (failure) {
   16326:	2c00      	cmp	r4, #0
   16328:	d0ce      	beq.n	162c8 <scheduler_init_all(bool)+0xb8>
   1632a:	e7f6      	b.n	1631a <scheduler_init_all(bool)+0x10a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:283
        dbg_print("*  Restoring disk telemetry\n");
   1632c:	4639      	mov	r1, r7
   1632e:	481d      	ldr	r0, [pc, #116]	; (163a4 <scheduler_init_all(bool)+0x194>)
   16330:	f7ff fea6 	bl	16080 <dbg_print(char const*, char const*)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:285
        FILE *fd = fopen(SYS_CFG_DISK_TLM_NAME, "r");
   16334:	491c      	ldr	r1, [pc, #112]	; (163a8 <scheduler_init_all(bool)+0x198>)
   16336:	481d      	ldr	r0, [pc, #116]	; (163ac <scheduler_init_all(bool)+0x19c>)
   16338:	f004 fbe8 	bl	1ab0c <fopen>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:286
        if (fd) {
   1633c:	4606      	mov	r6, r0
   1633e:	b120      	cbz	r0, 1634a <scheduler_init_all(bool)+0x13a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:287
            tlm_stream_decode_file(fd);
   16340:	f7ff fb96 	bl	15a70 <tlm_stream_decode_file>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:288
            fclose(fd);
   16344:	4630      	mov	r0, r6
   16346:	f004 f987 	bl	1a658 <fclose>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:301
        task_list_t *e = gpTaskList;
   1634a:	2100      	movs	r1, #0
   1634c:	682a      	ldr	r2, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:300
        uint32_t highestStack = 0;
   1634e:	460d      	mov	r5, r1
   16350:	4b17      	ldr	r3, [pc, #92]	; (163b0 <scheduler_init_all(bool)+0x1a0>)
   16352:	6818      	ldr	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:302
        while (NULL != e) {
   16354:	b142      	cbz	r2, 16368 <scheduler_init_all(bool)+0x158>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:303
            scheduler_task *task = e->task;
   16356:	6817      	ldr	r7, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:304
            e = e->next;
   16358:	6852      	ldr	r2, [r2, #4]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:306
            if (task->mStackSize > highestStack) {
   1635a:	6afe      	ldr	r6, [r7, #44]	; 0x2c
   1635c:	42b5      	cmp	r5, r6
   1635e:	d2f9      	bcs.n	16354 <scheduler_init_all(bool)+0x144>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:308
                gTaskEntryTaskHandle = task->mHandle;
   16360:	6938      	ldr	r0, [r7, #16]
   16362:	4635      	mov	r5, r6
   16364:	2101      	movs	r1, #1
   16366:	e7f5      	b.n	16354 <scheduler_init_all(bool)+0x144>
   16368:	2900      	cmp	r1, #0
   1636a:	f43f af5b 	beq.w	16224 <scheduler_init_all(bool)+0x14>
   1636e:	6018      	str	r0, [r3, #0]
   16370:	e758      	b.n	16224 <scheduler_init_all(bool)+0x14>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:267
            if (register_internal_tlm) {
   16372:	f1b8 0f00 	cmp.w	r8, #0
   16376:	d0d0      	beq.n	1631a <scheduler_init_all(bool)+0x10a>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:263
                failure = true;
   16378:	4644      	mov	r4, r8
   1637a:	e7b0      	b.n	162de <scheduler_init_all(bool)+0xce>
   1637c:	2007c558 	.word	0x2007c558
   16380:	00021995 	.word	0x00021995
   16384:	000219c3 	.word	0x000219c3
   16388:	2007c560 	.word	0x2007c560
   1638c:	000219f5 	.word	0x000219f5
   16390:	00021a18 	.word	0x00021a18
   16394:	00021a47 	.word	0x00021a47
   16398:	00021a6c 	.word	0x00021a6c
   1639c:	00021a77 	.word	0x00021a77
   163a0:	00021a81 	.word	0x00021a81
   163a4:	00021aa5 	.word	0x00021aa5
   163a8:	00021e12 	.word	0x00021e12
   163ac:	00021ac2 	.word	0x00021ac2
   163b0:	2007c564 	.word	0x2007c564
   163b4:	000160ed 	.word	0x000160ed
   163b8:	000219da 	.word	0x000219da
   163bc:	00021a33 	.word	0x00021a33

000163c0 <scheduler_add_task(scheduler_task*)>:
_Z18scheduler_add_taskP14scheduler_task():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:317

void scheduler_add_task(scheduler_task* task)
{
   163c0:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:318
    if (NULL != task)
   163c2:	4604      	mov	r4, r0
   163c4:	b138      	cbz	r0, 163d6 <scheduler_add_task(scheduler_task*)+0x16>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:321
    {
        /* Insert new task at the beginning */
        task_list_t *newEntry = new task_list_t;
   163c6:	2008      	movs	r0, #8
   163c8:	f002 f86e 	bl	184a8 <operator new(unsigned int)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:323
        if (NULL != newEntry) {
            newEntry->next = gpTaskList;
   163cc:	4b02      	ldr	r3, [pc, #8]	; (163d8 <scheduler_add_task(scheduler_task*)+0x18>)
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:324
            newEntry->task = task;
   163ce:	6004      	str	r4, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:323
            newEntry->next = gpTaskList;
   163d0:	681a      	ldr	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:325
            gpTaskList = newEntry;
   163d2:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:323
            newEntry->next = gpTaskList;
   163d4:	6042      	str	r2, [r0, #4]
   163d6:	bd10      	pop	{r4, pc}
   163d8:	2007c558 	.word	0x2007c558

000163dc <scheduler_start(bool, bool)>:
_Z15scheduler_startbb():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:332
    }
}

void scheduler_start(bool dp, bool register_internal_tlm)
{
    g_dbg_print = dp;
   163dc:	4b0b      	ldr	r3, [pc, #44]	; (1640c <scheduler_start(bool, bool)+0x30>)
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:331
{
   163de:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:332
    g_dbg_print = dp;
   163e0:	7018      	strb	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:335

    /* If no failure, start the FreeRTOS scheduler */
    if (!scheduler_init_all(register_internal_tlm))
   163e2:	4608      	mov	r0, r1
   163e4:	f7ff ff14 	bl	16210 <scheduler_init_all(bool)>
   163e8:	4604      	mov	r4, r0
   163ea:	b958      	cbnz	r0, 16404 <scheduler_start(bool, bool)+0x28>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:337
    {
        dbg_print("*  Starting scheduler ...\n");
   163ec:	4601      	mov	r1, r0
   163ee:	4808      	ldr	r0, [pc, #32]	; (16410 <scheduler_start(bool, bool)+0x34>)
   163f0:	f7ff fe46 	bl	16080 <dbg_print(char const*, char const*)>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:340

        // vTaskStartScheduler() should not return
        vTaskStartScheduler();
   163f4:	f000 fd6c 	bl	16ed0 <vTaskStartScheduler>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:341
        printline("ERROR: Someone killed the scheduler");
   163f8:	4621      	mov	r1, r4
   163fa:	4806      	ldr	r0, [pc, #24]	; (16414 <scheduler_start(bool, bool)+0x38>)
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:346
    }
    else {
        printline("ERROR: Refusing to start OS scheduler due to error(s)");
    }
}
   163fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:344
        printline("ERROR: Refusing to start OS scheduler due to error(s)");
   16400:	f7ff be58 	b.w	160b4 <printline(char const*, char const*)>
   16404:	2100      	movs	r1, #0
   16406:	4804      	ldr	r0, [pc, #16]	; (16418 <scheduler_start(bool, bool)+0x3c>)
   16408:	e7f8      	b.n	163fc <scheduler_start(bool, bool)+0x20>
   1640a:	bf00      	nop
   1640c:	2007c55c 	.word	0x2007c55c
   16410:	00021920 	.word	0x00021920
   16414:	0002193b 	.word	0x0002193b
   16418:	0002195f 	.word	0x0002195f

0001641c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>:
_ZN14scheduler_taskC2EPKcmhPv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:350



scheduler_task::scheduler_task(const char *name, uint32_t stack, uint8_t priority, void *param) :
   1641c:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:364
   mTaskDelayMs(0),
   mStatUpdateRateMs(60 * 1000),
   mName(name),
   mParam(param),
   mStackSize(stack),
   mPriority(priority)
   1641e:	4d0b      	ldr	r5, [pc, #44]	; (1644c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)+0x30>)
   16420:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
   16424:	6005      	str	r5, [r0, #0]
   16426:	2500      	movs	r5, #0
   16428:	6045      	str	r5, [r0, #4]
   1642a:	6085      	str	r5, [r0, #8]
   1642c:	6105      	str	r5, [r0, #16]
   1642e:	6145      	str	r5, [r0, #20]
   16430:	6185      	str	r5, [r0, #24]
   16432:	61c5      	str	r5, [r0, #28]
   16434:	f64e 2560 	movw	r5, #60000	; 0xea60
   16438:	6241      	str	r1, [r0, #36]	; 0x24
   1643a:	9904      	ldr	r1, [sp, #16]
   1643c:	60c6      	str	r6, [r0, #12]
   1643e:	6205      	str	r5, [r0, #32]
   16440:	6281      	str	r1, [r0, #40]	; 0x28
   16442:	62c2      	str	r2, [r0, #44]	; 0x2c
   16444:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:367
{

}
   16448:	bd70      	pop	{r4, r5, r6, pc}
   1644a:	bf00      	nop
   1644c:	00021908 	.word	0x00021908

00016450 <scheduler_task::getTaskPtrByName(char const*)>:
_ZN14scheduler_task16getTaskPtrByNameEPKc():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:409

/**
 * Static functions:
 */
scheduler_task* scheduler_task::getTaskPtrByName(const char *name)
{
   16450:	b570      	push	{r4, r5, r6, lr}
   16452:	4606      	mov	r6, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:410
    task_list_t *e = gpTaskList;
   16454:	4b07      	ldr	r3, [pc, #28]	; (16474 <scheduler_task::getTaskPtrByName(char const*)+0x24>)
   16456:	681c      	ldr	r4, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:411
    while (NULL != e) {
   16458:	b14c      	cbz	r4, 1646e <scheduler_task::getTaskPtrByName(char const*)+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:412
        scheduler_task *task = e->task;
   1645a:	6825      	ldr	r5, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:415
        e = e->next;

        if (0 == strcmp(name, task->getTaskName())) {
   1645c:	4630      	mov	r0, r6
   1645e:	6a69      	ldr	r1, [r5, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:413
        e = e->next;
   16460:	6864      	ldr	r4, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:415
        if (0 == strcmp(name, task->getTaskName())) {
   16462:	f006 fa38 	bl	1c8d6 <strcmp>
   16466:	2800      	cmp	r0, #0
   16468:	d1f6      	bne.n	16458 <scheduler_task::getTaskPtrByName(char const*)+0x8>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:420
            return task;
        }
    }
    return NULL;
}
   1646a:	4628      	mov	r0, r5
   1646c:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:419
    return NULL;
   1646e:	4625      	mov	r5, r4
   16470:	e7fb      	b.n	1646a <scheduler_task::getTaskPtrByName(char const*)+0x1a>
   16472:	bf00      	nop
   16474:	2007c558 	.word	0x2007c558

00016478 <u0_dbg_put>:
u0_dbg_put():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:60

    return len;
}

void u0_dbg_put(const char *string)
{
   16478:	b510      	push	{r4, lr}
   1647a:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:63
    char* p = (char*) string;

    vPortEnterCritical();
   1647c:	f001 f8f4 	bl	17668 <vPortEnterCritical>
   16480:	3c01      	subs	r4, #1
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:64
    while(*p)
   16482:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   16486:	b918      	cbnz	r0, 16490 <u0_dbg_put+0x18>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:70
    {
        uart0_putchar(*p);
        p++;
    }
    vPortExitCritical();
}
   16488:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:69
    vPortExitCritical();
   1648c:	f001 b8fc 	b.w	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:66
        uart0_putchar(*p);
   16490:	f7fa fa60 	bl	10954 <uart0_putchar>
   16494:	e7f5      	b.n	16482 <u0_dbg_put+0xa>

00016496 <u0_dbg_printf>:
u0_dbg_printf():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:45
{
   16496:	b40f      	push	{r0, r1, r2, r3}
   16498:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:47
    char buff[256] = { 0 };
   1649a:	f44f 7580 	mov.w	r5, #256	; 0x100
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:45
{
   1649e:	b0c2      	sub	sp, #264	; 0x108
   164a0:	ac46      	add	r4, sp, #280	; 0x118
   164a2:	f854 6b04 	ldr.w	r6, [r4], #4
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:47
    char buff[256] = { 0 };
   164a6:	462a      	mov	r2, r5
   164a8:	2100      	movs	r1, #0
   164aa:	a802      	add	r0, sp, #8
   164ac:	f004 fd00 	bl	1aeb0 <memset>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:51
    len = vsnprintf(buff, sizeof(buff), format, args);
   164b0:	4623      	mov	r3, r4
   164b2:	4632      	mov	r2, r6
   164b4:	4629      	mov	r1, r5
   164b6:	a802      	add	r0, sp, #8
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:50
    va_start(args, format);
   164b8:	9401      	str	r4, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:51
    len = vsnprintf(buff, sizeof(buff), format, args);
   164ba:	f007 fbd7 	bl	1dc6c <vsniprintf>
   164be:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:54
    u0_dbg_put(buff);
   164c0:	a802      	add	r0, sp, #8
   164c2:	f7ff ffd9 	bl	16478 <u0_dbg_put>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:57
}
   164c6:	4620      	mov	r0, r4
   164c8:	b042      	add	sp, #264	; 0x108
   164ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   164ce:	b004      	add	sp, #16
   164d0:	4770      	bx	lr

000164d2 <delay_us>:
delay_us():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:38
#include "fault_registers.h"



void delay_us(unsigned int microsec)
{
   164d2:	b570      	push	{r4, r5, r6, lr}
   164d4:	4606      	mov	r6, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:39
    const uint64_t now = sys_get_uptime_us();
   164d6:	f7f9 ff0f 	bl	102f8 <sys_get_uptime_us>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:40
    const uint64_t target = now + microsec;
   164da:	1984      	adds	r4, r0, r6
   164dc:	f141 0500 	adc.w	r5, r1, #0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:43 (discriminator 1)

    /* Overflow shouldn't occur with 64-bit variable */
    while (sys_get_uptime_us() < target)
   164e0:	f7f9 ff0a 	bl	102f8 <sys_get_uptime_us>
   164e4:	42a9      	cmp	r1, r5
   164e6:	bf08      	it	eq
   164e8:	42a0      	cmpeq	r0, r4
   164ea:	d3f9      	bcc.n	164e0 <delay_us+0xe>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:47
    {
        ;
    }
}
   164ec:	bd70      	pop	{r4, r5, r6, pc}

000164ee <is_freertos_running>:
is_freertos_running():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:66
        delay_us(1000 * millisec);
    }
}

char is_freertos_running()
{
   164ee:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:67
    return (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   164f0:	f000 ffbe 	bl	17470 <xTaskGetSchedulerState>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:68
}
   164f4:	1e83      	subs	r3, r0, #2
   164f6:	4258      	negs	r0, r3
   164f8:	4158      	adcs	r0, r3
   164fa:	bd08      	pop	{r3, pc}

000164fc <delay_ms>:
delay_ms():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:50
{
   164fc:	b510      	push	{r4, lr}
   164fe:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:55
    if(is_freertos_running())
   16500:	f7ff fff5 	bl	164ee <is_freertos_running>
   16504:	b120      	cbz	r0, 16510 <delay_ms+0x14>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:57
        vTaskDelay(OS_MS(millisec));
   16506:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:63
}
   16508:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:57
        vTaskDelay(OS_MS(millisec));
   1650c:	f000 be54 	b.w	171b8 <vTaskDelay>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:61
        delay_us(1000 * millisec);
   16510:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   16514:	4360      	muls	r0, r4
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:63
}
   16516:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:61
        delay_us(1000 * millisec);
   1651a:	f7ff bfda 	b.w	164d2 <delay_us>

0001651e <pvPortMalloc>:
pvPortMalloc():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:101
#endif

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
   1651e:	b510      	push	{r4, lr}
   16520:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:104
void *pvReturn;

	vTaskSuspendAll();
   16522:	f000 fd17 	bl	16f54 <vTaskSuspendAll>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:106
	{
		pvReturn = malloc( xWantedSize );
   16526:	4620      	mov	r0, r4
   16528:	f004 fc5e 	bl	1ade8 <malloc>
   1652c:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:109
		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
   1652e:	f000 fdab 	bl	17088 <xTaskResumeAll>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:113

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
   16532:	b90c      	cbnz	r4, 16538 <pvPortMalloc+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:116
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
   16534:	f001 f940 	bl	177b8 <vApplicationMallocFailedHook>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:122
		}
	}
	#endif

	return pvReturn;
}
   16538:	4620      	mov	r0, r4
   1653a:	bd10      	pop	{r4, pc}

0001653c <vPortFree>:
vPortFree():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:126
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
   1653c:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:127
	if( pv )
   1653e:	4604      	mov	r4, r0
   16540:	b140      	cbz	r0, 16554 <vPortFree+0x18>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:129
	{
		vTaskSuspendAll();
   16542:	f000 fd07 	bl	16f54 <vTaskSuspendAll>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:131
		{
			free( pv );
   16546:	4620      	mov	r0, r4
   16548:	f004 fc56 	bl	1adf8 <free>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:136
			traceFREE( pv, 0 );
		}
		( void ) xTaskResumeAll();
	}
}
   1654c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:134
		( void ) xTaskResumeAll();
   16550:	f000 bd9a 	b.w	17088 <xTaskResumeAll>
   16554:	bd10      	pop	{r4, pc}

00016556 <vListInitialise>:
vListInitialise():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:84
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   16556:	f100 0308 	add.w	r3, r0, #8
   1655a:	6043      	str	r3, [r0, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:88

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
   1655c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:92

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   16560:	60c3      	str	r3, [r0, #12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:93
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   16562:	6103      	str	r3, [r0, #16]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:95

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
   16564:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:88
	pxList->xListEnd.xItemValue = portMAX_DELAY;
   16566:	6082      	str	r2, [r0, #8]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:95
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
   16568:	6003      	str	r3, [r0, #0]
   1656a:	4770      	bx	lr

0001656c <vListInitialiseItem>:
vListInitialiseItem():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:107
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
   1656c:	2300      	movs	r3, #0
   1656e:	6103      	str	r3, [r0, #16]
   16570:	4770      	bx	lr

00016572 <vListInsertEnd>:
vListInsertEnd():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:118
}
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
   16572:	6843      	ldr	r3, [r0, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:130

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
   16574:	689a      	ldr	r2, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:129
	pxNewListItem->pxNext = pxIndex;
   16576:	604b      	str	r3, [r1, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:130
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
   16578:	608a      	str	r2, [r1, #8]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:135

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
   1657a:	689a      	ldr	r2, [r3, #8]
   1657c:	6051      	str	r1, [r2, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:136
	pxIndex->pxPrevious = pxNewListItem;
   1657e:	6099      	str	r1, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:141

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
   16580:	6803      	ldr	r3, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:139
	pxNewListItem->pvContainer = ( void * ) pxList;
   16582:	6108      	str	r0, [r1, #16]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:141
	( pxList->uxNumberOfItems )++;
   16584:	3301      	adds	r3, #1
   16586:	6003      	str	r3, [r0, #0]
   16588:	4770      	bx	lr

0001658a <vListInsert>:
vListInsert():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:148
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
   1658a:	680a      	ldr	r2, [r1, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:146
{
   1658c:	b530      	push	{r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:164
	new list item should be placed after it.  This ensures that TCB's which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
   1658e:	1c53      	adds	r3, r2, #1
   16590:	d10a      	bne.n	165a8 <vListInsert+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:166
	{
		pxIterator = pxList->xListEnd.pxPrevious;
   16592:	6903      	ldr	r3, [r0, #16]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:199
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
   16594:	685a      	ldr	r2, [r3, #4]
   16596:	604a      	str	r2, [r1, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:200
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
   16598:	6091      	str	r1, [r2, #8]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:201
	pxNewListItem->pxPrevious = pxIterator;
   1659a:	608b      	str	r3, [r1, #8]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:202
	pxIterator->pxNext = pxNewListItem;
   1659c:	6059      	str	r1, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:208

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
   1659e:	6803      	ldr	r3, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:206
	pxNewListItem->pvContainer = ( void * ) pxList;
   165a0:	6108      	str	r0, [r1, #16]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:208
	( pxList->uxNumberOfItems )++;
   165a2:	3301      	adds	r3, #1
   165a4:	6003      	str	r3, [r0, #0]
   165a6:	bd30      	pop	{r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:192
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   165a8:	f100 0308 	add.w	r3, r0, #8
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:192 (discriminator 1)
   165ac:	685c      	ldr	r4, [r3, #4]
   165ae:	6825      	ldr	r5, [r4, #0]
   165b0:	42aa      	cmp	r2, r5
   165b2:	d3ef      	bcc.n	16594 <vListInsert+0xa>
   165b4:	4623      	mov	r3, r4
   165b6:	e7f9      	b.n	165ac <vListInsert+0x22>

000165b8 <uxListRemove>:
uxListRemove():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:218
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   165b8:	6841      	ldr	r1, [r0, #4]
   165ba:	6882      	ldr	r2, [r0, #8]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:216
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
   165bc:	6903      	ldr	r3, [r0, #16]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:218
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   165be:	608a      	str	r2, [r1, #8]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:219
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
   165c0:	6882      	ldr	r2, [r0, #8]
   165c2:	6051      	str	r1, [r2, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:225

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
   165c4:	6859      	ldr	r1, [r3, #4]
   165c6:	4288      	cmp	r0, r1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:227
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
   165c8:	bf08      	it	eq
   165ca:	605a      	streq	r2, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:234
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pvContainer = NULL;
   165cc:	2200      	movs	r2, #0
   165ce:	6102      	str	r2, [r0, #16]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:235
	( pxList->uxNumberOfItems )--;
   165d0:	6818      	ldr	r0, [r3, #0]
   165d2:	3801      	subs	r0, #1
   165d4:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:238

	return pxList->uxNumberOfItems;
}
   165d6:	4770      	bx	lr

000165d8 <prvCopyDataToQueue>:
prvCopyDataToQueue():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1698

#endif /* configUSE_TRACE_FACILITY */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
   165d8:	b570      	push	{r4, r5, r6, lr}
   165da:	4615      	mov	r5, r2
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1706

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
   165dc:	6c02      	ldr	r2, [r0, #64]	; 0x40
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1698
{
   165de:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1704
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   165e0:	6b86      	ldr	r6, [r0, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1706
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
   165e2:	b942      	cbnz	r2, 165f6 <prvCopyDataToQueue+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1710
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   165e4:	6805      	ldr	r5, [r0, #0]
   165e6:	b99d      	cbnz	r5, 16610 <prvCopyDataToQueue+0x38>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1713
			{
				/* The mutex is no longer being held. */
				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
   165e8:	6840      	ldr	r0, [r0, #4]
   165ea:	f000 ff99 	bl	17520 <xTaskPriorityDisinherit>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1714
				pxQueue->pxMutexHolder = NULL;
   165ee:	6065      	str	r5, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1770
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   165f0:	3601      	adds	r6, #1
   165f2:	63a6      	str	r6, [r4, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1773

	return xReturn;
}
   165f4:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1723
	else if( xPosition == queueSEND_TO_BACK )
   165f6:	b96d      	cbnz	r5, 16614 <prvCopyDataToQueue+0x3c>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1725
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0. */
   165f8:	6880      	ldr	r0, [r0, #8]
   165fa:	f004 fc34 	bl	1ae66 <memcpy>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1726
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
   165fe:	68a3      	ldr	r3, [r4, #8]
   16600:	6c22      	ldr	r2, [r4, #64]	; 0x40
   16602:	4413      	add	r3, r2
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1727
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   16604:	6862      	ldr	r2, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1726
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
   16606:	60a3      	str	r3, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1727
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   16608:	4293      	cmp	r3, r2
   1660a:	d301      	bcc.n	16610 <prvCopyDataToQueue+0x38>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1729
			pxQueue->pcWriteTo = pxQueue->pcHead;
   1660c:	6823      	ldr	r3, [r4, #0]
   1660e:	60a3      	str	r3, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1699
BaseType_t xReturn = pdFALSE;
   16610:	2000      	movs	r0, #0
   16612:	e7ed      	b.n	165f0 <prvCopyDataToQueue+0x18>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1738
		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16614:	68c0      	ldr	r0, [r0, #12]
   16616:	f004 fc26 	bl	1ae66 <memcpy>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   1661a:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1661c:	68e2      	ldr	r2, [r4, #12]
   1661e:	425b      	negs	r3, r3
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1740
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   16620:	6821      	ldr	r1, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   16622:	441a      	add	r2, r3
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1740
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   16624:	428a      	cmp	r2, r1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   16626:	60e2      	str	r2, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1742
			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
   16628:	bf3e      	ittt	cc
   1662a:	6862      	ldrcc	r2, [r4, #4]
   1662c:	189b      	addcc	r3, r3, r2
   1662e:	60e3      	strcc	r3, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1749
		if( xPosition == queueOVERWRITE )
   16630:	2d02      	cmp	r5, #2
   16632:	d1ed      	bne.n	16610 <prvCopyDataToQueue+0x38>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1751
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   16634:	b10e      	cbz	r6, 1663a <prvCopyDataToQueue+0x62>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1757
				--uxMessagesWaiting;
   16636:	3e01      	subs	r6, #1
   16638:	e7ea      	b.n	16610 <prvCopyDataToQueue+0x38>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1699
BaseType_t xReturn = pdFALSE;
   1663a:	4630      	mov	r0, r6
   1663c:	e7d8      	b.n	165f0 <prvCopyDataToQueue+0x18>

0001663e <prvNotifyQueueSetContainer>:
prvNotifyQueueSetContainer():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCopyPosition )
	{
   1663e:	b573      	push	{r0, r1, r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2505
	Queue_t *pxQueueSetContainer = pxQueue->pxQueueSetContainer;
   16640:	6c85      	ldr	r5, [r0, #72]	; 0x48
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
	{
   16642:	460a      	mov	r2, r1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2513
		/* This function must be called form a critical section. */

		configASSERT( pxQueueSetContainer );
		configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );

		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
   16644:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   16646:	6ba9      	ldr	r1, [r5, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
	{
   16648:	9001      	str	r0, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2513
		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
   1664a:	4299      	cmp	r1, r3
   1664c:	d21a      	bcs.n	16684 <prvNotifyQueueSetContainer+0x46>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;

			traceQUEUE_SEND( pxQueueSetContainer );

			/* The data copied is the handle of the queue that contains data. */
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   1664e:	a901      	add	r1, sp, #4
   16650:	4628      	mov	r0, r5
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2515
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
   16652:	f895 4045 	ldrb.w	r4, [r5, #69]	; 0x45
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   16656:	f7ff ffbf 	bl	165d8 <prvCopyDataToQueue>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2515
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
   1665a:	b264      	sxtb	r4, r4
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2522

			if( cTxLock == queueUNLOCKED )
   1665c:	1c63      	adds	r3, r4, #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   1665e:	4606      	mov	r6, r0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2522
			if( cTxLock == queueUNLOCKED )
   16660:	d10b      	bne.n	1667a <prvNotifyQueueSetContainer+0x3c>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2524
			{
				if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
   16662:	6a6b      	ldr	r3, [r5, #36]	; 0x24
   16664:	b133      	cbz	r3, 16674 <prvNotifyQueueSetContainer+0x36>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2526
				{
					if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
   16666:	f105 0024 	add.w	r0, r5, #36	; 0x24
   1666a:	f000 fe81 	bl	17370 <xTaskRemoveFromEventList>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2529
					{
						/* The task waiting has a higher priority. */
						xReturn = pdTRUE;
   1666e:	2800      	cmp	r0, #0
   16670:	bf18      	it	ne
   16672:	2601      	movne	r6, #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2552
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
	}
   16674:	4630      	mov	r0, r6
   16676:	b002      	add	sp, #8
   16678:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2543
				pxQueueSetContainer->cTxLock = ( int8_t ) ( cTxLock + 1 );
   1667a:	3401      	adds	r4, #1
   1667c:	b264      	sxtb	r4, r4
   1667e:	f885 4045 	strb.w	r4, [r5, #69]	; 0x45
   16682:	e7f7      	b.n	16674 <prvNotifyQueueSetContainer+0x36>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2506
	BaseType_t xReturn = pdFALSE;
   16684:	2600      	movs	r6, #0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2551
		return xReturn;
   16686:	e7f5      	b.n	16674 <prvNotifyQueueSetContainer+0x36>

00016688 <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1777
{
   16688:	4603      	mov	r3, r0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1778
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
   1668a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1777
{
   1668c:	b410      	push	{r4}
   1668e:	4608      	mov	r0, r1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1778
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
   16690:	b162      	cbz	r2, 166ac <prvCopyDataFromQueue+0x24>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   16692:	68d9      	ldr	r1, [r3, #12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1781
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
   16694:	685c      	ldr	r4, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   16696:	4411      	add	r1, r2
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1781
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
   16698:	42a1      	cmp	r1, r4
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   1669a:	60d9      	str	r1, [r3, #12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1783
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
   1669c:	bf28      	it	cs
   1669e:	6819      	ldrcs	r1, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1791
}
   166a0:	bc10      	pop	{r4}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1783
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
   166a2:	bf28      	it	cs
   166a4:	60d9      	strcs	r1, [r3, #12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1789
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0. */
   166a6:	68d9      	ldr	r1, [r3, #12]
   166a8:	f004 bbdd 	b.w	1ae66 <memcpy>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1791
}
   166ac:	bc10      	pop	{r4}
   166ae:	4770      	bx	lr

000166b0 <prvUnlockQueue>:
prvUnlockQueue():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1795
{
   166b0:	b570      	push	{r4, r5, r6, lr}
   166b2:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1802
	taskENTER_CRITICAL();
   166b4:	f000 ffd8 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1804
		int8_t cTxLock = pxQueue->cTxLock;
   166b8:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1834
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   166bc:	f104 0624 	add.w	r6, r4, #36	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1804
		int8_t cTxLock = pxQueue->cTxLock;
   166c0:	b26d      	sxtb	r5, r5
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1807
		while( cTxLock > queueLOCKED_UNMODIFIED )
   166c2:	2d00      	cmp	r5, #0
   166c4:	dc14      	bgt.n	166f0 <prvUnlockQueue+0x40>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1878
		pxQueue->cTxLock = queueUNLOCKED;
   166c6:	23ff      	movs	r3, #255	; 0xff
   166c8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1880
	taskEXIT_CRITICAL();
   166cc:	f000 ffdc 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1883
	taskENTER_CRITICAL();
   166d0:	f000 ffca 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1885
		int8_t cRxLock = pxQueue->cRxLock;
   166d4:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1891
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   166d8:	f104 0610 	add.w	r6, r4, #16
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1885
		int8_t cRxLock = pxQueue->cRxLock;
   166dc:	b26d      	sxtb	r5, r5
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1887
		while( cRxLock > queueLOCKED_UNMODIFIED )
   166de:	2d00      	cmp	r5, #0
   166e0:	dc19      	bgt.n	16716 <prvUnlockQueue+0x66>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1908
		pxQueue->cRxLock = queueUNLOCKED;
   166e2:	23ff      	movs	r3, #255	; 0xff
   166e4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1911
}
   166e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1910
	taskEXIT_CRITICAL();
   166ec:	f000 bfcc 	b.w	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1813
				if( pxQueue->pxQueueSetContainer != NULL )
   166f0:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   166f2:	b14b      	cbz	r3, 16708 <prvUnlockQueue+0x58>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1815
					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
   166f4:	2100      	movs	r1, #0
   166f6:	4620      	mov	r0, r4
   166f8:	f7ff ffa1 	bl	1663e <prvNotifyQueueSetContainer>
   166fc:	b108      	cbz	r0, 16702 <prvUnlockQueue+0x52>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1820
						vTaskMissedYield();
   166fe:	f000 fea1 	bl	17444 <vTaskMissedYield>
   16702:	3d01      	subs	r5, #1
   16704:	b26d      	sxtb	r5, r5
   16706:	e7dc      	b.n	166c2 <prvUnlockQueue+0x12>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1832
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   16708:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1670a:	2b00      	cmp	r3, #0
   1670c:	d0db      	beq.n	166c6 <prvUnlockQueue+0x16>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1834
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   1670e:	4630      	mov	r0, r6
   16710:	f000 fe2e 	bl	17370 <xTaskRemoveFromEventList>
   16714:	e7f2      	b.n	166fc <prvUnlockQueue+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1889
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   16716:	6923      	ldr	r3, [r4, #16]
   16718:	2b00      	cmp	r3, #0
   1671a:	d0e2      	beq.n	166e2 <prvUnlockQueue+0x32>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1891
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   1671c:	4630      	mov	r0, r6
   1671e:	f000 fe27 	bl	17370 <xTaskRemoveFromEventList>
   16722:	b108      	cbz	r0, 16728 <prvUnlockQueue+0x78>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1893
					vTaskMissedYield();
   16724:	f000 fe8e 	bl	17444 <vTaskMissedYield>
   16728:	3d01      	subs	r5, #1
   1672a:	b26d      	sxtb	r5, r5
   1672c:	e7d7      	b.n	166de <prvUnlockQueue+0x2e>
   1672e:	Address 0x000000000001672e is out of bounds.


00016730 <xQueueGenericReset>:
xQueueGenericReset():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:280
{
   16730:	b538      	push	{r3, r4, r5, lr}
   16732:	4604      	mov	r4, r0
   16734:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:285
	taskENTER_CRITICAL();
   16736:	f000 ff97 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:287
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
   1673a:	6c20      	ldr	r0, [r4, #64]	; 0x40
   1673c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1673e:	6822      	ldr	r2, [r4, #0]
   16740:	4343      	muls	r3, r0
   16742:	18d1      	adds	r1, r2, r3
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:290
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
   16744:	1a1b      	subs	r3, r3, r0
   16746:	4413      	add	r3, r2
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:287
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
   16748:	6061      	str	r1, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:290
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
   1674a:	60e3      	str	r3, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:288
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
   1674c:	2100      	movs	r1, #0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:291
		pxQueue->cRxLock = queueUNLOCKED;
   1674e:	23ff      	movs	r3, #255	; 0xff
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:288
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
   16750:	63a1      	str	r1, [r4, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:289
		pxQueue->pcWriteTo = pxQueue->pcHead;
   16752:	60a2      	str	r2, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:291
		pxQueue->cRxLock = queueUNLOCKED;
   16754:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:292
		pxQueue->cTxLock = queueUNLOCKED;
   16758:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:294
		if( xNewQueue == pdFALSE )
   1675c:	b995      	cbnz	r5, 16784 <xQueueGenericReset+0x54>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:301
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   1675e:	6923      	ldr	r3, [r4, #16]
   16760:	b163      	cbz	r3, 1677c <xQueueGenericReset+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:303
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   16762:	f104 0010 	add.w	r0, r4, #16
   16766:	f000 fe03 	bl	17370 <xTaskRemoveFromEventList>
   1676a:	b138      	cbz	r0, 1677c <xQueueGenericReset+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:305
					queueYIELD_IF_USING_PREEMPTION();
   1676c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16770:	4b09      	ldr	r3, [pc, #36]	; (16798 <xQueueGenericReset+0x68>)
   16772:	601a      	str	r2, [r3, #0]
   16774:	f3bf 8f4f 	dsb	sy
   16778:	f3bf 8f6f 	isb	sy
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:324
	taskEXIT_CRITICAL();
   1677c:	f000 ff84 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:329
}
   16780:	2001      	movs	r0, #1
   16782:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:320
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
   16784:	f104 0010 	add.w	r0, r4, #16
   16788:	f7ff fee5 	bl	16556 <vListInitialise>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:321
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
   1678c:	f104 0024 	add.w	r0, r4, #36	; 0x24
   16790:	f7ff fee1 	bl	16556 <vListInitialise>
   16794:	e7f2      	b.n	1677c <xQueueGenericReset+0x4c>
   16796:	bf00      	nop
   16798:	e000ed04 	.word	0xe000ed04

0001679c <xQueueGenericCreate>:
xQueueGenericCreate():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:387
	{
   1679c:	b570      	push	{r4, r5, r6, lr}
   1679e:	4606      	mov	r6, r0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:403
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   167a0:	4348      	muls	r0, r1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:406
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
   167a2:	304c      	adds	r0, #76	; 0x4c
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:387
	{
   167a4:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:406
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
   167a6:	f7ff feba 	bl	1651e <pvPortMalloc>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:408
		if( pxNewQueue != NULL )
   167aa:	4604      	mov	r4, r0
   167ac:	b148      	cbz	r0, 167c2 <xQueueGenericCreate+0x26>
prvInitialiseNewQueue():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:438
	if( uxItemSize == ( UBaseType_t ) 0 )
   167ae:	b955      	cbnz	r5, 167c6 <xQueueGenericCreate+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:444
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
   167b0:	6020      	str	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:454
	pxNewQueue->uxLength = uxQueueLength;
   167b2:	63e6      	str	r6, [r4, #60]	; 0x3c
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:455
	pxNewQueue->uxItemSize = uxItemSize;
   167b4:	6425      	str	r5, [r4, #64]	; 0x40
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:456
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
   167b6:	2101      	movs	r1, #1
   167b8:	4620      	mov	r0, r4
   167ba:	f7ff ffb9 	bl	16730 <xQueueGenericReset>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:466
		pxNewQueue->pxQueueSetContainer = NULL;
   167be:	2300      	movs	r3, #0
   167c0:	64a3      	str	r3, [r4, #72]	; 0x48
xQueueGenericCreate():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:427
	}
   167c2:	4620      	mov	r0, r4
   167c4:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:412
			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
   167c6:	f100 034c 	add.w	r3, r0, #76	; 0x4c
prvInitialiseNewQueue():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:449
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
   167ca:	6003      	str	r3, [r0, #0]
   167cc:	e7f1      	b.n	167b2 <xQueueGenericCreate+0x16>

000167ce <xQueueCreateCountingSemaphore>:
xQueueCreateCountingSemaphore():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:698
	{
   167ce:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:704
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
   167d0:	2202      	movs	r2, #2
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:698
	{
   167d2:	460c      	mov	r4, r1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:704
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
   167d4:	2100      	movs	r1, #0
   167d6:	f7ff ffe1 	bl	1679c <xQueueGenericCreate>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:706
		if( xHandle != NULL )
   167da:	b100      	cbz	r0, 167de <xQueueCreateCountingSemaphore+0x10>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:708
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
   167dc:	6384      	str	r4, [r0, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:718
	}
   167de:	bd10      	pop	{r4, pc}

000167e0 <xQueueGenericSend>:
xQueueGenericSend():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   167e0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:725
BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
   167e4:	2700      	movs	r7, #0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   167e6:	4604      	mov	r4, r0
   167e8:	4689      	mov	r9, r1
   167ea:	461e      	mov	r6, r3
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:874
		prvLockQueue( pxQueue );
   167ec:	46b8      	mov	r8, r7
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:898
					portYIELD_WITHIN_API();
   167ee:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 168e0 <xQueueGenericSend+0x100>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   167f2:	9201      	str	r2, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:744
		taskENTER_CRITICAL();
   167f4:	f000 ff38 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:750
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
   167f8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   167fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   167fc:	429a      	cmp	r2, r3
   167fe:	d301      	bcc.n	16804 <xQueueGenericSend+0x24>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:750 (discriminator 1)
   16800:	2e02      	cmp	r6, #2
   16802:	d121      	bne.n	16848 <xQueueGenericSend+0x68>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:753
				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   16804:	4632      	mov	r2, r6
   16806:	4649      	mov	r1, r9
   16808:	4620      	mov	r0, r4
   1680a:	f7ff fee5 	bl	165d8 <prvCopyDataToQueue>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:757
					if( pxQueue->pxQueueSetContainer != NULL )
   1680e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   16810:	b193      	cbz	r3, 16838 <xQueueGenericSend+0x58>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:759
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
   16812:	4631      	mov	r1, r6
   16814:	4620      	mov	r0, r4
   16816:	f7ff ff12 	bl	1663e <prvNotifyQueueSetContainer>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:790
						else if( xYieldRequired != pdFALSE )
   1681a:	b138      	cbz	r0, 1682c <xQueueGenericSend+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:796
							queueYIELD_IF_USING_PREEMPTION();
   1681c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16820:	4b2f      	ldr	r3, [pc, #188]	; (168e0 <xQueueGenericSend+0x100>)
   16822:	601a      	str	r2, [r3, #0]
   16824:	f3bf 8f4f 	dsb	sy
   16828:	f3bf 8f6f 	isb	sy
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:838
				taskEXIT_CRITICAL();
   1682c:	f000 ff2c 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:839
				return pdPASS;
   16830:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:918
}
   16832:	b004      	add	sp, #16
   16834:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:775
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   16838:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1683a:	2b00      	cmp	r3, #0
   1683c:	d0ed      	beq.n	1681a <xQueueGenericSend+0x3a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:777
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   1683e:	f104 0024 	add.w	r0, r4, #36	; 0x24
   16842:	f000 fd95 	bl	17370 <xTaskRemoveFromEventList>
   16846:	e7e8      	b.n	1681a <xQueueGenericSend+0x3a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:843
				if( xTicksToWait == ( TickType_t ) 0 )
   16848:	9d01      	ldr	r5, [sp, #4]
   1684a:	b91d      	cbnz	r5, 16854 <xQueueGenericSend+0x74>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:847
					taskEXIT_CRITICAL();
   1684c:	f000 ff1c 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:915
			return errQUEUE_FULL;
   16850:	2000      	movs	r0, #0
   16852:	e7ee      	b.n	16832 <xQueueGenericSend+0x52>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:854
				else if( xEntryTimeSet == pdFALSE )
   16854:	b917      	cbnz	r7, 1685c <xQueueGenericSend+0x7c>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:858
					vTaskSetTimeOutState( &xTimeOut );
   16856:	a802      	add	r0, sp, #8
   16858:	f000 fdc2 	bl	173e0 <vTaskSetTimeOutState>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:868
		taskEXIT_CRITICAL();
   1685c:	f000 ff14 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:873
		vTaskSuspendAll();
   16860:	f000 fb78 	bl	16f54 <vTaskSuspendAll>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:874
		prvLockQueue( pxQueue );
   16864:	f000 ff00 	bl	17668 <vPortEnterCritical>
   16868:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   1686c:	2bff      	cmp	r3, #255	; 0xff
   1686e:	bf08      	it	eq
   16870:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
   16874:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   16878:	2bff      	cmp	r3, #255	; 0xff
   1687a:	bf08      	it	eq
   1687c:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
   16880:	f000 ff02 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:877
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   16884:	a901      	add	r1, sp, #4
   16886:	a802      	add	r0, sp, #8
   16888:	f000 fdb6 	bl	173f8 <xTaskCheckForTimeOut>
   1688c:	bb10      	cbnz	r0, 168d4 <xQueueGenericSend+0xf4>
prvIsQueueFull():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1957
	taskENTER_CRITICAL();
   1688e:	f000 feeb 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1959
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
   16892:	6ba7      	ldr	r7, [r4, #56]	; 0x38
   16894:	6be5      	ldr	r5, [r4, #60]	; 0x3c
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1968
	taskEXIT_CRITICAL();
   16896:	f000 fef7 	bl	17688 <vPortExitCritical>
xQueueGenericSend():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:879
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
   1689a:	42af      	cmp	r7, r5
   1689c:	d114      	bne.n	168c8 <xQueueGenericSend+0xe8>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:882
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
   1689e:	9901      	ldr	r1, [sp, #4]
   168a0:	f104 0010 	add.w	r0, r4, #16
   168a4:	f000 fd54 	bl	17350 <vTaskPlaceOnEventList>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:889
				prvUnlockQueue( pxQueue );
   168a8:	4620      	mov	r0, r4
   168aa:	f7ff ff01 	bl	166b0 <prvUnlockQueue>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:896
				if( xTaskResumeAll() == pdFALSE )
   168ae:	f000 fbeb 	bl	17088 <xTaskResumeAll>
   168b2:	b938      	cbnz	r0, 168c4 <xQueueGenericSend+0xe4>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:898
					portYIELD_WITHIN_API();
   168b4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   168b8:	f8ca 3000 	str.w	r3, [sl]
   168bc:	f3bf 8f4f 	dsb	sy
   168c0:	f3bf 8f6f 	isb	sy
   168c4:	2701      	movs	r7, #1
   168c6:	e795      	b.n	167f4 <xQueueGenericSend+0x14>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:904
				prvUnlockQueue( pxQueue );
   168c8:	4620      	mov	r0, r4
   168ca:	f7ff fef1 	bl	166b0 <prvUnlockQueue>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:905
				( void ) xTaskResumeAll();
   168ce:	f000 fbdb 	bl	17088 <xTaskResumeAll>
   168d2:	e7f7      	b.n	168c4 <xQueueGenericSend+0xe4>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:911
			prvUnlockQueue( pxQueue );
   168d4:	4620      	mov	r0, r4
   168d6:	f7ff feeb 	bl	166b0 <prvUnlockQueue>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:912
			( void ) xTaskResumeAll();
   168da:	f000 fbd5 	bl	17088 <xTaskResumeAll>
   168de:	e7b7      	b.n	16850 <xQueueGenericSend+0x70>
   168e0:	e000ed04 	.word	0xe000ed04

000168e4 <xQueueCreateMutex>:
xQueueCreateMutex():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:507
	{
   168e4:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:511
		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
   168e6:	4602      	mov	r2, r0
   168e8:	2100      	movs	r1, #0
   168ea:	2001      	movs	r0, #1
   168ec:	f7ff ff56 	bl	1679c <xQueueGenericCreate>
prvInitialiseMutex():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:478
		if( pxNewQueue != NULL )
   168f0:	4604      	mov	r4, r0
   168f2:	b138      	cbz	r0, 16904 <xQueueCreateMutex+0x20>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:484
			pxNewQueue->pxMutexHolder = NULL;
   168f4:	2300      	movs	r3, #0
   168f6:	6043      	str	r3, [r0, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:485
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
   168f8:	6003      	str	r3, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:488
			pxNewQueue->u.uxRecursiveCallCount = 0;
   168fa:	60c3      	str	r3, [r0, #12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:493
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
   168fc:	461a      	mov	r2, r3
   168fe:	4619      	mov	r1, r3
   16900:	f7ff ff6e 	bl	167e0 <xQueueGenericSend>
xQueueCreateMutex():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:515
	}
   16904:	4620      	mov	r0, r4
   16906:	bd10      	pop	{r4, pc}

00016908 <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:922
{
   16908:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1690c:	4604      	mov	r4, r0
   1690e:	4690      	mov	r8, r2
   16910:	461f      	mov	r7, r3
ulPortRaiseBASEPRI():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253

portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
{
uint32_t ulOriginalBASEPRI, ulNewBASEPRI;

	__asm volatile
   16912:	f3ef 8611 	mrs	r6, BASEPRI
   16916:	f04f 0310 	mov.w	r3, #16
   1691a:	f383 8811 	msr	BASEPRI, r3
   1691e:	f3bf 8f6f 	isb	sy
   16922:	f3bf 8f4f 	dsb	sy
xQueueGenericSendFromISR():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:954
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
   16926:	6b82      	ldr	r2, [r0, #56]	; 0x38
   16928:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
   1692a:	429a      	cmp	r2, r3
   1692c:	d301      	bcc.n	16932 <xQueueGenericSendFromISR+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:954 (discriminator 1)
   1692e:	2f02      	cmp	r7, #2
   16930:	d128      	bne.n	16984 <xQueueGenericSendFromISR+0x7c>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:956
			const int8_t cTxLock = pxQueue->cTxLock;
   16932:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:965
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   16936:	463a      	mov	r2, r7
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:956
			const int8_t cTxLock = pxQueue->cTxLock;
   16938:	b26d      	sxtb	r5, r5
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:965
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   1693a:	4620      	mov	r0, r4
   1693c:	f7ff fe4c 	bl	165d8 <prvCopyDataToQueue>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:969
			if( cTxLock == queueUNLOCKED )
   16940:	1c6b      	adds	r3, r5, #1
   16942:	d11a      	bne.n	1697a <xQueueGenericSendFromISR+0x72>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:973
					if( pxQueue->pxQueueSetContainer != NULL )
   16944:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   16946:	b183      	cbz	r3, 1696a <xQueueGenericSendFromISR+0x62>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:975
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
   16948:	4639      	mov	r1, r7
   1694a:	4620      	mov	r0, r4
   1694c:	f7ff fe77 	bl	1663e <prvNotifyQueueSetContainer>
   16950:	b908      	cbnz	r0, 16956 <xQueueGenericSendFromISR+0x4e>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1058
			xReturn = pdPASS;
   16952:	2001      	movs	r0, #1
   16954:	e005      	b.n	16962 <xQueueGenericSendFromISR+0x5a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:980
							if( pxHigherPriorityTaskWoken != NULL )
   16956:	f1b8 0f00 	cmp.w	r8, #0
   1695a:	d0fa      	beq.n	16952 <xQueueGenericSendFromISR+0x4a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:982
								*pxHigherPriorityTaskWoken = pdTRUE;
   1695c:	2001      	movs	r0, #1
   1695e:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
   16962:	f386 8811 	msr	BASEPRI, r6
xQueueGenericSendFromISR():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1069
}
   16966:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:996
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   1696a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1696c:	2b00      	cmp	r3, #0
   1696e:	d0f0      	beq.n	16952 <xQueueGenericSendFromISR+0x4a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:998
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   16970:	f104 0024 	add.w	r0, r4, #36	; 0x24
   16974:	f000 fcfc 	bl	17370 <xTaskRemoveFromEventList>
   16978:	e7ea      	b.n	16950 <xQueueGenericSendFromISR+0x48>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1055
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
   1697a:	3501      	adds	r5, #1
   1697c:	b26d      	sxtb	r5, r5
   1697e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
   16982:	e7e6      	b.n	16952 <xQueueGenericSendFromISR+0x4a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1063
			xReturn = errQUEUE_FULL;
   16984:	2000      	movs	r0, #0
   16986:	e7ec      	b.n	16962 <xQueueGenericSendFromISR+0x5a>

00016988 <xQueueGiveFromISR>:
xQueueGiveFromISR():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1073
{
   16988:	b538      	push	{r3, r4, r5, lr}
   1698a:	460d      	mov	r5, r1
ulPortRaiseBASEPRI():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   1698c:	f3ef 8411 	mrs	r4, BASEPRI
   16990:	f04f 0210 	mov.w	r2, #16
   16994:	f382 8811 	msr	BASEPRI, r2
   16998:	f3bf 8f6f 	isb	sy
   1699c:	f3bf 8f4f 	dsb	sy
xQueueGiveFromISR():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1113
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   169a0:	6b81      	ldr	r1, [r0, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1118
		if( uxMessagesWaiting < pxQueue->uxLength )
   169a2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
   169a4:	4291      	cmp	r1, r2
   169a6:	d221      	bcs.n	169ec <xQueueGiveFromISR+0x64>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1120
			const int8_t cTxLock = pxQueue->cTxLock;
   169a8:	f890 2045 	ldrb.w	r2, [r0, #69]	; 0x45
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1130
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   169ac:	3101      	adds	r1, #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1120
			const int8_t cTxLock = pxQueue->cTxLock;
   169ae:	b252      	sxtb	r2, r2
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1130
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   169b0:	6381      	str	r1, [r0, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1134
			if( cTxLock == queueUNLOCKED )
   169b2:	1c51      	adds	r1, r2, #1
   169b4:	d115      	bne.n	169e2 <xQueueGiveFromISR+0x5a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1138
					if( pxQueue->pxQueueSetContainer != NULL )
   169b6:	6c82      	ldr	r2, [r0, #72]	; 0x48
   169b8:	b162      	cbz	r2, 169d4 <xQueueGiveFromISR+0x4c>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1140
						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
   169ba:	2100      	movs	r1, #0
   169bc:	f7ff fe3f 	bl	1663e <prvNotifyQueueSetContainer>
   169c0:	b908      	cbnz	r0, 169c6 <xQueueGiveFromISR+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1223
			xReturn = pdPASS;
   169c2:	2001      	movs	r0, #1
   169c4:	e003      	b.n	169ce <xQueueGiveFromISR+0x46>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1145
							if( pxHigherPriorityTaskWoken != NULL )
   169c6:	2d00      	cmp	r5, #0
   169c8:	d0fb      	beq.n	169c2 <xQueueGiveFromISR+0x3a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1147
								*pxHigherPriorityTaskWoken = pdTRUE;
   169ca:	2001      	movs	r0, #1
   169cc:	6028      	str	r0, [r5, #0]
vPortSetBASEPRI():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   169ce:	f384 8811 	msr	BASEPRI, r4
xQueueGiveFromISR():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1234
}
   169d2:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1161
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   169d4:	6a42      	ldr	r2, [r0, #36]	; 0x24
   169d6:	2a00      	cmp	r2, #0
   169d8:	d0f3      	beq.n	169c2 <xQueueGiveFromISR+0x3a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1163
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   169da:	3024      	adds	r0, #36	; 0x24
   169dc:	f000 fcc8 	bl	17370 <xTaskRemoveFromEventList>
   169e0:	e7ee      	b.n	169c0 <xQueueGiveFromISR+0x38>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1220
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
   169e2:	3201      	adds	r2, #1
   169e4:	b252      	sxtb	r2, r2
   169e6:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
   169ea:	e7ea      	b.n	169c2 <xQueueGiveFromISR+0x3a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1228
			xReturn = errQUEUE_FULL;
   169ec:	2000      	movs	r0, #0
   169ee:	e7ee      	b.n	169ce <xQueueGiveFromISR+0x46>

000169f0 <xQueueGenericReceive>:
xQueueGenericReceive():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   169f0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1239
BaseType_t xEntryTimeSet = pdFALSE;
   169f4:	f04f 0a00 	mov.w	sl, #0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   169f8:	4604      	mov	r4, r0
   169fa:	460f      	mov	r7, r1
   169fc:	4698      	mov	r8, r3
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1371
		prvLockQueue( pxQueue );
   169fe:	4656      	mov	r6, sl
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1401
					portYIELD_WITHIN_API();
   16a00:	f8df 911c 	ldr.w	r9, [pc, #284]	; 16b20 <xQueueGenericReceive+0x130>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   16a04:	9201      	str	r2, [sp, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1258
		taskENTER_CRITICAL();
   16a06:	f000 fe2f 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1260
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   16a0a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1264
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   16a0c:	b355      	cbz	r5, 16a64 <xQueueGenericReceive+0x74>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1270
				prvCopyDataFromQueue( pxQueue, pvBuffer );
   16a0e:	4639      	mov	r1, r7
   16a10:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1268
				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
   16a12:	68e6      	ldr	r6, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1270
				prvCopyDataFromQueue( pxQueue, pvBuffer );
   16a14:	f7ff fe38 	bl	16688 <prvCopyDataFromQueue>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1272
				if( xJustPeeking == pdFALSE )
   16a18:	f1b8 0f00 	cmp.w	r8, #0
   16a1c:	d11b      	bne.n	16a56 <xQueueGenericReceive+0x66>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1281
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   16a1e:	6823      	ldr	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1277
					pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   16a20:	3d01      	subs	r5, #1
   16a22:	63a5      	str	r5, [r4, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1281
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   16a24:	b913      	cbnz	r3, 16a2c <xQueueGenericReceive+0x3c>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1285
							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is not redundant as TaskHandle_t is a typedef. */
   16a26:	f000 fdb3 	bl	17590 <pvTaskIncrementMutexHeldCount>
   16a2a:	6060      	str	r0, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1294
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   16a2c:	6923      	ldr	r3, [r4, #16]
   16a2e:	b163      	cbz	r3, 16a4a <xQueueGenericReceive+0x5a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1296
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   16a30:	f104 0010 	add.w	r0, r4, #16
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1322
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   16a34:	f000 fc9c 	bl	17370 <xTaskRemoveFromEventList>
   16a38:	b138      	cbz	r0, 16a4a <xQueueGenericReceive+0x5a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1325
							queueYIELD_IF_USING_PREEMPTION();
   16a3a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16a3e:	4b38      	ldr	r3, [pc, #224]	; (16b20 <xQueueGenericReceive+0x130>)
   16a40:	601a      	str	r2, [r3, #0]
   16a42:	f3bf 8f4f 	dsb	sy
   16a46:	f3bf 8f6f 	isb	sy
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1338
				taskEXIT_CRITICAL();
   16a4a:	f000 fe1d 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1339
				return pdPASS;
   16a4e:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1431
}
   16a50:	b004      	add	sp, #16
   16a52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1320
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   16a56:	6a63      	ldr	r3, [r4, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1316
					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
   16a58:	60e6      	str	r6, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1320
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   16a5a:	2b00      	cmp	r3, #0
   16a5c:	d0f5      	beq.n	16a4a <xQueueGenericReceive+0x5a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1322
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   16a5e:	f104 0024 	add.w	r0, r4, #36	; 0x24
   16a62:	e7e7      	b.n	16a34 <xQueueGenericReceive+0x44>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1343
				if( xTicksToWait == ( TickType_t ) 0 )
   16a64:	9d01      	ldr	r5, [sp, #4]
   16a66:	b91d      	cbnz	r5, 16a70 <xQueueGenericReceive+0x80>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1347
					taskEXIT_CRITICAL();
   16a68:	f000 fe0e 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1423
				return errQUEUE_EMPTY;
   16a6c:	4628      	mov	r0, r5
   16a6e:	e7ef      	b.n	16a50 <xQueueGenericReceive+0x60>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1351
				else if( xEntryTimeSet == pdFALSE )
   16a70:	f1ba 0f00 	cmp.w	sl, #0
   16a74:	d102      	bne.n	16a7c <xQueueGenericReceive+0x8c>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1355
					vTaskSetTimeOutState( &xTimeOut );
   16a76:	a802      	add	r0, sp, #8
   16a78:	f000 fcb2 	bl	173e0 <vTaskSetTimeOutState>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1365
		taskEXIT_CRITICAL();
   16a7c:	f000 fe04 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1370
		vTaskSuspendAll();
   16a80:	f000 fa68 	bl	16f54 <vTaskSuspendAll>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1371
		prvLockQueue( pxQueue );
   16a84:	f000 fdf0 	bl	17668 <vPortEnterCritical>
   16a88:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   16a8c:	2bff      	cmp	r3, #255	; 0xff
   16a8e:	bf08      	it	eq
   16a90:	f884 6044 	strbeq.w	r6, [r4, #68]	; 0x44
   16a94:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   16a98:	2bff      	cmp	r3, #255	; 0xff
   16a9a:	bf08      	it	eq
   16a9c:	f884 6045 	strbeq.w	r6, [r4, #69]	; 0x45
   16aa0:	f000 fdf2 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1374
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   16aa4:	a901      	add	r1, sp, #4
   16aa6:	a802      	add	r0, sp, #8
   16aa8:	f000 fca6 	bl	173f8 <xTaskCheckForTimeOut>
   16aac:	bb50      	cbnz	r0, 16b04 <xQueueGenericReceive+0x114>
prvIsQueueEmpty():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1918
	taskENTER_CRITICAL();
   16aae:	f000 fddb 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1920
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
   16ab2:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1929
	taskEXIT_CRITICAL();
   16ab4:	f000 fde8 	bl	17688 <vPortExitCritical>
xQueueGenericReceive():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1376
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
   16ab8:	b9f5      	cbnz	r5, 16af8 <xQueueGenericReceive+0x108>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1382
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   16aba:	6823      	ldr	r3, [r4, #0]
   16abc:	b933      	cbnz	r3, 16acc <xQueueGenericReceive+0xdc>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1384
						taskENTER_CRITICAL();
   16abe:	f000 fdd3 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1386
							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
   16ac2:	6860      	ldr	r0, [r4, #4]
   16ac4:	f000 fce4 	bl	17490 <vTaskPriorityInherit>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1388
						taskEXIT_CRITICAL();
   16ac8:	f000 fdde 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1397
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
   16acc:	9901      	ldr	r1, [sp, #4]
   16ace:	f104 0024 	add.w	r0, r4, #36	; 0x24
   16ad2:	f000 fc3d 	bl	17350 <vTaskPlaceOnEventList>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1398
				prvUnlockQueue( pxQueue );
   16ad6:	4620      	mov	r0, r4
   16ad8:	f7ff fdea 	bl	166b0 <prvUnlockQueue>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1399
				if( xTaskResumeAll() == pdFALSE )
   16adc:	f000 fad4 	bl	17088 <xTaskResumeAll>
   16ae0:	b938      	cbnz	r0, 16af2 <xQueueGenericReceive+0x102>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1401
					portYIELD_WITHIN_API();
   16ae2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   16ae6:	f8c9 3000 	str.w	r3, [r9]
   16aea:	f3bf 8f4f 	dsb	sy
   16aee:	f3bf 8f6f 	isb	sy
   16af2:	f04f 0a01 	mov.w	sl, #1
   16af6:	e786      	b.n	16a06 <xQueueGenericReceive+0x16>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1411
				prvUnlockQueue( pxQueue );
   16af8:	4620      	mov	r0, r4
   16afa:	f7ff fdd9 	bl	166b0 <prvUnlockQueue>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1412
				( void ) xTaskResumeAll();
   16afe:	f000 fac3 	bl	17088 <xTaskResumeAll>
   16b02:	e7f6      	b.n	16af2 <xQueueGenericReceive+0x102>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1417
			prvUnlockQueue( pxQueue );
   16b04:	4620      	mov	r0, r4
   16b06:	f7ff fdd3 	bl	166b0 <prvUnlockQueue>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1418
			( void ) xTaskResumeAll();
   16b0a:	f000 fabd 	bl	17088 <xTaskResumeAll>
prvIsQueueEmpty():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1918
	taskENTER_CRITICAL();
   16b0e:	f000 fdab 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1920
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
   16b12:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1929
	taskEXIT_CRITICAL();
   16b14:	f000 fdb8 	bl	17688 <vPortExitCritical>
xQueueGenericReceive():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1420
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
   16b18:	2d00      	cmp	r5, #0
   16b1a:	d1ea      	bne.n	16af2 <xQueueGenericReceive+0x102>
   16b1c:	e7a6      	b.n	16a6c <xQueueGenericReceive+0x7c>
   16b1e:	bf00      	nop
   16b20:	e000ed04 	.word	0xe000ed04

00016b24 <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1435
{
   16b24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16b28:	4607      	mov	r7, r0
   16b2a:	4690      	mov	r8, r2
ulPortRaiseBASEPRI():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   16b2c:	f3ef 8611 	mrs	r6, BASEPRI
   16b30:	f04f 0310 	mov.w	r3, #16
   16b34:	f383 8811 	msr	BASEPRI, r3
   16b38:	f3bf 8f6f 	isb	sy
   16b3c:	f3bf 8f4f 	dsb	sy
xQueueReceiveFromISR():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1461
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   16b40:	6b84      	ldr	r4, [r0, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1464
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   16b42:	b30c      	cbz	r4, 16b88 <xQueueReceiveFromISR+0x64>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1466
			const int8_t cRxLock = pxQueue->cRxLock;
   16b44:	f890 5044 	ldrb.w	r5, [r0, #68]	; 0x44
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1471
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   16b48:	3c01      	subs	r4, #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1466
			const int8_t cRxLock = pxQueue->cRxLock;
   16b4a:	b26d      	sxtb	r5, r5
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1470
			prvCopyDataFromQueue( pxQueue, pvBuffer );
   16b4c:	f7ff fd9c 	bl	16688 <prvCopyDataFromQueue>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1477
			if( cRxLock == queueUNLOCKED )
   16b50:	1c6b      	adds	r3, r5, #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1471
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   16b52:	63bc      	str	r4, [r7, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1477
			if( cRxLock == queueUNLOCKED )
   16b54:	d113      	bne.n	16b7e <xQueueReceiveFromISR+0x5a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1479
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   16b56:	693b      	ldr	r3, [r7, #16]
   16b58:	b90b      	cbnz	r3, 16b5e <xQueueReceiveFromISR+0x3a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1511
			xReturn = pdPASS;
   16b5a:	2001      	movs	r0, #1
   16b5c:	e00b      	b.n	16b76 <xQueueReceiveFromISR+0x52>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1481
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   16b5e:	f107 0010 	add.w	r0, r7, #16
   16b62:	f000 fc05 	bl	17370 <xTaskRemoveFromEventList>
   16b66:	2800      	cmp	r0, #0
   16b68:	d0f7      	beq.n	16b5a <xQueueReceiveFromISR+0x36>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1485
						if( pxHigherPriorityTaskWoken != NULL )
   16b6a:	f1b8 0f00 	cmp.w	r8, #0
   16b6e:	d0f4      	beq.n	16b5a <xQueueReceiveFromISR+0x36>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1487
							*pxHigherPriorityTaskWoken = pdTRUE;
   16b70:	2001      	movs	r0, #1
   16b72:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   16b76:	f386 8811 	msr	BASEPRI, r6
xQueueReceiveFromISR():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1522
}
   16b7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1508
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
   16b7e:	3501      	adds	r5, #1
   16b80:	b26d      	sxtb	r5, r5
   16b82:	f887 5044 	strb.w	r5, [r7, #68]	; 0x44
   16b86:	e7e8      	b.n	16b5a <xQueueReceiveFromISR+0x36>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1515
			xReturn = pdFAIL;
   16b88:	4620      	mov	r0, r4
   16b8a:	e7f4      	b.n	16b76 <xQueueReceiveFromISR+0x52>

00016b8c <uxQueueMessagesWaiting>:
uxQueueMessagesWaiting():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1580
{
   16b8c:	b510      	push	{r4, lr}
   16b8e:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1585
	taskENTER_CRITICAL();
   16b90:	f000 fd6a 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1587
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
   16b94:	6ba4      	ldr	r4, [r4, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1589
	taskEXIT_CRITICAL();
   16b96:	f000 fd77 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1592
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
   16b9a:	4620      	mov	r0, r4
   16b9c:	bd10      	pop	{r4, pc}

00016b9e <uxQueueMessagesWaitingFromISR>:
uxQueueMessagesWaitingFromISR():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1619
	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
   16b9e:	6b80      	ldr	r0, [r0, #56]	; 0x38
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1622
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
   16ba0:	4770      	bx	lr

00016ba2 <xQueueSelectFromSet>:
xQueueSelectFromSet():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2479
	QueueSetMemberHandle_t xReturn = NULL;
   16ba2:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2478
	{
   16ba4:	b513      	push	{r0, r1, r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2479
	QueueSetMemberHandle_t xReturn = NULL;
   16ba6:	ac02      	add	r4, sp, #8
   16ba8:	f844 3d04 	str.w	r3, [r4, #-4]!
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2481
		( void ) xQueueGenericReceive( ( QueueHandle_t ) xQueueSet, &xReturn, xTicksToWait, pdFALSE ); /*lint !e961 Casting from one typedef to another is not redundant. */
   16bac:	460a      	mov	r2, r1
   16bae:	4621      	mov	r1, r4
   16bb0:	f7ff ff1e 	bl	169f0 <xQueueGenericReceive>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2483
	}
   16bb4:	9801      	ldr	r0, [sp, #4]
   16bb6:	b002      	add	sp, #8
   16bb8:	bd10      	pop	{r4, pc}
   16bba:	Address 0x0000000000016bba is out of bounds.


00016bbc <prvIdleTask>:
prvIdleTask():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3168
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
			{
				taskYIELD();
   16bbc:	f04f 5680 	mov.w	r6, #268435456	; 0x10000000
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3132
{
   16bc0:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3166
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
   16bc2:	4c06      	ldr	r4, [pc, #24]	; (16bdc <prvIdleTask+0x20>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3168
				taskYIELD();
   16bc4:	4d06      	ldr	r5, [pc, #24]	; (16be0 <prvIdleTask+0x24>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3166
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
   16bc6:	6823      	ldr	r3, [r4, #0]
   16bc8:	2b01      	cmp	r3, #1
   16bca:	d904      	bls.n	16bd6 <prvIdleTask+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3168
				taskYIELD();
   16bcc:	602e      	str	r6, [r5, #0]
   16bce:	f3bf 8f4f 	dsb	sy
   16bd2:	f3bf 8f6f 	isb	sy
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3186
			/* Call the user defined function from within the idle task.  This
			allows the application designer to add background functionality
			without the overhead of a separate task.
			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
			CALL A FUNCTION THAT MIGHT BLOCK. */
			vApplicationIdleHook();
   16bd6:	f000 fdd1 	bl	1777c <vApplicationIdleHook>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3143
		prvCheckTasksWaitingTermination();
   16bda:	e7f4      	b.n	16bc6 <prvIdleTask+0xa>
   16bdc:	2007c574 	.word	0x2007c574
   16be0:	e000ed04 	.word	0xe000ed04

00016be4 <prvTaskIsTaskSuspended>:
prvTaskIsTaskSuspended():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1668
		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
   16be4:	6942      	ldr	r2, [r0, #20]
   16be6:	4b06      	ldr	r3, [pc, #24]	; (16c00 <prvTaskIsTaskSuspended+0x1c>)
   16be8:	429a      	cmp	r2, r3
   16bea:	d001      	beq.n	16bf0 <prvTaskIsTaskSuspended+0xc>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1658
	BaseType_t xReturn = pdFALSE;
   16bec:	2000      	movs	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1695
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
   16bee:	4770      	bx	lr
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1671
			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
   16bf0:	6a80      	ldr	r0, [r0, #40]	; 0x28
   16bf2:	4b04      	ldr	r3, [pc, #16]	; (16c04 <prvTaskIsTaskSuspended+0x20>)
   16bf4:	4298      	cmp	r0, r3
   16bf6:	d0f9      	beq.n	16bec <prvTaskIsTaskSuspended+0x8>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1675
				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE )
   16bf8:	fab0 f080 	clz	r0, r0
   16bfc:	0940      	lsrs	r0, r0, #5
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1694
		return xReturn;
   16bfe:	4770      	bx	lr
   16c00:	2007c6a0 	.word	0x2007c6a0
   16c04:	2007c688 	.word	0x2007c688

00016c08 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3639

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   16c08:	4a06      	ldr	r2, [pc, #24]	; (16c24 <prvResetNextTaskUnblockTime+0x1c>)
   16c0a:	6813      	ldr	r3, [r2, #0]
   16c0c:	6819      	ldr	r1, [r3, #0]
   16c0e:	4b06      	ldr	r3, [pc, #24]	; (16c28 <prvResetNextTaskUnblockTime+0x20>)
   16c10:	b919      	cbnz	r1, 16c1a <prvResetNextTaskUnblockTime+0x12>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3645
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
   16c12:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3654
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
   16c16:	601a      	str	r2, [r3, #0]
   16c18:	4770      	bx	lr
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3653
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   16c1a:	6812      	ldr	r2, [r2, #0]
   16c1c:	68d2      	ldr	r2, [r2, #12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3654
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
   16c1e:	68d2      	ldr	r2, [r2, #12]
   16c20:	6852      	ldr	r2, [r2, #4]
   16c22:	e7f8      	b.n	16c16 <prvResetNextTaskUnblockTime+0xe>
   16c24:	2007c56c 	.word	0x2007c56c
   16c28:	2007c680 	.word	0x2007c680

00016c2c <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
#endif /* configUSE_TASK_NOTIFICATIONS */
/*-----------------------------------------------------------*/


static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
   16c2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4695
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
   16c2e:	4b1b      	ldr	r3, [pc, #108]	; (16c9c <prvAddCurrentTaskToDelayedList+0x70>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   16c30:	4e1b      	ldr	r6, [pc, #108]	; (16ca0 <prvAddCurrentTaskToDelayedList+0x74>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4695
const TickType_t xConstTickCount = xTickCount;
   16c32:	681d      	ldr	r5, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
{
   16c34:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   16c36:	6830      	ldr	r0, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
{
   16c38:	460f      	mov	r7, r1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   16c3a:	3004      	adds	r0, #4
   16c3c:	f7ff fcbc 	bl	165b8 <uxListRemove>
   16c40:	4633      	mov	r3, r6
   16c42:	b940      	cbnz	r0, 16c56 <prvAddCurrentTaskToDelayedList+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4712
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
   16c44:	2001      	movs	r0, #1
   16c46:	6831      	ldr	r1, [r6, #0]
   16c48:	4e16      	ldr	r6, [pc, #88]	; (16ca4 <prvAddCurrentTaskToDelayedList+0x78>)
   16c4a:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
   16c4c:	6832      	ldr	r2, [r6, #0]
   16c4e:	4088      	lsls	r0, r1
   16c50:	ea22 0200 	bic.w	r2, r2, r0
   16c54:	6032      	str	r2, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4721
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
   16c56:	1c62      	adds	r2, r4, #1
   16c58:	d107      	bne.n	16c6a <prvAddCurrentTaskToDelayedList+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4721 (discriminator 1)
   16c5a:	b137      	cbz	r7, 16c6a <prvAddCurrentTaskToDelayedList+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4726
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
   16c5c:	6819      	ldr	r1, [r3, #0]
   16c5e:	4812      	ldr	r0, [pc, #72]	; (16ca8 <prvAddCurrentTaskToDelayedList+0x7c>)
   16c60:	3104      	adds	r1, #4
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4801

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
   16c62:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4726
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
   16c66:	f7ff bc84 	b.w	16572 <vListInsertEnd>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4733
			xTimeToWake = xConstTickCount + xTicksToWait;
   16c6a:	442c      	add	r4, r5
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4736
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
   16c6c:	681a      	ldr	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4738
			if( xTimeToWake < xConstTickCount )
   16c6e:	42a5      	cmp	r5, r4
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4736
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
   16c70:	6054      	str	r4, [r2, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4738
			if( xTimeToWake < xConstTickCount )
   16c72:	d907      	bls.n	16c84 <prvAddCurrentTaskToDelayedList+0x58>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4742
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   16c74:	4a0d      	ldr	r2, [pc, #52]	; (16cac <prvAddCurrentTaskToDelayedList+0x80>)
   16c76:	6810      	ldr	r0, [r2, #0]
   16c78:	6819      	ldr	r1, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4801
}
   16c7a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4742
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   16c7e:	3104      	adds	r1, #4
   16c80:	f7ff bc83 	b.w	1658a <vListInsert>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4748
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   16c84:	4a0a      	ldr	r2, [pc, #40]	; (16cb0 <prvAddCurrentTaskToDelayedList+0x84>)
   16c86:	6810      	ldr	r0, [r2, #0]
   16c88:	6819      	ldr	r1, [r3, #0]
   16c8a:	3104      	adds	r1, #4
   16c8c:	f7ff fc7d 	bl	1658a <vListInsert>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4753
				if( xTimeToWake < xNextTaskUnblockTime )
   16c90:	4b08      	ldr	r3, [pc, #32]	; (16cb4 <prvAddCurrentTaskToDelayedList+0x88>)
   16c92:	681a      	ldr	r2, [r3, #0]
   16c94:	4294      	cmp	r4, r2
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4755
					xNextTaskUnblockTime = xTimeToWake;
   16c96:	bf38      	it	cc
   16c98:	601c      	strcc	r4, [r3, #0]
   16c9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16c9c:	2007c6b4 	.word	0x2007c6b4
   16ca0:	2007c568 	.word	0x2007c568
   16ca4:	2007c650 	.word	0x2007c650
   16ca8:	2007c6a0 	.word	0x2007c6a0
   16cac:	2007c570 	.word	0x2007c570
   16cb0:	2007c56c 	.word	0x2007c56c
   16cb4:	2007c680 	.word	0x2007c680

00016cb8 <xTaskCreate>:
xTaskCreate():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   16cb8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16cbc:	ea4f 0a82 	mov.w	sl, r2, lsl #2
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   16cc0:	4680      	mov	r8, r0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16cc2:	4650      	mov	r0, sl
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   16cc4:	460d      	mov	r5, r1
   16cc6:	4699      	mov	r9, r3
   16cc8:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16cca:	f7ff fc28 	bl	1651e <pvPortMalloc>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:718
			if( pxStack != NULL )
   16cce:	4607      	mov	r7, r0
   16cd0:	2800      	cmp	r0, #0
   16cd2:	f000 809b 	beq.w	16e0c <xTaskCreate+0x154>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:721
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the casts are only redundant for some paths. */
   16cd6:	2058      	movs	r0, #88	; 0x58
   16cd8:	f7ff fc21 	bl	1651e <pvPortMalloc>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:723
				if( pxNewTCB != NULL )
   16cdc:	4604      	mov	r4, r0
   16cde:	2800      	cmp	r0, #0
   16ce0:	f000 8091 	beq.w	16e06 <xTaskCreate+0x14e>
prvInitialiseNewTask():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:797
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
   16ce4:	4652      	mov	r2, sl
xTaskCreate():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:726
					pxNewTCB->pxStack = pxStack;
   16ce6:	6307      	str	r7, [r0, #48]	; 0x30
prvInitialiseNewTask():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:797
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
   16ce8:	21a5      	movs	r1, #165	; 0xa5
   16cea:	4638      	mov	r0, r7
   16cec:	f004 f8e0 	bl	1aeb0 <memset>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:807
		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
   16cf0:	6b23      	ldr	r3, [r4, #48]	; 0x30
   16cf2:	f1aa 0a04 	sub.w	sl, sl, #4
   16cf6:	449a      	add	sl, r3
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:808
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type. */
   16cf8:	f02a 0a07 	bic.w	sl, sl, #7
   16cfc:	1e6b      	subs	r3, r5, #1
   16cfe:	f104 0234 	add.w	r2, r4, #52	; 0x34
   16d02:	3507      	adds	r5, #7
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:829
		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
   16d04:	7859      	ldrb	r1, [r3, #1]
   16d06:	f802 1b01 	strb.w	r1, [r2], #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:834
		if( pcName[ x ] == 0x00 )
   16d0a:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   16d0e:	b109      	cbz	r1, 16d14 <xTaskCreate+0x5c>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:827
	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
   16d10:	42ab      	cmp	r3, r5
   16d12:	d1f7      	bne.n	16d04 <xTaskCreate+0x4c>
   16d14:	9d0a      	ldr	r5, [sp, #40]	; 0x28
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:846
	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
   16d16:	f04f 0b00 	mov.w	fp, #0
   16d1a:	2d09      	cmp	r5, #9
   16d1c:	bf28      	it	cs
   16d1e:	2509      	movcs	r5, #9
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   16d20:	1d27      	adds	r7, r4, #4
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:859
	pxNewTCB->uxPriority = uxPriority;
   16d22:	62e5      	str	r5, [r4, #44]	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:862
		pxNewTCB->uxBasePriority = uxPriority;
   16d24:	6465      	str	r5, [r4, #68]	; 0x44
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   16d26:	4638      	mov	r0, r7
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:846
	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
   16d28:	f884 b03b 	strb.w	fp, [r4, #59]	; 0x3b
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:863
		pxNewTCB->uxMutexesHeld = 0;
   16d2c:	f8c4 b048 	str.w	fp, [r4, #72]	; 0x48
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   16d30:	f7ff fc1c 	bl	1656c <vListInitialiseItem>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:875
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16d34:	f1c5 050a 	rsb	r5, r5, #10
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:868
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
   16d38:	f104 0018 	add.w	r0, r4, #24
   16d3c:	f7ff fc16 	bl	1656c <vListInitialiseItem>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:918
		pxNewTCB->ulNotifiedValue = 0;
   16d40:	f8c4 b050 	str.w	fp, [r4, #80]	; 0x50
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:872
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
   16d44:	6124      	str	r4, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:875
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16d46:	61a5      	str	r5, [r4, #24]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:876
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
   16d48:	6264      	str	r4, [r4, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:892
		pxNewTCB->ulRunTimeCounter = 0UL;
   16d4a:	f8c4 b04c 	str.w	fp, [r4, #76]	; 0x4c
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:919
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
   16d4e:	f884 b054 	strb.w	fp, [r4, #84]	; 0x54
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:946
		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
   16d52:	464a      	mov	r2, r9
   16d54:	4641      	mov	r1, r8
   16d56:	4650      	mov	r0, sl
   16d58:	f000 fc5c 	bl	17614 <pxPortInitialiseStack>
   16d5c:	6020      	str	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:950
	if( ( void * ) pxCreatedTask != NULL )
   16d5e:	b106      	cbz	r6, 16d62 <xTaskCreate+0xaa>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:954
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
   16d60:	6034      	str	r4, [r6, #0]
prvAddNewTaskToReadyList():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:967
	taskENTER_CRITICAL();
   16d62:	f000 fc81 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:969
		uxCurrentNumberOfTasks++;
   16d66:	4b30      	ldr	r3, [pc, #192]	; (16e28 <xTaskCreate+0x170>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:970
		if( pxCurrentTCB == NULL )
   16d68:	4e30      	ldr	r6, [pc, #192]	; (16e2c <xTaskCreate+0x174>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:969
		uxCurrentNumberOfTasks++;
   16d6a:	681a      	ldr	r2, [r3, #0]
   16d6c:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 16e54 <xTaskCreate+0x19c>
   16d70:	3201      	adds	r2, #1
   16d72:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:970
		if( pxCurrentTCB == NULL )
   16d74:	6835      	ldr	r5, [r6, #0]
   16d76:	2d00      	cmp	r5, #0
   16d78:	d14b      	bne.n	16e12 <xTaskCreate+0x15a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:974
			pxCurrentTCB = pxNewTCB;
   16d7a:	6034      	str	r4, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:976
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
   16d7c:	681b      	ldr	r3, [r3, #0]
   16d7e:	2b01      	cmp	r3, #1
   16d80:	d11a      	bne.n	16db8 <xTaskCreate+0x100>
prvInitialiseTaskLists():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3339
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
   16d82:	eb08 0005 	add.w	r0, r8, r5
   16d86:	3514      	adds	r5, #20
   16d88:	f7ff fbe5 	bl	16556 <vListInitialise>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3337
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
   16d8c:	2dc8      	cmp	r5, #200	; 0xc8
   16d8e:	d1f8      	bne.n	16d82 <xTaskCreate+0xca>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3342
	vListInitialise( &xDelayedTaskList1 );
   16d90:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 16e58 <xTaskCreate+0x1a0>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3343
	vListInitialise( &xDelayedTaskList2 );
   16d94:	4d26      	ldr	r5, [pc, #152]	; (16e30 <xTaskCreate+0x178>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3342
	vListInitialise( &xDelayedTaskList1 );
   16d96:	4648      	mov	r0, r9
   16d98:	f7ff fbdd 	bl	16556 <vListInitialise>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3343
	vListInitialise( &xDelayedTaskList2 );
   16d9c:	4628      	mov	r0, r5
   16d9e:	f7ff fbda 	bl	16556 <vListInitialise>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3344
	vListInitialise( &xPendingReadyList );
   16da2:	4824      	ldr	r0, [pc, #144]	; (16e34 <xTaskCreate+0x17c>)
   16da4:	f7ff fbd7 	bl	16556 <vListInitialise>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3354
		vListInitialise( &xSuspendedTaskList );
   16da8:	4823      	ldr	r0, [pc, #140]	; (16e38 <xTaskCreate+0x180>)
   16daa:	f7ff fbd4 	bl	16556 <vListInitialise>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3360
	pxDelayedTaskList = &xDelayedTaskList1;
   16dae:	4b23      	ldr	r3, [pc, #140]	; (16e3c <xTaskCreate+0x184>)
   16db0:	f8c3 9000 	str.w	r9, [r3]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3361
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
   16db4:	4b22      	ldr	r3, [pc, #136]	; (16e40 <xTaskCreate+0x188>)
   16db6:	601d      	str	r5, [r3, #0]
prvAddNewTaskToReadyList():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   16db8:	2501      	movs	r5, #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   16dba:	4a22      	ldr	r2, [pc, #136]	; (16e44 <xTaskCreate+0x18c>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   16dbc:	4922      	ldr	r1, [pc, #136]	; (16e48 <xTaskCreate+0x190>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   16dbe:	6813      	ldr	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   16dc0:	6808      	ldr	r0, [r1, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   16dc2:	3301      	adds	r3, #1
   16dc4:	6013      	str	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   16dc6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   16dc8:	fa05 f302 	lsl.w	r3, r5, r2
   16dcc:	4303      	orrs	r3, r0
   16dce:	2014      	movs	r0, #20
   16dd0:	600b      	str	r3, [r1, #0]
   16dd2:	fb00 8002 	mla	r0, r0, r2, r8
   16dd6:	4639      	mov	r1, r7
   16dd8:	f7ff fbcb 	bl	16572 <vListInsertEnd>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1024
	taskEXIT_CRITICAL();
   16ddc:	f000 fc54 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1026
	if( xSchedulerRunning != pdFALSE )
   16de0:	4b1a      	ldr	r3, [pc, #104]	; (16e4c <xTaskCreate+0x194>)
   16de2:	681b      	ldr	r3, [r3, #0]
   16de4:	b163      	cbz	r3, 16e00 <xTaskCreate+0x148>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1030
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
   16de6:	6833      	ldr	r3, [r6, #0]
   16de8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   16dea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   16dec:	429a      	cmp	r2, r3
   16dee:	d207      	bcs.n	16e00 <xTaskCreate+0x148>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1032
			taskYIELD_IF_USING_PREEMPTION();
   16df0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16df4:	4b16      	ldr	r3, [pc, #88]	; (16e50 <xTaskCreate+0x198>)
   16df6:	601a      	str	r2, [r3, #0]
   16df8:	f3bf 8f4f 	dsb	sy
   16dfc:	f3bf 8f6f 	isb	sy
xTaskCreate():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:762
	}
   16e00:	4628      	mov	r0, r5
   16e02:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:732
					vPortFree( pxStack );
   16e06:	4638      	mov	r0, r7
   16e08:	f7ff fb98 	bl	1653c <vPortFree>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:758
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
   16e0c:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   16e10:	e7f6      	b.n	16e00 <xTaskCreate+0x148>
prvAddNewTaskToReadyList():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:993
			if( xSchedulerRunning == pdFALSE )
   16e12:	4b0e      	ldr	r3, [pc, #56]	; (16e4c <xTaskCreate+0x194>)
   16e14:	681b      	ldr	r3, [r3, #0]
   16e16:	2b00      	cmp	r3, #0
   16e18:	d1ce      	bne.n	16db8 <xTaskCreate+0x100>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:995
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
   16e1a:	6833      	ldr	r3, [r6, #0]
   16e1c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   16e1e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   16e20:	429a      	cmp	r2, r3
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:997
					pxCurrentTCB = pxNewTCB;
   16e22:	bf98      	it	ls
   16e24:	6034      	strls	r4, [r6, #0]
   16e26:	e7c7      	b.n	16db8 <xTaskCreate+0x100>
   16e28:	2007c640 	.word	0x2007c640
   16e2c:	2007c568 	.word	0x2007c568
   16e30:	2007c668 	.word	0x2007c668
   16e34:	2007c688 	.word	0x2007c688
   16e38:	2007c6a0 	.word	0x2007c6a0
   16e3c:	2007c56c 	.word	0x2007c56c
   16e40:	2007c570 	.word	0x2007c570
   16e44:	2007c64c 	.word	0x2007c64c
   16e48:	2007c650 	.word	0x2007c650
   16e4c:	2007c69c 	.word	0x2007c69c
   16e50:	e000ed04 	.word	0xe000ed04
   16e54:	2007c574 	.word	0x2007c574
   16e58:	2007c654 	.word	0x2007c654

00016e5c <vTaskResume>:
vTaskResume():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1703
	{
   16e5c:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1711
		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
   16e5e:	4604      	mov	r4, r0
   16e60:	b360      	cbz	r0, 16ebc <vTaskResume+0x60>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1711 (discriminator 1)
   16e62:	4d17      	ldr	r5, [pc, #92]	; (16ec0 <vTaskResume+0x64>)
   16e64:	682b      	ldr	r3, [r5, #0]
   16e66:	4298      	cmp	r0, r3
   16e68:	d028      	beq.n	16ebc <vTaskResume+0x60>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1713
			taskENTER_CRITICAL();
   16e6a:	f000 fbfd 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1715
				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
   16e6e:	4620      	mov	r0, r4
   16e70:	f7ff feb8 	bl	16be4 <prvTaskIsTaskSuspended>
   16e74:	b1f0      	cbz	r0, 16eb4 <vTaskResume+0x58>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1721
					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
   16e76:	1d26      	adds	r6, r4, #4
   16e78:	4630      	mov	r0, r6
   16e7a:	f7ff fb9d 	bl	165b8 <uxListRemove>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1722
					prvAddTaskToReadyList( pxTCB );
   16e7e:	2301      	movs	r3, #1
   16e80:	4910      	ldr	r1, [pc, #64]	; (16ec4 <vTaskResume+0x68>)
   16e82:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   16e84:	6808      	ldr	r0, [r1, #0]
   16e86:	4093      	lsls	r3, r2
   16e88:	4303      	orrs	r3, r0
   16e8a:	2014      	movs	r0, #20
   16e8c:	600b      	str	r3, [r1, #0]
   16e8e:	4b0e      	ldr	r3, [pc, #56]	; (16ec8 <vTaskResume+0x6c>)
   16e90:	4631      	mov	r1, r6
   16e92:	fb00 3002 	mla	r0, r0, r2, r3
   16e96:	f7ff fb6c 	bl	16572 <vListInsertEnd>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1725
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   16e9a:	682b      	ldr	r3, [r5, #0]
   16e9c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   16e9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   16ea0:	429a      	cmp	r2, r3
   16ea2:	d307      	bcc.n	16eb4 <vTaskResume+0x58>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1730
						taskYIELD_IF_USING_PREEMPTION();
   16ea4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16ea8:	4b08      	ldr	r3, [pc, #32]	; (16ecc <vTaskResume+0x70>)
   16eaa:	601a      	str	r2, [r3, #0]
   16eac:	f3bf 8f4f 	dsb	sy
   16eb0:	f3bf 8f6f 	isb	sy
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1748
	}
   16eb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1742
			taskEXIT_CRITICAL();
   16eb8:	f000 bbe6 	b.w	17688 <vPortExitCritical>
   16ebc:	bd70      	pop	{r4, r5, r6, pc}
   16ebe:	bf00      	nop
   16ec0:	2007c568 	.word	0x2007c568
   16ec4:	2007c650 	.word	0x2007c650
   16ec8:	2007c574 	.word	0x2007c574
   16ecc:	e000ed04 	.word	0xe000ed04

00016ed0 <vTaskStartScheduler>:
vTaskStartScheduler():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1827
{
   16ed0:	b513      	push	{r0, r1, r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1860
		xReturn = xTaskCreate(	prvIdleTask,
   16ed2:	2400      	movs	r4, #0
   16ed4:	4b11      	ldr	r3, [pc, #68]	; (16f1c <vTaskStartScheduler+0x4c>)
   16ed6:	9400      	str	r4, [sp, #0]
   16ed8:	9301      	str	r3, [sp, #4]
   16eda:	2280      	movs	r2, #128	; 0x80
   16edc:	4623      	mov	r3, r4
   16ede:	4910      	ldr	r1, [pc, #64]	; (16f20 <vTaskStartScheduler+0x50>)
   16ee0:	4810      	ldr	r0, [pc, #64]	; (16f24 <vTaskStartScheduler+0x54>)
   16ee2:	f7ff fee9 	bl	16cb8 <xTaskCreate>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1881
	if( xReturn == pdPASS )
   16ee6:	2801      	cmp	r0, #1
   16ee8:	d116      	bne.n	16f18 <vTaskStartScheduler+0x48>
vPortRaiseBASEPRI():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
	__asm volatile
   16eea:	f04f 0310 	mov.w	r3, #16
   16eee:	f383 8811 	msr	BASEPRI, r3
   16ef2:	f3bf 8f6f 	isb	sy
   16ef6:	f3bf 8f4f 	dsb	sy
vTaskStartScheduler():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1898
		xNextTaskUnblockTime = portMAX_DELAY;
   16efa:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16efe:	4b0a      	ldr	r3, [pc, #40]	; (16f28 <vTaskStartScheduler+0x58>)
   16f00:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1899
		xSchedulerRunning = pdTRUE;
   16f02:	4b0a      	ldr	r3, [pc, #40]	; (16f2c <vTaskStartScheduler+0x5c>)
   16f04:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1900
		xTickCount = ( TickType_t ) 0U;
   16f06:	4b0a      	ldr	r3, [pc, #40]	; (16f30 <vTaskStartScheduler+0x60>)
   16f08:	601c      	str	r4, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1905
		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
   16f0a:	f000 fc23 	bl	17754 <rts_not_full_trace_init>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1930
}
   16f0e:	b002      	add	sp, #8
   16f10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1909
		if( xPortStartScheduler() != pdFALSE )
   16f14:	f000 bc06 	b.w	17724 <xPortStartScheduler>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1930
}
   16f18:	b002      	add	sp, #8
   16f1a:	bd10      	pop	{r4, pc}
   16f1c:	2007c67c 	.word	0x2007c67c
   16f20:	00021b96 	.word	0x00021b96
   16f24:	00016bbd 	.word	0x00016bbd
   16f28:	2007c680 	.word	0x2007c680
   16f2c:	2007c69c 	.word	0x2007c69c
   16f30:	2007c6b4 	.word	0x2007c6b4

00016f34 <vTaskEndScheduler>:
vPortRaiseBASEPRI():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
   16f34:	f04f 0310 	mov.w	r3, #16
   16f38:	f383 8811 	msr	BASEPRI, r3
   16f3c:	f3bf 8f6f 	isb	sy
   16f40:	f3bf 8f4f 	dsb	sy
vTaskEndScheduler():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1939
	xSchedulerRunning = pdFALSE;
   16f44:	2200      	movs	r2, #0
   16f46:	4b02      	ldr	r3, [pc, #8]	; (16f50 <vTaskEndScheduler+0x1c>)
   16f48:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1940
	vPortEndScheduler();
   16f4a:	f000 bb8b 	b.w	17664 <vPortEndScheduler>
   16f4e:	bf00      	nop
   16f50:	2007c69c 	.word	0x2007c69c

00016f54 <vTaskSuspendAll>:
vTaskSuspendAll():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1950
	++uxSchedulerSuspended;
   16f54:	4a02      	ldr	r2, [pc, #8]	; (16f60 <vTaskSuspendAll+0xc>)
   16f56:	6813      	ldr	r3, [r2, #0]
   16f58:	3301      	adds	r3, #1
   16f5a:	6013      	str	r3, [r2, #0]
   16f5c:	4770      	bx	lr
   16f5e:	bf00      	nop
   16f60:	2007c648 	.word	0x2007c648

00016f64 <xTaskGetTickCount>:
xTaskGetTickCount():
   16f64:	4b01      	ldr	r3, [pc, #4]	; (16f6c <xTaskGetTickCount+0x8>)
   16f66:	6818      	ldr	r0, [r3, #0]
   16f68:	4770      	bx	lr
   16f6a:	bf00      	nop
   16f6c:	2007c6b4 	.word	0x2007c6b4

00016f70 <xTaskGetTickCountFromISR>:
xTaskGetTickCountFromISR():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2165
		xReturn = xTickCount;
   16f70:	4b01      	ldr	r3, [pc, #4]	; (16f78 <xTaskGetTickCountFromISR+0x8>)
   16f72:	6818      	ldr	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2170
}
   16f74:	4770      	bx	lr
   16f76:	bf00      	nop
   16f78:	2007c6b4 	.word	0x2007c6b4

00016f7c <xTaskIncrementTick>:
xTaskIncrementTick():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2500
{
   16f7c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2509
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   16f80:	4b36      	ldr	r3, [pc, #216]	; (1705c <xTaskIncrementTick+0xe0>)
   16f82:	681b      	ldr	r3, [r3, #0]
   16f84:	2b00      	cmp	r3, #0
   16f86:	d147      	bne.n	17018 <xTaskIncrementTick+0x9c>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2513
		const TickType_t xConstTickCount = xTickCount + 1;
   16f88:	4b35      	ldr	r3, [pc, #212]	; (17060 <xTaskIncrementTick+0xe4>)
   16f8a:	681c      	ldr	r4, [r3, #0]
   16f8c:	3401      	adds	r4, #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2517
		xTickCount = xConstTickCount;
   16f8e:	601c      	str	r4, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2519
		if( xConstTickCount == ( TickType_t ) 0U )
   16f90:	b95c      	cbnz	r4, 16faa <xTaskIncrementTick+0x2e>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2521
			taskSWITCH_DELAYED_LISTS();
   16f92:	4a34      	ldr	r2, [pc, #208]	; (17064 <xTaskIncrementTick+0xe8>)
   16f94:	4b34      	ldr	r3, [pc, #208]	; (17068 <xTaskIncrementTick+0xec>)
   16f96:	6811      	ldr	r1, [r2, #0]
   16f98:	6818      	ldr	r0, [r3, #0]
   16f9a:	6010      	str	r0, [r2, #0]
   16f9c:	4a33      	ldr	r2, [pc, #204]	; (1706c <xTaskIncrementTick+0xf0>)
   16f9e:	6019      	str	r1, [r3, #0]
   16fa0:	6813      	ldr	r3, [r2, #0]
   16fa2:	3301      	adds	r3, #1
   16fa4:	6013      	str	r3, [r2, #0]
   16fa6:	f7ff fe2f 	bl	16c08 <prvResetNextTaskUnblockTime>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2532
		if( xConstTickCount >= xNextTaskUnblockTime )
   16faa:	4d31      	ldr	r5, [pc, #196]	; (17070 <xTaskIncrementTick+0xf4>)
   16fac:	f04f 0b00 	mov.w	fp, #0
   16fb0:	682b      	ldr	r3, [r5, #0]
   16fb2:	4f30      	ldr	r7, [pc, #192]	; (17074 <xTaskIncrementTick+0xf8>)
   16fb4:	429c      	cmp	r4, r3
   16fb6:	d33e      	bcc.n	17036 <xTaskIncrementTick+0xba>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2536
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   16fb8:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 17064 <xTaskIncrementTick+0xe8>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2586
					prvAddTaskToReadyList( pxTCB );
   16fbc:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 17084 <xTaskIncrementTick+0x108>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2536
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   16fc0:	f8d8 2000 	ldr.w	r2, [r8]
   16fc4:	6812      	ldr	r2, [r2, #0]
   16fc6:	bb72      	cbnz	r2, 17026 <xTaskIncrementTick+0xaa>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2543
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16fc8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16fcc:	602a      	str	r2, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2544
					break;
   16fce:	e032      	b.n	17036 <xTaskIncrementTick+0xba>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2571
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   16fd0:	f106 0a04 	add.w	sl, r6, #4
   16fd4:	4650      	mov	r0, sl
   16fd6:	f7ff faef 	bl	165b8 <uxListRemove>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2575
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
   16fda:	6ab1      	ldr	r1, [r6, #40]	; 0x28
   16fdc:	b119      	cbz	r1, 16fe6 <xTaskIncrementTick+0x6a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2577
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   16fde:	f106 0018 	add.w	r0, r6, #24
   16fe2:	f7ff fae9 	bl	165b8 <uxListRemove>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2586
					prvAddTaskToReadyList( pxTCB );
   16fe6:	2201      	movs	r2, #1
   16fe8:	f04f 0e14 	mov.w	lr, #20
   16fec:	6af0      	ldr	r0, [r6, #44]	; 0x2c
   16fee:	f8d9 3000 	ldr.w	r3, [r9]
   16ff2:	fa02 f100 	lsl.w	r1, r2, r0
   16ff6:	4319      	orrs	r1, r3
   16ff8:	4b1f      	ldr	r3, [pc, #124]	; (17078 <xTaskIncrementTick+0xfc>)
   16ffa:	f8c9 1000 	str.w	r1, [r9]
   16ffe:	fb0e 3000 	mla	r0, lr, r0, r3
   17002:	4651      	mov	r1, sl
   17004:	f7ff fab5 	bl	16572 <vListInsertEnd>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2596
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   17008:	6838      	ldr	r0, [r7, #0]
   1700a:	6af1      	ldr	r1, [r6, #44]	; 0x2c
   1700c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2598
							xSwitchRequired = pdTRUE;
   1700e:	4291      	cmp	r1, r2
   17010:	bf28      	it	cs
   17012:	f04f 0b01 	movcs.w	fp, #1
   17016:	e7d3      	b.n	16fc0 <xTaskIncrementTick+0x44>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2643
		++uxPendedTicks;
   17018:	4a18      	ldr	r2, [pc, #96]	; (1707c <xTaskIncrementTick+0x100>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2503
BaseType_t xSwitchRequired = pdFALSE;
   1701a:	f04f 0b00 	mov.w	fp, #0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2643
		++uxPendedTicks;
   1701e:	6813      	ldr	r3, [r2, #0]
   17020:	3301      	adds	r3, #1
   17022:	6013      	str	r3, [r2, #0]
   17024:	e011      	b.n	1704a <xTaskIncrementTick+0xce>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2552
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   17026:	f8d8 2000 	ldr.w	r2, [r8]
   1702a:	68d2      	ldr	r2, [r2, #12]
   1702c:	68d6      	ldr	r6, [r2, #12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2553
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
   1702e:	6871      	ldr	r1, [r6, #4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2555
					if( xConstTickCount < xItemValue )
   17030:	428c      	cmp	r4, r1
   17032:	d2cd      	bcs.n	16fd0 <xTaskIncrementTick+0x54>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2562
						xNextTaskUnblockTime = xItemValue;
   17034:	6029      	str	r1, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2615
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
   17036:	683a      	ldr	r2, [r7, #0]
   17038:	4b0f      	ldr	r3, [pc, #60]	; (17078 <xTaskIncrementTick+0xfc>)
   1703a:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
   1703c:	2214      	movs	r2, #20
   1703e:	434a      	muls	r2, r1
   17040:	589a      	ldr	r2, [r3, r2]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2617
				xSwitchRequired = pdTRUE;
   17042:	2a02      	cmp	r2, #2
   17044:	bf28      	it	cs
   17046:	f04f 0b01 	movcs.w	fp, #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2656
		if( xYieldPending != pdFALSE )
   1704a:	4a0d      	ldr	r2, [pc, #52]	; (17080 <xTaskIncrementTick+0x104>)
   1704c:	6812      	ldr	r2, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2658
			xSwitchRequired = pdTRUE;
   1704e:	2a00      	cmp	r2, #0
   17050:	bf18      	it	ne
   17052:	f04f 0b01 	movne.w	fp, #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2668
}
   17056:	4658      	mov	r0, fp
   17058:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1705c:	2007c648 	.word	0x2007c648
   17060:	2007c6b4 	.word	0x2007c6b4
   17064:	2007c56c 	.word	0x2007c56c
   17068:	2007c570 	.word	0x2007c570
   1706c:	2007c684 	.word	0x2007c684
   17070:	2007c680 	.word	0x2007c680
   17074:	2007c568 	.word	0x2007c568
   17078:	2007c574 	.word	0x2007c574
   1707c:	2007c644 	.word	0x2007c644
   17080:	2007c6b8 	.word	0x2007c6b8
   17084:	2007c650 	.word	0x2007c650

00017088 <xTaskResumeAll>:
xTaskResumeAll():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2018
{
   17088:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2031
	taskENTER_CRITICAL();
   1708c:	f000 faec 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2033
		--uxSchedulerSuspended;
   17090:	4b2a      	ldr	r3, [pc, #168]	; (1713c <xTaskResumeAll+0xb4>)
   17092:	681a      	ldr	r2, [r3, #0]
   17094:	3a01      	subs	r2, #1
   17096:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2035
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   17098:	681c      	ldr	r4, [r3, #0]
   1709a:	b12c      	cbz	r4, 170a8 <xTaskResumeAll+0x20>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2020
BaseType_t xAlreadyYielded = pdFALSE;
   1709c:	2400      	movs	r4, #0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2121
	taskEXIT_CRITICAL();
   1709e:	f000 faf3 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2124
}
   170a2:	4620      	mov	r0, r4
   170a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2037
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
   170a8:	4b25      	ldr	r3, [pc, #148]	; (17140 <xTaskResumeAll+0xb8>)
   170aa:	681b      	ldr	r3, [r3, #0]
   170ac:	2b00      	cmp	r3, #0
   170ae:	d0f5      	beq.n	1709c <xTaskResumeAll+0x14>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2041
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   170b0:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 17158 <xTaskResumeAll+0xd0>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   170b4:	4f23      	ldr	r7, [pc, #140]	; (17144 <xTaskResumeAll+0xbc>)
   170b6:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 1715c <xTaskResumeAll+0xd4>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2041
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   170ba:	f8d9 3000 	ldr.w	r3, [r9]
   170be:	b9e3      	cbnz	r3, 170fa <xTaskResumeAll+0x72>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2060
				if( pxTCB != NULL )
   170c0:	b10c      	cbz	r4, 170c6 <xTaskResumeAll+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2068
					prvResetNextTaskUnblockTime();
   170c2:	f7ff fda1 	bl	16c08 <prvResetNextTaskUnblockTime>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2076
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
   170c6:	4d20      	ldr	r5, [pc, #128]	; (17148 <xTaskResumeAll+0xc0>)
   170c8:	682c      	ldr	r4, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2078
					if( uxPendedCounts > ( UBaseType_t ) 0U )
   170ca:	b144      	cbz	r4, 170de <xTaskResumeAll+0x56>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2084
								xYieldPending = pdTRUE;
   170cc:	2701      	movs	r7, #1
   170ce:	4e1f      	ldr	r6, [pc, #124]	; (1714c <xTaskResumeAll+0xc4>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2082
							if( xTaskIncrementTick() != pdFALSE )
   170d0:	f7ff ff54 	bl	16f7c <xTaskIncrementTick>
   170d4:	b100      	cbz	r0, 170d8 <xTaskResumeAll+0x50>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2084
								xYieldPending = pdTRUE;
   170d6:	6037      	str	r7, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2091
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
   170d8:	3c01      	subs	r4, #1
   170da:	d1f9      	bne.n	170d0 <xTaskResumeAll+0x48>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2093
						uxPendedTicks = 0;
   170dc:	602c      	str	r4, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2101
				if( xYieldPending != pdFALSE )
   170de:	4b1b      	ldr	r3, [pc, #108]	; (1714c <xTaskResumeAll+0xc4>)
   170e0:	681b      	ldr	r3, [r3, #0]
   170e2:	2b00      	cmp	r3, #0
   170e4:	d0da      	beq.n	1709c <xTaskResumeAll+0x14>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2108
					taskYIELD_IF_USING_PREEMPTION();
   170e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   170ea:	4b19      	ldr	r3, [pc, #100]	; (17150 <xTaskResumeAll+0xc8>)
   170ec:	601a      	str	r2, [r3, #0]
   170ee:	f3bf 8f4f 	dsb	sy
   170f2:	f3bf 8f6f 	isb	sy
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2105
						xAlreadyYielded = pdTRUE;
   170f6:	2401      	movs	r4, #1
   170f8:	e7d1      	b.n	1709e <xTaskResumeAll+0x16>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2043
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
   170fa:	f8d9 300c 	ldr.w	r3, [r9, #12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   170fe:	2501      	movs	r5, #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2043
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
   17100:	68dc      	ldr	r4, [r3, #12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2045
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   17102:	1d26      	adds	r6, r4, #4
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2044
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   17104:	f104 0018 	add.w	r0, r4, #24
   17108:	f7ff fa56 	bl	165b8 <uxListRemove>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2045
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   1710c:	4630      	mov	r0, r6
   1710e:	f7ff fa53 	bl	165b8 <uxListRemove>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   17112:	2014      	movs	r0, #20
   17114:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   17116:	6839      	ldr	r1, [r7, #0]
   17118:	fa05 f302 	lsl.w	r3, r5, r2
   1711c:	430b      	orrs	r3, r1
   1711e:	fb00 8002 	mla	r0, r0, r2, r8
   17122:	4631      	mov	r1, r6
   17124:	603b      	str	r3, [r7, #0]
   17126:	f7ff fa24 	bl	16572 <vListInsertEnd>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2050
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   1712a:	4b0a      	ldr	r3, [pc, #40]	; (17154 <xTaskResumeAll+0xcc>)
   1712c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1712e:	681b      	ldr	r3, [r3, #0]
   17130:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   17132:	429a      	cmp	r2, r3
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2052
						xYieldPending = pdTRUE;
   17134:	bf24      	itt	cs
   17136:	4b05      	ldrcs	r3, [pc, #20]	; (1714c <xTaskResumeAll+0xc4>)
   17138:	601d      	strcs	r5, [r3, #0]
   1713a:	e7be      	b.n	170ba <xTaskResumeAll+0x32>
   1713c:	2007c648 	.word	0x2007c648
   17140:	2007c640 	.word	0x2007c640
   17144:	2007c650 	.word	0x2007c650
   17148:	2007c644 	.word	0x2007c644
   1714c:	2007c6b8 	.word	0x2007c6b8
   17150:	e000ed04 	.word	0xe000ed04
   17154:	2007c568 	.word	0x2007c568
   17158:	2007c688 	.word	0x2007c688
   1715c:	2007c574 	.word	0x2007c574

00017160 <vTaskDelayUntil>:
vTaskDelayUntil():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1141
	{
   17160:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1149
		vTaskSuspendAll();
   17162:	f7ff fef7 	bl	16f54 <vTaskSuspendAll>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1153
			const TickType_t xConstTickCount = xTickCount;
   17166:	4b12      	ldr	r3, [pc, #72]	; (171b0 <vTaskDelayUntil+0x50>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1156
			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
   17168:	6804      	ldr	r4, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1153
			const TickType_t xConstTickCount = xTickCount;
   1716a:	681a      	ldr	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1156
			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
   1716c:	1863      	adds	r3, r4, r1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1158
			if( xConstTickCount < *pxPreviousWakeTime )
   1716e:	42a2      	cmp	r2, r4
   17170:	d217      	bcs.n	171a2 <vTaskDelayUntil+0x42>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1165
				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
   17172:	429c      	cmp	r4, r3
   17174:	d919      	bls.n	171aa <vTaskDelayUntil+0x4a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1179 (discriminator 1)
				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
   17176:	429a      	cmp	r2, r3
   17178:	bf2c      	ite	cs
   1717a:	2100      	movcs	r1, #0
   1717c:	2101      	movcc	r1, #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1190
			*pxPreviousWakeTime = xTimeToWake;
   1717e:	6003      	str	r3, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1192
			if( xShouldDelay != pdFALSE )
   17180:	b119      	cbz	r1, 1718a <vTaskDelayUntil+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1198
				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
   17182:	2100      	movs	r1, #0
   17184:	1a98      	subs	r0, r3, r2
   17186:	f7ff fd51 	bl	16c2c <prvAddCurrentTaskToDelayedList>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1205
		xAlreadyYielded = xTaskResumeAll();
   1718a:	f7ff ff7d 	bl	17088 <xTaskResumeAll>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1209
		if( xAlreadyYielded == pdFALSE )
   1718e:	b938      	cbnz	r0, 171a0 <vTaskDelayUntil+0x40>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1211
			portYIELD_WITHIN_API();
   17190:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   17194:	4b07      	ldr	r3, [pc, #28]	; (171b4 <vTaskDelayUntil+0x54>)
   17196:	601a      	str	r2, [r3, #0]
   17198:	f3bf 8f4f 	dsb	sy
   1719c:	f3bf 8f6f 	isb	sy
   171a0:	bd10      	pop	{r4, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1179
				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
   171a2:	429c      	cmp	r4, r3
   171a4:	d9e7      	bls.n	17176 <vTaskDelayUntil+0x16>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1181
					xShouldDelay = pdTRUE;
   171a6:	2101      	movs	r1, #1
   171a8:	e7e9      	b.n	1717e <vTaskDelayUntil+0x1e>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1143
	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
   171aa:	2100      	movs	r1, #0
   171ac:	e7e7      	b.n	1717e <vTaskDelayUntil+0x1e>
   171ae:	bf00      	nop
   171b0:	2007c6b4 	.word	0x2007c6b4
   171b4:	e000ed04 	.word	0xe000ed04

000171b8 <vTaskDelay>:
vTaskDelay():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1225
	{
   171b8:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1229
		if( xTicksToDelay > ( TickType_t ) 0U )
   171ba:	b940      	cbnz	r0, 171ce <vTaskDelay+0x16>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1256
			portYIELD_WITHIN_API();
   171bc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   171c0:	4b08      	ldr	r3, [pc, #32]	; (171e4 <vTaskDelay+0x2c>)
   171c2:	601a      	str	r2, [r3, #0]
   171c4:	f3bf 8f4f 	dsb	sy
   171c8:	f3bf 8f6f 	isb	sy
   171cc:	bd08      	pop	{r3, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1232
			vTaskSuspendAll();
   171ce:	f7ff fec1 	bl	16f54 <vTaskSuspendAll>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1243
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
   171d2:	2100      	movs	r1, #0
   171d4:	f7ff fd2a 	bl	16c2c <prvAddCurrentTaskToDelayedList>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1245
			xAlreadyYielded = xTaskResumeAll();
   171d8:	f7ff ff56 	bl	17088 <xTaskResumeAll>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1254
		if( xAlreadyYielded == pdFALSE )
   171dc:	2800      	cmp	r0, #0
   171de:	d0ed      	beq.n	171bc <vTaskDelay+0x4>
   171e0:	bd08      	pop	{r3, pc}
   171e2:	bf00      	nop
   171e4:	e000ed04 	.word	0xe000ed04

000171e8 <vTaskSwitchContext>:
vTaskSwitchContext():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2763
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
   171e8:	4b26      	ldr	r3, [pc, #152]	; (17284 <vTaskSwitchContext+0x9c>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2762
{
   171ea:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2763
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
   171ec:	681a      	ldr	r2, [r3, #0]
   171ee:	4b26      	ldr	r3, [pc, #152]	; (17288 <vTaskSwitchContext+0xa0>)
   171f0:	b112      	cbz	r2, 171f8 <vTaskSwitchContext+0x10>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2767
		xYieldPending = pdTRUE;
   171f2:	2201      	movs	r2, #1
   171f4:	601a      	str	r2, [r3, #0]
   171f6:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2771
		xYieldPending = pdFALSE;
   171f8:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2779
					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
   171fa:	f000 fab5 	bl	17768 <rts_not_full_trace_get>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2789
				if( ulTotalRunTime > ulTaskSwitchedInTime )
   171fe:	4a23      	ldr	r2, [pc, #140]	; (1728c <vTaskSwitchContext+0xa4>)
   17200:	4c23      	ldr	r4, [pc, #140]	; (17290 <vTaskSwitchContext+0xa8>)
   17202:	6815      	ldr	r5, [r2, #0]
   17204:	42a8      	cmp	r0, r5
   17206:	d904      	bls.n	17212 <vTaskSwitchContext+0x2a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2791
					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
   17208:	6821      	ldr	r1, [r4, #0]
   1720a:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   1720c:	1b5b      	subs	r3, r3, r5
   1720e:	4403      	add	r3, r0
   17210:	64cb      	str	r3, [r1, #76]	; 0x4c
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2802
		taskCHECK_FOR_STACK_OVERFLOW();
   17212:	6823      	ldr	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2797
				ulTaskSwitchedInTime = ulTotalRunTime;
   17214:	6010      	str	r0, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2802
		taskCHECK_FOR_STACK_OVERFLOW();
   17216:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   17218:	681a      	ldr	r2, [r3, #0]
   1721a:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   1721e:	d10b      	bne.n	17238 <vTaskSwitchContext+0x50>
   17220:	685a      	ldr	r2, [r3, #4]
   17222:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   17226:	d107      	bne.n	17238 <vTaskSwitchContext+0x50>
   17228:	689a      	ldr	r2, [r3, #8]
   1722a:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   1722e:	d103      	bne.n	17238 <vTaskSwitchContext+0x50>
   17230:	68db      	ldr	r3, [r3, #12]
   17232:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
   17236:	d004      	beq.n	17242 <vTaskSwitchContext+0x5a>
   17238:	6820      	ldr	r0, [r4, #0]
   1723a:	6821      	ldr	r1, [r4, #0]
   1723c:	3134      	adds	r1, #52	; 0x34
   1723e:	f000 fa9f 	bl	17780 <vApplicationStackOverflowHook>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
		taskSELECT_HIGHEST_PRIORITY_TASK();
   17242:	4b14      	ldr	r3, [pc, #80]	; (17294 <vTaskSwitchContext+0xac>)
   17244:	681b      	ldr	r3, [r3, #0]
ucPortCountLeadingZeros():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:176
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
   17246:	fab3 f383 	clz	r3, r3
vTaskSwitchContext():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
   1724a:	2014      	movs	r0, #20
ucPortCountLeadingZeros():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:176
   1724c:	b2db      	uxtb	r3, r3
vTaskSwitchContext():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
   1724e:	f1c3 031f 	rsb	r3, r3, #31
   17252:	fb00 f203 	mul.w	r2, r0, r3
   17256:	4910      	ldr	r1, [pc, #64]	; (17298 <vTaskSwitchContext+0xb0>)
   17258:	188d      	adds	r5, r1, r2
   1725a:	686e      	ldr	r6, [r5, #4]
   1725c:	3208      	adds	r2, #8
   1725e:	6876      	ldr	r6, [r6, #4]
   17260:	440a      	add	r2, r1
   17262:	4296      	cmp	r6, r2
   17264:	fb00 1303 	mla	r3, r0, r3, r1
   17268:	bf08      	it	eq
   1726a:	6872      	ldreq	r2, [r6, #4]
   1726c:	606e      	str	r6, [r5, #4]
   1726e:	bf08      	it	eq
   17270:	606a      	streq	r2, [r5, #4]
   17272:	685b      	ldr	r3, [r3, #4]
   17274:	68db      	ldr	r3, [r3, #12]
   17276:	6023      	str	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2807
		traceTASK_SWITCHED_IN();
   17278:	6823      	ldr	r3, [r4, #0]
   1727a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   1727c:	4b07      	ldr	r3, [pc, #28]	; (1729c <vTaskSwitchContext+0xb4>)
   1727e:	645a      	str	r2, [r3, #68]	; 0x44
   17280:	bd70      	pop	{r4, r5, r6, pc}
   17282:	bf00      	nop
   17284:	2007c648 	.word	0x2007c648
   17288:	2007c6b8 	.word	0x2007c6b8
   1728c:	2007c63c 	.word	0x2007c63c
   17290:	2007c568 	.word	0x2007c568
   17294:	2007c650 	.word	0x2007c650
   17298:	2007c574 	.word	0x2007c574
   1729c:	40024000 	.word	0x40024000

000172a0 <vTaskSuspend>:
vTaskSuspend():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1567
	{
   172a0:	b570      	push	{r4, r5, r6, lr}
   172a2:	4604      	mov	r4, r0
   172a4:	4e23      	ldr	r6, [pc, #140]	; (17334 <vTaskSuspend+0x94>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1570
		taskENTER_CRITICAL();
   172a6:	f000 f9df 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1574
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
   172aa:	b904      	cbnz	r4, 172ae <vTaskSuspend+0xe>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1574 (discriminator 1)
   172ac:	6834      	ldr	r4, [r6, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1580 (discriminator 4)
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   172ae:	1d25      	adds	r5, r4, #4
   172b0:	4628      	mov	r0, r5
   172b2:	f7ff f981 	bl	165b8 <uxListRemove>
   172b6:	b960      	cbnz	r0, 172d2 <vTaskSuspend+0x32>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1582
				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   172b8:	2114      	movs	r1, #20
   172ba:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   172bc:	4b1e      	ldr	r3, [pc, #120]	; (17338 <vTaskSuspend+0x98>)
   172be:	4341      	muls	r1, r0
   172c0:	585b      	ldr	r3, [r3, r1]
   172c2:	b933      	cbnz	r3, 172d2 <vTaskSuspend+0x32>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1582 (discriminator 1)
   172c4:	2201      	movs	r2, #1
   172c6:	491d      	ldr	r1, [pc, #116]	; (1733c <vTaskSuspend+0x9c>)
   172c8:	4082      	lsls	r2, r0
   172ca:	680b      	ldr	r3, [r1, #0]
   172cc:	ea23 0302 	bic.w	r3, r3, r2
   172d0:	600b      	str	r3, [r1, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1590
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
   172d2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   172d4:	b11b      	cbz	r3, 172de <vTaskSuspend+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1592
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   172d6:	f104 0018 	add.w	r0, r4, #24
   172da:	f7ff f96d 	bl	165b8 <uxListRemove>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1599
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
   172de:	4629      	mov	r1, r5
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1603
		if( xSchedulerRunning != pdFALSE )
   172e0:	4d17      	ldr	r5, [pc, #92]	; (17340 <vTaskSuspend+0xa0>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1599
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
   172e2:	4818      	ldr	r0, [pc, #96]	; (17344 <vTaskSuspend+0xa4>)
   172e4:	f7ff f945 	bl	16572 <vListInsertEnd>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1601
		taskEXIT_CRITICAL();
   172e8:	f000 f9ce 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1603
		if( xSchedulerRunning != pdFALSE )
   172ec:	682a      	ldr	r2, [r5, #0]
   172ee:	b12a      	cbz	r2, 172fc <vTaskSuspend+0x5c>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1607
			taskENTER_CRITICAL();
   172f0:	f000 f9ba 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1609
				prvResetNextTaskUnblockTime();
   172f4:	f7ff fc88 	bl	16c08 <prvResetNextTaskUnblockTime>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1611
			taskEXIT_CRITICAL();
   172f8:	f000 f9c6 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1618
		if( pxTCB == pxCurrentTCB )
   172fc:	6833      	ldr	r3, [r6, #0]
   172fe:	429c      	cmp	r4, r3
   17300:	d116      	bne.n	17330 <vTaskSuspend+0x90>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1620
			if( xSchedulerRunning != pdFALSE )
   17302:	682b      	ldr	r3, [r5, #0]
   17304:	b143      	cbz	r3, 17318 <vTaskSuspend+0x78>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1624
				portYIELD_WITHIN_API();
   17306:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1730a:	4b0f      	ldr	r3, [pc, #60]	; (17348 <vTaskSuspend+0xa8>)
   1730c:	601a      	str	r2, [r3, #0]
   1730e:	f3bf 8f4f 	dsb	sy
   17312:	f3bf 8f6f 	isb	sy
   17316:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1631
				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
   17318:	4a0c      	ldr	r2, [pc, #48]	; (1734c <vTaskSuspend+0xac>)
   1731a:	490a      	ldr	r1, [pc, #40]	; (17344 <vTaskSuspend+0xa4>)
   1731c:	6812      	ldr	r2, [r2, #0]
   1731e:	6809      	ldr	r1, [r1, #0]
   17320:	4291      	cmp	r1, r2
   17322:	d101      	bne.n	17328 <vTaskSuspend+0x88>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1637
					pxCurrentTCB = NULL;
   17324:	6033      	str	r3, [r6, #0]
   17326:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1649
	}
   17328:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1641
					vTaskSwitchContext();
   1732c:	f7ff bf5c 	b.w	171e8 <vTaskSwitchContext>
   17330:	bd70      	pop	{r4, r5, r6, pc}
   17332:	bf00      	nop
   17334:	2007c568 	.word	0x2007c568
   17338:	2007c574 	.word	0x2007c574
   1733c:	2007c650 	.word	0x2007c650
   17340:	2007c69c 	.word	0x2007c69c
   17344:	2007c6a0 	.word	0x2007c6a0
   17348:	e000ed04 	.word	0xe000ed04
   1734c:	2007c640 	.word	0x2007c640

00017350 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2821
{
   17350:	b510      	push	{r4, lr}
   17352:	460c      	mov	r4, r1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2831
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
   17354:	4b05      	ldr	r3, [pc, #20]	; (1736c <vTaskPlaceOnEventList+0x1c>)
   17356:	6819      	ldr	r1, [r3, #0]
   17358:	3118      	adds	r1, #24
   1735a:	f7ff f916 	bl	1658a <vListInsert>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2833
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
   1735e:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2834
}
   17360:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2833
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
   17364:	2101      	movs	r1, #1
   17366:	f7ff bc61 	b.w	16c2c <prvAddCurrentTaskToDelayedList>
   1736a:	bf00      	nop
   1736c:	2007c568 	.word	0x2007c568

00017370 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2895
{
   17370:	b538      	push	{r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2912
	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
   17372:	68c3      	ldr	r3, [r0, #12]
   17374:	68dc      	ldr	r4, [r3, #12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2914
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
   17376:	f104 0518 	add.w	r5, r4, #24
   1737a:	4628      	mov	r0, r5
   1737c:	f7ff f91c 	bl	165b8 <uxListRemove>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2916
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   17380:	4b11      	ldr	r3, [pc, #68]	; (173c8 <xTaskRemoveFromEventList+0x58>)
   17382:	681b      	ldr	r3, [r3, #0]
   17384:	b9e3      	cbnz	r3, 173c0 <xTaskRemoveFromEventList+0x50>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2918
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
   17386:	1d25      	adds	r5, r4, #4
   17388:	4628      	mov	r0, r5
   1738a:	f7ff f915 	bl	165b8 <uxListRemove>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2919
		prvAddTaskToReadyList( pxUnblockedTCB );
   1738e:	2301      	movs	r3, #1
   17390:	490e      	ldr	r1, [pc, #56]	; (173cc <xTaskRemoveFromEventList+0x5c>)
   17392:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   17394:	6808      	ldr	r0, [r1, #0]
   17396:	4093      	lsls	r3, r2
   17398:	4303      	orrs	r3, r0
   1739a:	2014      	movs	r0, #20
   1739c:	600b      	str	r3, [r1, #0]
   1739e:	4629      	mov	r1, r5
   173a0:	4b0b      	ldr	r3, [pc, #44]	; (173d0 <xTaskRemoveFromEventList+0x60>)
   173a2:	fb00 3002 	mla	r0, r0, r2, r3
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2925
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   173a6:	f7ff f8e4 	bl	16572 <vListInsertEnd>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2928
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
   173aa:	4b0a      	ldr	r3, [pc, #40]	; (173d4 <xTaskRemoveFromEventList+0x64>)
   173ac:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   173ae:	681b      	ldr	r3, [r3, #0]
   173b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   173b2:	429a      	cmp	r2, r3
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2937
		xYieldPending = pdTRUE;
   173b4:	bf85      	ittet	hi
   173b6:	2001      	movhi	r0, #1
   173b8:	4b07      	ldrhi	r3, [pc, #28]	; (173d8 <xTaskRemoveFromEventList+0x68>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2941
		xReturn = pdFALSE;
   173ba:	2000      	movls	r0, #0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2937
		xYieldPending = pdTRUE;
   173bc:	6018      	strhi	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2959
}
   173be:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2925
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   173c0:	4629      	mov	r1, r5
   173c2:	4806      	ldr	r0, [pc, #24]	; (173dc <xTaskRemoveFromEventList+0x6c>)
   173c4:	e7ef      	b.n	173a6 <xTaskRemoveFromEventList+0x36>
   173c6:	bf00      	nop
   173c8:	2007c648 	.word	0x2007c648
   173cc:	2007c650 	.word	0x2007c650
   173d0:	2007c574 	.word	0x2007c574
   173d4:	2007c568 	.word	0x2007c568
   173d8:	2007c6b8 	.word	0x2007c6b8
   173dc:	2007c688 	.word	0x2007c688

000173e0 <vTaskSetTimeOutState>:
vTaskSetTimeOutState():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3010
	pxTimeOut->xOverflowCount = xNumOfOverflows;
   173e0:	4b03      	ldr	r3, [pc, #12]	; (173f0 <vTaskSetTimeOutState+0x10>)
   173e2:	681b      	ldr	r3, [r3, #0]
   173e4:	6003      	str	r3, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3011
	pxTimeOut->xTimeOnEntering = xTickCount;
   173e6:	4b03      	ldr	r3, [pc, #12]	; (173f4 <vTaskSetTimeOutState+0x14>)
   173e8:	681b      	ldr	r3, [r3, #0]
   173ea:	6043      	str	r3, [r0, #4]
   173ec:	4770      	bx	lr
   173ee:	bf00      	nop
   173f0:	2007c684 	.word	0x2007c684
   173f4:	2007c6b4 	.word	0x2007c6b4

000173f8 <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3016
{
   173f8:	b538      	push	{r3, r4, r5, lr}
   173fa:	460d      	mov	r5, r1
   173fc:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3022
	taskENTER_CRITICAL();
   173fe:	f000 f933 	bl	17668 <vPortEnterCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3025
		const TickType_t xConstTickCount = xTickCount;
   17402:	4b0e      	ldr	r3, [pc, #56]	; (1743c <xTaskCheckForTimeOut+0x44>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3039
			if( *pxTicksToWait == portMAX_DELAY )
   17404:	682a      	ldr	r2, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3025
		const TickType_t xConstTickCount = xTickCount;
   17406:	6818      	ldr	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3039
			if( *pxTicksToWait == portMAX_DELAY )
   17408:	1c53      	adds	r3, r2, #1
   1740a:	d010      	beq.n	1742e <xTaskCheckForTimeOut+0x36>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3049
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
   1740c:	4b0c      	ldr	r3, [pc, #48]	; (17440 <xTaskCheckForTimeOut+0x48>)
   1740e:	6821      	ldr	r1, [r4, #0]
   17410:	681b      	ldr	r3, [r3, #0]
   17412:	4299      	cmp	r1, r3
   17414:	6863      	ldr	r3, [r4, #4]
   17416:	d001      	beq.n	1741c <xTaskCheckForTimeOut+0x24>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3049 (discriminator 1)
   17418:	4298      	cmp	r0, r3
   1741a:	d20d      	bcs.n	17438 <xTaskCheckForTimeOut+0x40>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3058
		else if( ( ( TickType_t ) ( xConstTickCount - pxTimeOut->xTimeOnEntering ) ) < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
   1741c:	1ac1      	subs	r1, r0, r3
   1741e:	428a      	cmp	r2, r1
   17420:	d90a      	bls.n	17438 <xTaskCheckForTimeOut+0x40>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3061
			*pxTicksToWait -= ( xConstTickCount - pxTimeOut->xTimeOnEntering );
   17422:	1a1b      	subs	r3, r3, r0
   17424:	4413      	add	r3, r2
   17426:	602b      	str	r3, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3062
			vTaskSetTimeOutState( pxTimeOut );
   17428:	4620      	mov	r0, r4
   1742a:	f7ff ffd9 	bl	173e0 <vTaskSetTimeOutState>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3044
				xReturn = pdFALSE;
   1742e:	2400      	movs	r4, #0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3070
	taskEXIT_CRITICAL();
   17430:	f000 f92a 	bl	17688 <vPortExitCritical>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3073
}
   17434:	4620      	mov	r0, r4
   17436:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3056
			xReturn = pdTRUE;
   17438:	2401      	movs	r4, #1
   1743a:	e7f9      	b.n	17430 <xTaskCheckForTimeOut+0x38>
   1743c:	2007c6b4 	.word	0x2007c6b4
   17440:	2007c684 	.word	0x2007c684

00017444 <vTaskMissedYield>:
vTaskMissedYield():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3078
	xYieldPending = pdTRUE;
   17444:	2201      	movs	r2, #1
   17446:	4b01      	ldr	r3, [pc, #4]	; (1744c <vTaskMissedYield+0x8>)
   17448:	601a      	str	r2, [r3, #0]
   1744a:	4770      	bx	lr
   1744c:	2007c6b8 	.word	0x2007c6b8

00017450 <uxTaskGetStackHighWaterMark>:
uxTaskGetStackHighWaterMark():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3559
		pxTCB = prvGetTCBFromHandle( xTask );
   17450:	b908      	cbnz	r0, 17456 <uxTaskGetStackHighWaterMark+0x6>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3559 (discriminator 1)
   17452:	4b06      	ldr	r3, [pc, #24]	; (1746c <uxTaskGetStackHighWaterMark+0x1c>)
   17454:	6818      	ldr	r0, [r3, #0]
   17456:	6b02      	ldr	r2, [r0, #48]	; 0x30
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3563 (discriminator 4)
			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
   17458:	4613      	mov	r3, r2
   1745a:	1a98      	subs	r0, r3, r2
prvTaskCheckFreeStackSpace():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3537
		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
   1745c:	f813 1b01 	ldrb.w	r1, [r3], #1
   17460:	29a5      	cmp	r1, #165	; 0xa5
   17462:	d0fa      	beq.n	1745a <uxTaskGetStackHighWaterMark+0xa>
uxTaskGetStackHighWaterMark():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3574
	}
   17464:	f3c0 008f 	ubfx	r0, r0, #2, #16
   17468:	4770      	bx	lr
   1746a:	bf00      	nop
   1746c:	2007c568 	.word	0x2007c568

00017470 <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3682
		if( xSchedulerRunning == pdFALSE )
   17470:	4b05      	ldr	r3, [pc, #20]	; (17488 <xTaskGetSchedulerState+0x18>)
   17472:	681b      	ldr	r3, [r3, #0]
   17474:	b133      	cbz	r3, 17484 <xTaskGetSchedulerState+0x14>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3688
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   17476:	4b05      	ldr	r3, [pc, #20]	; (1748c <xTaskGetSchedulerState+0x1c>)
   17478:	681b      	ldr	r3, [r3, #0]
   1747a:	2b00      	cmp	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3694
				xReturn = taskSCHEDULER_SUSPENDED;
   1747c:	bf0c      	ite	eq
   1747e:	2002      	moveq	r0, #2
   17480:	2000      	movne	r0, #0
   17482:	4770      	bx	lr
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3684
			xReturn = taskSCHEDULER_NOT_STARTED;
   17484:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3699
	}
   17486:	4770      	bx	lr
   17488:	2007c69c 	.word	0x2007c69c
   1748c:	2007c648 	.word	0x2007c648

00017490 <vTaskPriorityInherit>:
vTaskPriorityInherit():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3707
	{
   17490:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3712
		if( pxMutexHolder != NULL )
   17494:	4604      	mov	r4, r0
   17496:	2800      	cmp	r0, #0
   17498:	d039      	beq.n	1750e <vTaskPriorityInherit+0x7e>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3717
			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
   1749a:	4d1e      	ldr	r5, [pc, #120]	; (17514 <vTaskPriorityInherit+0x84>)
   1749c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
   1749e:	682a      	ldr	r2, [r5, #0]
   174a0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   174a2:	4293      	cmp	r3, r2
   174a4:	d233      	bcs.n	1750e <vTaskPriorityInherit+0x7e>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   174a6:	2714      	movs	r7, #20
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3722
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
   174a8:	6982      	ldr	r2, [r0, #24]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   174aa:	4e1b      	ldr	r6, [pc, #108]	; (17518 <vTaskPriorityInherit+0x88>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3722
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
   174ac:	2a00      	cmp	r2, #0
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3724
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   174ae:	bfa8      	it	ge
   174b0:	682a      	ldrge	r2, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   174b2:	fb07 6303 	mla	r3, r7, r3, r6
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3724
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   174b6:	bfa2      	ittt	ge
   174b8:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
   174ba:	f1c2 020a 	rsbge	r2, r2, #10
   174be:	6182      	strge	r2, [r0, #24]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   174c0:	6942      	ldr	r2, [r0, #20]
   174c2:	429a      	cmp	r2, r3
   174c4:	d120      	bne.n	17508 <vTaskPriorityInherit+0x78>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3735
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   174c6:	f100 0804 	add.w	r8, r0, #4
   174ca:	4640      	mov	r0, r8
   174cc:	f7ff f874 	bl	165b8 <uxListRemove>
   174d0:	4a12      	ldr	r2, [pc, #72]	; (1751c <vTaskPriorityInherit+0x8c>)
   174d2:	b948      	cbnz	r0, 174e8 <vTaskPriorityInherit+0x58>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3737
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   174d4:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   174d6:	4347      	muls	r7, r0
   174d8:	59f3      	ldr	r3, [r6, r7]
   174da:	b92b      	cbnz	r3, 174e8 <vTaskPriorityInherit+0x58>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3737 (discriminator 1)
   174dc:	2101      	movs	r1, #1
   174de:	6813      	ldr	r3, [r2, #0]
   174e0:	4081      	lsls	r1, r0
   174e2:	ea23 0301 	bic.w	r3, r3, r1
   174e6:	6013      	str	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   174e8:	682b      	ldr	r3, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   174ea:	6811      	ldr	r1, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   174ec:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   174ee:	2301      	movs	r3, #1
   174f0:	4083      	lsls	r3, r0
   174f2:	430b      	orrs	r3, r1
   174f4:	6013      	str	r3, [r2, #0]
   174f6:	2314      	movs	r3, #20
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   174f8:	62e0      	str	r0, [r4, #44]	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   174fa:	4641      	mov	r1, r8
   174fc:	fb03 6000 	mla	r0, r3, r0, r6
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3765
	}
   17500:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   17504:	f7ff b835 	b.w	16572 <vListInsertEnd>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3751
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   17508:	682b      	ldr	r3, [r5, #0]
   1750a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1750c:	62c3      	str	r3, [r0, #44]	; 0x2c
   1750e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   17512:	bf00      	nop
   17514:	2007c568 	.word	0x2007c568
   17518:	2007c574 	.word	0x2007c574
   1751c:	2007c650 	.word	0x2007c650

00017520 <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3773
	{
   17520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3777
		if( pxMutexHolder != NULL )
   17522:	4604      	mov	r4, r0
   17524:	b908      	cbnz	r0, 1752a <xTaskPriorityDisinherit+0xa>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3775
	BaseType_t xReturn = pdFALSE;
   17526:	2000      	movs	r0, #0
   17528:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   1752a:	6c83      	ldr	r3, [r0, #72]	; 0x48
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   1752c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
   1752e:	6c42      	ldr	r2, [r0, #68]	; 0x44
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   17530:	3b01      	subs	r3, #1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   17532:	4291      	cmp	r1, r2
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   17534:	6483      	str	r3, [r0, #72]	; 0x48
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   17536:	d0f6      	beq.n	17526 <xTaskPriorityDisinherit+0x6>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3793
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
   17538:	2b00      	cmp	r3, #0
   1753a:	d1f4      	bne.n	17526 <xTaskPriorityDisinherit+0x6>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3800
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   1753c:	1d05      	adds	r5, r0, #4
   1753e:	4628      	mov	r0, r5
   17540:	f7ff f83a 	bl	165b8 <uxListRemove>
   17544:	4e10      	ldr	r6, [pc, #64]	; (17588 <xTaskPriorityDisinherit+0x68>)
   17546:	4a11      	ldr	r2, [pc, #68]	; (1758c <xTaskPriorityDisinherit+0x6c>)
   17548:	b950      	cbnz	r0, 17560 <xTaskPriorityDisinherit+0x40>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3802
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   1754a:	2114      	movs	r1, #20
   1754c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
   1754e:	4379      	muls	r1, r7
   17550:	5873      	ldr	r3, [r6, r1]
   17552:	b92b      	cbnz	r3, 17560 <xTaskPriorityDisinherit+0x40>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3802 (discriminator 1)
   17554:	2001      	movs	r0, #1
   17556:	6813      	ldr	r3, [r2, #0]
   17558:	40b8      	lsls	r0, r7
   1755a:	ea23 0300 	bic.w	r3, r3, r0
   1755e:	6013      	str	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3812
					pxTCB->uxPriority = pxTCB->uxBasePriority;
   17560:	6c63      	ldr	r3, [r4, #68]	; 0x44
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3817
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   17562:	f1c3 010a 	rsb	r1, r3, #10
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3812
					pxTCB->uxPriority = pxTCB->uxBasePriority;
   17566:	62e3      	str	r3, [r4, #44]	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3817
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   17568:	61a1      	str	r1, [r4, #24]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3818
					prvAddTaskToReadyList( pxTCB );
   1756a:	2401      	movs	r4, #1
   1756c:	6811      	ldr	r1, [r2, #0]
   1756e:	fa04 f003 	lsl.w	r0, r4, r3
   17572:	4308      	orrs	r0, r1
   17574:	6010      	str	r0, [r2, #0]
   17576:	2014      	movs	r0, #20
   17578:	4629      	mov	r1, r5
   1757a:	fb00 6003 	mla	r0, r0, r3, r6
   1757e:	f7fe fff8 	bl	16572 <vListInsertEnd>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3828
					xReturn = pdTRUE;
   17582:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3846
	}
   17584:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   17586:	bf00      	nop
   17588:	2007c574 	.word	0x2007c574
   1758c:	2007c650 	.word	0x2007c650

00017590 <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4182
		if( pxCurrentTCB != NULL )
   17590:	4b04      	ldr	r3, [pc, #16]	; (175a4 <pvTaskIncrementMutexHeldCount+0x14>)
   17592:	681a      	ldr	r2, [r3, #0]
   17594:	b11a      	cbz	r2, 1759e <pvTaskIncrementMutexHeldCount+0xe>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4184
			( pxCurrentTCB->uxMutexesHeld )++;
   17596:	6819      	ldr	r1, [r3, #0]
   17598:	6c8a      	ldr	r2, [r1, #72]	; 0x48
   1759a:	3201      	adds	r2, #1
   1759c:	648a      	str	r2, [r1, #72]	; 0x48
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4187
		return pxCurrentTCB;
   1759e:	6818      	ldr	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4188
	}
   175a0:	4770      	bx	lr
   175a2:	bf00      	nop
   175a4:	2007c568 	.word	0x2007c568

000175a8 <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:99
    }
    xTaskResumeAll();
}

    void vRunTimeStatIsrEntry()
    {
   175a8:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:100
        unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
   175aa:	f000 f8dd 	bl	17768 <rts_not_full_trace_get>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:103
        
        // Add the time spent in the previously running task's counter.
        if (NULL != pxCurrentTCB) {
   175ae:	4b06      	ldr	r3, [pc, #24]	; (175c8 <vRunTimeStatIsrEntry+0x20>)
   175b0:	4a06      	ldr	r2, [pc, #24]	; (175cc <vRunTimeStatIsrEntry+0x24>)
   175b2:	6819      	ldr	r1, [r3, #0]
   175b4:	b129      	cbz	r1, 175c2 <vRunTimeStatIsrEntry+0x1a>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:104
            pxCurrentTCB->ulRunTimeCounter += ( ulTempCounter - ulTaskSwitchedInTime );
   175b6:	6819      	ldr	r1, [r3, #0]
   175b8:	6814      	ldr	r4, [r2, #0]
   175ba:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   175bc:	1b1b      	subs	r3, r3, r4
   175be:	4403      	add	r3, r0
   175c0:	64cb      	str	r3, [r1, #76]	; 0x4c
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:108
        }
        
        // Save the current time to log how long the ISR is going to take.
        ulTaskSwitchedInTime = ulTempCounter;
   175c2:	6010      	str	r0, [r2, #0]
   175c4:	bd10      	pop	{r4, pc}
   175c6:	bf00      	nop
   175c8:	2007c568 	.word	0x2007c568
   175cc:	2007c63c 	.word	0x2007c63c

000175d0 <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:111
    }
    void vRunTimeStatIsrExit()
    {
   175d0:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:112
        unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
   175d2:	f000 f8c9 	bl	17768 <rts_not_full_trace_get>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:120
        // We don't need this because whatever is the "leftover" for the counters, that is 
        // is the overhead itself!
        // ulISROverhead += ( ulTempCounter - ulTaskSwitchedInTime );
        
        // Save the current time so next time when task is switched out, it will use this time-stamp.
        ulTaskSwitchedInTime = ulTempCounter;
   175d6:	4b01      	ldr	r3, [pc, #4]	; (175dc <vRunTimeStatIsrExit+0xc>)
   175d8:	6018      	str	r0, [r3, #0]
   175da:	bd08      	pop	{r3, pc}
   175dc:	2007c63c 	.word	0x2007c63c

000175e0 <prvTaskExitError>:
vPortRaiseBASEPRI():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
	__asm volatile
   175e0:	f04f 0310 	mov.w	r3, #16
   175e4:	f383 8811 	msr	BASEPRI, r3
   175e8:	f3bf 8f6f 	isb	sy
   175ec:	f3bf 8f4f 	dsb	sy
   175f0:	e7fe      	b.n	175f0 <prvTaskExitError+0x10>
prvTaskExitError():
   175f2:	Address 0x00000000000175f2 is out of bounds.


000175f4 <prvPortStartFirstTask>:
prvPortStartFirstTask():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:270
}
/*-----------------------------------------------------------*/

static void prvPortStartFirstTask( void )
{
	__asm volatile(
   175f4:	4806      	ldr	r0, [pc, #24]	; (17610 <prvPortStartFirstTask+0x1c>)
   175f6:	6800      	ldr	r0, [r0, #0]
   175f8:	6800      	ldr	r0, [r0, #0]
   175fa:	f380 8808 	msr	MSP, r0
   175fe:	b662      	cpsie	i
   17600:	b661      	cpsie	f
   17602:	f3bf 8f4f 	dsb	sy
   17606:	f3bf 8f6f 	isb	sy
   1760a:	df00      	svc	0
   1760c:	bf00      	nop
   1760e:	0000      	.short	0x0000
   17610:	e000ed08 	.word	0xe000ed08

00017614 <pxPortInitialiseStack>:
pxPortInitialiseStack():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:221
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
   17614:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   17618:	f840 3c04 	str.w	r3, [r0, #-4]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:225
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
   1761c:	4b05      	ldr	r3, [pc, #20]	; (17634 <pxPortInitialiseStack+0x20>)
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:223
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
   1761e:	f021 0101 	bic.w	r1, r1, #1
   17622:	f840 1c08 	str.w	r1, [r0, #-8]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:225
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
   17626:	f840 3c0c 	str.w	r3, [r0, #-12]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:227
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
   1762a:	f840 2c20 	str.w	r2, [r0, #-32]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:231
}
   1762e:	3840      	subs	r0, #64	; 0x40
   17630:	4770      	bx	lr
   17632:	bf00      	nop
   17634:	000175e1 	.word	0x000175e1
   17638:	ffffffff 	.word	0xffffffff
   1763c:	ffffffff 	.word	0xffffffff

00017640 <vPortSVCHandler>:
vPortSVCHandler():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:250
	__asm volatile (
   17640:	4b07      	ldr	r3, [pc, #28]	; (17660 <pxCurrentTCBConst2>)
   17642:	6819      	ldr	r1, [r3, #0]
   17644:	6808      	ldr	r0, [r1, #0]
   17646:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1764a:	f380 8809 	msr	PSP, r0
   1764e:	f3bf 8f6f 	isb	sy
   17652:	f04f 0000 	mov.w	r0, #0
   17656:	f380 8811 	msr	BASEPRI, r0
   1765a:	f04e 0e0d 	orr.w	lr, lr, #13
   1765e:	4770      	bx	lr

00017660 <pxCurrentTCBConst2>:
   17660:	2007c568 	.word	0x2007c568

00017664 <vPortEndScheduler>:
vPortEndScheduler():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:364
	return 0;
}
/*-----------------------------------------------------------*/

void vPortEndScheduler( void )
{
   17664:	4770      	bx	lr
   17666:	Address 0x0000000000017666 is out of bounds.


00017668 <vPortEnterCritical>:
vPortRaiseBASEPRI():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
   17668:	f04f 0310 	mov.w	r3, #16
   1766c:	f383 8811 	msr	BASEPRI, r3
   17670:	f3bf 8f6f 	isb	sy
   17674:	f3bf 8f4f 	dsb	sy
vPortEnterCritical():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:374
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
	portDISABLE_INTERRUPTS();
	uxCriticalNesting++;
   17678:	4a02      	ldr	r2, [pc, #8]	; (17684 <vPortEnterCritical+0x1c>)
   1767a:	6813      	ldr	r3, [r2, #0]
   1767c:	3301      	adds	r3, #1
   1767e:	6013      	str	r3, [r2, #0]
   17680:	4770      	bx	lr
   17682:	bf00      	nop
   17684:	2007c6bc 	.word	0x2007c6bc

00017688 <vPortExitCritical>:
vPortExitCritical():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:391
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
	configASSERT( uxCriticalNesting );
	uxCriticalNesting--;
   17688:	4a03      	ldr	r2, [pc, #12]	; (17698 <vPortExitCritical+0x10>)
   1768a:	6813      	ldr	r3, [r2, #0]
   1768c:	3b01      	subs	r3, #1
   1768e:	6013      	str	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:392
	if( uxCriticalNesting == 0 )
   17690:	b90b      	cbnz	r3, 17696 <vPortExitCritical+0xe>
vPortSetBASEPRI():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   17692:	f383 8811 	msr	BASEPRI, r3
   17696:	4770      	bx	lr
   17698:	2007c6bc 	.word	0x2007c6bc
vPortExitCritical():
   1769c:	ffffffff 	.word	0xffffffff

000176a0 <xPortPendSVHandler>:
xPortPendSVHandler():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:403

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
   176a0:	f3ef 8009 	mrs	r0, PSP
   176a4:	f3bf 8f6f 	isb	sy
   176a8:	4b0d      	ldr	r3, [pc, #52]	; (176e0 <pxCurrentTCBConst>)
   176aa:	681a      	ldr	r2, [r3, #0]
   176ac:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   176b0:	6010      	str	r0, [r2, #0]
   176b2:	e92d 4008 	stmdb	sp!, {r3, lr}
   176b6:	f04f 0010 	mov.w	r0, #16
   176ba:	f380 8811 	msr	BASEPRI, r0
   176be:	f7ff fd93 	bl	171e8 <vTaskSwitchContext>
   176c2:	f04f 0000 	mov.w	r0, #0
   176c6:	f380 8811 	msr	BASEPRI, r0
   176ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   176ce:	6819      	ldr	r1, [r3, #0]
   176d0:	6808      	ldr	r0, [r1, #0]
   176d2:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   176d6:	f380 8809 	msr	PSP, r0
   176da:	f3bf 8f6f 	isb	sy
   176de:	4770      	bx	lr

000176e0 <pxCurrentTCBConst>:
   176e0:	2007c568 	.word	0x2007c568

000176e4 <xPortSysTickHandler>:
xPortSysTickHandler():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:437
	);
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
   176e4:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
	__asm volatile
   176e6:	f04f 0310 	mov.w	r3, #16
   176ea:	f383 8811 	msr	BASEPRI, r3
   176ee:	f3bf 8f6f 	isb	sy
   176f2:	f3bf 8f4f 	dsb	sy
xPortSysTickHandler():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:445
	save and then restore the interrupt mask value as its value is already
	known. */
	portDISABLE_INTERRUPTS();
	{
		/* Increment the RTOS tick. */
		if( xTaskIncrementTick() != pdFALSE )
   176f6:	f7ff fc41 	bl	16f7c <xTaskIncrementTick>
   176fa:	b118      	cbz	r0, 17704 <xPortSysTickHandler+0x20>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:449
		{
			/* A context switch is required.  Context switching is performed in
			the PendSV interrupt.  Pend the PendSV interrupt. */
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
   176fc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   17700:	4b02      	ldr	r3, [pc, #8]	; (1770c <xPortSysTickHandler+0x28>)
   17702:	601a      	str	r2, [r3, #0]
vPortSetBASEPRI():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   17704:	2300      	movs	r3, #0
   17706:	f383 8811 	msr	BASEPRI, r3
   1770a:	bd08      	pop	{r3, pc}
   1770c:	e000ed04 	.word	0xe000ed04

00017710 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:626
		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOCK_HZ );
	}
	#endif /* configUSE_TICKLESS_IDLE */

	/* Configure SysTick to interrupt at the requested rate. */
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
   17710:	f64b 327f 	movw	r2, #47999	; 0xbb7f
   17714:	4b02      	ldr	r3, [pc, #8]	; (17720 <vPortSetupTimerInterrupt+0x10>)
   17716:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:627
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
   17718:	2207      	movs	r2, #7
   1771a:	f843 2c04 	str.w	r2, [r3, #-4]
   1771e:	4770      	bx	lr
   17720:	e000e014 	.word	0xe000e014

00017724 <xPortStartScheduler>:
xPortStartScheduler():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:289
{
   17724:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:339
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
   17726:	4b09      	ldr	r3, [pc, #36]	; (1774c <xPortStartScheduler+0x28>)
   17728:	681a      	ldr	r2, [r3, #0]
   1772a:	f442 0278 	orr.w	r2, r2, #16252928	; 0xf80000
   1772e:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:340
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
   17730:	681a      	ldr	r2, [r3, #0]
   17732:	f042 4278 	orr.w	r2, r2, #4160749568	; 0xf8000000
   17736:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:344
	vPortSetupTimerInterrupt();
   17738:	f7ff ffea 	bl	17710 <vPortSetupTimerInterrupt>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:347
	uxCriticalNesting = 0;
   1773c:	2200      	movs	r2, #0
   1773e:	4b04      	ldr	r3, [pc, #16]	; (17750 <xPortStartScheduler+0x2c>)
   17740:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:350
	prvPortStartFirstTask();
   17742:	f7ff ff57 	bl	175f4 <prvPortStartFirstTask>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:356
	prvTaskExitError();
   17746:	f7ff ff4b 	bl	175e0 <prvTaskExitError>
   1774a:	bf00      	nop
   1774c:	e000ed20 	.word	0xe000ed20
   17750:	2007c6bc 	.word	0x2007c6bc

00017754 <rts_not_full_trace_init>:
rts_not_full_trace_init():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:36



// Init the run time counter that is not used by the full trace
void rts_not_full_trace_init( void )
{
   17754:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:38
    /* Nothing to do, system timer should already be setup by high_level_init.cpp */
    g_freertos_runtime_timer_start = sys_get_uptime_us();
   17756:	f7f8 fdcf 	bl	102f8 <sys_get_uptime_us>
   1775a:	4b02      	ldr	r3, [pc, #8]	; (17764 <rts_not_full_trace_init+0x10>)
   1775c:	e9c3 0100 	strd	r0, r1, [r3]
   17760:	bd08      	pop	{r3, pc}
   17762:	bf00      	nop
   17764:	2007c6c0 	.word	0x2007c6c0

00017768 <rts_not_full_trace_get>:
rts_not_full_trace_get():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:42
}

unsigned int rts_not_full_trace_get()
{
   17768:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:43
    return (sys_get_uptime_us() - g_freertos_runtime_timer_start);
   1776a:	f7f8 fdc5 	bl	102f8 <sys_get_uptime_us>
   1776e:	4b02      	ldr	r3, [pc, #8]	; (17778 <rts_not_full_trace_get+0x10>)
   17770:	681b      	ldr	r3, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:44
}
   17772:	1ac0      	subs	r0, r0, r3
   17774:	bd08      	pop	{r3, pc}
   17776:	bf00      	nop
   17778:	2007c6c0 	.word	0x2007c6c0

0001777c <vApplicationIdleHook>:
__WFI():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1196
static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
   1777c:	bf30      	wfi
   1777e:	4770      	bx	lr

00017780 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:18
	// Put CPU to IDLE here. RTOS will wake up CPU from OS timer interrupt.
	__WFI(); // Wait for Event: Puts the CPU in low powered mode
}

void vApplicationStackOverflowHook( TaskHandle_t *pxTask, char *pcTaskName )
{
   17780:	b510      	push	{r4, lr}
   17782:	460c      	mov	r4, r1
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:19
    u0_dbg_put("HALTING SYSTEM: Stack overflow by task: ");
   17784:	4809      	ldr	r0, [pc, #36]	; (177ac <vApplicationStackOverflowHook+0x2c>)
   17786:	f7fe fe77 	bl	16478 <u0_dbg_put>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:20
    u0_dbg_put((char*)pcTaskName);
   1778a:	4620      	mov	r0, r4
   1778c:	f7fe fe74 	bl	16478 <u0_dbg_put>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:21
    u0_dbg_put("\nTry increasing stack memory of this task.\n");
   17790:	4807      	ldr	r0, [pc, #28]	; (177b0 <vApplicationStackOverflowHook+0x30>)
   17792:	f7fe fe71 	bl	16478 <u0_dbg_put>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:23

	delay_us(3000 * 1000);
   17796:	4807      	ldr	r0, [pc, #28]	; (177b4 <vApplicationStackOverflowHook+0x34>)
   17798:	f7fe fe9b 	bl	164d2 <delay_us>
sys_reboot():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   1779c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   177a0:	22aa      	movs	r2, #170	; 0xaa
   177a2:	721a      	strb	r2, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   177a4:	2200      	movs	r2, #0
   177a6:	701a      	strb	r2, [r3, #0]
   177a8:	bd10      	pop	{r4, pc}
   177aa:	bf00      	nop
   177ac:	00021bd1 	.word	0x00021bd1
   177b0:	00021bfa 	.word	0x00021bfa
   177b4:	002dc6c0 	.word	0x002dc6c0

000177b8 <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:39
}
#endif

#if( configUSE_MALLOC_FAILED_HOOK == 1 )
void vApplicationMallocFailedHook( void )
{
   177b8:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:40
    u0_dbg_put("HALTING SYSTEM: Your system ran out of memory (RAM)!\n");
   177ba:	4806      	ldr	r0, [pc, #24]	; (177d4 <vApplicationMallocFailedHook+0x1c>)
   177bc:	f7fe fe5c 	bl	16478 <u0_dbg_put>
/home/peter/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:42

    delay_us(3000 * 1000);
   177c0:	4805      	ldr	r0, [pc, #20]	; (177d8 <vApplicationMallocFailedHook+0x20>)
   177c2:	f7fe fe86 	bl	164d2 <delay_us>
sys_reboot():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   177c6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   177ca:	22aa      	movs	r2, #170	; 0xaa
   177cc:	721a      	strb	r2, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   177ce:	2200      	movs	r2, #0
   177d0:	701a      	strb	r2, [r3, #0]
   177d2:	bd08      	pop	{r3, pc}
   177d4:	00021b9b 	.word	0x00021b9b
   177d8:	002dc6c0 	.word	0x002dc6c0

000177dc <SingletonTemplate<I2C2>::getInstance()>:
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   177dc:	b538      	push	{r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   177de:	4c06      	ldr	r4, [pc, #24]	; (177f8 <SingletonTemplate<I2C2>::getInstance()+0x1c>)
   177e0:	6823      	ldr	r3, [r4, #0]
   177e2:	b93b      	cbnz	r3, 177f4 <SingletonTemplate<I2C2>::getInstance()+0x18>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   177e4:	f44f 7094 	mov.w	r0, #296	; 0x128
   177e8:	f000 fe5e 	bl	184a8 <operator new(unsigned int)>
   177ec:	4605      	mov	r5, r0
   177ee:	f7fe f865 	bl	158bc <I2C2::I2C2()>
   177f2:	6025      	str	r5, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   177f4:	6820      	ldr	r0, [r4, #0]
   177f6:	bd38      	pop	{r3, r4, r5, pc}
   177f8:	2007c528 	.word	0x2007c528

000177fc <SingletonTemplate<TemperatureSensor>::getInstance()>:
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   177fc:	b538      	push	{r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   177fe:	4c08      	ldr	r4, [pc, #32]	; (17820 <SingletonTemplate<TemperatureSensor>::getInstance()+0x24>)
   17800:	6823      	ldr	r3, [r4, #0]
   17802:	b95b      	cbnz	r3, 1781c <SingletonTemplate<TemperatureSensor>::getInstance()+0x20>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   17804:	200c      	movs	r0, #12
   17806:	f000 fe4f 	bl	184a8 <operator new(unsigned int)>
   1780a:	4605      	mov	r5, r0
_ZN11i2c2_deviceC4Eh():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
    i2c2_device(uint8_t addr) : mI2C(I2C2::getInstance()), mOurAddr(addr)
   1780c:	f7ff ffe6 	bl	177dc <SingletonTemplate<I2C2>::getInstance()>
   17810:	2390      	movs	r3, #144	; 0x90
   17812:	712b      	strb	r3, [r5, #4]
_ZN8I2C_TempC4Ec():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
 * Base class of an I2C temperature sensor
 */
class I2C_Temp : private i2c2_device
{
    public:
        I2C_Temp(char addr) : i2c2_device(addr), mOffsetCelcius(0) {}
   17814:	2300      	movs	r3, #0
_ZN11i2c2_deviceC4Eh():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   17816:	6028      	str	r0, [r5, #0]
_ZN8I2C_TempC4Ec():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
   17818:	60ab      	str	r3, [r5, #8]
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1781a:	6025      	str	r5, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1781c:	6820      	ldr	r0, [r4, #0]
   1781e:	bd38      	pop	{r3, r4, r5, pc}
   17820:	2007c6c8 	.word	0x2007c6c8

00017824 <SingletonTemplate<LED_Display>::getInstance()>:
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   17824:	b538      	push	{r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   17826:	4c07      	ldr	r4, [pc, #28]	; (17844 <SingletonTemplate<LED_Display>::getInstance()+0x20>)
   17828:	6823      	ldr	r3, [r4, #0]
   1782a:	b94b      	cbnz	r3, 17840 <SingletonTemplate<LED_Display>::getInstance()+0x1c>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1782c:	2008      	movs	r0, #8
   1782e:	f000 fe3b 	bl	184a8 <operator new(unsigned int)>
   17832:	4605      	mov	r5, r0
_ZN11i2c2_deviceC4Eh():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   17834:	f7ff ffd2 	bl	177dc <SingletonTemplate<I2C2>::getInstance()>
   17838:	2340      	movs	r3, #64	; 0x40
   1783a:	6028      	str	r0, [r5, #0]
   1783c:	712b      	strb	r3, [r5, #4]
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1783e:	6025      	str	r5, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   17840:	6820      	ldr	r0, [r4, #0]
   17842:	bd38      	pop	{r3, r4, r5, pc}
   17844:	2007c6d8 	.word	0x2007c6d8

00017848 <SingletonTemplate<Light_Sensor>::getInstance()>:
_ZN17SingletonTemplateI12Light_SensorE11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   17848:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1784a:	4c04      	ldr	r4, [pc, #16]	; (1785c <SingletonTemplate<Light_Sensor>::getInstance()+0x14>)
   1784c:	6823      	ldr	r3, [r4, #0]
   1784e:	b91b      	cbnz	r3, 17858 <SingletonTemplate<Light_Sensor>::getInstance()+0x10>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   17850:	2001      	movs	r0, #1
   17852:	f000 fe29 	bl	184a8 <operator new(unsigned int)>
   17856:	6020      	str	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   17858:	6820      	ldr	r0, [r4, #0]
   1785a:	bd10      	pop	{r4, pc}
   1785c:	2007c6d0 	.word	0x2007c6d0

00017860 <SingletonTemplate<LED>::getInstance()>:
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   17860:	b538      	push	{r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   17862:	4c05      	ldr	r4, [pc, #20]	; (17878 <SingletonTemplate<LED>::getInstance()+0x18>)
   17864:	6825      	ldr	r5, [r4, #0]
   17866:	b925      	cbnz	r5, 17872 <SingletonTemplate<LED>::getInstance()+0x12>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   17868:	2001      	movs	r0, #1
   1786a:	f000 fe1d 	bl	184a8 <operator new(unsigned int)>
_ZN3LEDC4Ev():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/LED.hpp:50
        uint8_t getValues(void) const;      ///< Get the LED bit values currently set

    private:
        uint8_t mLedValue; ///< Current bits set on the LEDs

        LED() : mLedValue (0) {}    ///< Private constructor of this Singleton class
   1786e:	7005      	strb	r5, [r0, #0]
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   17870:	6020      	str	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   17872:	6820      	ldr	r0, [r4, #0]
   17874:	bd38      	pop	{r3, r4, r5, pc}
   17876:	bf00      	nop
   17878:	2007c6d4 	.word	0x2007c6d4

0001787c <hl_print_line()>:
_ZL13hl_print_linev():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:50
#include "c_tlm_comp.h"



/// Just prints a line to separate the output printed by high level initialization
static void hl_print_line() { puts("----------------------------------------------------------"); }
   1787c:	4801      	ldr	r0, [pc, #4]	; (17884 <hl_print_line()+0x8>)
   1787e:	f004 bd37 	b.w	1c2f0 <puts>
   17882:	bf00      	nop
   17884:	00021fef 	.word	0x00021fef

00017888 <ssp_set_max_clock>:
ssp_set_max_clock():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:38
{
   17888:	b538      	push	{r3, r4, r5, lr}
   1788a:	4604      	mov	r4, r0
   1788c:	460d      	mov	r5, r1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:40
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   1788e:	f7f8 feb7 	bl	10600 <sys_get_cpu_clock>
   17892:	4b07      	ldr	r3, [pc, #28]	; (178b0 <ssp_set_max_clock+0x28>)
   17894:	fbb0 f0f3 	udiv	r0, r0, r3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:39
    unsigned int divider = 2;
   17898:	2302      	movs	r3, #2
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:47
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   1789a:	fbb0 f2f3 	udiv	r2, r0, r3
   1789e:	42aa      	cmp	r2, r5
   178a0:	d904      	bls.n	178ac <ssp_set_max_clock+0x24>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:47 (discriminator 1)
   178a2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   178a6:	d001      	beq.n	178ac <ssp_set_max_clock+0x24>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
        divider += 2;
   178a8:	3302      	adds	r3, #2
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:47
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   178aa:	e7f6      	b.n	1789a <ssp_set_max_clock+0x12>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:52
    pSSP->CPSR = divider;
   178ac:	6123      	str	r3, [r4, #16]
   178ae:	bd38      	pop	{r3, r4, r5, pc}
   178b0:	000f4240 	.word	0x000f4240

000178b4 <hl_mount_storage(FileSystemObject&, char const*)>:
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:212
    puts("Calling your main()");
    hl_print_line();
}

static bool hl_mount_storage(FileSystemObject& drive, const char* pDescStr)
{
   178b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
_ZNK16FileSystemObject12getDrivePathEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:46
        /**
         * Returns the root path of this drive, such as "0:" or "1:"
         */
        const char* getDrivePath() const
        {
            return mVolStr;
   178b6:	f200 2635 	addw	r6, r0, #565	; 0x235
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:212
   178ba:	460c      	mov	r4, r1
_ZNK16FileSystemObject5mountEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:56
         * @returns TRUE if the disk is ready to be used.
         * @note If disk is not formatted correctly, FILE IO may fail
         */
        char mount() const
        {
            return f_mount((FATFS*)&mFileSystem, getDrivePath(), 1);
   178bc:	2201      	movs	r2, #1
   178be:	4631      	mov	r1, r6
   178c0:	f7fa f840 	bl	11944 <f_mount>
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:218
    unsigned int totalKb = 0;
    unsigned int availKb = 0;
    const char st = drive.mount();
    bool mounted = (0 == st);

    if(mounted && FR_OK == drive.getDriveInfo(&totalKb, &availKb))
   178c4:	4605      	mov	r5, r0
   178c6:	bb38      	cbnz	r0, 17918 <hl_mount_storage(FileSystemObject&, char const*)+0x64>
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:72
            // This object will just point back to our mFileSystem using the mVolStr
            FATFS* pFatFs;

            *pTotalDriveSpaceKB = 0;
            *pAvailableSpaceKB = 0;
            unsigned long int fre_clust = 0;
   178c8:	9003      	str	r0, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:75
            FRESULT result;

            if (FR_OK == (result = f_getfree(mVolStr, &fre_clust, &pFatFs)))
   178ca:	aa02      	add	r2, sp, #8
   178cc:	a903      	add	r1, sp, #12
   178ce:	4630      	mov	r0, r6
   178d0:	f7fa fc18 	bl	12104 <f_getfree>
   178d4:	bb40      	cbnz	r0, 17928 <hl_mount_storage(FileSystemObject&, char const*)+0x74>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
            {
                /* Get total sectors and free sectors */
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   178d6:	9802      	ldr	r0, [sp, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   178d8:	9b03      	ldr	r3, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   178da:	7882      	ldrb	r2, [r0, #2]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   178dc:	fb03 f102 	mul.w	r1, r3, r2
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   178e0:	6983      	ldr	r3, [r0, #24]
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:221
    {
        const unsigned int maxBytesForKbRange = (32 * 1024);
        const char *size = (totalKb < maxBytesForKbRange) ? "KB" : "MB";
   178e2:	4812      	ldr	r0, [pc, #72]	; (1792c <hl_mount_storage(FileSystemObject&, char const*)+0x78>)
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
   178e4:	3b02      	subs	r3, #2
   178e6:	435a      	muls	r2, r3
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:83

                /* Print free space in unit of KB (assuming 512 bytes/sector) */
                *pAvailableSpaceKB  = freeSectors / 2;
                *pTotalDriveSpaceKB = totalSectors / 2;
   178e8:	0852      	lsrs	r2, r2, #1
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:221
   178ea:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
   178ee:	bf38      	it	cc
   178f0:	2001      	movcc	r0, #1
   178f2:	4b0f      	ldr	r3, [pc, #60]	; (17930 <hl_mount_storage(FileSystemObject&, char const*)+0x7c>)
   178f4:	bf24      	itt	cs
   178f6:	4603      	movcs	r3, r0
   178f8:	f44f 6080 	movcs.w	r0, #1024	; 0x400
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:82
                *pAvailableSpaceKB  = freeSectors / 2;
   178fc:	0849      	lsrs	r1, r1, #1
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:224
        unsigned int div = (totalKb < maxBytesForKbRange) ? 1 : 1024;

        printf("%s: OK -- Capacity %-5d%s, Available: %-5u%s\n",
   178fe:	fbb1 f1f0 	udiv	r1, r1, r0
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:225
               pDescStr, totalKb/div, size, availKb/div, size);
   17902:	fbb2 f2f0 	udiv	r2, r2, r0
   17906:	9100      	str	r1, [sp, #0]
   17908:	9301      	str	r3, [sp, #4]
   1790a:	4621      	mov	r1, r4
   1790c:	4809      	ldr	r0, [pc, #36]	; (17934 <hl_mount_storage(FileSystemObject&, char const*)+0x80>)
   1790e:	f004 fc7b 	bl	1c208 <iprintf>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:216
    bool mounted = (0 == st);
   17912:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:233
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
        mounted = false;
    }

    return mounted;
}
   17914:	b004      	add	sp, #16
   17916:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
   17918:	4b07      	ldr	r3, [pc, #28]	; (17938 <hl_mount_storage(FileSystemObject&, char const*)+0x84>)
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228 (discriminator 4)
   1791a:	462a      	mov	r2, r5
   1791c:	4621      	mov	r1, r4
   1791e:	4807      	ldr	r0, [pc, #28]	; (1793c <hl_mount_storage(FileSystemObject&, char const*)+0x88>)
   17920:	f004 fc72 	bl	1c208 <iprintf>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:229 (discriminator 4)
        mounted = false;
   17924:	2000      	movs	r0, #0
   17926:	e7f5      	b.n	17914 <hl_mount_storage(FileSystemObject&, char const*)+0x60>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
   17928:	4b05      	ldr	r3, [pc, #20]	; (17940 <hl_mount_storage(FileSystemObject&, char const*)+0x8c>)
   1792a:	e7f6      	b.n	1791a <hl_mount_storage(FileSystemObject&, char const*)+0x66>
   1792c:	0002202d 	.word	0x0002202d
   17930:	0002202a 	.word	0x0002202a
   17934:	00022037 	.word	0x00022037
   17938:	00022034 	.word	0x00022034
   1793c:	00022065 	.word	0x00022065
   17940:	00022030 	.word	0x00022030

00017944 <Storage::getFlashDrive()>:
_ZN7Storage13getFlashDriveEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:48
 */
class Storage
{
    public:
        /// @returns Single Flash Drive Object Reference
        static FileSystemObject& getFlashDrive()
   17944:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50
        {
            static FileSystemObject* pFlashDrive = new FileSystemObject(driveNumFlashMem);
   17946:	4d10      	ldr	r5, [pc, #64]	; (17988 <Storage::getFlashDrive()+0x44>)
   17948:	4e10      	ldr	r6, [pc, #64]	; (1798c <Storage::getFlashDrive()+0x48>)
   1794a:	782c      	ldrb	r4, [r5, #0]
   1794c:	f3bf 8f5b 	dmb	ish
   17950:	f014 0401 	ands.w	r4, r4, #1
   17954:	d115      	bne.n	17982 <Storage::getFlashDrive()+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 1)
   17956:	4628      	mov	r0, r5
   17958:	f001 fb47 	bl	18fea <__cxa_guard_acquire>
   1795c:	b188      	cbz	r0, 17982 <Storage::getFlashDrive()+0x3e>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 2)
   1795e:	f44f 700e 	mov.w	r0, #568	; 0x238
   17962:	f000 fda1 	bl	184a8 <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:105 (discriminator 2)

        /// Private constructor to forbid this object creation
        FileSystemObject(DriveNumberType volumeNum) :
            mVolNum(volumeNum)
        {
            mVolStr[0] = volumeNum + '0';
   17966:	2330      	movs	r3, #48	; 0x30
   17968:	f880 3235 	strb.w	r3, [r0, #565]	; 0x235
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   1796c:	233a      	movs	r3, #58	; 0x3a
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:103 (discriminator 2)
            mVolNum(volumeNum)
   1796e:	f880 4234 	strb.w	r4, [r0, #564]	; 0x234
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   17972:	f880 3236 	strb.w	r3, [r0, #566]	; 0x236
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:107 (discriminator 2)
            mVolStr[2] = '\0';
   17976:	f880 4237 	strb.w	r4, [r0, #567]	; 0x237
_ZN7Storage13getFlashDriveEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 2)
   1797a:	6030      	str	r0, [r6, #0]
   1797c:	4628      	mov	r0, r5
   1797e:	f001 fb40 	bl	19002 <__cxa_guard_release>
/home/peter/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:52
            return *pFlashDrive;
        }
   17982:	6830      	ldr	r0, [r6, #0]
   17984:	bd70      	pop	{r4, r5, r6, pc}
   17986:	bf00      	nop
   17988:	2007c6e8 	.word	0x2007c6e8
   1798c:	2007c6ec 	.word	0x2007c6ec

00017990 <SingletonTemplate<Switches>::getInstance()>:
_ZN17SingletonTemplateI8SwitchesE11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   17990:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   17992:	4c04      	ldr	r4, [pc, #16]	; (179a4 <SingletonTemplate<Switches>::getInstance()+0x14>)
   17994:	6823      	ldr	r3, [r4, #0]
   17996:	b91b      	cbnz	r3, 179a0 <SingletonTemplate<Switches>::getInstance()+0x10>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   17998:	2001      	movs	r0, #1
   1799a:	f000 fd85 	bl	184a8 <operator new(unsigned int)>
   1799e:	6020      	str	r0, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   179a0:	6820      	ldr	r0, [r4, #0]
   179a2:	bd10      	pop	{r4, pc}
   179a4:	2007c6cc 	.word	0x2007c6cc

000179a8 <high_level_init()>:
_Z15high_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   179a8:	2340      	movs	r3, #64	; 0x40
   179aa:	49b6      	ldr	r1, [pc, #728]	; (17c84 <high_level_init()+0x2dc>)
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:84
{
   179ac:	b5f0      	push	{r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   179ae:	618b      	str	r3, [r1, #24]
board_io_sd_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   179b0:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   179b4:	4ab4      	ldr	r2, [pc, #720]	; (17c88 <high_level_init()+0x2e0>)
ssp_init():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:61
    pSSP->CR0 = 7;          // 8-bit mode
   179b6:	2507      	movs	r5, #7
board_io_sd_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   179b8:	6193      	str	r3, [r2, #24]
board_io_nordic_ds():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:58
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
   179ba:	f44f 3380 	mov.w	r3, #65536	; 0x10000
   179be:	618b      	str	r3, [r1, #24]
_Z15high_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
    board_io_flash_ds();
    board_io_sd_ds();
    board_io_nordic_ds();

    /* Initialize Uart0 pins on P0.2 and P0.3 */
    LPC_PINCON->PINSEL0 &= ~(0xF << 4);
   179c0:	4bb2      	ldr	r3, [pc, #712]	; (17c8c <high_level_init()+0x2e4>)
ssp_init():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:62
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   179c2:	2402      	movs	r4, #2
_Z15high_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
   179c4:	6818      	ldr	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:84
   179c6:	f5ad 7d05 	sub.w	sp, sp, #532	; 0x214
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
   179ca:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
   179ce:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:79
    LPC_PINCON->PINSEL0 |=  (0x5 << 4);
   179d0:	6818      	ldr	r0, [r3, #0]
   179d2:	f040 0050 	orr.w	r0, r0, #80	; 0x50
   179d6:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:82

    /* Initialize Flash CS on P0.6*/
    LPC_PINCON->PINSEL0 &= ~(0x3 << 12);
   179d8:	6818      	ldr	r0, [r3, #0]
   179da:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   179de:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:83
    LPC_GPIO0->FIODIR   |=  (1 << BIO_FLASH_CS_P0PIN);
   179e0:	6808      	ldr	r0, [r1, #0]
   179e2:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   179e6:	6008      	str	r0, [r1, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:86

    /* Initialize SSP1 on P0.7, P0.8, and P0.9 */
    LPC_PINCON->PINSEL0 &= ~(0x3F << 14);
   179e8:	6818      	ldr	r0, [r3, #0]
   179ea:	f420 207c 	bic.w	r0, r0, #1032192	; 0xfc000
   179ee:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:87
    LPC_PINCON->PINSEL0 |=  (0x2A << 14);
   179f0:	6818      	ldr	r0, [r3, #0]
   179f2:	f440 2028 	orr.w	r0, r0, #688128	; 0xa8000
   179f6:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:90

    /* Initialize I2C2 pins on P0.10 and P0.11 */
    LPC_PINCON->PINSEL0 &= ~(0x0F << 20);
   179f8:	6818      	ldr	r0, [r3, #0]
   179fa:	f420 0070 	bic.w	r0, r0, #15728640	; 0xf00000
   179fe:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:91
    LPC_PINCON->PINSEL0 |=  (0x0A << 20);
   17a00:	6818      	ldr	r0, [r3, #0]
   17a02:	f440 0020 	orr.w	r0, r0, #10485760	; 0xa00000
   17a06:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:94

    /* Initialize SSP0 on P0.15, P0.17, and P0.18 */
    LPC_PINCON->PINSEL0 &= ~(0x3 << 30);
   17a08:	6818      	ldr	r0, [r3, #0]
   17a0a:	f020 4040 	bic.w	r0, r0, #3221225472	; 0xc0000000
   17a0e:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:95
    LPC_PINCON->PINSEL0 |=  (0x2 << 30);
   17a10:	6818      	ldr	r0, [r3, #0]
   17a12:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
   17a16:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:96
    LPC_PINCON->PINSEL1 &= ~(0xF << 2);
   17a18:	6858      	ldr	r0, [r3, #4]
   17a1a:	f020 003c 	bic.w	r0, r0, #60	; 0x3c
   17a1e:	6058      	str	r0, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:97
    LPC_PINCON->PINSEL1 |=  (0xA << 2);
   17a20:	6858      	ldr	r0, [r3, #4]
   17a22:	f040 0028 	orr.w	r0, r0, #40	; 0x28
   17a26:	6058      	str	r0, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:100

    /* Initialize Nordic signals: P0.16: CS, P0.22: IRQ, P1.24: CE */
    LPC_PINCON->PINSEL1 &= ~(0x3 << 0);
   17a28:	6858      	ldr	r0, [r3, #4]
   17a2a:	f020 0003 	bic.w	r0, r0, #3
   17a2e:	6058      	str	r0, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:101
    LPC_GPIO0->FIODIR   |=  (1 << BIO_NORDIC_CS_P0PIN);
   17a30:	6808      	ldr	r0, [r1, #0]
   17a32:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
   17a36:	6008      	str	r0, [r1, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:102
    LPC_PINCON->PINSEL1 &= ~(0x3 << 12);
   17a38:	6858      	ldr	r0, [r3, #4]
   17a3a:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   17a3e:	6058      	str	r0, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:103
    LPC_GPIO0->FIODIR   &= ~(1 << BIO_NORDIC_IRQ_P0PIN);
   17a40:	6808      	ldr	r0, [r1, #0]
   17a42:	f420 0080 	bic.w	r0, r0, #4194304	; 0x400000
   17a46:	6008      	str	r0, [r1, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:104
    LPC_PINCON->PINSEL3 &= ~(0x3 << 16);
   17a48:	68d9      	ldr	r1, [r3, #12]
   17a4a:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
   17a4e:	60d9      	str	r1, [r3, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:105
    LPC_GPIO1->FIODIR   |=  (1 << BIO_NORDIC_CE_P1PIN);
   17a50:	6811      	ldr	r1, [r2, #0]
   17a52:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   17a56:	6011      	str	r1, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:108

    /* Initialize light sensor ADC pin on P0.25 */
    LPC_PINCON->PINSEL1 &= ~(0x3 << 18);
   17a58:	6859      	ldr	r1, [r3, #4]
   17a5a:	f421 2140 	bic.w	r1, r1, #786432	; 0xc0000
   17a5e:	6059      	str	r1, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:109
    LPC_PINCON->PINSEL1 |=  (0x1 << 18);
   17a60:	6859      	ldr	r1, [r3, #4]
   17a62:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
   17a66:	6059      	str	r1, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:112

    /* Initialize LED0-3 on P1.0, P1.1, P1.4, P1.8 */
    LPC_PINCON->PINSEL2 &= ~(0x3030F << 0);
   17a68:	6898      	ldr	r0, [r3, #8]
   17a6a:	4989      	ldr	r1, [pc, #548]	; (17c90 <high_level_init()+0x2e8>)
   17a6c:	4001      	ands	r1, r0
   17a6e:	6099      	str	r1, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:113
    LPC_GPIO1->FIODIR   |=  ( BIO_LED_PORT1_MASK );
   17a70:	6811      	ldr	r1, [r2, #0]
   17a72:	f441 7189 	orr.w	r1, r1, #274	; 0x112
   17a76:	f041 0101 	orr.w	r1, r1, #1
   17a7a:	6011      	str	r1, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:116

    /* Initialize SW0-3 on P1.9, P1.10, P1.14, P1.15 */
    LPC_PINCON->PINSEL2 &= ~(0xF << 18);
   17a7c:	6899      	ldr	r1, [r3, #8]
   17a7e:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   17a82:	6099      	str	r1, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:117
    LPC_PINCON->PINSEL2 &= ~(0xF << 28);
   17a84:	6899      	ldr	r1, [r3, #8]
   17a86:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
   17a8a:	6099      	str	r1, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:118
    LPC_GPIO1->FIODIR   &= ~( BIO_SW_PORT1_MASK );
   17a8c:	6811      	ldr	r1, [r2, #0]
   17a8e:	f421 4146 	bic.w	r1, r1, #50688	; 0xc600
   17a92:	6011      	str	r1, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:121

    /* Initialize IR pin to be used as capture pin (not GPIO) */
    LPC_PINCON->PINSEL3 &= ~(0x3 << 4);
   17a94:	68d9      	ldr	r1, [r3, #12]
   17a96:	f021 0130 	bic.w	r1, r1, #48	; 0x30
   17a9a:	60d9      	str	r1, [r3, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:122
    LPC_PINCON->PINSEL3 |=  (0x3 << 4);
   17a9c:	68d9      	ldr	r1, [r3, #12]
   17a9e:	f041 0130 	orr.w	r1, r1, #48	; 0x30
   17aa2:	60d9      	str	r1, [r3, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:125

    /* Initialize SD card CS(P1.25) and CD (P1.26 - card detect) signals*/
    LPC_PINCON->PINSEL3 &= ~(0xF << 18);
   17aa4:	68d9      	ldr	r1, [r3, #12]
   17aa6:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   17aaa:	60d9      	str	r1, [r3, #12]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:126
    LPC_GPIO1->FIODIR |=  (1 << BIO_SD_CARD_CS_P1PIN);
   17aac:	6813      	ldr	r3, [r2, #0]
   17aae:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
   17ab2:	6013      	str	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L4_IO/bio.h:127
    LPC_GPIO1->FIODIR &= ~(1 << BIO_SD_CARD_CD_P1PIN);
   17ab4:	6813      	ldr	r3, [r2, #0]
   17ab6:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
   17aba:	6013      	str	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:95
    adc0_init();
   17abc:	f7fd fd94 	bl	155e8 <adc0_init>
ssp1_init():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:40
    lpc_pconp(pconp_ssp1, true);
   17ac0:	2101      	movs	r1, #1
   17ac2:	200a      	movs	r0, #10
   17ac4:	f7f8 fcb4 	bl	10430 <lpc_pconp>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:41
    lpc_pclk(pclk_ssp1, clkdiv_1);
   17ac8:	2101      	movs	r1, #1
   17aca:	200a      	movs	r0, #10
   17acc:	f7f8 fcca 	bl	10464 <lpc_pclk>
ssp_init():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:61
    pSSP->CR0 = 7;          // 8-bit mode
   17ad0:	4870      	ldr	r0, [pc, #448]	; (17c94 <high_level_init()+0x2ec>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   17ad2:	2101      	movs	r1, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:61
    pSSP->CR0 = 7;          // 8-bit mode
   17ad4:	6005      	str	r5, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:62
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   17ad6:	6044      	str	r4, [r0, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   17ad8:	f7ff fed6 	bl	17888 <ssp_set_max_clock>
ssp1_init():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:46
    ssp1_dma_init();
   17adc:	f7fd fcac 	bl	15438 <ssp1_dma_init>
ssp0_init():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:42
 * Configures CLK, MISO, MOSI pins with a slow SCK speed
 */
static inline void ssp0_init(unsigned int max_clock_mhz)
{
    // @note Pins are initialized by bio.h
    lpc_pconp(pconp_ssp0, true);
   17ae0:	2101      	movs	r1, #1
   17ae2:	2015      	movs	r0, #21
   17ae4:	f7f8 fca4 	bl	10430 <lpc_pconp>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:43
    lpc_pclk(pclk_ssp0, clkdiv_1);
   17ae8:	2101      	movs	r1, #1
   17aea:	2015      	movs	r0, #21
   17aec:	f7f8 fcba 	bl	10464 <lpc_pclk>
ssp_init():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:61
    pSSP->CR0 = 7;          // 8-bit mode
   17af0:	4869      	ldr	r0, [pc, #420]	; (17c98 <high_level_init()+0x2f0>)
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   17af2:	2101      	movs	r1, #1
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:61
    pSSP->CR0 = 7;          // 8-bit mode
   17af4:	6005      	str	r5, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:62
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   17af6:	6044      	str	r4, [r0, #4]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   17af8:	f7ff fec6 	bl	17888 <ssp_set_max_clock>
_Z15high_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:99
    if (!I2C2::getInstance().init(SYS_CFG_I2C2_CLK_KHZ)) {
   17afc:	f7ff fe6e 	bl	177dc <SingletonTemplate<I2C2>::getInstance()>
   17b00:	2164      	movs	r1, #100	; 0x64
   17b02:	f7fd fea5 	bl	15850 <I2C2::init(unsigned int)>
   17b06:	b910      	cbnz	r0, 17b0e <high_level_init()+0x166>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:100
        puts("ERROR: Possible short on SDA or SCL wire (I2C2)!");
   17b08:	4864      	ldr	r0, [pc, #400]	; (17c9c <high_level_init()+0x2f4>)
   17b0a:	f004 fbf1 	bl	1c2f0 <puts>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:113
    lpc_sys_setup_system_timer();
   17b0e:	f7f8 fbc9 	bl	102a4 <lpc_sys_setup_system_timer>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:121
    if (!wireless_init()) {
   17b12:	f7fb fd7d 	bl	13610 <wireless_init>
   17b16:	b910      	cbnz	r0, 17b1e <high_level_init()+0x176>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:122
        puts("ERROR: Failed to initialize wireless");
   17b18:	4861      	ldr	r0, [pc, #388]	; (17ca0 <high_level_init()+0x2f8>)
   17b1a:	f004 fbe9 	bl	1c2f0 <puts>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:127
        tlm_component_add(SYS_CFG_DISK_TLM_NAME);
   17b1e:	4861      	ldr	r0, [pc, #388]	; (17ca4 <high_level_init()+0x2fc>)
   17b20:	f7fd ff04 	bl	1592c <tlm_component_add>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:128
        tlm_component_add(SYS_CFG_DEBUG_TLM_NAME);
   17b24:	4860      	ldr	r0, [pc, #384]	; (17ca8 <high_level_init()+0x300>)
   17b26:	f7fd ff01 	bl	1592c <tlm_component_add>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:135
    delay_ms(SYS_CFG_STARTUP_DELAY_MS);
   17b2a:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   17b2e:	f7fe fce5 	bl	164fc <delay_ms>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:136
    hl_print_line();
   17b32:	f7ff fea3 	bl	1787c <hl_print_line()>
hl_print_boot_info():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:244
        const unsigned int cpuClock = sys_get_cpu_clock();
        const unsigned int sig = cpuClock / (1000 * 1000);
        const unsigned int fraction = (cpuClock - (sig*1000*1000)) / 1000;
        printf("System Boot @ %u.%u Mhz\n", sig, fraction);
    #else
        printf("System Boot @ %.3f Mhz\n", sys_get_cpu_clock() / (1000 * 1000.0f));
   17b36:	f7f8 fd63 	bl	10600 <sys_get_cpu_clock>
   17b3a:	f002 f9d1 	bl	19ee0 <__aeabi_ui2f>
   17b3e:	495b      	ldr	r1, [pc, #364]	; (17cac <high_level_init()+0x304>)
   17b40:	f002 fada 	bl	1a0f8 <__aeabi_fdiv>
   17b44:	f001 fe40 	bl	197c8 <__aeabi_f2d>
   17b48:	4602      	mov	r2, r0
   17b4a:	460b      	mov	r3, r1
   17b4c:	4858      	ldr	r0, [pc, #352]	; (17cb0 <high_level_init()+0x308>)
   17b4e:	f004 fb5b 	bl	1c208 <iprintf>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:247
    #endif

    if(boot_watchdog_recover == sys_get_boot_type()) {
   17b52:	f7f8 fda9 	bl	106a8 <sys_get_boot_type>
   17b56:	2805      	cmp	r0, #5
   17b58:	ac04      	add	r4, sp, #16
   17b5a:	d114      	bne.n	17b86 <high_level_init()+0x1de>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:248
        char taskName[sizeof(FAULT_LAST_RUNNING_TASK_NAME) * 2] = { 0 };
   17b5c:	2300      	movs	r3, #0
   17b5e:	6063      	str	r3, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:249
        memcpy(&taskName[0], (void*) &(FAULT_LAST_RUNNING_TASK_NAME), sizeof(FAULT_LAST_RUNNING_TASK_NAME));
   17b60:	4b54      	ldr	r3, [pc, #336]	; (17cb4 <high_level_init()+0x30c>)
   17b62:	681b      	ldr	r3, [r3, #0]
   17b64:	6023      	str	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:251

        hl_print_line();
   17b66:	f7ff fe89 	bl	1787c <hl_print_line()>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:255
        printf("System rebooted after crash.  Relevant info:\n"
               "PC: 0x%08X.  LR: 0x%08X.  PSR: 0x%08X\n"
               "Possible last running OS Task: '%s'\n",
                (unsigned int)FAULT_PC, (unsigned int)FAULT_LR, (unsigned int)FAULT_PSR,
   17b6a:	4b53      	ldr	r3, [pc, #332]	; (17cb8 <high_level_init()+0x310>)
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:256
                taskName);
   17b6c:	4853      	ldr	r0, [pc, #332]	; (17cbc <high_level_init()+0x314>)
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:255
                (unsigned int)FAULT_PC, (unsigned int)FAULT_LR, (unsigned int)FAULT_PSR,
   17b6e:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
   17b70:	6d1a      	ldr	r2, [r3, #80]	; 0x50
   17b72:	6d5b      	ldr	r3, [r3, #84]	; 0x54
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:256
                taskName);
   17b74:	9400      	str	r4, [sp, #0]
   17b76:	f004 fb47 	bl	1c208 <iprintf>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:257
        hl_print_line();
   17b7a:	f7ff fe7f 	bl	1787c <hl_print_line()>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:258
        delay_ms(SYS_CFG_CRASH_STARTUP_DELAY_MS);
   17b7e:	f241 3088 	movw	r0, #5000	; 0x1388
   17b82:	f7fe fcbb 	bl	164fc <delay_ms>
_Z15high_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:145
    if (!hl_mount_storage(Storage::getFlashDrive(), " Flash "))
   17b86:	f7ff fedd 	bl	17944 <Storage::getFlashDrive()>
   17b8a:	494d      	ldr	r1, [pc, #308]	; (17cc0 <high_level_init()+0x318>)
   17b8c:	f7ff fe92 	bl	178b4 <hl_mount_storage(FileSystemObject&, char const*)>
   17b90:	4605      	mov	r5, r0
   17b92:	bb68      	cbnz	r0, 17bf0 <high_level_init()+0x248>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:147
        printf("Erasing and formatting SPI flash, this can take a while ... ");
   17b94:	484b      	ldr	r0, [pc, #300]	; (17cc4 <high_level_init()+0x31c>)
   17b96:	f004 fb37 	bl	1c208 <iprintf>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:149
        flash_chip_erase();
   17b9a:	f7fb f835 	bl	12c08 <flash_chip_erase>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:150
        printf("%s\n", FR_OK == Storage::getFlashDrive().format() ? "Done" : "Error");
   17b9e:	f7ff fed1 	bl	17944 <Storage::getFlashDrive()>
_ZNK16FileSystemObject6formatEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:94
            return f_mkfs(getDrivePath(), 0, 0);
   17ba2:	4629      	mov	r1, r5
   17ba4:	462a      	mov	r2, r5
   17ba6:	f200 2035 	addw	r0, r0, #565	; 0x235
   17baa:	f7fa fb0f 	bl	121cc <f_mkfs>
_Z15high_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:150
   17bae:	4b46      	ldr	r3, [pc, #280]	; (17cc8 <high_level_init()+0x320>)
   17bb0:	4a46      	ldr	r2, [pc, #280]	; (17ccc <high_level_init()+0x324>)
   17bb2:	2800      	cmp	r0, #0
   17bb4:	bf0c      	ite	eq
   17bb6:	4610      	moveq	r0, r2
   17bb8:	4618      	movne	r0, r3
   17bba:	f004 fb99 	bl	1c2f0 <puts>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:152
        if (!hl_mount_storage(Storage::getFlashDrive(), " Flash "))
   17bbe:	f7ff fec1 	bl	17944 <Storage::getFlashDrive()>
   17bc2:	493f      	ldr	r1, [pc, #252]	; (17cc0 <high_level_init()+0x318>)
   17bc4:	f7ff fe76 	bl	178b4 <hl_mount_storage(FileSystemObject&, char const*)>
   17bc8:	b990      	cbnz	r0, 17bf0 <high_level_init()+0x248>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:154
            printf("SPI FLASH is possibly damaged!\n");
   17bca:	4841      	ldr	r0, [pc, #260]	; (17cd0 <high_level_init()+0x328>)
   17bcc:	f004 fb90 	bl	1c2f0 <puts>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:155
            printf("Page size: %u\n", (unsigned) flash_get_page_size());
   17bd0:	f7fa ffc6 	bl	12b60 <flash_get_page_size>
   17bd4:	4601      	mov	r1, r0
   17bd6:	483f      	ldr	r0, [pc, #252]	; (17cd4 <high_level_init()+0x32c>)
   17bd8:	f004 fb16 	bl	1c208 <iprintf>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:156
            printf("Mem  size: %u (raw bytes)\n", (unsigned) (flash_get_page_count() * flash_get_page_size()));
   17bdc:	f7fa ffb0 	bl	12b40 <flash_get_page_count>
   17be0:	4605      	mov	r5, r0
   17be2:	f7fa ffbd 	bl	12b60 <flash_get_page_size>
   17be6:	fb00 f105 	mul.w	r1, r0, r5
   17bea:	483b      	ldr	r0, [pc, #236]	; (17cd8 <high_level_init()+0x330>)
   17bec:	f004 fb0c 	bl	1c208 <iprintf>
_ZN7Storage10getSDDriveEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57

        /// @returns Single SD Card Drive Object reference
        static FileSystemObject& getSDDrive()
        {
            static FileSystemObject* pSDCardDrive = new FileSystemObject(driveNumSdCard);
   17bf0:	4e3a      	ldr	r6, [pc, #232]	; (17cdc <high_level_init()+0x334>)
   17bf2:	4f3b      	ldr	r7, [pc, #236]	; (17ce0 <high_level_init()+0x338>)
   17bf4:	7833      	ldrb	r3, [r6, #0]
   17bf6:	f3bf 8f5b 	dmb	ish
   17bfa:	f013 0501 	ands.w	r5, r3, #1
   17bfe:	d116      	bne.n	17c2e <high_level_init()+0x286>
   17c00:	4630      	mov	r0, r6
   17c02:	f001 f9f2 	bl	18fea <__cxa_guard_acquire>
   17c06:	b190      	cbz	r0, 17c2e <high_level_init()+0x286>
   17c08:	f44f 700e 	mov.w	r0, #568	; 0x238
   17c0c:	f000 fc4c 	bl	184a8 <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:103
            mVolNum(volumeNum)
   17c10:	2301      	movs	r3, #1
   17c12:	f880 3234 	strb.w	r3, [r0, #564]	; 0x234
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:105
            mVolStr[0] = volumeNum + '0';
   17c16:	2331      	movs	r3, #49	; 0x31
   17c18:	f880 3235 	strb.w	r3, [r0, #565]	; 0x235
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106
            mVolStr[1] = ':';
   17c1c:	233a      	movs	r3, #58	; 0x3a
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:107
            mVolStr[2] = '\0';
   17c1e:	f880 5237 	strb.w	r5, [r0, #567]	; 0x237
/home/peter/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106
            mVolStr[1] = ':';
   17c22:	f880 3236 	strb.w	r3, [r0, #566]	; 0x236
_ZN7Storage10getSDDriveEv():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57
   17c26:	6038      	str	r0, [r7, #0]
   17c28:	4630      	mov	r0, r6
   17c2a:	f001 f9ea 	bl	19002 <__cxa_guard_release>
_Z15high_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:160
    hl_mount_storage(Storage::getSDDrive(), "SD Card");
   17c2e:	492d      	ldr	r1, [pc, #180]	; (17ce4 <high_level_init()+0x33c>)
   17c30:	6838      	ldr	r0, [r7, #0]
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   17c32:	4d2d      	ldr	r5, [pc, #180]	; (17ce8 <high_level_init()+0x340>)
_Z15high_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:160
   17c34:	f7ff fe3e 	bl	178b4 <hl_mount_storage(FileSystemObject&, char const*)>
ssp1_set_max_clock():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:56
    ssp_set_max_clock(LPC_SSP1, max_clock_mhz);
   17c38:	2118      	movs	r1, #24
   17c3a:	4816      	ldr	r0, [pc, #88]	; (17c94 <high_level_init()+0x2ec>)
   17c3c:	f7ff fe24 	bl	17888 <ssp_set_max_clock>
_Z15high_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:164
    hl_print_line();
   17c40:	f7ff fe1c 	bl	1787c <hl_print_line()>
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
   17c44:	682b      	ldr	r3, [r5, #0]
   17c46:	b94b      	cbnz	r3, 17c5c <high_level_init()+0x2b4>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   17c48:	2008      	movs	r0, #8
   17c4a:	f000 fc2d 	bl	184a8 <operator new(unsigned int)>
   17c4e:	4606      	mov	r6, r0
_ZN11i2c2_deviceC4Eh():
/home/peter/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   17c50:	f7ff fdc4 	bl	177dc <SingletonTemplate<I2C2>::getInstance()>
   17c54:	2338      	movs	r3, #56	; 0x38
   17c56:	6030      	str	r0, [r6, #0]
   17c58:	7133      	strb	r3, [r6, #4]
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   17c5a:	602e      	str	r6, [r5, #0]
hl_init_board_io():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:266

static bool hl_init_board_io(void)
{
    bool success = true;

    if(!AS.init()) { puts("ERROR: Acceleration Sensor"); success = false; }
   17c5c:	6828      	ldr	r0, [r5, #0]
   17c5e:	f7fc fc7c 	bl	1455a <Acceleration_Sensor::init()>
   17c62:	4606      	mov	r6, r0
   17c64:	b910      	cbnz	r0, 17c6c <high_level_init()+0x2c4>
   17c66:	4821      	ldr	r0, [pc, #132]	; (17cec <high_level_init()+0x344>)
   17c68:	f004 fb42 	bl	1c2f0 <puts>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:267
    if(!TS.init()) { puts("ERROR: Temperature Sensor"); success = false; }
   17c6c:	f7ff fdc6 	bl	177fc <SingletonTemplate<TemperatureSensor>::getInstance()>
   17c70:	f7fc fd6e 	bl	14750 <I2C_Temp::init()>
   17c74:	4605      	mov	r5, r0
   17c76:	2800      	cmp	r0, #0
   17c78:	d13c      	bne.n	17cf4 <high_level_init()+0x34c>
   17c7a:	481d      	ldr	r0, [pc, #116]	; (17cf0 <high_level_init()+0x348>)
   17c7c:	f004 fb38 	bl	1c2f0 <puts>
   17c80:	462e      	mov	r6, r5
   17c82:	e037      	b.n	17cf4 <high_level_init()+0x34c>
   17c84:	2009c000 	.word	0x2009c000
   17c88:	2009c020 	.word	0x2009c020
   17c8c:	4002c000 	.word	0x4002c000
   17c90:	fffcfcf0 	.word	0xfffcfcf0
   17c94:	40030000 	.word	0x40030000
   17c98:	40088000 	.word	0x40088000
   17c9c:	00021c3e 	.word	0x00021c3e
   17ca0:	00021c6f 	.word	0x00021c6f
   17ca4:	00021ac2 	.word	0x00021ac2
   17ca8:	00021c94 	.word	0x00021c94
   17cac:	49742400 	.word	0x49742400
   17cb0:	00021c9a 	.word	0x00021c9a
   17cb4:	40024044 	.word	0x40024044
   17cb8:	40024000 	.word	0x40024000
   17cbc:	00021cb2 	.word	0x00021cb2
   17cc0:	00021d2a 	.word	0x00021d2a
   17cc4:	00021d32 	.word	0x00021d32
   17cc8:	00021c2b 	.word	0x00021c2b
   17ccc:	00021c26 	.word	0x00021c26
   17cd0:	00021d6f 	.word	0x00021d6f
   17cd4:	00021d8e 	.word	0x00021d8e
   17cd8:	00021d9d 	.word	0x00021d9d
   17cdc:	2007c6e0 	.word	0x2007c6e0
   17ce0:	2007c6e4 	.word	0x2007c6e4
   17ce4:	00021db8 	.word	0x00021db8
   17ce8:	2007c6dc 	.word	0x2007c6dc
   17cec:	00021dc0 	.word	0x00021dc0
   17cf0:	00021ddb 	.word	0x00021ddb
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:268
    if(!LD.init()) { puts("ERROR: 7-Segment Display"); success = false; }
   17cf4:	f7ff fd96 	bl	17824 <SingletonTemplate<LED_Display>::getInstance()>
   17cf8:	f7fc fcb2 	bl	14660 <LED_Display::init()>
   17cfc:	4605      	mov	r5, r0
   17cfe:	b918      	cbnz	r0, 17d08 <high_level_init()+0x360>
   17d00:	486d      	ldr	r0, [pc, #436]	; (17eb8 <high_level_init()+0x510>)
   17d02:	f004 faf5 	bl	1c2f0 <puts>
   17d06:	462e      	mov	r6, r5
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   17d08:	4d6c      	ldr	r5, [pc, #432]	; (17ebc <high_level_init()+0x514>)
   17d0a:	682b      	ldr	r3, [r5, #0]
   17d0c:	b91b      	cbnz	r3, 17d16 <high_level_init()+0x36e>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   17d0e:	2001      	movs	r0, #1
   17d10:	f000 fbca 	bl	184a8 <operator new(unsigned int)>
   17d14:	6028      	str	r0, [r5, #0]
hl_init_board_io():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:271

    /* These devices don't have a way to check if init() failed */
    IS.init(); // IR sensor
   17d16:	6828      	ldr	r0, [r5, #0]
   17d18:	f7fc fc70 	bl	145fc <IR_Sensor::init()>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:272
    LS.init(); // Light sensor
   17d1c:	f7ff fd94 	bl	17848 <SingletonTemplate<Light_Sensor>::getInstance()>
   17d20:	f7fc fd02 	bl	14728 <Light_Sensor::init()>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:273
    LE.init(); // LEDs
   17d24:	f7ff fd9c 	bl	17860 <SingletonTemplate<LED>::getInstance()>
   17d28:	f7fc fcd3 	bl	146d2 <LED::init()>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:274
    SW.init(); // Switches
   17d2c:	f7ff fe30 	bl	17990 <SingletonTemplate<Switches>::getInstance()>
   17d30:	f7fc fcff 	bl	14732 <Switches::init()>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:277

    /* Turn off all LEDs */
    LE.setAll(0);
   17d34:	f7ff fd94 	bl	17860 <SingletonTemplate<LED>::getInstance()>
   17d38:	2100      	movs	r1, #0
   17d3a:	f7fc fccd 	bl	146d8 <LED::setAll(unsigned char)>
_Z15high_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:167
    if(!hl_init_board_io()) {
   17d3e:	2e00      	cmp	r6, #0
   17d40:	f040 8081 	bne.w	17e46 <high_level_init()+0x49e>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:168
        hl_print_line();
   17d44:	f7ff fd9a 	bl	1787c <hl_print_line()>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:169
        LD.setLeftDigit('-');
   17d48:	f7ff fd6c 	bl	17824 <SingletonTemplate<LED_Display>::getInstance()>
   17d4c:	212d      	movs	r1, #45	; 0x2d
   17d4e:	f7fc fc6f 	bl	14630 <LED_Display::setLeftDigit(char)>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:170
        LD.setRightDigit('-');
   17d52:	f7ff fd67 	bl	17824 <SingletonTemplate<LED_Display>::getInstance()>
   17d56:	212d      	movs	r1, #45	; 0x2d
   17d58:	f7fc fc76 	bl	14648 <LED_Display::setRightDigit(char)>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:171
        LE.setAll(0xFF);
   17d5c:	f7ff fd80 	bl	17860 <SingletonTemplate<LED>::getInstance()>
   17d60:	21ff      	movs	r1, #255	; 0xff
   17d62:	f7fc fcb9 	bl	146d8 <LED::setAll(unsigned char)>
hl_wireless_set_addr_from_file():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:285
}

static void hl_wireless_set_addr_from_file(void)
{
    uint8_t wireless_node_addr = WIRELESS_NODE_ADDR;
    char nAddrStr[16] = { 0 };
   17d66:	2210      	movs	r2, #16
   17d68:	2100      	movs	r1, #0
   17d6a:	4620      	mov	r0, r4
   17d6c:	f003 f8a0 	bl	1aeb0 <memset>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:287

    if (FR_OK == Storage::read(WIRELESS_NODE_ADDR_FILE, nAddrStr, sizeof(nAddrStr)-1, 0)) {
   17d70:	2300      	movs	r3, #0
   17d72:	220f      	movs	r2, #15
   17d74:	4621      	mov	r1, r4
   17d76:	4852      	ldr	r0, [pc, #328]	; (17ec0 <high_level_init()+0x518>)
   17d78:	f7fc fbb2 	bl	144e0 <Storage::read(char const*, void*, unsigned int, unsigned int)>
   17d7c:	b980      	cbnz	r0, 17da0 <high_level_init()+0x3f8>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:288
        wireless_node_addr = atoi(nAddrStr);
   17d7e:	4620      	mov	r0, r4
   17d80:	f002 fc05 	bl	1a58e <atoi>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:289
        bool ok = mesh_set_node_address(wireless_node_addr);
   17d84:	b2c5      	uxtb	r5, r0
   17d86:	4628      	mov	r0, r5
   17d88:	f7fc f8b4 	bl	13ef4 <mesh_set_node_address>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:291
        printf("Set wireless node address to %i from '%s' file: %s\n",
                    wireless_node_addr, WIRELESS_NODE_ADDR_FILE, ok ? "Done!" : "FAILED");
   17d8c:	4a4d      	ldr	r2, [pc, #308]	; (17ec4 <high_level_init()+0x51c>)
   17d8e:	4b4e      	ldr	r3, [pc, #312]	; (17ec8 <high_level_init()+0x520>)
   17d90:	4629      	mov	r1, r5
   17d92:	2800      	cmp	r0, #0
   17d94:	bf18      	it	ne
   17d96:	4613      	movne	r3, r2
   17d98:	4a49      	ldr	r2, [pc, #292]	; (17ec0 <high_level_init()+0x518>)
   17d9a:	484c      	ldr	r0, [pc, #304]	; (17ecc <high_level_init()+0x524>)
   17d9c:	f004 fa34 	bl	1c208 <iprintf>
_Z15high_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:181
    srand(LS.getRawValue() + time(NULL));
   17da0:	f7ff fd52 	bl	17848 <SingletonTemplate<Light_Sensor>::getInstance()>
   17da4:	f7fc fcc2 	bl	1472c <Light_Sensor::getRawValue()>
   17da8:	4605      	mov	r5, r0
   17daa:	2000      	movs	r0, #0
   17dac:	f005 fcec 	bl	1d788 <time>
   17db0:	4428      	add	r0, r5
   17db2:	f004 faa5 	bl	1c300 <srand>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:185
        char buff[512] = { 0 };
   17db6:	f44f 7200 	mov.w	r2, #512	; 0x200
   17dba:	2100      	movs	r1, #0
   17dbc:	4620      	mov	r0, r4
   17dbe:	f003 f877 	bl	1aeb0 <memset>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:186
        sys_get_mem_info_str(buff);
   17dc2:	4620      	mov	r0, r4
   17dc4:	f7f8 faae 	bl	10324 <sys_get_mem_info_str>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:187
        printf("%s", buff);
   17dc8:	4621      	mov	r1, r4
   17dca:	4841      	ldr	r0, [pc, #260]	; (17ed0 <high_level_init()+0x528>)
   17dcc:	f004 fa1c 	bl	1c208 <iprintf>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:188
        hl_print_line();
   17dd0:	f7ff fd54 	bl	1787c <hl_print_line()>
hl_handle_board_id():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:299

static void hl_handle_board_id(void)
{
    const uint8_t buttons_to_program_id = (1 << 3) | (1 << 0);
    const char notProgrammed = 0xFF;
    char board_id_on_spi_flash[128] = { 0 };
   17dd4:	2280      	movs	r2, #128	; 0x80
   17dd6:	2100      	movs	r1, #0
   17dd8:	4620      	mov	r0, r4
   17dda:	f003 f869 	bl	1aeb0 <memset>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:300
    flash_read_permanent_id(board_id_on_spi_flash);
   17dde:	4620      	mov	r0, r4
   17de0:	f7fa fe9a 	bl	12b18 <flash_read_permanent_id>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:302

    if (notProgrammed != board_id_on_spi_flash[0]) {
   17de4:	7822      	ldrb	r2, [r4, #0]
   17de6:	2aff      	cmp	r2, #255	; 0xff
   17de8:	d03b      	beq.n	17e62 <high_level_init()+0x4ba>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:303
        printf("Board ID is: '%s' (0x%02X)\n", board_id_on_spi_flash, (board_id_on_spi_flash[0] & 0xFF));
   17dea:	4621      	mov	r1, r4
   17dec:	4839      	ldr	r0, [pc, #228]	; (17ed4 <high_level_init()+0x52c>)
   17dee:	f004 fa0b 	bl	1c208 <iprintf>
chip_get_prog_max():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:49

/// @returns the number of times the chip was programmed a different program than the preceding program
static inline uint32_t chip_get_prog_modify_count(void) {   return *(chip_get_magic_location() + 1);    }

/// @returns the highest program size that was programmed
static inline uint32_t chip_get_prog_max(void)          {   return *(chip_get_magic_location() + 2);    }
   17df2:	f24f 0308 	movw	r3, #61448	; 0xf008
hl_show_prog_info():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:332

static void hl_show_prog_info(void)
{
    const unsigned int prog_count   = chip_get_prog_count();
    const unsigned int prog_modify  = chip_get_prog_modify_count();
    const unsigned int prog_max_kb  = chip_get_prog_max() / 1024;
   17df6:	681d      	ldr	r5, [r3, #0]
chip_get_prog_min():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:52

/// @returns the lowest program size that was programmed
static inline uint32_t chip_get_prog_min(void)          {   return *(chip_get_magic_location() + 3);    }
   17df8:	f24f 030c 	movw	r3, #61452	; 0xf00c
hl_show_prog_info():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:333
    const unsigned int prog_min_kb  = chip_get_prog_min() / 1024;
   17dfc:	681c      	ldr	r4, [r3, #0]
chip_get_prog_time_ms():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:55

/// @returns the number of milliseconds it took to program the last program.
static inline uint32_t chip_get_prog_time_ms(void)      {   return *(chip_get_magic_location() + 4);    }
   17dfe:	f24f 0310 	movw	r3, #61456	; 0xf010
   17e02:	681e      	ldr	r6, [r3, #0]
chip_get_prog_count():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:43
static inline uint32_t chip_get_prog_count(void)        {   return *(chip_get_magic_location() + 0);    }
   17e04:	f44f 4370 	mov.w	r3, #61440	; 0xf000
hl_show_prog_info():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    const unsigned int prog_time_ms = chip_get_prog_time_ms();

    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   17e08:	681a      	ldr	r2, [r3, #0]
   17e0a:	f24f 0304 	movw	r3, #61444	; 0xf004
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:332
    const unsigned int prog_max_kb  = chip_get_prog_max() / 1024;
   17e0e:	0aad      	lsrs	r5, r5, #10
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   17e10:	6819      	ldr	r1, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:333
    const unsigned int prog_min_kb  = chip_get_prog_min() / 1024;
   17e12:	0aa4      	lsrs	r4, r4, #10
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   17e14:	4830      	ldr	r0, [pc, #192]	; (17ed8 <high_level_init()+0x530>)
   17e16:	f004 f9f7 	bl	1c208 <iprintf>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:337
    printf("CPU programmed flash (min/max): %uKb - %uKb\n", prog_min_kb, prog_max_kb);
   17e1a:	462a      	mov	r2, r5
   17e1c:	4621      	mov	r1, r4
   17e1e:	482f      	ldr	r0, [pc, #188]	; (17edc <high_level_init()+0x534>)
   17e20:	f004 f9f2 	bl	1c208 <iprintf>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:338
    printf("Last programming took %u ms\n", prog_time_ms);
   17e24:	4631      	mov	r1, r6
   17e26:	482e      	ldr	r0, [pc, #184]	; (17ee0 <high_level_init()+0x538>)
   17e28:	f004 f9ee 	bl	1c208 <iprintf>
_Z15high_level_initv():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:194
    hl_print_line();
   17e2c:	f7ff fd26 	bl	1787c <hl_print_line()>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:203
    logger_init(SYS_CFG_LOGGER_TASK_PRIORITY);
   17e30:	2001      	movs	r0, #1
   17e32:	f7fe f851 	bl	15ed8 <logger_init>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:207
    puts("Calling your main()");
   17e36:	482b      	ldr	r0, [pc, #172]	; (17ee4 <high_level_init()+0x53c>)
   17e38:	f004 fa5a 	bl	1c2f0 <puts>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:208
    hl_print_line();
   17e3c:	f7ff fd1e 	bl	1787c <hl_print_line()>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:209
}
   17e40:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
   17e44:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:174
        LD.setNumber(TS.getFarenheit());
   17e46:	f7ff fced 	bl	17824 <SingletonTemplate<LED_Display>::getInstance()>
   17e4a:	4605      	mov	r5, r0
   17e4c:	f7ff fcd6 	bl	177fc <SingletonTemplate<TemperatureSensor>::getInstance()>
   17e50:	f7fc fca8 	bl	147a4 <I2C_Temp::getFarenheit()>
   17e54:	f002 f9ec 	bl	1a230 <__aeabi_f2uiz>
   17e58:	b2c1      	uxtb	r1, r0
   17e5a:	4628      	mov	r0, r5
   17e5c:	f7fc fc1c 	bl	14698 <LED_Display::setNumber(char)>
   17e60:	e781      	b.n	17d66 <high_level_init()+0x3be>
hl_handle_board_id():
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:305
    else if (SW.getSwitchValues() == buttons_to_program_id) {
   17e62:	f7ff fd95 	bl	17990 <SingletonTemplate<Switches>::getInstance()>
   17e66:	f7fc fc67 	bl	14738 <Switches::getSwitchValues()>
   17e6a:	2809      	cmp	r0, #9
   17e6c:	d11f      	bne.n	17eae <high_level_init()+0x506>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:306
        printf("Enter a board ID (64 chars max): \n");
   17e6e:	481e      	ldr	r0, [pc, #120]	; (17ee8 <high_level_init()+0x540>)
   17e70:	f004 fa3e 	bl	1c2f0 <puts>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:307
        scanf("%64s", &board_id_on_spi_flash[0]);
   17e74:	4621      	mov	r1, r4
   17e76:	481d      	ldr	r0, [pc, #116]	; (17eec <high_level_init()+0x544>)
   17e78:	f004 fb7e 	bl	1c578 <iscanf>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:309
        printf("Board ID to program: '%s'\n", board_id_on_spi_flash);
   17e7c:	4621      	mov	r1, r4
   17e7e:	481c      	ldr	r0, [pc, #112]	; (17ef0 <high_level_init()+0x548>)
   17e80:	f004 f9c2 	bl	1c208 <iprintf>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:310
        printf("Enter 'Y' to confirm.  BOARD ID CANNOT BE CHANGED AND IS PERMANENT\n");
   17e84:	481b      	ldr	r0, [pc, #108]	; (17ef4 <high_level_init()+0x54c>)
   17e86:	f004 fa33 	bl	1c2f0 <puts>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:312
        char confirm[4] = { 0 };
   17e8a:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:313
        scanf("%3s", confirm);
   17e8c:	a903      	add	r1, sp, #12
   17e8e:	481a      	ldr	r0, [pc, #104]	; (17ef8 <high_level_init()+0x550>)
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:312
        char confirm[4] = { 0 };
   17e90:	9303      	str	r3, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:313
        scanf("%3s", confirm);
   17e92:	f004 fb71 	bl	1c578 <iscanf>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:315
        if ('Y' == confirm[0]) {
   17e96:	f89d 300c 	ldrb.w	r3, [sp, #12]
   17e9a:	2b59      	cmp	r3, #89	; 0x59
   17e9c:	d103      	bne.n	17ea6 <high_level_init()+0x4fe>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:316
            flash_write_permanent_id(board_id_on_spi_flash);
   17e9e:	4620      	mov	r0, r4
   17ea0:	f7fa fe18 	bl	12ad4 <flash_write_permanent_id>
   17ea4:	e7a5      	b.n	17df2 <high_level_init()+0x44a>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:319
            puts("Board ID not programmed");
   17ea6:	4815      	ldr	r0, [pc, #84]	; (17efc <high_level_init()+0x554>)
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:324
        puts("To do this, hold SW1 and SW4 and reset the board.");
   17ea8:	f004 fa22 	bl	1c2f0 <puts>
   17eac:	e7a1      	b.n	17df2 <high_level_init()+0x44a>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:323
        puts("You can program a PERMANENT ID of your board.");
   17eae:	4814      	ldr	r0, [pc, #80]	; (17f00 <high_level_init()+0x558>)
   17eb0:	f004 fa1e 	bl	1c2f0 <puts>
/home/peter/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:324
        puts("To do this, hold SW1 and SW4 and reset the board.");
   17eb4:	4813      	ldr	r0, [pc, #76]	; (17f04 <high_level_init()+0x55c>)
   17eb6:	e7f7      	b.n	17ea8 <high_level_init()+0x500>
   17eb8:	00021df5 	.word	0x00021df5
   17ebc:	2007c300 	.word	0x2007c300
   17ec0:	00021e0e 	.word	0x00021e0e
   17ec4:	00021c31 	.word	0x00021c31
   17ec8:	00021c37 	.word	0x00021c37
   17ecc:	00021e14 	.word	0x00021e14
   17ed0:	000221b3 	.word	0x000221b3
   17ed4:	00021e48 	.word	0x00021e48
   17ed8:	00021f65 	.word	0x00021f65
   17edc:	00021f91 	.word	0x00021f91
   17ee0:	00021fbe 	.word	0x00021fbe
   17ee4:	00021fdb 	.word	0x00021fdb
   17ee8:	00021e64 	.word	0x00021e64
   17eec:	00021e86 	.word	0x00021e86
   17ef0:	00021e8b 	.word	0x00021e8b
   17ef4:	00021ea6 	.word	0x00021ea6
   17ef8:	00021ee9 	.word	0x00021ee9
   17efc:	00021eed 	.word	0x00021eed
   17f00:	00021f05 	.word	0x00021f05
   17f04:	00021f33 	.word	0x00021f33

00017f08 <_gettimeofday>:
_gettimeofday():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:69
    return mktime (&tm);
}

/// GCC C libraries call this function to get time of day
__attribute__ ((used)) int _gettimeofday (struct timeval *tp, void *tzp)
{
   17f08:	b530      	push	{r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:70
    if (tp)
   17f0a:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:69
{
   17f0c:	b08d      	sub	sp, #52	; 0x34
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:70
    if (tp)
   17f0e:	b3a8      	cbz	r0, 17f7c <_gettimeofday+0x74>
rtc_read_to_struct():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:39
    time_ptr->tm_isdst = 0;
   17f10:	2500      	movs	r5, #0
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:30
    rtc_t t = rtc_gettime();
   17f12:	4668      	mov	r0, sp
   17f14:	f7fd fbdc 	bl	156d0 <rtc_gettime>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:31
    time_ptr->tm_sec   = t.sec;
   17f18:	f89d 3000 	ldrb.w	r3, [sp]
rtc_get_epoch():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:64
    return mktime (&tm);
   17f1c:	a803      	add	r0, sp, #12
rtc_read_to_struct():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:31
    time_ptr->tm_sec   = t.sec;
   17f1e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   17f22:	9303      	str	r3, [sp, #12]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:32
    time_ptr->tm_min   = t.min;
   17f24:	f89d 3001 	ldrb.w	r3, [sp, #1]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:39
    time_ptr->tm_isdst = 0;
   17f28:	950b      	str	r5, [sp, #44]	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:32
    time_ptr->tm_min   = t.min;
   17f2a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   17f2e:	9304      	str	r3, [sp, #16]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:33
    time_ptr->tm_hour  = t.hour;
   17f30:	f89d 3002 	ldrb.w	r3, [sp, #2]
   17f34:	f003 031f 	and.w	r3, r3, #31
   17f38:	9305      	str	r3, [sp, #20]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:34
    time_ptr->tm_mday  = t.day;
   17f3a:	f89d 3004 	ldrb.w	r3, [sp, #4]
   17f3e:	f003 031f 	and.w	r3, r3, #31
   17f42:	9306      	str	r3, [sp, #24]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:35
    time_ptr->tm_mon   = t.month - 1;
   17f44:	f89d 3005 	ldrb.w	r3, [sp, #5]
   17f48:	f003 030f 	and.w	r3, r3, #15
   17f4c:	3b01      	subs	r3, #1
   17f4e:	9307      	str	r3, [sp, #28]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:36
    time_ptr->tm_year  = t.year - 1900;
   17f50:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   17f54:	f3c3 030b 	ubfx	r3, r3, #0, #12
   17f58:	f2a3 736c 	subw	r3, r3, #1900	; 0x76c
   17f5c:	9308      	str	r3, [sp, #32]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:37
    time_ptr->tm_wday  = t.dow;
   17f5e:	f89d 3003 	ldrb.w	r3, [sp, #3]
   17f62:	f003 0307 	and.w	r3, r3, #7
   17f66:	9309      	str	r3, [sp, #36]	; 0x24
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:38
    time_ptr->tm_yday  = t.doy - 1;
   17f68:	f8bd 3008 	ldrh.w	r3, [sp, #8]
   17f6c:	f3c3 030b 	ubfx	r3, r3, #0, #12
   17f70:	3b01      	subs	r3, #1
   17f72:	930a      	str	r3, [sp, #40]	; 0x28
rtc_get_epoch():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:64
    return mktime (&tm);
   17f74:	f003 f884 	bl	1b080 <mktime>
_gettimeofday():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:74
    {
        unsigned int milliseconds = 0;
        tp->tv_sec = rtc_get_epoch (&milliseconds);
        tp->tv_usec = milliseconds * 1000;
   17f78:	e884 0021 	stmia.w	r4, {r0, r5}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_time.c:78
    }

    return 0;
}
   17f7c:	2000      	movs	r0, #0
   17f7e:	b00d      	add	sp, #52	; 0x34
   17f80:	bd30      	pop	{r4, r5, pc}

00017f82 <__malloc_lock>:
__malloc_lock():
/home/peter/SJSU-Dev/firmware/lib/newlib/malloc_lock.c:33
 *        GCC calls these functions before and after calling the malloc() functions.
 */

__attribute__ ((used)) void __malloc_lock( void *_r )
{
    vPortEnterCritical();
   17f82:	f7ff bb71 	b.w	17668 <vPortEnterCritical>

00017f86 <__malloc_unlock>:
__malloc_unlock():
/home/peter/SJSU-Dev/firmware/lib/newlib/malloc_lock.c:38
}

__attribute__ ((used)) void __malloc_unlock( void *_r )
{
    vPortExitCritical();
   17f86:	f7ff bb7f 	b.w	17688 <vPortExitCritical>

00017f8a <remap_fatfs_errors>:
remap_fatfs_errors():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:250
}

#ifdef CFG_FATFS
static int remap_fatfs_errors(FRESULT f)
{
    switch (f)
   17f8a:	3803      	subs	r0, #3
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:249
{
   17f8c:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:250
    switch (f)
   17f8e:	280a      	cmp	r0, #10
   17f90:	d822      	bhi.n	17fd8 <remap_fatfs_errors+0x4e>
   17f92:	e8df f000 	tbb	[pc, r0]
   17f96:	0621      	.short	0x0621
   17f98:	15190d06 	.word	0x15190d06
   17f9c:	2111191d 	.word	0x2111191d
   17fa0:	21          	.byte	0x21
   17fa1:	00          	.byte	0x00
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:256
    {
        case FR_NO_FILE:
            errno = ENOENT;
            break;
        case FR_NO_PATH:
            errno = ENOENT;
   17fa2:	f002 fb01 	bl	1a5a8 <__errno>
   17fa6:	2302      	movs	r3, #2
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:287
            break;
        case FR_INVALID_OBJECT:
            errno = EBADF;
            break;
        default:
            errno = EIO;
   17fa8:	6003      	str	r3, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:292
            break;
    }

    return -1;
}
   17faa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   17fae:	bd08      	pop	{r3, pc}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:259
            errno = EINVAL;
   17fb0:	f002 fafa 	bl	1a5a8 <__errno>
   17fb4:	2316      	movs	r3, #22
   17fb6:	e7f7      	b.n	17fa8 <remap_fatfs_errors+0x1e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:262
            errno = ENODEV;
   17fb8:	f002 faf6 	bl	1a5a8 <__errno>
   17fbc:	2313      	movs	r3, #19
   17fbe:	e7f3      	b.n	17fa8 <remap_fatfs_errors+0x1e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:268
            errno = EEXIST;
   17fc0:	f002 faf2 	bl	1a5a8 <__errno>
   17fc4:	2311      	movs	r3, #17
   17fc6:	e7ef      	b.n	17fa8 <remap_fatfs_errors+0x1e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:274
            errno = EACCES;
   17fc8:	f002 faee 	bl	1a5a8 <__errno>
   17fcc:	230d      	movs	r3, #13
   17fce:	e7eb      	b.n	17fa8 <remap_fatfs_errors+0x1e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:284
            errno = EBADF;
   17fd0:	f002 faea 	bl	1a5a8 <__errno>
   17fd4:	2309      	movs	r3, #9
   17fd6:	e7e7      	b.n	17fa8 <remap_fatfs_errors+0x1e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:287
            errno = EIO;
   17fd8:	f002 fae6 	bl	1a5a8 <__errno>
   17fdc:	2305      	movs	r3, #5
   17fde:	e7e3      	b.n	17fa8 <remap_fatfs_errors+0x1e>

00017fe0 <findslot>:
findslot():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218
    if ((fh != -1) && (fh == lastfh))
   17fe0:	1c43      	adds	r3, r0, #1
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:214
{
   17fe2:	b570      	push	{r4, r5, r6, lr}
   17fe4:	490e      	ldr	r1, [pc, #56]	; (18020 <findslot+0x40>)
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218
    if ((fh != -1) && (fh == lastfh))
   17fe6:	d006      	beq.n	17ff6 <findslot+0x16>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218 (discriminator 1)
   17fe8:	4b0e      	ldr	r3, [pc, #56]	; (18024 <findslot+0x44>)
   17fea:	681b      	ldr	r3, [r3, #0]
   17fec:	4298      	cmp	r0, r3
   17fee:	d102      	bne.n	17ff6 <findslot+0x16>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:219
        return slot;
   17ff0:	680a      	ldr	r2, [r1, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:228
}
   17ff2:	4610      	mov	r0, r2
   17ff4:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:221
    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
   17ff6:	2300      	movs	r3, #0
   17ff8:	461c      	mov	r4, r3
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   17ffa:	4d0b      	ldr	r5, [pc, #44]	; (18028 <findslot+0x48>)
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:221
    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
   17ffc:	600b      	str	r3, [r1, #0]
   17ffe:	2b06      	cmp	r3, #6
   18000:	461a      	mov	r2, r3
   18002:	d006      	beq.n	18012 <findslot+0x32>
   18004:	1c53      	adds	r3, r2, #1
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   18006:	eb05 1603 	add.w	r6, r5, r3, lsl #4
   1800a:	f856 6c10 	ldr.w	r6, [r6, #-16]
   1800e:	42b0      	cmp	r0, r6
   18010:	d104      	bne.n	1801c <findslot+0x3c>
   18012:	b104      	cbz	r4, 18016 <findslot+0x36>
   18014:	600a      	str	r2, [r1, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:225
    lastfh = fh;
   18016:	4b03      	ldr	r3, [pc, #12]	; (18024 <findslot+0x44>)
   18018:	6018      	str	r0, [r3, #0]
   1801a:	e7ea      	b.n	17ff2 <findslot+0x12>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   1801c:	2401      	movs	r4, #1
   1801e:	e7ee      	b.n	17ffe <findslot+0x1e>
   18020:	2007c760 	.word	0x2007c760
   18024:	2007c0d8 	.word	0x2007c0d8
   18028:	2007c700 	.word	0x2007c700

0001802c <remap_handle>:
remap_handle():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235
    CHECK_INIT(_REENT);
   1802c:	4b08      	ldr	r3, [pc, #32]	; (18050 <remap_handle+0x24>)
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:234
{
   1802e:	b510      	push	{r4, lr}
   18030:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235
    CHECK_INIT(_REENT);
   18032:	6818      	ldr	r0, [r3, #0]
   18034:	b118      	cbz	r0, 1803e <remap_handle+0x12>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235 (discriminator 1)
   18036:	6b83      	ldr	r3, [r0, #56]	; 0x38
   18038:	b90b      	cbnz	r3, 1803e <remap_handle+0x12>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235 (discriminator 2)
   1803a:	f002 fcb9 	bl	1a9b0 <__sinit>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:237
    if (fh == STDIN_FILENO)
   1803e:	b124      	cbz	r4, 1804a <remap_handle+0x1e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:239
    if (fh == STDOUT_FILENO)
   18040:	2c01      	cmp	r4, #1
   18042:	d002      	beq.n	1804a <remap_handle+0x1e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:241
    if (fh == STDERR_FILENO)
   18044:	2c02      	cmp	r4, #2
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:244
    return fh - FILE_HANDLE_OFFSET;
   18046:	bf18      	it	ne
   18048:	3c20      	subne	r4, #32
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:245
}
   1804a:	4620      	mov	r0, r4
   1804c:	bd10      	pop	{r4, pc}
   1804e:	bf00      	nop
   18050:	2007c0e4 	.word	0x2007c0e4

00018054 <sys_set_outchar_func>:
sys_set_outchar_func():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:64
    g_output_dev_fptr = func;
   18054:	4b01      	ldr	r3, [pc, #4]	; (1805c <sys_set_outchar_func+0x8>)
   18056:	6018      	str	r0, [r3, #0]
   18058:	4770      	bx	lr
   1805a:	bf00      	nop
   1805c:	2007c6f8 	.word	0x2007c6f8

00018060 <sys_set_inchar_func>:
sys_set_inchar_func():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:68
    g_input_dev_fptr = func;
   18060:	4b01      	ldr	r3, [pc, #4]	; (18068 <sys_set_inchar_func+0x8>)
   18062:	6018      	str	r0, [r3, #0]
   18064:	4770      	bx	lr
   18066:	bf00      	nop
   18068:	2007c6f4 	.word	0x2007c6f4

0001806c <_kill>:
_kill():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:72
{
   1806c:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:73
    puts("Unexpected call to kill()");
   1806e:	4802      	ldr	r0, [pc, #8]	; (18078 <_kill+0xc>)
   18070:	f004 f93e 	bl	1c2f0 <puts>
   18074:	e7fe      	b.n	18074 <_kill+0x8>
   18076:	bf00      	nop
   18078:	000220b2 	.word	0x000220b2

0001807c <_exit>:
_exit():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:79
{
   1807c:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:80
    puts("Unexpected call to exit()");
   1807e:	4802      	ldr	r0, [pc, #8]	; (18088 <_exit+0xc>)
   18080:	f004 f936 	bl	1c2f0 <puts>
   18084:	e7fe      	b.n	18084 <_exit+0x8>
   18086:	bf00      	nop
   18088:	00022098 	.word	0x00022098

0001808c <_getpid>:
_getpid():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:84
int _getpid(int n) { return 0; }
   1808c:	2000      	movs	r0, #0
   1808e:	4770      	bx	lr

00018090 <_init>:
_init():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:85
int _init(void) {   return 1;   }
   18090:	2001      	movs	r0, #1
   18092:	4770      	bx	lr

00018094 <syscalls_init>:
syscalls_init():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:320

    return -1;
}

void syscalls_init(void)
{
   18094:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:324
    static char initialized = 0;
    int slot;

    if (initialized)
   18096:	4b0a      	ldr	r3, [pc, #40]	; (180c0 <syscalls_init+0x2c>)
   18098:	781d      	ldrb	r5, [r3, #0]
   1809a:	b985      	cbnz	r5, 180be <syscalls_init+0x2a>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:327
        return;

    initialized = 1;
   1809c:	2601      	movs	r6, #1
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:329

    __builtin_memset(openfiles, 0, sizeof(openfiles));
   1809e:	4c09      	ldr	r4, [pc, #36]	; (180c4 <syscalls_init+0x30>)
   180a0:	2260      	movs	r2, #96	; 0x60
   180a2:	4629      	mov	r1, r5
   180a4:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:327
    initialized = 1;
   180a6:	701e      	strb	r6, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:329
    __builtin_memset(openfiles, 0, sizeof(openfiles));
   180a8:	f002 ff02 	bl	1aeb0 <memset>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:332

    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
        openfiles[slot].handle = -1;
   180ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   180b0:	6323      	str	r3, [r4, #48]	; 0x30
   180b2:	6423      	str	r3, [r4, #64]	; 0x40
   180b4:	6523      	str	r3, [r4, #80]	; 0x50
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:336

    openfiles[0].handle = MONITOR_STDIN;
    openfiles[1].handle = MONITOR_STDOUT;
    openfiles[2].handle = MONITOR_STDERR;
   180b6:	2302      	movs	r3, #2
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:334
    openfiles[0].handle = MONITOR_STDIN;
   180b8:	6025      	str	r5, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:335
    openfiles[1].handle = MONITOR_STDOUT;
   180ba:	6126      	str	r6, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:336
    openfiles[2].handle = MONITOR_STDERR;
   180bc:	6223      	str	r3, [r4, #32]
   180be:	bd70      	pop	{r4, r5, r6, pc}
   180c0:	2007c6fc 	.word	0x2007c6fc
   180c4:	2007c700 	.word	0x2007c700

000180c8 <_read>:
_read():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:371
    return set_errno (EIO);
#endif
}

int _read(int fd, char *ptr, int len)
{
   180c8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   180cc:	4689      	mov	r9, r1
   180ce:	4614      	mov	r4, r2
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:378
    int fh;
    int slot;
    //portTickType xBlockTime;
    int bytesUnRead = -1;

    if ((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   180d0:	f7ff ffac 	bl	1802c <remap_handle>
   180d4:	4605      	mov	r5, r0
   180d6:	f7ff ff83 	bl	17fe0 <findslot>
   180da:	2806      	cmp	r0, #6
   180dc:	d106      	bne.n	180ec <_read+0x24>
set_errno():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   180de:	f002 fa63 	bl	1a5a8 <__errno>
   180e2:	2309      	movs	r3, #9
   180e4:	6003      	str	r3, [r0, #0]
_read():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:439
        }
            break;
    }

    if (bytesUnRead < 0)
        return -1;
   180e6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   180ea:	e016      	b.n	1811a <_read+0x52>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:381
    if (openfiles[slot].flags & O_WRONLY)
   180ec:	4e1b      	ldr	r6, [pc, #108]	; (1815c <_read+0x94>)
   180ee:	0107      	lsls	r7, r0, #4
   180f0:	19f3      	adds	r3, r6, r7
   180f2:	689b      	ldr	r3, [r3, #8]
   180f4:	07db      	lsls	r3, r3, #31
   180f6:	d4f2      	bmi.n	180de <_read+0x16>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:390
    switch (fh)
   180f8:	2d00      	cmp	r5, #0
   180fa:	d011      	beq.n	18120 <_read+0x58>
   180fc:	db01      	blt.n	18102 <_read+0x3a>
   180fe:	2d05      	cmp	r5, #5
   18100:	ddf1      	ble.n	180e6 <_read+0x1e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:420
            if (openfiles[slot].fatfsFCB)
   18102:	19f3      	adds	r3, r6, r7
   18104:	68d8      	ldr	r0, [r3, #12]
   18106:	2800      	cmp	r0, #0
   18108:	d0ed      	beq.n	180e6 <_read+0x1e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:425
                if ((f = f_read(openfiles[slot].fatfsFCB, ptr, len,
   1810a:	ab01      	add	r3, sp, #4
   1810c:	4622      	mov	r2, r4
   1810e:	4649      	mov	r1, r9
   18110:	f7f9 fced 	bl	11aee <f_read>
   18114:	b1f8      	cbz	r0, 18156 <_read+0x8e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:427
                    return remap_fatfs_errors(f);
   18116:	f7ff ff38 	bl	17f8a <remap_fatfs_errors>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:444

    openfiles[slot].pos += len - bytesUnRead;

    return len - bytesUnRead;
}
   1811a:	b003      	add	sp, #12
   1811c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:394
            if (g_input_dev_fptr)
   18120:	4b0f      	ldr	r3, [pc, #60]	; (18160 <_read+0x98>)
   18122:	681a      	ldr	r2, [r3, #0]
   18124:	4698      	mov	r8, r3
   18126:	b132      	cbz	r2, 18136 <_read+0x6e>
   18128:	464d      	mov	r5, r9
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:396 (discriminator 1)
                for (i = 0; i < len; i++)
   1812a:	eba5 0309 	sub.w	r3, r5, r9
   1812e:	429c      	cmp	r4, r3
   18130:	dc0a      	bgt.n	18148 <_read+0x80>
   18132:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:402
            bytesUnRead = len - i;
   18136:	1b60      	subs	r0, r4, r5
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:438
    if (bytesUnRead < 0)
   18138:	2800      	cmp	r0, #0
   1813a:	dbd4      	blt.n	180e6 <_read+0x1e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:441
    openfiles[slot].pos += len - bytesUnRead;
   1813c:	443e      	add	r6, r7
   1813e:	6873      	ldr	r3, [r6, #4]
   18140:	1a20      	subs	r0, r4, r0
   18142:	4403      	add	r3, r0
   18144:	6073      	str	r3, [r6, #4]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:443
    return len - bytesUnRead;
   18146:	e7e8      	b.n	1811a <_read+0x52>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:398 (discriminator 3)
                    *ptr++ = g_input_dev_fptr(0);
   18148:	f8d8 3000 	ldr.w	r3, [r8]
   1814c:	2000      	movs	r0, #0
   1814e:	4798      	blx	r3
   18150:	f805 0b01 	strb.w	r0, [r5], #1
   18154:	e7e9      	b.n	1812a <_read+0x62>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:429
                bytesUnRead = len - fatfsBytesRead;
   18156:	9801      	ldr	r0, [sp, #4]
   18158:	1a20      	subs	r0, r4, r0
   1815a:	e7ed      	b.n	18138 <_read+0x70>
   1815c:	2007c700 	.word	0x2007c700
   18160:	2007c6f4 	.word	0x2007c6f4

00018164 <_lseek>:
_lseek():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:447

int _lseek(int fd, int ptr, int dir)
{
   18164:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   18166:	460e      	mov	r6, r1
   18168:	4617      	mov	r7, r2
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:452
    int fh;
    int slot;
    FRESULT f = FR_INVALID_OBJECT;

    if (((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   1816a:	f7ff ff5f 	bl	1802c <remap_handle>
   1816e:	f7ff ff37 	bl	17fe0 <findslot>
   18172:	2806      	cmp	r0, #6
   18174:	d004      	beq.n	18180 <_lseek+0x1c>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:453
            || !openfiles[slot].fatfsFCB)
   18176:	4c12      	ldr	r4, [pc, #72]	; (181c0 <_lseek+0x5c>)
   18178:	0105      	lsls	r5, r0, #4
   1817a:	1962      	adds	r2, r4, r5
   1817c:	68d0      	ldr	r0, [r2, #12]
   1817e:	b930      	cbnz	r0, 1818e <_lseek+0x2a>
set_errno():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   18180:	f002 fa12 	bl	1a5a8 <__errno>
   18184:	2309      	movs	r3, #9
   18186:	6003      	str	r3, [r0, #0]
_lseek():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:454
        return set_errno(EBADF);
   18188:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1818c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:457

#ifdef CFG_FATFS
    if (dir == SEEK_SET)
   1818e:	b93f      	cbnz	r7, 181a0 <_lseek+0x3c>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:458
        f = f_lseek(openfiles[slot].fatfsFCB, ptr);
   18190:	4631      	mov	r1, r6
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
    else if (dir == SEEK_CUR)
        f = f_lseek(openfiles[slot].fatfsFCB,
                openfiles[slot].fatfsFCB->fptr + ptr);
    else if (dir == SEEK_END)
        f = f_lseek(openfiles[slot].fatfsFCB,
   18192:	f7f9 fe91 	bl	11eb8 <f_lseek>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:466
                openfiles[slot].fatfsFCB->fsize + ptr);

    if (f != FR_OK)
   18196:	b170      	cbz	r0, 181b6 <_lseek+0x52>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:476
    ptr = ptr;
    dir = dir;
    f = f;
    return set_errno (EIO);
#endif
}
   18198:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:467
        return remap_fatfs_errors(f);
   1819c:	f7ff bef5 	b.w	17f8a <remap_fatfs_errors>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:459
    else if (dir == SEEK_CUR)
   181a0:	2f01      	cmp	r7, #1
   181a2:	d102      	bne.n	181aa <_lseek+0x46>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:460
        f = f_lseek(openfiles[slot].fatfsFCB,
   181a4:	6881      	ldr	r1, [r0, #8]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
        f = f_lseek(openfiles[slot].fatfsFCB,
   181a6:	4431      	add	r1, r6
   181a8:	e7f3      	b.n	18192 <_lseek+0x2e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:462
    else if (dir == SEEK_END)
   181aa:	2f02      	cmp	r7, #2
   181ac:	d101      	bne.n	181b2 <_lseek+0x4e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
        f = f_lseek(openfiles[slot].fatfsFCB,
   181ae:	68c1      	ldr	r1, [r0, #12]
   181b0:	e7f9      	b.n	181a6 <_lseek+0x42>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:450
    FRESULT f = FR_INVALID_OBJECT;
   181b2:	2009      	movs	r0, #9
   181b4:	e7f0      	b.n	18198 <_lseek+0x34>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:469
    return openfiles[slot].pos = openfiles[slot].fatfsFCB->fptr;
   181b6:	1963      	adds	r3, r4, r5
   181b8:	68da      	ldr	r2, [r3, #12]
   181ba:	6890      	ldr	r0, [r2, #8]
   181bc:	6058      	str	r0, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:476
}
   181be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   181c0:	2007c700 	.word	0x2007c700

000181c4 <_write>:
_write():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:479

int _write(int fd, const char *ptr, int len)
{
   181c4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   181c8:	460f      	mov	r7, r1
   181ca:	4614      	mov	r4, r2
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:486
    int fh;
    int slot;
    //portTickType xBlockTime;
    int bytesUnWritten = -1;

    if ((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   181cc:	f7ff ff2e 	bl	1802c <remap_handle>
   181d0:	4606      	mov	r6, r0
   181d2:	f7ff ff05 	bl	17fe0 <findslot>
   181d6:	2806      	cmp	r0, #6
   181d8:	4605      	mov	r5, r0
   181da:	d104      	bne.n	181e6 <_write+0x22>
set_errno():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   181dc:	f002 f9e4 	bl	1a5a8 <__errno>
   181e0:	2309      	movs	r3, #9
   181e2:	6003      	str	r3, [r0, #0]
   181e4:	e006      	b.n	181f4 <_write+0x30>
   181e6:	2e05      	cmp	r6, #5
   181e8:	d826      	bhi.n	18238 <_write+0x74>
   181ea:	2001      	movs	r0, #1
   181ec:	40b0      	lsls	r0, r6
   181ee:	f010 0f39 	tst.w	r0, #57	; 0x39
   181f2:	d002      	beq.n	181fa <_write+0x36>
_write():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:540

                bytesUnWritten = len - fatfsBytesWritten;
            }
            else
#endif
                return set_errno(EBADF);
   181f4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   181f8:	e02c      	b.n	18254 <_write+0x90>
   181fa:	f010 0f06 	tst.w	r0, #6
   181fe:	d01b      	beq.n	18238 <_write+0x74>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:506
            if (g_output_dev_fptr)
   18200:	4e17      	ldr	r6, [pc, #92]	; (18260 <_write+0x9c>)
   18202:	6830      	ldr	r0, [r6, #0]
   18204:	b130      	cbz	r0, 18214 <_write+0x50>
   18206:	46b8      	mov	r8, r7
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:508 (discriminator 1)
                for (i = 0; i < len; i++)
   18208:	eba8 0307 	sub.w	r3, r8, r7
   1820c:	429c      	cmp	r4, r3
   1820e:	dc0e      	bgt.n	1822e <_write+0x6a>
   18210:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:536
                bytesUnWritten = len - fatfsBytesWritten;
   18214:	1a20      	subs	r0, r4, r0
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:545
        }
            break;
    }

    if (bytesUnWritten == -1 || bytesUnWritten == len)
   18216:	1c43      	adds	r3, r0, #1
   18218:	d0ec      	beq.n	181f4 <_write+0x30>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:545 (discriminator 1)
   1821a:	42a0      	cmp	r0, r4
   1821c:	d0ea      	beq.n	181f4 <_write+0x30>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:548
        return -1;

    openfiles[slot].pos += len - bytesUnWritten;
   1821e:	4b11      	ldr	r3, [pc, #68]	; (18264 <_write+0xa0>)
   18220:	1a20      	subs	r0, r4, r0
   18222:	eb03 1305 	add.w	r3, r3, r5, lsl #4
   18226:	685a      	ldr	r2, [r3, #4]
   18228:	4402      	add	r2, r0
   1822a:	605a      	str	r2, [r3, #4]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:550

    return len - bytesUnWritten;
   1822c:	e012      	b.n	18254 <_write+0x90>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:510 (discriminator 3)
                    g_output_dev_fptr(*ptr++);
   1822e:	6833      	ldr	r3, [r6, #0]
   18230:	f818 0b01 	ldrb.w	r0, [r8], #1
   18234:	4798      	blx	r3
   18236:	e7e7      	b.n	18208 <_write+0x44>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:527
            if (openfiles[slot].fatfsFCB)
   18238:	4b0a      	ldr	r3, [pc, #40]	; (18264 <_write+0xa0>)
   1823a:	eb03 1305 	add.w	r3, r3, r5, lsl #4
   1823e:	68d8      	ldr	r0, [r3, #12]
   18240:	2800      	cmp	r0, #0
   18242:	d0cb      	beq.n	181dc <_write+0x18>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:532
                if ((f = f_write(openfiles[slot].fatfsFCB, ptr, len,
   18244:	ab01      	add	r3, sp, #4
   18246:	4622      	mov	r2, r4
   18248:	4639      	mov	r1, r7
   1824a:	f7f9 fd08 	bl	11c5e <f_write>
   1824e:	b120      	cbz	r0, 1825a <_write+0x96>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:534
                    return remap_fatfs_errors(f);
   18250:	f7ff fe9b 	bl	17f8a <remap_fatfs_errors>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:551
}
   18254:	b002      	add	sp, #8
   18256:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:536
                bytesUnWritten = len - fatfsBytesWritten;
   1825a:	9801      	ldr	r0, [sp, #4]
   1825c:	e7da      	b.n	18214 <_write+0x50>
   1825e:	bf00      	nop
   18260:	2007c6f8 	.word	0x2007c6f8
   18264:	2007c700 	.word	0x2007c700

00018268 <_open>:
_open():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:554

int _open(const char *path, int flags, ...)
{
   18268:	b40e      	push	{r1, r2, r3}
   1826a:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
   1826e:	4607      	mov	r7, r0
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:558
    int fh = 0;
    int slot;

    if ((slot = findslot(-1)) == MAX_OPEN_FILES)
   18270:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:554
{
   18274:	9d07      	ldr	r5, [sp, #28]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:558
    if ((slot = findslot(-1)) == MAX_OPEN_FILES)
   18276:	f7ff feb3 	bl	17fe0 <findslot>
   1827a:	2806      	cmp	r0, #6
   1827c:	4606      	mov	r6, r0
   1827e:	d109      	bne.n	18294 <_open+0x2c>
set_errno():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   18280:	f002 f992 	bl	1a5a8 <__errno>
   18284:	2317      	movs	r3, #23
   18286:	6003      	str	r3, [r0, #0]
_open():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:645
    {
        free(openfiles[slot].fatfsFCB);
        openfiles[slot].fatfsFCB = NULL;
    }

    return fh >= 0 ? (fh + FILE_HANDLE_OFFSET) : -1;
   18288:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:646
}
   1828c:	e8bd 41f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, lr}
   18290:	b003      	add	sp, #12
   18292:	4770      	bx	lr
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:561
    if (flags & O_APPEND)
   18294:	0728      	lsls	r0, r5, #28
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:564
    if (!__builtin_strcmp(path, "/dev/uart0"))
   18296:	4943      	ldr	r1, [pc, #268]	; (183a4 <_open+0x13c>)
   18298:	4638      	mov	r0, r7
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:562
        flags &= ~O_TRUNC;
   1829a:	bf48      	it	mi
   1829c:	f425 6580 	bicmi.w	r5, r5, #1024	; 0x400
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:564
    if (!__builtin_strcmp(path, "/dev/uart0"))
   182a0:	f004 fb19 	bl	1c8d6 <strcmp>
   182a4:	2800      	cmp	r0, #0
   182a6:	d076      	beq.n	18396 <_open+0x12e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:566
    else if (!__builtin_strcmp(path, "/dev/uart1"))
   182a8:	493f      	ldr	r1, [pc, #252]	; (183a8 <_open+0x140>)
   182aa:	4638      	mov	r0, r7
   182ac:	f004 fb13 	bl	1c8d6 <strcmp>
   182b0:	2800      	cmp	r0, #0
   182b2:	d072      	beq.n	1839a <_open+0x132>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:568
    else if (!__builtin_strcmp(path, "/dev/usb"))
   182b4:	493d      	ldr	r1, [pc, #244]	; (183ac <_open+0x144>)
   182b6:	4638      	mov	r0, r7
   182b8:	f004 fb0d 	bl	1c8d6 <strcmp>
   182bc:	2800      	cmp	r0, #0
   182be:	d06e      	beq.n	1839e <_open+0x136>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:586
        if (((flags & (O_CREAT | O_TRUNC)) == (O_CREAT | O_TRUNC))
   182c0:	f405 63c0 	and.w	r3, r5, #1536	; 0x600
   182c4:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
   182c8:	d101      	bne.n	182ce <_open+0x66>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:587
                && (flags & (O_RDWR | O_WRONLY)))
   182ca:	07a9      	lsls	r1, r5, #30
   182cc:	d10d      	bne.n	182ea <_open+0x82>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:589
        else if ((flags & (O_CREAT | O_EXCL)) == (O_CREAT | O_EXCL))
   182ce:	f405 6320 	and.w	r3, r5, #2560	; 0xa00
   182d2:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
   182d6:	d039      	beq.n	1834c <_open+0xe4>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:591
        else if ((flags & O_CREAT) == O_CREAT)
   182d8:	f415 7200 	ands.w	r2, r5, #512	; 0x200
   182dc:	d138      	bne.n	18350 <_open+0xe8>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:593
        else if ((flags == O_RDONLY) || (flags == O_WRONLY)
   182de:	2d02      	cmp	r5, #2
   182e0:	d904      	bls.n	182ec <_open+0x84>
set_errno():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   182e2:	f002 f961 	bl	1a5a8 <__errno>
   182e6:	2316      	movs	r3, #22
   182e8:	e7cd      	b.n	18286 <_open+0x1e>
_open():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:588
            fatfsFlags = FA_CREATE_ALWAYS;
   182ea:	2208      	movs	r2, #8
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:599
        if ((flags & O_ACCMODE) == O_RDONLY)
   182ec:	f015 0303 	ands.w	r3, r5, #3
   182f0:	d130      	bne.n	18354 <_open+0xec>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:600
            fatfsFlags |= FA_READ;
   182f2:	f042 0401 	orr.w	r4, r2, #1
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:609
        errno = EIO;
   182f6:	f002 f957 	bl	1a5a8 <__errno>
   182fa:	2305      	movs	r3, #5
   182fc:	6003      	str	r3, [r0, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:611
        if (!openfiles[slot].fatfsFCB)
   182fe:	4b2c      	ldr	r3, [pc, #176]	; (183b0 <_open+0x148>)
   18300:	eb03 1806 	add.w	r8, r3, r6, lsl #4
   18304:	f8d8 000c 	ldr.w	r0, [r8, #12]
   18308:	b9c0      	cbnz	r0, 1833c <_open+0xd4>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:612
            if ((openfiles[slot].fatfsFCB = __builtin_calloc(1, sizeof(FIL))))
   1830a:	f44f 7109 	mov.w	r1, #548	; 0x224
   1830e:	2001      	movs	r0, #1
   18310:	f002 f942 	bl	1a598 <calloc>
   18314:	f8c8 000c 	str.w	r0, [r8, #12]
   18318:	2800      	cmp	r0, #0
   1831a:	d0b5      	beq.n	18288 <_open+0x20>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:615
                                == FR_OK) ? (slot + MONITOR_FATFS) : -1) == -1)
   1831c:	b2e2      	uxtb	r2, r4
   1831e:	4639      	mov	r1, r7
   18320:	f7f9 fb4e 	bl	119c0 <f_open>
   18324:	b910      	cbnz	r0, 1832c <_open+0xc4>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:615 (discriminator 1)
   18326:	1db4      	adds	r4, r6, #6
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:613 (discriminator 1)
                if ((fh =
   18328:	1c62      	adds	r2, r4, #1
   1832a:	d11d      	bne.n	18368 <_open+0x100>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:616
                    remap_fatfs_errors(f);
   1832c:	f7ff fe2d 	bl	17f8a <remap_fatfs_errors>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:639
    if ((fh < 0) && openfiles[slot].fatfsFCB)
   18330:	4b1f      	ldr	r3, [pc, #124]	; (183b0 <_open+0x148>)
   18332:	eb03 1306 	add.w	r3, r3, r6, lsl #4
   18336:	68d8      	ldr	r0, [r3, #12]
   18338:	2800      	cmp	r0, #0
   1833a:	d0a5      	beq.n	18288 <_open+0x20>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:641
        free(openfiles[slot].fatfsFCB);
   1833c:	f002 fd5c 	bl	1adf8 <free>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:642
        openfiles[slot].fatfsFCB = NULL;
   18340:	4b1b      	ldr	r3, [pc, #108]	; (183b0 <_open+0x148>)
   18342:	eb03 1606 	add.w	r6, r3, r6, lsl #4
   18346:	2300      	movs	r3, #0
   18348:	60f3      	str	r3, [r6, #12]
   1834a:	e79d      	b.n	18288 <_open+0x20>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:590
            fatfsFlags = FA_OPEN_EXISTING;
   1834c:	2200      	movs	r2, #0
   1834e:	e7cd      	b.n	182ec <_open+0x84>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:592
            fatfsFlags = FA_OPEN_ALWAYS;
   18350:	2210      	movs	r2, #16
   18352:	e7cb      	b.n	182ec <_open+0x84>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:601
        else if ((flags & O_ACCMODE) == O_WRONLY)
   18354:	2b01      	cmp	r3, #1
   18356:	d102      	bne.n	1835e <_open+0xf6>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:602
            fatfsFlags |= FA_WRITE;
   18358:	f042 0402 	orr.w	r4, r2, #2
   1835c:	e7cb      	b.n	182f6 <_open+0x8e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:603
        else if ((flags & O_ACCMODE) == O_RDWR)
   1835e:	2b02      	cmp	r3, #2
   18360:	d1bf      	bne.n	182e2 <_open+0x7a>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:604
            fatfsFlags |= (FA_READ | FA_WRITE);
   18362:	f042 0403 	orr.w	r4, r2, #3
   18366:	e7c6      	b.n	182f6 <_open+0x8e>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:623
    if (fh >= 0)
   18368:	2c00      	cmp	r4, #0
   1836a:	dbe1      	blt.n	18330 <_open+0xc8>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:625
        openfiles[slot].handle = fh;
   1836c:	4a10      	ldr	r2, [pc, #64]	; (183b0 <_open+0x148>)
   1836e:	0133      	lsls	r3, r6, #4
   18370:	18d7      	adds	r7, r2, r3
   18372:	50d4      	str	r4, [r2, r3]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:626
        openfiles[slot].pos = 0;
   18374:	2300      	movs	r3, #0
   18376:	607b      	str	r3, [r7, #4]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:629
        if (flags & O_APPEND)
   18378:	072b      	lsls	r3, r5, #28
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:627
        openfiles[slot].flags = flags;
   1837a:	60bd      	str	r5, [r7, #8]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:629
        if (flags & O_APPEND)
   1837c:	d508      	bpl.n	18390 <_open+0x128>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:631
            if (f_lseek(openfiles[slot].fatfsFCB,
   1837e:	68f8      	ldr	r0, [r7, #12]
   18380:	68c1      	ldr	r1, [r0, #12]
   18382:	f7f9 fd99 	bl	11eb8 <f_lseek>
   18386:	2800      	cmp	r0, #0
   18388:	d1d2      	bne.n	18330 <_open+0xc8>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:635
                openfiles[slot].pos = openfiles[slot].fatfsFCB->fptr;
   1838a:	68fb      	ldr	r3, [r7, #12]
   1838c:	689b      	ldr	r3, [r3, #8]
   1838e:	607b      	str	r3, [r7, #4]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:645
    return fh >= 0 ? (fh + FILE_HANDLE_OFFSET) : -1;
   18390:	f104 0020 	add.w	r0, r4, #32
   18394:	e77a      	b.n	1828c <_open+0x24>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:565
        fh = MONITOR_UART0;
   18396:	2403      	movs	r4, #3
   18398:	e7e8      	b.n	1836c <_open+0x104>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:567
        fh = MONITOR_UART1;
   1839a:	2404      	movs	r4, #4
   1839c:	e7e6      	b.n	1836c <_open+0x104>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:569
        fh = MONITOR_USB;
   1839e:	2405      	movs	r4, #5
   183a0:	e7e4      	b.n	1836c <_open+0x104>
   183a2:	bf00      	nop
   183a4:	000220cc 	.word	0x000220cc
   183a8:	000220d7 	.word	0x000220d7
   183ac:	000220e2 	.word	0x000220e2
   183b0:	2007c700 	.word	0x2007c700

000183b4 <_close>:
_close():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:649

int _close(int fd)
{
   183b4:	b538      	push	{r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:652
    int slot;

    if ((slot = findslot(remap_handle(fd))) == MAX_OPEN_FILES)
   183b6:	f7ff fe39 	bl	1802c <remap_handle>
   183ba:	f7ff fe11 	bl	17fe0 <findslot>
   183be:	2806      	cmp	r0, #6
   183c0:	d106      	bne.n	183d0 <_close+0x1c>
set_errno():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   183c2:	f002 f8f1 	bl	1a5a8 <__errno>
   183c6:	2309      	movs	r3, #9
   183c8:	6003      	str	r3, [r0, #0]
_close():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:653
        return set_errno(EBADF);
   183ca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   183ce:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:655

    openfiles[slot].handle = -1;
   183d0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   183d4:	4b0b      	ldr	r3, [pc, #44]	; (18404 <_close+0x50>)
   183d6:	0100      	lsls	r0, r0, #4
   183d8:	181c      	adds	r4, r3, r0
   183da:	501a      	str	r2, [r3, r0]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:658

#ifdef CFG_FATFS
    if (openfiles[slot].fatfsFCB)
   183dc:	68e0      	ldr	r0, [r4, #12]
   183de:	b908      	cbnz	r0, 183e4 <_close+0x30>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:671
        if (f != FR_OK)
            return remap_fatfs_errors(f);
    }
#endif

    return 0;
   183e0:	2000      	movs	r0, #0
   183e2:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:662
        f = f_close(openfiles[slot].fatfsFCB);
   183e4:	f7f9 fd56 	bl	11e94 <f_close>
   183e8:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:663
        free(openfiles[slot].fatfsFCB);
   183ea:	68e0      	ldr	r0, [r4, #12]
   183ec:	f002 fd04 	bl	1adf8 <free>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:664
        openfiles[slot].fatfsFCB = NULL;
   183f0:	2300      	movs	r3, #0
   183f2:	60e3      	str	r3, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:666
        if (f != FR_OK)
   183f4:	2d00      	cmp	r5, #0
   183f6:	d0f3      	beq.n	183e0 <_close+0x2c>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:667
            return remap_fatfs_errors(f);
   183f8:	4628      	mov	r0, r5
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:672
}
   183fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:667
            return remap_fatfs_errors(f);
   183fe:	f7ff bdc4 	b.w	17f8a <remap_fatfs_errors>
   18402:	bf00      	nop
   18404:	2007c700 	.word	0x2007c700

00018408 <_fstat>:
_fstat():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:682
//  a good way to handle this, couldn't come up with anything.  For now, it
//  returns ENOSYS (not implemented).
//
int _fstat(int fd __attribute__ ((unused)),
        struct stat *st __attribute__ ((unused)))
{
   18408:	b508      	push	{r3, lr}
set_errno():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   1840a:	f002 f8cd 	bl	1a5a8 <__errno>
   1840e:	2358      	movs	r3, #88	; 0x58
   18410:	6003      	str	r3, [r0, #0]
_fstat():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:684
    return set_errno(ENOSYS);
}
   18412:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   18416:	bd08      	pop	{r3, pc}

00018418 <_isatty>:
_isatty():
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765
}
;

int _isatty(int fd)
{
    if (fd == (int)stdout || fd == (int)stdin || fd == (int)stderr) {
   18418:	4b07      	ldr	r3, [pc, #28]	; (18438 <_isatty+0x20>)
   1841a:	681b      	ldr	r3, [r3, #0]
   1841c:	689a      	ldr	r2, [r3, #8]
   1841e:	4282      	cmp	r2, r0
   18420:	d007      	beq.n	18432 <_isatty+0x1a>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765 (discriminator 1)
   18422:	685a      	ldr	r2, [r3, #4]
   18424:	4282      	cmp	r2, r0
   18426:	d004      	beq.n	18432 <_isatty+0x1a>
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765 (discriminator 2)
   18428:	68db      	ldr	r3, [r3, #12]
   1842a:	1a1b      	subs	r3, r3, r0
   1842c:	4258      	negs	r0, r3
   1842e:	4158      	adcs	r0, r3
   18430:	4770      	bx	lr
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:766
        return 1;
   18432:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:771
    }
    else {
        return 0;
    }
}
   18434:	4770      	bx	lr
   18436:	bf00      	nop
   18438:	2007c0e4 	.word	0x2007c0e4

0001843c <_sbrk>:
_sbrk():
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
extern "C" void * _sbrk(size_t req_bytes)
{
    char  *ret_mem = 0;

    /* Initialize Heap pointer to bottom of RAM region 1 */
    if (!g_next_heap_ptr) {
   1843c:	4b12      	ldr	r3, [pc, #72]	; (18488 <_sbrk+0x4c>)
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:53
{
   1843e:	b530      	push	{r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
    if (!g_next_heap_ptr) {
   18440:	681a      	ldr	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:53
{
   18442:	4601      	mov	r1, r0
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
    if (!g_next_heap_ptr) {
   18444:	b912      	cbnz	r2, 1844c <_sbrk+0x10>
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:58
        g_next_heap_ptr = (char*) ram_region_1_base;
   18446:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1844a:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:61
    }

    ret_mem = g_next_heap_ptr;    /* Save the pointer we will return */
   1844c:	6818      	ldr	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:73
     * @note
     * If next heap pointer is exactly at ram_region_1_end, then we've got perfectly aligned
     * ret_mem to the end of SRAM1. If it is greater, then we've been asked for too much so try
     * to return from SRAM2.
     */
    if ((unsigned)g_next_heap_ptr > ((unsigned)ram_region_1_end) &&
   1844e:	4a0f      	ldr	r2, [pc, #60]	; (1848c <_sbrk+0x50>)
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:62
    g_next_heap_ptr += req_bytes; /* Increase our pointer */
   18450:	1844      	adds	r4, r0, r1
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:73
    if ((unsigned)g_next_heap_ptr > ((unsigned)ram_region_1_end) &&
   18452:	4d0f      	ldr	r5, [pc, #60]	; (18490 <_sbrk+0x54>)
   18454:	4422      	add	r2, r4
   18456:	42aa      	cmp	r2, r5
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:81
        /* Defined by linker.  This is location after global memory space */
        extern char _pvHeapStart[];
        g_next_heap_ptr = _pvHeapStart;

        ret_mem = g_next_heap_ptr;
        g_next_heap_ptr += req_bytes;
   18458:	bf97      	itett	ls
   1845a:	4a0e      	ldrls	r2, [pc, #56]	; (18494 <_sbrk+0x58>)
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:62
    g_next_heap_ptr += req_bytes; /* Increase our pointer */
   1845c:	601c      	strhi	r4, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:81
        g_next_heap_ptr += req_bytes;
   1845e:	1888      	addls	r0, r1, r2
   18460:	6018      	strls	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:85
    }

    /* Did we exhaust the 2nd ram region too ? */
    if (g_next_heap_ptr >= ram_region_2_end) {
   18462:	681c      	ldr	r4, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:80
        ret_mem = g_next_heap_ptr;
   18464:	bf98      	it	ls
   18466:	4610      	movls	r0, r2
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:85
    if (g_next_heap_ptr >= ram_region_2_end) {
   18468:	4a0b      	ldr	r2, [pc, #44]	; (18498 <_sbrk+0x5c>)
   1846a:	4294      	cmp	r4, r2
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:86
        g_next_heap_ptr = (char*) ram_region_2_end;
   1846c:	bf82      	ittt	hi
   1846e:	3201      	addhi	r2, #1
   18470:	601a      	strhi	r2, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:87
        ret_mem = 0;
   18472:	2000      	movhi	r0, #0
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:93
    }

    /* Seems like newlib is calling us twice, one for real allocation and once more
     * with req_bytes set to zero, so do not increment counters for this case
     */
    if (req_bytes > 0) {
   18474:	b139      	cbz	r1, 18486 <_sbrk+0x4a>
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:94
        ++g_sbrk_calls;
   18476:	4a09      	ldr	r2, [pc, #36]	; (1849c <_sbrk+0x60>)
   18478:	6813      	ldr	r3, [r2, #0]
   1847a:	3301      	adds	r3, #1
   1847c:	6013      	str	r3, [r2, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:95
        g_last_sbrk_ptr = ret_mem;
   1847e:	4b08      	ldr	r3, [pc, #32]	; (184a0 <_sbrk+0x64>)
   18480:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:96
        g_last_sbrk_size = req_bytes;
   18482:	4b08      	ldr	r3, [pc, #32]	; (184a4 <_sbrk+0x68>)
   18484:	6019      	str	r1, [r3, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:100
    }

    return ret_mem;        /*  Return pointer to start of new heap area.   */
}
   18486:	bd30      	pop	{r4, r5, pc}
   18488:	2007c76c 	.word	0x2007c76c
   1848c:	efff7fff 	.word	0xefff7fff
   18490:	10073ffe 	.word	0x10073ffe
   18494:	2007d068 	.word	0x2007d068
   18498:	20083fff 	.word	0x20083fff
   1849c:	2007c764 	.word	0x2007c764
   184a0:	2007c768 	.word	0x2007c768
   184a4:	2007c770 	.word	0x2007c770

000184a8 <operator new(unsigned int)>:
_Znwj():
   184a8:	f002 bc9e 	b.w	1ade8 <malloc>

000184ac <operator delete(void*)>:
_ZdlPv():
   184ac:	f002 bca4 	b.w	1adf8 <free>

000184b0 <sys_get_mem_info>:
sys_get_mem_info():
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:110
void operator delete(void *p)       {   free(p);                }
void operator delete[](void *p)     {   free(p);                }
/** @} */

extern "C" sys_mem_t sys_get_mem_info()
{
   184b0:	b530      	push	{r4, r5, lr}
   184b2:	4604      	mov	r4, r0
   184b4:	b08b      	sub	sp, #44	; 0x2c
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:120

    // Heap pointer starts after global memory in SRAM2
    const unsigned int globalMem = (unsigned int) &_pvHeapStart - (unsigned int)ram_region_2_base;

    // Only print malloc() info if it has been used (arena is > 0)
    struct mallinfo info = mallinfo();
   184b6:	4668      	mov	r0, sp
   184b8:	f002 ff5e 	bl	1b378 <mallinfo>
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:117
    const unsigned int globalMem = (unsigned int) &_pvHeapStart - (unsigned int)ram_region_2_base;
   184bc:	4b21      	ldr	r3, [pc, #132]	; (18544 <sys_get_mem_info+0x94>)
   184be:	4d22      	ldr	r5, [pc, #136]	; (18548 <sys_get_mem_info+0x98>)
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:122

    meminfo.used_global = globalMem;
   184c0:	6023      	str	r3, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:123
    meminfo.avail_heap = info.fordblks;
   184c2:	9b08      	ldr	r3, [sp, #32]
   184c4:	4a21      	ldr	r2, [pc, #132]	; (1854c <sys_get_mem_info+0x9c>)
   184c6:	60a3      	str	r3, [r4, #8]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:124
    meminfo.used_heap = info.uordblks;
   184c8:	9b07      	ldr	r3, [sp, #28]
   184ca:	6063      	str	r3, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:130

    /* HACK: 20131214 (GCC 4.7.4)
     *  Current version newlib nano returns zero for all mallinfo struct members.
     *  So this is a hack to deduce the used heap.
     */
    if (0 == meminfo.used_heap) {
   184cc:	b953      	cbnz	r3, 184e4 <sys_get_mem_info+0x34>
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:131
        if ((unsigned) g_next_heap_ptr <= (unsigned)ram_region_1_end) {
   184ce:	6813      	ldr	r3, [r2, #0]
   184d0:	491f      	ldr	r1, [pc, #124]	; (18550 <sys_get_mem_info+0xa0>)
   184d2:	428b      	cmp	r3, r1
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:135
            meminfo.used_heap = (g_next_heap_ptr - ram_region_1_base);
        }
        else {
            meminfo.used_heap = one_sram_block_size + (g_next_heap_ptr - ram_region_2_base);
   184d4:	bf8a      	itet	hi
   184d6:	f103 4360 	addhi.w	r3, r3, #3758096384	; 0xe0000000
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:132
            meminfo.used_heap = (g_next_heap_ptr - ram_region_1_base);
   184da:	f103 4370 	addls.w	r3, r3, #4026531840	; 0xf0000000
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:135
            meminfo.used_heap = one_sram_block_size + (g_next_heap_ptr - ram_region_2_base);
   184de:	f5a3 23e8 	subhi.w	r3, r3, #475136	; 0x74000
   184e2:	6063      	str	r3, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:150
    }

    /* If next heap is still in SRAM1 then we have got all of SRAM2 and the remaining of the SRAM1
     * If next heap pointer is in SRAM2, then we've got whatever is left in SRAM 2
     */
    meminfo.avail_sys = 0;
   184e4:	2300      	movs	r3, #0
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:142
    if (meminfo.used_heap > (2 * one_sram_block_size)) {
   184e6:	6861      	ldr	r1, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:150
    meminfo.avail_sys = 0;
   184e8:	60e3      	str	r3, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:142
    if (meminfo.used_heap > (2 * one_sram_block_size)) {
   184ea:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:144
		meminfo.used_heap -= ( (ram_region_2_base - ram_region_1_base) - one_sram_block_size);
   184ee:	bf82      	ittt	hi
   184f0:	f101 4170 	addhi.w	r1, r1, #4026531840	; 0xf0000000
   184f4:	f5a1 21e8 	subhi.w	r1, r1, #475136	; 0x74000
   184f8:	6061      	strhi	r1, [r4, #4]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:151
    if ((unsigned) g_next_heap_ptr <= (unsigned)ram_region_1_end) {
   184fa:	6811      	ldr	r1, [r2, #0]
   184fc:	4a14      	ldr	r2, [pc, #80]	; (18550 <sys_get_mem_info+0xa0>)
   184fe:	4291      	cmp	r1, r2
   18500:	d813      	bhi.n	1852a <sys_get_mem_info+0x7a>
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:152
        meminfo.avail_sys = one_sram_block_size + (unsigned) (ram_region_1_end - g_next_heap_ptr) - globalMem;
   18502:	f1c5 5300 	rsb	r3, r5, #536870912	; 0x20000000
   18506:	1a52      	subs	r2, r2, r1
   18508:	f503 2304 	add.w	r3, r3, #540672	; 0x84000
   1850c:	441a      	add	r2, r3
   1850e:	60e2      	str	r2, [r4, #12]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:168
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
    meminfo.last_sbrk_size  = g_last_sbrk_size;
    meminfo.num_sbrk_calls  = g_sbrk_calls;

    return meminfo;
}
   18510:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:163
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
   18512:	4b10      	ldr	r3, [pc, #64]	; (18554 <sys_get_mem_info+0xa4>)
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:162
    meminfo.next_malloc_ptr = g_next_heap_ptr;
   18514:	61e1      	str	r1, [r4, #28]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:163
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
   18516:	681b      	ldr	r3, [r3, #0]
   18518:	61a3      	str	r3, [r4, #24]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:164
    meminfo.last_sbrk_size  = g_last_sbrk_size;
   1851a:	4b0f      	ldr	r3, [pc, #60]	; (18558 <sys_get_mem_info+0xa8>)
   1851c:	681b      	ldr	r3, [r3, #0]
   1851e:	6163      	str	r3, [r4, #20]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:165
    meminfo.num_sbrk_calls  = g_sbrk_calls;
   18520:	4b0e      	ldr	r3, [pc, #56]	; (1855c <sys_get_mem_info+0xac>)
   18522:	681b      	ldr	r3, [r3, #0]
   18524:	6123      	str	r3, [r4, #16]
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:168
}
   18526:	b00b      	add	sp, #44	; 0x2c
   18528:	bd30      	pop	{r4, r5, pc}
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:154
    else if ((unsigned)g_next_heap_ptr < (unsigned)ram_region_2_end){
   1852a:	4b0d      	ldr	r3, [pc, #52]	; (18560 <sys_get_mem_info+0xb0>)
   1852c:	4299      	cmp	r1, r3
   1852e:	d8ef      	bhi.n	18510 <sys_get_mem_info+0x60>
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:156
        int avail = (int) (ram_region_2_end - g_next_heap_ptr) - globalMem;
   18530:	f1c1 4380 	rsb	r3, r1, #1073741824	; 0x40000000
   18534:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
   18538:	1b5b      	subs	r3, r3, r5
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:157
        if (avail > 0) {
   1853a:	2b00      	cmp	r3, #0
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:158
            meminfo.avail_sys = avail;
   1853c:	bfc8      	it	gt
   1853e:	60e3      	strgt	r3, [r4, #12]
   18540:	e7e6      	b.n	18510 <sys_get_mem_info+0x60>
   18542:	bf00      	nop
   18544:	00001068 	.word	0x00001068
   18548:	2007d068 	.word	0x2007d068
   1854c:	2007c76c 	.word	0x2007c76c
   18550:	10008000 	.word	0x10008000
   18554:	2007c768 	.word	0x2007c768
   18558:	2007c770 	.word	0x2007c770
   1855c:	2007c764 	.word	0x2007c764
   18560:	20083fff 	.word	0x20083fff

00018564 <__aeabi_atexit>:
__aeabi_atexit():
/home/peter/SJSU-Dev/firmware/lib/newlib/memory.cpp:175
extern "C" int __aeabi_atexit(void *object,
		void (*destructor)(void *),
		void *dso_handle)
{
	return 0;
}
   18564:	2000      	movs	r0, #0
   18566:	4770      	bx	lr

00018568 <uart_display::init()>:
_ZN12uart_display4initEv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:281
{
public:	
	uart_display() : scheduler_task("uart_display", 1024, PRIORITY_LOW) {}
	bool init(void)
	{
	}
   18568:	4770      	bx	lr

0001856a <uart_display::~uart_display()>:
_ZN12uart_displayD2Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:275
class uart_display : public scheduler_task
   1856a:	4770      	bx	lr

0001856c <read_file::~read_file()>:
_ZN9read_fileD2Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:209
class read_file : public scheduler_task
   1856c:	4770      	bx	lr

0001856e <play_mp3::~play_mp3()>:
_ZN8play_mp3D2Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:172
class play_mp3 : public scheduler_task
   1856e:	4770      	bx	lr

00018570 <c_eint3_handler()>:
_Z15c_eint3_handlerv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:29
	gpio_intr_instance.handle_interrupt();
   18570:	4801      	ldr	r0, [pc, #4]	; (18578 <c_eint3_handler()+0x8>)
   18572:	f000 bb6f 	b.w	18c54 <LabGPIOInterrupts::handle_interrupt()>
   18576:	bf00      	nop
   18578:	2007c9b0 	.word	0x2007c9b0

0001857c <restart_isr()>:
_Z11restart_isrv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:304
	u0_dbg_printf("btn pressed %d\n", ++count);
}

void restart_isr(void)
{
	const enum actions action = restart;
   1857c:	2303      	movs	r3, #3
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:303
{
   1857e:	b507      	push	{r0, r1, r2, lr}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:305
	xQueueSend(next_prev_control, &action, 10);
   18580:	4807      	ldr	r0, [pc, #28]	; (185a0 <restart_isr()+0x24>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:304
	const enum actions action = restart;
   18582:	a902      	add	r1, sp, #8
   18584:	f801 3d01 	strb.w	r3, [r1, #-1]!
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:305
	xQueueSend(next_prev_control, &action, 10);
   18588:	220a      	movs	r2, #10
   1858a:	2300      	movs	r3, #0
   1858c:	6800      	ldr	r0, [r0, #0]
   1858e:	f7fe f927 	bl	167e0 <xQueueGenericSend>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:306
	u0_dbg_printf("restart\n");
   18592:	4804      	ldr	r0, [pc, #16]	; (185a4 <restart_isr()+0x28>)
   18594:	f7fd ff7f 	bl	16496 <u0_dbg_printf>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:307
}
   18598:	b003      	add	sp, #12
   1859a:	f85d fb04 	ldr.w	pc, [sp], #4
   1859e:	bf00      	nop
   185a0:	2007ccd4 	.word	0x2007ccd4
   185a4:	00022198 	.word	0x00022198

000185a8 <next_isr()>:
_Z8next_isrv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:328
	   
	u0_dbg_printf("pause\n");	
}

void next_isr(void)
{
   185a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:329
	const enum actions action = next;
   185aa:	2500      	movs	r5, #0
   185ac:	ac02      	add	r4, sp, #8
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:330
	u0_dbg_printf("next\n");
   185ae:	4807      	ldr	r0, [pc, #28]	; (185cc <next_isr()+0x24>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:329
	const enum actions action = next;
   185b0:	f804 5d01 	strb.w	r5, [r4, #-1]!
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:330
	u0_dbg_printf("next\n");
   185b4:	f7fd ff6f 	bl	16496 <u0_dbg_printf>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:331
	xQueueSend(next_prev_control, &action, 10);
   185b8:	4805      	ldr	r0, [pc, #20]	; (185d0 <next_isr()+0x28>)
   185ba:	462b      	mov	r3, r5
   185bc:	220a      	movs	r2, #10
   185be:	4621      	mov	r1, r4
   185c0:	6800      	ldr	r0, [r0, #0]
   185c2:	f7fe f90d 	bl	167e0 <xQueueGenericSend>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:332
}
   185c6:	b003      	add	sp, #12
   185c8:	bd30      	pop	{r4, r5, pc}
   185ca:	bf00      	nop
   185cc:	000221bf 	.word	0x000221bf
   185d0:	2007ccd4 	.word	0x2007ccd4

000185d4 <prev_isr()>:
_Z8prev_isrv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:336

void prev_isr(void)
{
	const enum actions action = prev;
   185d4:	2301      	movs	r3, #1
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:335
{
   185d6:	b513      	push	{r0, r1, r4, lr}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:337
	u0_dbg_printf("prev\n");
   185d8:	4807      	ldr	r0, [pc, #28]	; (185f8 <prev_isr()+0x24>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:336
	const enum actions action = prev;
   185da:	ac02      	add	r4, sp, #8
   185dc:	f804 3d01 	strb.w	r3, [r4, #-1]!
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:337
	u0_dbg_printf("prev\n");
   185e0:	f7fd ff59 	bl	16496 <u0_dbg_printf>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:338
	xQueueSend(next_prev_control, &action, 10);	
   185e4:	4805      	ldr	r0, [pc, #20]	; (185fc <prev_isr()+0x28>)
   185e6:	2300      	movs	r3, #0
   185e8:	220a      	movs	r2, #10
   185ea:	4621      	mov	r1, r4
   185ec:	6800      	ldr	r0, [r0, #0]
   185ee:	f7fe f8f7 	bl	167e0 <xQueueGenericSend>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:339
}
   185f2:	b002      	add	sp, #8
   185f4:	bd10      	pop	{r4, pc}
   185f6:	bf00      	nop
   185f8:	000221c5 	.word	0x000221c5
   185fc:	2007ccd4 	.word	0x2007ccd4

00018600 <pause_isr()>:
_Z9pause_isrv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:310
{
   18600:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:312
	scheduler_task *reader = scheduler_task::getTaskPtrByName("read_file");   	
   18602:	480a      	ldr	r0, [pc, #40]	; (1862c <pause_isr()+0x2c>)
   18604:	f7fd ff24 	bl	16450 <scheduler_task::getTaskPtrByName(char const*)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:314
	if(paused)
   18608:	4c09      	ldr	r4, [pc, #36]	; (18630 <pause_isr()+0x30>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:316
		vTaskResume(reader->getTaskHandle());
   1860a:	6900      	ldr	r0, [r0, #16]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:314
	if(paused)
   1860c:	7823      	ldrb	r3, [r4, #0]
   1860e:	b153      	cbz	r3, 18626 <pause_isr()+0x26>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:316
		vTaskResume(reader->getTaskHandle());
   18610:	f7fe fc24 	bl	16e5c <vTaskResume>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:322
	paused = !paused;
   18614:	7823      	ldrb	r3, [r4, #0]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:324
	u0_dbg_printf("pause\n");	
   18616:	4807      	ldr	r0, [pc, #28]	; (18634 <pause_isr()+0x34>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:322
	paused = !paused;
   18618:	f083 0301 	eor.w	r3, r3, #1
   1861c:	7023      	strb	r3, [r4, #0]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:325
}
   1861e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:324
	u0_dbg_printf("pause\n");	
   18622:	f7fd bf38 	b.w	16496 <u0_dbg_printf>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:320
		vTaskSuspend(reader->getTaskHandle());
   18626:	f7fe fe3b 	bl	172a0 <vTaskSuspend>
   1862a:	e7f3      	b.n	18614 <pause_isr()+0x14>
   1862c:	000221cb 	.word	0x000221cb
   18630:	2007c778 	.word	0x2007c778
   18634:	000221d5 	.word	0x000221d5

00018638 <play_mp3::~play_mp3()>:
_ZN8play_mp3D0Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:172
class play_mp3 : public scheduler_task
   18638:	b510      	push	{r4, lr}
   1863a:	4604      	mov	r4, r0
   1863c:	2134      	movs	r1, #52	; 0x34
   1863e:	f000 fcd2 	bl	18fe6 <operator delete(void*, unsigned int)>
   18642:	4620      	mov	r0, r4
   18644:	bd10      	pop	{r4, pc}

00018646 <read_file::~read_file()>:
_ZN9read_fileD0Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:209
class read_file : public scheduler_task
   18646:	b510      	push	{r4, lr}
   18648:	4604      	mov	r4, r0
   1864a:	f44f 7129 	mov.w	r1, #676	; 0x2a4
   1864e:	f000 fcca 	bl	18fe6 <operator delete(void*, unsigned int)>
   18652:	4620      	mov	r0, r4
   18654:	bd10      	pop	{r4, pc}

00018656 <uart_display::~uart_display()>:
_ZN12uart_displayD0Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:275
class uart_display : public scheduler_task
   18656:	b510      	push	{r4, lr}
   18658:	4604      	mov	r4, r0
   1865a:	2134      	movs	r1, #52	; 0x34
   1865c:	f000 fcc3 	bl	18fe6 <operator delete(void*, unsigned int)>
   18660:	4620      	mov	r0, r4
   18662:	bd10      	pop	{r4, pc}

00018664 <ssp0_exchange_byte>:
ssp0_exchange_byte():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:75
    pSSP->DR = out;
   18664:	4b03      	ldr	r3, [pc, #12]	; (18674 <ssp0_exchange_byte+0x10>)
   18666:	6098      	str	r0, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:76
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   18668:	68da      	ldr	r2, [r3, #12]
   1866a:	06d2      	lsls	r2, r2, #27
   1866c:	d4fc      	bmi.n	18668 <ssp0_exchange_byte+0x4>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    return pSSP->DR;
   1866e:	6898      	ldr	r0, [r3, #8]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:67
 * @returns     The byte received over SPI
 */
static inline char ssp0_exchange_byte(char out)
{
    return ssp_exchange_byte(LPC_SSP0, out);
}
   18670:	b2c0      	uxtb	r0, r0
   18672:	4770      	bx	lr
   18674:	40088000 	.word	0x40088000

00018678 <play_mp3::run(void*)>:
_ZN8play_mp33runEPv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:195
		if(xQueueReceive(buffer_ptr_queue, &size, portMAX_DELAY))
   18678:	4811      	ldr	r0, [pc, #68]	; (186c0 <play_mp3::run(void*)+0x48>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:192
	bool run(void* pvArgs)
   1867a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:195
		if(xQueueReceive(buffer_ptr_queue, &size, portMAX_DELAY))
   1867c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   18680:	2300      	movs	r3, #0
   18682:	4910      	ldr	r1, [pc, #64]	; (186c4 <play_mp3::run(void*)+0x4c>)
   18684:	6800      	ldr	r0, [r0, #0]
   18686:	f7fe f9b3 	bl	169f0 <xQueueGenericReceive>
   1868a:	b1b0      	cbz	r0, 186ba <play_mp3::run(void*)+0x42>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:197
			mp3_dcs.setLow();
   1868c:	480e      	ldr	r0, [pc, #56]	; (186c8 <play_mp3::run(void*)+0x50>)
   1868e:	f7fc f8d0 	bl	14832 <LabGPIO::setLow()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:198
			for(int i = 0; i < size; ++i)
   18692:	2400      	movs	r4, #0
   18694:	4e0b      	ldr	r6, [pc, #44]	; (186c4 <play_mp3::run(void*)+0x4c>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:200
				while(!mp3_dreq.getLevel());
   18696:	4f0d      	ldr	r7, [pc, #52]	; (186cc <play_mp3::run(void*)+0x54>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:201
				ssp0_exchange_byte(buffer[i]);
   18698:	4d0d      	ldr	r5, [pc, #52]	; (186d0 <play_mp3::run(void*)+0x58>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:198
			for(int i = 0; i < size; ++i)
   1869a:	6833      	ldr	r3, [r6, #0]
   1869c:	429c      	cmp	r4, r3
   1869e:	d209      	bcs.n	186b4 <play_mp3::run(void*)+0x3c>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:200
				while(!mp3_dreq.getLevel());
   186a0:	4638      	mov	r0, r7
   186a2:	f7fc f8cf 	bl	14844 <LabGPIO::getLevel()>
   186a6:	2800      	cmp	r0, #0
   186a8:	d0fa      	beq.n	186a0 <play_mp3::run(void*)+0x28>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:201
				ssp0_exchange_byte(buffer[i]);
   186aa:	5d28      	ldrb	r0, [r5, r4]
   186ac:	f7ff ffda 	bl	18664 <ssp0_exchange_byte>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:198
			for(int i = 0; i < size; ++i)
   186b0:	3401      	adds	r4, #1
   186b2:	e7f2      	b.n	1869a <play_mp3::run(void*)+0x22>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:203
			mp3_dcs.setHigh();
   186b4:	4804      	ldr	r0, [pc, #16]	; (186c8 <play_mp3::run(void*)+0x50>)
   186b6:	f7fc f8b4 	bl	14822 <LabGPIO::setHigh()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:206
	}
   186ba:	2001      	movs	r0, #1
   186bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   186be:	bf00      	nop
   186c0:	2007c9ac 	.word	0x2007c9ac
   186c4:	2007c774 	.word	0x2007c774
   186c8:	2007ccb0 	.word	0x2007ccb0
   186cc:	2007ccbc 	.word	0x2007ccbc
   186d0:	2007c7ac 	.word	0x2007c7ac

000186d4 <populate_tracks_dir()>:
_Z19populate_tracks_dirv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:83
{
   186d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   186d8:	b093      	sub	sp, #76	; 0x4c
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:90
	result = f_opendir(&dir,"1:tracks");
   186da:	4916      	ldr	r1, [pc, #88]	; (18734 <populate_tracks_dir()+0x60>)
   186dc:	a809      	add	r0, sp, #36	; 0x24
   186de:	f7f9 fc92 	bl	12006 <f_opendir>
   186e2:	2500      	movs	r5, #0
   186e4:	4e14      	ldr	r6, [pc, #80]	; (18738 <populate_tracks_dir()+0x64>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:99
			sprintf(song_list.names[count], "1:tracks/%s", finfo.fname);
   186e6:	f8df 8058 	ldr.w	r8, [pc, #88]	; 18740 <populate_tracks_dir()+0x6c>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:100
			u0_dbg_printf("%d - %s\n",count, song_list.names[count]);
   186ea:	4f14      	ldr	r7, [pc, #80]	; (1873c <populate_tracks_dir()+0x68>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:94
	while(FR_OK == f_readdir(&dir,&finfo))
   186ec:	a901      	add	r1, sp, #4
   186ee:	a809      	add	r0, sp, #36	; 0x24
   186f0:	fa5f f985 	uxtb.w	r9, r5
   186f4:	f7f9 fcd7 	bl	120a6 <f_readdir>
   186f8:	b998      	cbnz	r0, 18722 <populate_tracks_dir()+0x4e>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:97
		if(finfo.fname[0] != 0)
   186fa:	f89d 300d 	ldrb.w	r3, [sp, #13]
   186fe:	3501      	adds	r5, #1
   18700:	b17b      	cbz	r3, 18722 <populate_tracks_dir()+0x4e>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:99
			sprintf(song_list.names[count], "1:tracks/%s", finfo.fname);
   18702:	2432      	movs	r4, #50	; 0x32
   18704:	fb04 6409 	mla	r4, r4, r9, r6
   18708:	3404      	adds	r4, #4
   1870a:	f10d 020d 	add.w	r2, sp, #13
   1870e:	4641      	mov	r1, r8
   18710:	4620      	mov	r0, r4
   18712:	f004 f83f 	bl	1c794 <siprintf>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:100
			u0_dbg_printf("%d - %s\n",count, song_list.names[count]);
   18716:	4622      	mov	r2, r4
   18718:	4649      	mov	r1, r9
   1871a:	4638      	mov	r0, r7
   1871c:	f7fd febb 	bl	16496 <u0_dbg_printf>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:94
	while(FR_OK == f_readdir(&dir,&finfo))
   18720:	e7e4      	b.n	186ec <populate_tracks_dir()+0x18>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:112
	f_closedir(&dir);
   18722:	a809      	add	r0, sp, #36	; 0x24
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:109
	song_list.count = count;
   18724:	f886 9324 	strb.w	r9, [r6, #804]	; 0x324
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:112
	f_closedir(&dir);
   18728:	f7f9 fcb0 	bl	1208c <f_closedir>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:113
}
   1872c:	b013      	add	sp, #76	; 0x4c
   1872e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   18732:	bf00      	nop
   18734:	000221a1 	.word	0x000221a1
   18738:	2007cce4 	.word	0x2007cce4
   1873c:	000221b6 	.word	0x000221b6
   18740:	000221aa 	.word	0x000221aa

00018744 <write_mp3_register(unsigned char, unsigned char, unsigned char)>:
_Z18write_mp3_registerhhh():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:159
{
   18744:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   18746:	4607      	mov	r7, r0
   18748:	460e      	mov	r6, r1
   1874a:	4615      	mov	r5, r2
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:162
	mp3_cs.setLow();
   1874c:	4c0a      	ldr	r4, [pc, #40]	; (18778 <write_mp3_register(unsigned char, unsigned char, unsigned char)+0x34>)
   1874e:	4620      	mov	r0, r4
   18750:	f7fc f86f 	bl	14832 <LabGPIO::setLow()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:163
	ssp0_exchange_byte(write_op);
   18754:	2002      	movs	r0, #2
   18756:	f7ff ff85 	bl	18664 <ssp0_exchange_byte>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:164
	ssp0_exchange_byte(addr);
   1875a:	4638      	mov	r0, r7
   1875c:	f7ff ff82 	bl	18664 <ssp0_exchange_byte>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:165
	ssp0_exchange_byte(msb);
   18760:	4630      	mov	r0, r6
   18762:	f7ff ff7f 	bl	18664 <ssp0_exchange_byte>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:166
	ssp0_exchange_byte(lsb);
   18766:	4628      	mov	r0, r5
   18768:	f7ff ff7c 	bl	18664 <ssp0_exchange_byte>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:167
	mp3_cs.setHigh();
   1876c:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:168
}
   1876e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:167
	mp3_cs.setHigh();
   18772:	f7fc b856 	b.w	14822 <LabGPIO::setHigh()>
   18776:	bf00      	nop
   18778:	2007cca4 	.word	0x2007cca4

0001877c <play_mp3::init()>:
_ZN8play_mp34initEv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:177
	bool init(void)
   1877c:	b538      	push	{r3, r4, r5, lr}
ssp0_init():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:42
    lpc_pconp(pconp_ssp0, true);
   1877e:	2101      	movs	r1, #1
   18780:	2015      	movs	r0, #21
   18782:	f7f7 fe55 	bl	10430 <lpc_pconp>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:43
    lpc_pclk(pclk_ssp0, clkdiv_1);
   18786:	2101      	movs	r1, #1
   18788:	2015      	movs	r0, #21
   1878a:	f7f7 fe6b 	bl	10464 <lpc_pclk>
ssp_init():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:62
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   1878e:	2402      	movs	r4, #2
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:61
    pSSP->CR0 = 7;          // 8-bit mode
   18790:	2307      	movs	r3, #7
   18792:	4d12      	ldr	r5, [pc, #72]	; (187dc <play_mp3::init()+0x60>)
   18794:	602b      	str	r3, [r5, #0]
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:62
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   18796:	606c      	str	r4, [r5, #4]
ssp_set_max_clock():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:40
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   18798:	f7f7 ff32 	bl	10600 <sys_get_cpu_clock>
   1879c:	4b10      	ldr	r3, [pc, #64]	; (187e0 <play_mp3::init()+0x64>)
   1879e:	fbb0 f0f3 	udiv	r0, r0, r3
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:47
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   187a2:	fbb0 f2f4 	udiv	r2, r0, r4
   187a6:	2a01      	cmp	r2, #1
   187a8:	d904      	bls.n	187b4 <play_mp3::init()+0x38>
   187aa:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
   187ae:	d001      	beq.n	187b4 <play_mp3::init()+0x38>
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
        divider += 2;
   187b0:	3402      	adds	r4, #2
   187b2:	e7f6      	b.n	187a2 <play_mp3::init()+0x26>
_ZN8play_mp34initEv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:183
		write_mp3_register(0x00, 0x08, 0x00);
   187b4:	2200      	movs	r2, #0
ssp_set_max_clock():
/home/peter/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:52
    pSSP->CPSR = divider;
   187b6:	612c      	str	r4, [r5, #16]
_ZN8play_mp34initEv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:183
   187b8:	4610      	mov	r0, r2
   187ba:	2108      	movs	r1, #8
   187bc:	f7ff ffc2 	bl	18744 <write_mp3_register(unsigned char, unsigned char, unsigned char)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:186
		write_mp3_register(0x03, 0x60, 0x00);
   187c0:	2200      	movs	r2, #0
   187c2:	2160      	movs	r1, #96	; 0x60
   187c4:	2003      	movs	r0, #3
   187c6:	f7ff ffbd 	bl	18744 <write_mp3_register(unsigned char, unsigned char, unsigned char)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:187
		mp3_cs.setHigh();
   187ca:	4806      	ldr	r0, [pc, #24]	; (187e4 <play_mp3::init()+0x68>)
   187cc:	f7fc f829 	bl	14822 <LabGPIO::setHigh()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:188
		mp3_dcs.setHigh();
   187d0:	4805      	ldr	r0, [pc, #20]	; (187e8 <play_mp3::init()+0x6c>)
   187d2:	f7fc f826 	bl	14822 <LabGPIO::setHigh()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:190
	}
   187d6:	2001      	movs	r0, #1
   187d8:	bd38      	pop	{r3, r4, r5, pc}
   187da:	bf00      	nop
   187dc:	40088000 	.word	0x40088000
   187e0:	000f4240 	.word	0x000f4240
   187e4:	2007cca4 	.word	0x2007cca4
   187e8:	2007ccb0 	.word	0x2007ccb0

000187ec <read_file::open_song()>:
_ZN9read_file9open_songEv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:221
	bool open_song(void)
   187ec:	b538      	push	{r3, r4, r5, lr}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:223
		result = f_open(&song, song_list.currently_playing,
   187ee:	4c09      	ldr	r4, [pc, #36]	; (18814 <read_file::open_song()+0x28>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:221
	bool open_song(void)
   187f0:	4605      	mov	r5, r0
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:223
		result = f_open(&song, song_list.currently_playing,
   187f2:	6821      	ldr	r1, [r4, #0]
   187f4:	2201      	movs	r2, #1
   187f6:	3078      	adds	r0, #120	; 0x78
   187f8:	f7f9 f8e2 	bl	119c0 <f_open>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:227
			u0_dbg_printf("Opened %s\n", song_list.currently_playing);
   187fc:	6821      	ldr	r1, [r4, #0]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:223
		result = f_open(&song, song_list.currently_playing,
   187fe:	f885 0031 	strb.w	r0, [r5, #49]	; 0x31
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:225
		if(result == FR_OK)
   18802:	b920      	cbnz	r0, 1880e <read_file::open_song()+0x22>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:227
			u0_dbg_printf("Opened %s\n", song_list.currently_playing);
   18804:	4804      	ldr	r0, [pc, #16]	; (18818 <read_file::open_song()+0x2c>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:231
			u0_dbg_printf("Could not open %s\n", song_list.currently_playing);
   18806:	f7fd fe46 	bl	16496 <u0_dbg_printf>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:234
	}	
   1880a:	2001      	movs	r0, #1
   1880c:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:231
			u0_dbg_printf("Could not open %s\n", song_list.currently_playing);
   1880e:	4803      	ldr	r0, [pc, #12]	; (1881c <read_file::open_song()+0x30>)
   18810:	e7f9      	b.n	18806 <read_file::open_song()+0x1a>
   18812:	bf00      	nop
   18814:	2007cce4 	.word	0x2007cce4
   18818:	000221e1 	.word	0x000221e1
   1881c:	000221ec 	.word	0x000221ec

00018820 <read_file::run(void*)>:
_ZN9read_file3runEPv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:235
	bool run(void* pvArgs)
   18820:	b570      	push	{r4, r5, r6, lr}
   18822:	4604      	mov	r4, r0
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:238
		if(xQueueReceive(next_prev_control, &action, 10))
   18824:	4e2e      	ldr	r6, [pc, #184]	; (188e0 <read_file::run(void*)+0xc0>)
   18826:	482f      	ldr	r0, [pc, #188]	; (188e4 <read_file::run(void*)+0xc4>)
   18828:	2300      	movs	r3, #0
   1882a:	220a      	movs	r2, #10
   1882c:	4631      	mov	r1, r6
   1882e:	6800      	ldr	r0, [r0, #0]
   18830:	f7fe f8de 	bl	169f0 <xQueueGenericReceive>
   18834:	f104 0578 	add.w	r5, r4, #120	; 0x78
   18838:	b318      	cbz	r0, 18882 <read_file::run(void*)+0x62>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:240
			switch(action)
   1883a:	7836      	ldrb	r6, [r6, #0]
   1883c:	2e01      	cmp	r6, #1
   1883e:	d033      	beq.n	188a8 <read_file::run(void*)+0x88>
   18840:	d305      	bcc.n	1884e <read_file::run(void*)+0x2e>
   18842:	2e03      	cmp	r6, #3
   18844:	d048      	beq.n	188d8 <read_file::run(void*)+0xb8>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:257
				u0_dbg_printf("How\n");
   18846:	4828      	ldr	r0, [pc, #160]	; (188e8 <read_file::run(void*)+0xc8>)
   18848:	f7fd fe25 	bl	16496 <u0_dbg_printf>
   1884c:	e019      	b.n	18882 <read_file::run(void*)+0x62>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:243
				f_close(&song);
   1884e:	4628      	mov	r0, r5
   18850:	f7f9 fb20 	bl	11e94 <f_close>
_ZN8SongList4nextEv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:61
		current_index = (current_index + 1) % count;
   18854:	4a25      	ldr	r2, [pc, #148]	; (188ec <read_file::run(void*)+0xcc>)
   18856:	f892 3325 	ldrb.w	r3, [r2, #805]	; 0x325
   1885a:	f892 0324 	ldrb.w	r0, [r2, #804]	; 0x324
   1885e:	1c59      	adds	r1, r3, #1
   18860:	fb91 f3f0 	sdiv	r3, r1, r0
   18864:	fb00 1313 	mls	r3, r0, r3, r1
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:62
		currently_playing = names[current_index];
   18868:	2132      	movs	r1, #50	; 0x32
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:61
		current_index = (current_index + 1) % count;
   1886a:	f882 3325 	strb.w	r3, [r2, #805]	; 0x325
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:62
		currently_playing = names[current_index];
   1886e:	fb01 2303 	mla	r3, r1, r3, r2
   18872:	3304      	adds	r3, #4
   18874:	6013      	str	r3, [r2, #0]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:63
		changed = true;
   18876:	2301      	movs	r3, #1
   18878:	f882 3326 	strb.w	r3, [r2, #806]	; 0x326
_ZN9read_file3runEPv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:250
				open_song();
   1887c:	4620      	mov	r0, r4
   1887e:	f7ff ffb5 	bl	187ec <read_file::open_song()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:261
		f_read(&song, buffer, 512, &read);
   18882:	f504 7427 	add.w	r4, r4, #668	; 0x29c
   18886:	4623      	mov	r3, r4
   18888:	f44f 7200 	mov.w	r2, #512	; 0x200
   1888c:	4918      	ldr	r1, [pc, #96]	; (188f0 <read_file::run(void*)+0xd0>)
   1888e:	4628      	mov	r0, r5
   18890:	f7f9 f92d 	bl	11aee <f_read>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:262
		xQueueSend(buffer_ptr_queue, &read, portMAX_DELAY);
   18894:	4817      	ldr	r0, [pc, #92]	; (188f4 <read_file::run(void*)+0xd4>)
   18896:	2300      	movs	r3, #0
   18898:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1889c:	4621      	mov	r1, r4
   1889e:	6800      	ldr	r0, [r0, #0]
   188a0:	f7fd ff9e 	bl	167e0 <xQueueGenericSend>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:264
	}
   188a4:	2001      	movs	r0, #1
   188a6:	bd70      	pop	{r4, r5, r6, pc}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:248
				f_close(&song);
   188a8:	4628      	mov	r0, r5
   188aa:	f7f9 faf3 	bl	11e94 <f_close>
_ZN8SongList4prevEv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:67
		current_index = (current_index - 1) % count;
   188ae:	4b0f      	ldr	r3, [pc, #60]	; (188ec <read_file::run(void*)+0xcc>)
   188b0:	f893 2325 	ldrb.w	r2, [r3, #805]	; 0x325
   188b4:	f893 0324 	ldrb.w	r0, [r3, #804]	; 0x324
   188b8:	1e51      	subs	r1, r2, #1
   188ba:	fb91 f2f0 	sdiv	r2, r1, r0
   188be:	fb00 1212 	mls	r2, r0, r2, r1
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:68
		currently_playing = names[current_index];
   188c2:	2132      	movs	r1, #50	; 0x32
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:67
		current_index = (current_index - 1) % count;
   188c4:	f883 2325 	strb.w	r2, [r3, #805]	; 0x325
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:68
		currently_playing = names[current_index];
   188c8:	b2d2      	uxtb	r2, r2
   188ca:	fb01 3202 	mla	r2, r1, r2, r3
   188ce:	3204      	adds	r2, #4
   188d0:	601a      	str	r2, [r3, #0]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:69
		changed = true;
   188d2:	f883 6326 	strb.w	r6, [r3, #806]	; 0x326
   188d6:	e7d1      	b.n	1887c <read_file::run(void*)+0x5c>
_ZN9read_file3runEPv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:253
				f_close(&song);
   188d8:	4628      	mov	r0, r5
   188da:	f7f9 fadb 	bl	11e94 <f_close>
   188de:	e7cd      	b.n	1887c <read_file::run(void*)+0x5c>
   188e0:	2007c0dc 	.word	0x2007c0dc
   188e4:	2007ccd4 	.word	0x2007ccd4
   188e8:	000221dc 	.word	0x000221dc
   188ec:	2007cce4 	.word	0x2007cce4
   188f0:	2007c7ac 	.word	0x2007c7ac
   188f4:	2007c9ac 	.word	0x2007c9ac

000188f8 <read_file::init()>:
_ZN9read_file4initEv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:216
	bool init(void)
   188f8:	b508      	push	{r3, lr}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:218
		open_song();
   188fa:	f7ff ff77 	bl	187ec <read_file::open_song()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:220
	}
   188fe:	2001      	movs	r0, #1
   18900:	bd08      	pop	{r3, pc}
   18902:	Address 0x0000000000018902 is out of bounds.


00018904 <SingletonTemplate<Uart3>::getInstance()>:
_ZN17SingletonTemplateI5Uart3E11getInstanceEv():
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   18904:	b538      	push	{r3, r4, r5, lr}
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   18906:	4c06      	ldr	r4, [pc, #24]	; (18920 <SingletonTemplate<Uart3>::getInstance()+0x1c>)
   18908:	6823      	ldr	r3, [r4, #0]
   1890a:	b933      	cbnz	r3, 1891a <SingletonTemplate<Uart3>::getInstance()+0x16>
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1890c:	202c      	movs	r0, #44	; 0x2c
   1890e:	f7ff fdcb 	bl	184a8 <operator new(unsigned int)>
   18912:	4605      	mov	r5, r0
   18914:	f7fc fca0 	bl	15258 <Uart3::Uart3()>
   18918:	6025      	str	r5, [r4, #0]
/home/peter/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1891a:	6820      	ldr	r0, [r4, #0]
   1891c:	bd38      	pop	{r3, r4, r5, pc}
   1891e:	bf00      	nop
   18920:	2007c508 	.word	0x2007c508

00018924 <mp3_init()>:
_Z8mp3_initv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:343

/* Init code */
void mp3_init(void)
{
   18924:	b573      	push	{r0, r1, r4, r5, r6, lr}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:349
	/* UART Init */
	Uart3& u3 = Uart3::getInstance();
	u3.init(9600);

	/* GPIO Init */
	mp3_cs.setAsOutput();
   18926:	4e27      	ldr	r6, [pc, #156]	; (189c4 <mp3_init()+0xa0>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:345
	Uart3& u3 = Uart3::getInstance();
   18928:	f7ff ffec 	bl	18904 <SingletonTemplate<Uart3>::getInstance()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:350
	mp3_dcs.setAsOutput();
   1892c:	4d26      	ldr	r5, [pc, #152]	; (189c8 <mp3_init()+0xa4>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:346
	u3.init(9600);
   1892e:	2340      	movs	r3, #64	; 0x40
   18930:	2220      	movs	r2, #32
   18932:	f44f 5116 	mov.w	r1, #9600	; 0x2580
   18936:	f7fc fc6f 	bl	15218 <Uart3::init(unsigned int, int, int)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:351
	mp3_reset.setAsOutput();
   1893a:	4c24      	ldr	r4, [pc, #144]	; (189cc <mp3_init()+0xa8>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:349
	mp3_cs.setAsOutput();
   1893c:	4630      	mov	r0, r6
   1893e:	f7fb ff68 	bl	14812 <LabGPIO::setAsOutput()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:350
	mp3_dcs.setAsOutput();
   18942:	4628      	mov	r0, r5
   18944:	f7fb ff65 	bl	14812 <LabGPIO::setAsOutput()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:351
	mp3_reset.setAsOutput();
   18948:	4620      	mov	r0, r4
   1894a:	f7fb ff62 	bl	14812 <LabGPIO::setAsOutput()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:352
	mp3_cs.setHigh();
   1894e:	4630      	mov	r0, r6
   18950:	f7fb ff67 	bl	14822 <LabGPIO::setHigh()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:353
	mp3_dcs.setHigh();
   18954:	4628      	mov	r0, r5
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:361
	mp3_reset.setAsOutput();
	mp3_reset.setHigh();

	/* Button interrupts */
	gpio_intr_instance.init();
	gpio_intr_instance.attachInterruptHandler(2, 0, prev_isr, rising_edge);
   18956:	2500      	movs	r5, #0
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:353
	mp3_dcs.setHigh();
   18958:	f7fb ff63 	bl	14822 <LabGPIO::setHigh()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:354
	mp3_reset.setHigh();
   1895c:	4620      	mov	r0, r4
   1895e:	f7fb ff60 	bl	14822 <LabGPIO::setHigh()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:355
	mp3_dreq.setAsInput();  
   18962:	481b      	ldr	r0, [pc, #108]	; (189d0 <mp3_init()+0xac>)
   18964:	f7fb ff4c 	bl	14800 <LabGPIO::setAsInput()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:356
	mp3_reset.setAsOutput();
   18968:	4620      	mov	r0, r4
   1896a:	f7fb ff52 	bl	14812 <LabGPIO::setAsOutput()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:357
	mp3_reset.setHigh();
   1896e:	4620      	mov	r0, r4
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:360
	gpio_intr_instance.init();
   18970:	4c18      	ldr	r4, [pc, #96]	; (189d4 <mp3_init()+0xb0>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:357
	mp3_reset.setHigh();
   18972:	f7fb ff56 	bl	14822 <LabGPIO::setHigh()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:360
	gpio_intr_instance.init();
   18976:	4620      	mov	r0, r4
   18978:	f000 f94e 	bl	18c18 <LabGPIOInterrupts::init()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:361
	gpio_intr_instance.attachInterruptHandler(2, 0, prev_isr, rising_edge);
   1897c:	462a      	mov	r2, r5
   1897e:	9500      	str	r5, [sp, #0]
   18980:	4b15      	ldr	r3, [pc, #84]	; (189d8 <mp3_init()+0xb4>)
   18982:	2102      	movs	r1, #2
   18984:	4620      	mov	r0, r4
   18986:	f000 f9e5 	bl	18d54 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:362
	gpio_intr_instance.attachInterruptHandler(2, 1, pause_isr, rising_edge);
   1898a:	9500      	str	r5, [sp, #0]
   1898c:	4b13      	ldr	r3, [pc, #76]	; (189dc <mp3_init()+0xb8>)
   1898e:	2201      	movs	r2, #1
   18990:	2102      	movs	r1, #2
   18992:	4620      	mov	r0, r4
   18994:	f000 f9de 	bl	18d54 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:363
	gpio_intr_instance.attachInterruptHandler(2, 2, restart_isr, rising_edge);
   18998:	2202      	movs	r2, #2
   1899a:	9500      	str	r5, [sp, #0]
   1899c:	4611      	mov	r1, r2
   1899e:	4b10      	ldr	r3, [pc, #64]	; (189e0 <mp3_init()+0xbc>)
   189a0:	4620      	mov	r0, r4
   189a2:	f000 f9d7 	bl	18d54 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:364
	gpio_intr_instance.attachInterruptHandler(2, 3, next_isr, rising_edge);
   189a6:	9500      	str	r5, [sp, #0]
   189a8:	4b0e      	ldr	r3, [pc, #56]	; (189e4 <mp3_init()+0xc0>)
   189aa:	2203      	movs	r2, #3
   189ac:	2102      	movs	r1, #2
   189ae:	4620      	mov	r0, r4
   189b0:	f000 f9d0 	bl	18d54 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:365
	isr_register(EINT3_IRQn, c_eint3_handler);
   189b4:	2015      	movs	r0, #21
   189b6:	490c      	ldr	r1, [pc, #48]	; (189e8 <mp3_init()+0xc4>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:366
}
   189b8:	b002      	add	sp, #8
   189ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:365
	isr_register(EINT3_IRQn, c_eint3_handler);
   189be:	f7f7 bc3d 	b.w	1023c <isr_register>
   189c2:	bf00      	nop
   189c4:	2007cca4 	.word	0x2007cca4
   189c8:	2007ccb0 	.word	0x2007ccb0
   189cc:	2007ccc8 	.word	0x2007ccc8
   189d0:	2007ccbc 	.word	0x2007ccbc
   189d4:	2007c9b0 	.word	0x2007c9b0
   189d8:	000185d5 	.word	0x000185d5
   189dc:	00018601 	.word	0x00018601
   189e0:	0001857d 	.word	0x0001857d
   189e4:	000185a9 	.word	0x000185a9
   189e8:	00018571 	.word	0x00018571

000189ec <main>:
main():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:369

int main(int argc, char const *argv[])
{
   189ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:370
	populate_tracks_dir();
   189ee:	f7ff fe71 	bl	186d4 <populate_tracks_dir()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:371
	mp3_init();
   189f2:	f7ff ff97 	bl	18924 <mp3_init()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:373
			
	scheduler_add_task(new play_mp3());
   189f6:	2034      	movs	r0, #52	; 0x34
   189f8:	f7ff fd56 	bl	184a8 <operator new(unsigned int)>
_ZN8play_mp3C4Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:175
	play_mp3() : scheduler_task("play_mp3", 1024, PRIORITY_MEDIUM) {}
   189fc:	2400      	movs	r4, #0
main():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:373
	scheduler_add_task(new play_mp3());
   189fe:	4605      	mov	r5, r0
_ZN8play_mp3C4Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:175
	play_mp3() : scheduler_task("play_mp3", 1024, PRIORITY_MEDIUM) {}
   18a00:	f44f 6280 	mov.w	r2, #1024	; 0x400
   18a04:	491a      	ldr	r1, [pc, #104]	; (18a70 <main+0x84>)
   18a06:	9400      	str	r4, [sp, #0]
   18a08:	2302      	movs	r3, #2
   18a0a:	f7fd fd07 	bl	1641c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   18a0e:	4b19      	ldr	r3, [pc, #100]	; (18a74 <main+0x88>)
main():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:373
	scheduler_add_task(new play_mp3());
   18a10:	4628      	mov	r0, r5
_ZN8play_mp3C4Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:175
	play_mp3() : scheduler_task("play_mp3", 1024, PRIORITY_MEDIUM) {}
   18a12:	602b      	str	r3, [r5, #0]
main():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:373
	scheduler_add_task(new play_mp3());
   18a14:	f7fd fcd4 	bl	163c0 <scheduler_add_task(scheduler_task*)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:374
	scheduler_add_task(new read_file());
   18a18:	f44f 7029 	mov.w	r0, #676	; 0x2a4
   18a1c:	f7ff fd44 	bl	184a8 <operator new(unsigned int)>
   18a20:	4605      	mov	r5, r0
_ZN9read_fileC4Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:212
	read_file() : scheduler_task("read_file", 1024, PRIORITY_LOW)
   18a22:	f44f 6280 	mov.w	r2, #1024	; 0x400
   18a26:	4914      	ldr	r1, [pc, #80]	; (18a78 <main+0x8c>)
   18a28:	9400      	str	r4, [sp, #0]
   18a2a:	2301      	movs	r3, #1
   18a2c:	f7fd fcf6 	bl	1641c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   18a30:	4b12      	ldr	r3, [pc, #72]	; (18a7c <main+0x90>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:214
		done = false;
   18a32:	f885 42a0 	strb.w	r4, [r5, #672]	; 0x2a0
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:212
	read_file() : scheduler_task("read_file", 1024, PRIORITY_LOW)
   18a36:	602b      	str	r3, [r5, #0]
main():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:374
	scheduler_add_task(new read_file());
   18a38:	4628      	mov	r0, r5
   18a3a:	f7fd fcc1 	bl	163c0 <scheduler_add_task(scheduler_task*)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:375
	scheduler_add_task(new uart_display());
   18a3e:	2034      	movs	r0, #52	; 0x34
   18a40:	f7ff fd32 	bl	184a8 <operator new(unsigned int)>
   18a44:	4605      	mov	r5, r0
_ZN12uart_displayC4Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:278
	uart_display() : scheduler_task("uart_display", 1024, PRIORITY_LOW) {}
   18a46:	f44f 6280 	mov.w	r2, #1024	; 0x400
   18a4a:	490d      	ldr	r1, [pc, #52]	; (18a80 <main+0x94>)
   18a4c:	9400      	str	r4, [sp, #0]
   18a4e:	2301      	movs	r3, #1
   18a50:	f7fd fce4 	bl	1641c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   18a54:	4b0b      	ldr	r3, [pc, #44]	; (18a84 <main+0x98>)
main():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:375
	scheduler_add_task(new uart_display());
   18a56:	4628      	mov	r0, r5
_ZN12uart_displayC4Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:278
	uart_display() : scheduler_task("uart_display", 1024, PRIORITY_LOW) {}
   18a58:	602b      	str	r3, [r5, #0]
main():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:375
	scheduler_add_task(new uart_display());
   18a5a:	f7fd fcb1 	bl	163c0 <scheduler_add_task(scheduler_task*)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:378
	//scheduler_add_task(new terminalTask(PRIORITY_HIGH));
	
	scheduler_start();
   18a5e:	4620      	mov	r0, r4
   18a60:	4621      	mov	r1, r4
   18a62:	f7fd fcbb 	bl	163dc <scheduler_start(bool, bool)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:380
	return -1; 
}
   18a66:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   18a6a:	b003      	add	sp, #12
   18a6c:	bd30      	pop	{r4, r5, pc}
   18a6e:	bf00      	nop
   18a70:	000221ff 	.word	0x000221ff
   18a74:	00022140 	.word	0x00022140
   18a78:	000221cb 	.word	0x000221cb
   18a7c:	00022160 	.word	0x00022160
   18a80:	00022208 	.word	0x00022208
   18a84:	00022180 	.word	0x00022180

00018a88 <uart_display::run(void*)>:
_ZN12uart_display3runEPv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:282
	bool run(void* pvArgs)
   18a88:	b510      	push	{r4, lr}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:284
		if(song_list.changed)
   18a8a:	4c09      	ldr	r4, [pc, #36]	; (18ab0 <uart_display::run(void*)+0x28>)
   18a8c:	f894 3326 	ldrb.w	r3, [r4, #806]	; 0x326
   18a90:	b143      	cbz	r3, 18aa4 <uart_display::run(void*)+0x1c>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:286
			Uart3& u3 = Uart3::getInstance();
   18a92:	f7ff ff37 	bl	18904 <SingletonTemplate<Uart3>::getInstance()>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:287
			u3.printf("%s\n", song_list.currently_playing);
   18a96:	6822      	ldr	r2, [r4, #0]
   18a98:	4906      	ldr	r1, [pc, #24]	; (18ab4 <uart_display::run(void*)+0x2c>)
   18a9a:	f7fc fa65 	bl	14f68 <CharDev::printf(char const*, ...)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:288
			song_list.changed = false;
   18a9e:	2300      	movs	r3, #0
   18aa0:	f884 3326 	strb.w	r3, [r4, #806]	; 0x326
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:290
		vTaskDelay(100);
   18aa4:	2064      	movs	r0, #100	; 0x64
   18aa6:	f7fe fb87 	bl	171b8 <vTaskDelay>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:292
	}		
   18aaa:	2001      	movs	r0, #1
   18aac:	bd10      	pop	{r4, pc}
   18aae:	bf00      	nop
   18ab0:	2007cce4 	.word	0x2007cce4
   18ab4:	000221bb 	.word	0x000221bb

00018ab8 <_GLOBAL__sub_I_mp3_dcs>:
_GLOBAL__sub_I_mp3_dcs():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:13
LabGPIO mp3_dcs(0, 0);
   18ab8:	2200      	movs	r2, #0
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:380
}
   18aba:	b570      	push	{r4, r5, r6, lr}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:13
LabGPIO mp3_dcs(0, 0);
   18abc:	4e42      	ldr	r6, [pc, #264]	; (18bc8 <_GLOBAL__sub_I_mp3_dcs+0x110>)
   18abe:	4c43      	ldr	r4, [pc, #268]	; (18bcc <_GLOBAL__sub_I_mp3_dcs+0x114>)
   18ac0:	4d43      	ldr	r5, [pc, #268]	; (18bd0 <_GLOBAL__sub_I_mp3_dcs+0x118>)
   18ac2:	4611      	mov	r1, r2
   18ac4:	4630      	mov	r0, r6
   18ac6:	f7fb fe7f 	bl	147c8 <LabGPIO::LabGPIO(unsigned char, unsigned char)>
   18aca:	4630      	mov	r0, r6
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:14
LabGPIO mp3_cs(0, 1);
   18acc:	4e41      	ldr	r6, [pc, #260]	; (18bd4 <_GLOBAL__sub_I_mp3_dcs+0x11c>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:13
LabGPIO mp3_dcs(0, 0);
   18ace:	4629      	mov	r1, r5
   18ad0:	4622      	mov	r2, r4
   18ad2:	f7ff fd47 	bl	18564 <__aeabi_atexit>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:14
LabGPIO mp3_cs(0, 1);
   18ad6:	2201      	movs	r2, #1
   18ad8:	2100      	movs	r1, #0
   18ada:	4630      	mov	r0, r6
   18adc:	f7fb fe74 	bl	147c8 <LabGPIO::LabGPIO(unsigned char, unsigned char)>
   18ae0:	4630      	mov	r0, r6
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:15
LabGPIO mp3_reset(2, 7);
   18ae2:	4e3d      	ldr	r6, [pc, #244]	; (18bd8 <_GLOBAL__sub_I_mp3_dcs+0x120>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:14
LabGPIO mp3_cs(0, 1);
   18ae4:	4629      	mov	r1, r5
   18ae6:	4622      	mov	r2, r4
   18ae8:	f7ff fd3c 	bl	18564 <__aeabi_atexit>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:15
LabGPIO mp3_reset(2, 7);
   18aec:	2207      	movs	r2, #7
   18aee:	2102      	movs	r1, #2
   18af0:	4630      	mov	r0, r6
   18af2:	f7fb fe69 	bl	147c8 <LabGPIO::LabGPIO(unsigned char, unsigned char)>
   18af6:	4630      	mov	r0, r6
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:16
LabGPIO mp3_dreq(2, 6);
   18af8:	4e38      	ldr	r6, [pc, #224]	; (18bdc <_GLOBAL__sub_I_mp3_dcs+0x124>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:15
LabGPIO mp3_reset(2, 7);
   18afa:	4629      	mov	r1, r5
   18afc:	4622      	mov	r2, r4
   18afe:	f7ff fd31 	bl	18564 <__aeabi_atexit>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:16
LabGPIO mp3_dreq(2, 6);
   18b02:	2206      	movs	r2, #6
   18b04:	2102      	movs	r1, #2
   18b06:	4630      	mov	r0, r6
   18b08:	f7fb fe5e 	bl	147c8 <LabGPIO::LabGPIO(unsigned char, unsigned char)>
   18b0c:	4630      	mov	r0, r6
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:17
LabGPIO on_board_1(1, 10);
   18b0e:	4e34      	ldr	r6, [pc, #208]	; (18be0 <_GLOBAL__sub_I_mp3_dcs+0x128>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:16
LabGPIO mp3_dreq(2, 6);
   18b10:	4629      	mov	r1, r5
   18b12:	4622      	mov	r2, r4
   18b14:	f7ff fd26 	bl	18564 <__aeabi_atexit>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:17
LabGPIO on_board_1(1, 10);
   18b18:	220a      	movs	r2, #10
   18b1a:	2101      	movs	r1, #1
   18b1c:	4630      	mov	r0, r6
   18b1e:	f7fb fe53 	bl	147c8 <LabGPIO::LabGPIO(unsigned char, unsigned char)>
   18b22:	4630      	mov	r0, r6
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:20
LabGPIO btn_0(2, 0);
   18b24:	4e2f      	ldr	r6, [pc, #188]	; (18be4 <_GLOBAL__sub_I_mp3_dcs+0x12c>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:17
LabGPIO on_board_1(1, 10);
   18b26:	4629      	mov	r1, r5
   18b28:	4622      	mov	r2, r4
   18b2a:	f7ff fd1b 	bl	18564 <__aeabi_atexit>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:20
LabGPIO btn_0(2, 0);
   18b2e:	2200      	movs	r2, #0
   18b30:	2102      	movs	r1, #2
   18b32:	4630      	mov	r0, r6
   18b34:	f7fb fe48 	bl	147c8 <LabGPIO::LabGPIO(unsigned char, unsigned char)>
   18b38:	4630      	mov	r0, r6
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:21
LabGPIO btn_1(2, 1);
   18b3a:	4e2b      	ldr	r6, [pc, #172]	; (18be8 <_GLOBAL__sub_I_mp3_dcs+0x130>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:20
LabGPIO btn_0(2, 0);
   18b3c:	4629      	mov	r1, r5
   18b3e:	4622      	mov	r2, r4
   18b40:	f7ff fd10 	bl	18564 <__aeabi_atexit>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:21
LabGPIO btn_1(2, 1);
   18b44:	2201      	movs	r2, #1
   18b46:	2102      	movs	r1, #2
   18b48:	4630      	mov	r0, r6
   18b4a:	f7fb fe3d 	bl	147c8 <LabGPIO::LabGPIO(unsigned char, unsigned char)>
   18b4e:	4629      	mov	r1, r5
   18b50:	4622      	mov	r2, r4
   18b52:	4630      	mov	r0, r6
   18b54:	f7ff fd06 	bl	18564 <__aeabi_atexit>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:22
LabGPIO btn_2(2, 2);
   18b58:	2202      	movs	r2, #2
   18b5a:	4e24      	ldr	r6, [pc, #144]	; (18bec <_GLOBAL__sub_I_mp3_dcs+0x134>)
   18b5c:	4611      	mov	r1, r2
   18b5e:	4630      	mov	r0, r6
   18b60:	f7fb fe32 	bl	147c8 <LabGPIO::LabGPIO(unsigned char, unsigned char)>
   18b64:	4630      	mov	r0, r6
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:23
LabGPIO btn_3(2, 3);
   18b66:	4e22      	ldr	r6, [pc, #136]	; (18bf0 <_GLOBAL__sub_I_mp3_dcs+0x138>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:22
LabGPIO btn_2(2, 2);
   18b68:	4629      	mov	r1, r5
   18b6a:	4622      	mov	r2, r4
   18b6c:	f7ff fcfa 	bl	18564 <__aeabi_atexit>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:23
LabGPIO btn_3(2, 3);
   18b70:	2203      	movs	r2, #3
   18b72:	2102      	movs	r1, #2
   18b74:	4630      	mov	r0, r6
   18b76:	f7fb fe27 	bl	147c8 <LabGPIO::LabGPIO(unsigned char, unsigned char)>
   18b7a:	4629      	mov	r1, r5
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:26
LabGPIOInterrupts gpio_intr_instance;
   18b7c:	4d1d      	ldr	r5, [pc, #116]	; (18bf4 <_GLOBAL__sub_I_mp3_dcs+0x13c>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:23
LabGPIO btn_3(2, 3);
   18b7e:	4622      	mov	r2, r4
   18b80:	4630      	mov	r0, r6
   18b82:	f7ff fcef 	bl	18564 <__aeabi_atexit>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:26
LabGPIOInterrupts gpio_intr_instance;
   18b86:	4628      	mov	r0, r5
   18b88:	f000 f83e 	bl	18c08 <LabGPIOInterrupts::LabGPIOInterrupts()>
   18b8c:	4622      	mov	r2, r4
   18b8e:	491a      	ldr	r1, [pc, #104]	; (18bf8 <_GLOBAL__sub_I_mp3_dcs+0x140>)
   18b90:	4628      	mov	r0, r5
   18b92:	f7ff fce7 	bl	18564 <__aeabi_atexit>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:45
QueueHandle_t buffer_ptr_queue = xQueueCreate(1, sizeof(uint32_t));
   18b96:	2200      	movs	r2, #0
   18b98:	2104      	movs	r1, #4
   18b9a:	2001      	movs	r0, #1
   18b9c:	f7fd fdfe 	bl	1679c <xQueueGenericCreate>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:46
QueueHandle_t next_prev_control = xQueueCreate(1, sizeof(enum actions));
   18ba0:	2101      	movs	r1, #1
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:45
QueueHandle_t buffer_ptr_queue = xQueueCreate(1, sizeof(uint32_t));
   18ba2:	4b16      	ldr	r3, [pc, #88]	; (18bfc <_GLOBAL__sub_I_mp3_dcs+0x144>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:46
QueueHandle_t next_prev_control = xQueueCreate(1, sizeof(enum actions));
   18ba4:	2200      	movs	r2, #0
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:45
QueueHandle_t buffer_ptr_queue = xQueueCreate(1, sizeof(uint32_t));
   18ba6:	6018      	str	r0, [r3, #0]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:46
QueueHandle_t next_prev_control = xQueueCreate(1, sizeof(enum actions));
   18ba8:	4608      	mov	r0, r1
   18baa:	f7fd fdf7 	bl	1679c <xQueueGenericCreate>
_ZN8SongListC4Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:54
		count = 0;
   18bae:	2200      	movs	r2, #0
_GLOBAL__sub_I_mp3_dcs():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:46
QueueHandle_t next_prev_control = xQueueCreate(1, sizeof(enum actions));
   18bb0:	4b13      	ldr	r3, [pc, #76]	; (18c00 <_GLOBAL__sub_I_mp3_dcs+0x148>)
   18bb2:	6018      	str	r0, [r3, #0]
_ZN8SongListC4Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:54
		count = 0;
   18bb4:	4b13      	ldr	r3, [pc, #76]	; (18c04 <_GLOBAL__sub_I_mp3_dcs+0x14c>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:56
		currently_playing = names[current_index];
   18bb6:	1d19      	adds	r1, r3, #4
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:54
		count = 0;
   18bb8:	f883 2324 	strb.w	r2, [r3, #804]	; 0x324
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:55
		current_index = 0;
   18bbc:	f883 2325 	strb.w	r2, [r3, #805]	; 0x325
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:56
		currently_playing = names[current_index];
   18bc0:	6019      	str	r1, [r3, #0]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/main.cpp:57
		changed = false;
   18bc2:	f883 2326 	strb.w	r2, [r3, #806]	; 0x326
   18bc6:	bd70      	pop	{r4, r5, r6, pc}
   18bc8:	2007ccb0 	.word	0x2007ccb0
   18bcc:	2007c6f0 	.word	0x2007c6f0
   18bd0:	00014859 	.word	0x00014859
   18bd4:	2007cca4 	.word	0x2007cca4
   18bd8:	2007ccc8 	.word	0x2007ccc8
   18bdc:	2007ccbc 	.word	0x2007ccbc
   18be0:	2007ccd8 	.word	0x2007ccd8
   18be4:	2007c77c 	.word	0x2007c77c
   18be8:	2007c788 	.word	0x2007c788
   18bec:	2007c794 	.word	0x2007c794
   18bf0:	2007c7a0 	.word	0x2007c7a0
   18bf4:	2007c9b0 	.word	0x2007c9b0
   18bf8:	00018ccd 	.word	0x00018ccd
   18bfc:	2007c9ac 	.word	0x2007c9ac
   18c00:	2007ccd4 	.word	0x2007ccd4
   18c04:	2007cce4 	.word	0x2007cce4

00018c08 <LabGPIOInterrupts::LabGPIOInterrupts()>:
_ZNSt12_Vector_baseIP10isr_vectorSaIS1_EE12_Vector_implC4Ev():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/stl_vector.h:87
	pointer _M_start;
	pointer _M_finish;
	pointer _M_end_of_storage;

	_Vector_impl()
	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
   18c08:	2200      	movs	r2, #0
   18c0a:	f8c0 22e8 	str.w	r2, [r0, #744]	; 0x2e8
   18c0e:	f8c0 22ec 	str.w	r2, [r0, #748]	; 0x2ec
   18c12:	f8c0 22f0 	str.w	r2, [r0, #752]	; 0x2f0
_ZN17LabGPIOInterruptsC2Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:3
#include "LabGPIOInterrupts.hpp"

LabGPIOInterrupts::LabGPIOInterrupts() {}
   18c16:	4770      	bx	lr

00018c18 <LabGPIOInterrupts::init()>:
_ZN17LabGPIOInterrupts4initEv():
/home/peter/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   18c18:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
   18c1c:	4b01      	ldr	r3, [pc, #4]	; (18c24 <LabGPIOInterrupts::init()+0xc>)
   18c1e:	601a      	str	r2, [r3, #0]
   18c20:	4770      	bx	lr
   18c22:	bf00      	nop
   18c24:	e000e100 	.word	0xe000e100

00018c28 <handle_isr(isr_vector*, unsigned long)>:
_Z10handle_isrP10isr_vectorm():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:64
{
	return ((reg & (1 << pin)) != 0);
}

void handle_isr(isr_vector* vec, uint32_t r)
{
   18c28:	b538      	push	{r3, r4, r5, lr}
_Z9check_pinmm():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:60
	return ((reg & (1 << pin)) != 0);
   18c2a:	2401      	movs	r4, #1
   18c2c:	6883      	ldr	r3, [r0, #8]
   18c2e:	409c      	lsls	r4, r3
_Z10handle_isrP10isr_vectorm():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:68
	const uint32_t port = vec->port;
	const uint32_t pin = vec->pin;
	
	if(check_pin(pin, r))
   18c30:	4221      	tst	r1, r4
   18c32:	d00b      	beq.n	18c4c <handle_isr(isr_vector*, unsigned long)+0x24>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:65
	const uint32_t port = vec->port;
   18c34:	7945      	ldrb	r5, [r0, #5]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:70
	{
		vec->isr();
   18c36:	6803      	ldr	r3, [r0, #0]
   18c38:	4798      	blx	r3
   18c3a:	4b05      	ldr	r3, [pc, #20]	; (18c50 <handle_isr(isr_vector*, unsigned long)+0x28>)
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:72

		if(port == 0)
   18c3c:	b91d      	cbnz	r5, 18c46 <handle_isr(isr_vector*, unsigned long)+0x1e>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:74
		{
			LPC_GPIOINT->IO0IntClr |= (1 << pin);
   18c3e:	68da      	ldr	r2, [r3, #12]
   18c40:	4314      	orrs	r4, r2
   18c42:	60dc      	str	r4, [r3, #12]
   18c44:	bd38      	pop	{r3, r4, r5, pc}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:78
		}
		else
		{
			LPC_GPIOINT->IO2IntClr |= (1 << pin);
   18c46:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   18c48:	4314      	orrs	r4, r2
   18c4a:	62dc      	str	r4, [r3, #44]	; 0x2c
   18c4c:	bd38      	pop	{r3, r4, r5, pc}
   18c4e:	bf00      	nop
   18c50:	40028080 	.word	0x40028080

00018c54 <LabGPIOInterrupts::handle_interrupt()>:
_ZN17LabGPIOInterrupts16handle_interruptEv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:84
		}
	}
}

void LabGPIOInterrupts::handle_interrupt(void)
{
   18c54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   18c58:	4606      	mov	r6, r0
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:91
	const uint32_t falling_pins0 = LPC_GPIOINT->IO0IntStatF;
	const uint32_t rising_pins2  = LPC_GPIOINT->IO2IntStatR;
	const uint32_t falling_pins2 = LPC_GPIOINT->IO2IntStatF;

	// Iterate through the registered ISRS
	for (uint32_t i = 0; i < registered.size(); ++i)
   18c5a:	2500      	movs	r5, #0
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:85
	const uint32_t rising_pins0  = LPC_GPIOINT->IO0IntStatR;
   18c5c:	4b1a      	ldr	r3, [pc, #104]	; (18cc8 <LabGPIOInterrupts::handle_interrupt()+0x74>)
   18c5e:	685f      	ldr	r7, [r3, #4]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:86
	const uint32_t falling_pins0 = LPC_GPIOINT->IO0IntStatF;
   18c60:	f8d3 8008 	ldr.w	r8, [r3, #8]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:87
	const uint32_t rising_pins2  = LPC_GPIOINT->IO2IntStatR;
   18c64:	f8d3 9024 	ldr.w	r9, [r3, #36]	; 0x24
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:88
	const uint32_t falling_pins2 = LPC_GPIOINT->IO2IntStatF;
   18c68:	f8d3 a028 	ldr.w	sl, [r3, #40]	; 0x28
_ZNKSt6vectorIP10isr_vectorSaIS1_EE4sizeEv():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/stl_vector.h:656 (discriminator 1)

      // [23.2.4.2] capacity
      /**  Returns the number of elements in the %vector.  */
      size_type
      size() const _GLIBCXX_NOEXCEPT
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   18c6c:	f8d6 22e8 	ldr.w	r2, [r6, #744]	; 0x2e8
   18c70:	f8d6 32ec 	ldr.w	r3, [r6, #748]	; 0x2ec
   18c74:	1a9b      	subs	r3, r3, r2
_ZN17LabGPIOInterrupts16handle_interruptEv():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:91 (discriminator 1)
	for (uint32_t i = 0; i < registered.size(); ++i)
   18c76:	ebb5 0fa3 	cmp.w	r5, r3, asr #2
   18c7a:	d222      	bcs.n	18cc2 <LabGPIOInterrupts::handle_interrupt()+0x6e>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:93
	{
		isr_vector* x = registered[i];
   18c7c:	f852 4025 	ldr.w	r4, [r2, r5, lsl #2]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:95
		
		if(x->port == 0)
   18c80:	7962      	ldrb	r2, [r4, #5]
   18c82:	7923      	ldrb	r3, [r4, #4]
   18c84:	b982      	cbnz	r2, 18ca8 <LabGPIOInterrupts::handle_interrupt()+0x54>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:97
		{
			if(x->condition == rising_edge || x->condition == both_edges)
   18c86:	f013 0ffd 	tst.w	r3, #253	; 0xfd
   18c8a:	d103      	bne.n	18c94 <LabGPIOInterrupts::handle_interrupt()+0x40>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:99
			{
				handle_isr(x, rising_pins0);
   18c8c:	4639      	mov	r1, r7
   18c8e:	4620      	mov	r0, r4
   18c90:	f7ff ffca 	bl	18c28 <handle_isr(isr_vector*, unsigned long)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:101
			}
			if(x->condition == falling_edge || x->condition == both_edges)
   18c94:	7923      	ldrb	r3, [r4, #4]
   18c96:	3b01      	subs	r3, #1
   18c98:	2b01      	cmp	r3, #1
   18c9a:	d803      	bhi.n	18ca4 <LabGPIOInterrupts::handle_interrupt()+0x50>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:103
			{				
				handle_isr(x, falling_pins0);
   18c9c:	4641      	mov	r1, r8
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:114
			{
				handle_isr(x, rising_pins2);
			}
			if(x->condition == falling_edge || x->condition == both_edges)
			{				
				handle_isr(x, falling_pins2);
   18c9e:	4620      	mov	r0, r4
   18ca0:	f7ff ffc2 	bl	18c28 <handle_isr(isr_vector*, unsigned long)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:91 (discriminator 2)
	for (uint32_t i = 0; i < registered.size(); ++i)
   18ca4:	3501      	adds	r5, #1
   18ca6:	e7e1      	b.n	18c6c <LabGPIOInterrupts::handle_interrupt()+0x18>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:108
			if(x->condition == rising_edge || x->condition == both_edges)
   18ca8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
   18cac:	d103      	bne.n	18cb6 <LabGPIOInterrupts::handle_interrupt()+0x62>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:110
				handle_isr(x, rising_pins2);
   18cae:	4649      	mov	r1, r9
   18cb0:	4620      	mov	r0, r4
   18cb2:	f7ff ffb9 	bl	18c28 <handle_isr(isr_vector*, unsigned long)>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:112
			if(x->condition == falling_edge || x->condition == both_edges)
   18cb6:	7923      	ldrb	r3, [r4, #4]
   18cb8:	3b01      	subs	r3, #1
   18cba:	2b01      	cmp	r3, #1
   18cbc:	d8f2      	bhi.n	18ca4 <LabGPIOInterrupts::handle_interrupt()+0x50>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:114
				handle_isr(x, falling_pins2);
   18cbe:	4651      	mov	r1, sl
   18cc0:	e7ed      	b.n	18c9e <LabGPIOInterrupts::handle_interrupt()+0x4a>
   18cc2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   18cc6:	bf00      	nop
   18cc8:	40028080 	.word	0x40028080

00018ccc <LabGPIOInterrupts::~LabGPIOInterrupts()>:
_ZN17LabGPIOInterruptsD2Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:120
			}		   			
		}
	}
}

LabGPIOInterrupts::~LabGPIOInterrupts() {}
   18ccc:	b510      	push	{r4, lr}
   18cce:	4604      	mov	r4, r0
_ZNSt12_Vector_baseIP10isr_vectorSaIS1_EED4Ev():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/stl_vector.h:160
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
   18cd0:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
_ZNSt12_Vector_baseIP10isr_vectorSaIS1_EE13_M_deallocateEPS1_j():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/stl_vector.h:177
	if (__p)
   18cd4:	b108      	cbz	r0, 18cda <LabGPIOInterrupts::~LabGPIOInterrupts()+0xe>
_ZN9__gnu_cxx13new_allocatorIP10isr_vectorE10deallocateEPS2_j():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/ext/new_allocator.h:110
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(pointer __p, size_type)
      { ::operator delete(__p); }
   18cd6:	f7ff fbe9 	bl	184ac <operator delete(void*)>
_ZN17LabGPIOInterruptsD2Ev():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:120
   18cda:	4620      	mov	r0, r4
   18cdc:	bd10      	pop	{r4, pc}

00018cde <void std::vector<isr_vector*, std::allocator<isr_vector*> >::_M_emplace_back_aux<isr_vector*>(isr_vector*&&)>:
_ZNSt6vectorIP10isr_vectorSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/vector.tcc:407

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      void
      vector<_Tp, _Alloc>::
   18cde:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
_ZNKSt6vectorIP10isr_vectorSaIS1_EE4sizeEv():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/stl_vector.h:656
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   18ce2:	e890 0018 	ldmia.w	r0, {r3, r4}
   18ce6:	1ae4      	subs	r4, r4, r3
_ZSt3maxIjERKT_S2_S2_():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/stl_algobase.h:225
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return  __a < __b ? __b : __a;
      if (__a < __b)
	return __b;
   18ce8:	10a4      	asrs	r4, r4, #2
   18cea:	bf14      	ite	ne
   18cec:	4623      	movne	r3, r4
   18cee:	2301      	moveq	r3, #1
_ZNKSt6vectorIP10isr_vectorSaIS1_EE12_M_check_lenEjPKc():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/stl_vector.h:1426
      {
	if (max_size() - size() < __n)
	  __throw_length_error(__N(__s));

	const size_type __len = size() + std::max(size(), __n);
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   18cf0:	18e4      	adds	r4, r4, r3
_ZNSt6vectorIP10isr_vectorSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/vector.tcc:407
   18cf2:	4606      	mov	r6, r0
   18cf4:	4689      	mov	r9, r1
_ZNKSt6vectorIP10isr_vectorSaIS1_EE12_M_check_lenEjPKc():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/stl_vector.h:1426
   18cf6:	d202      	bcs.n	18cfe <void std::vector<isr_vector*, std::allocator<isr_vector*> >::_M_emplace_back_aux<isr_vector*>(isr_vector*&&)+0x20>
   18cf8:	f1b4 4f80 	cmp.w	r4, #1073741824	; 0x40000000
   18cfc:	d325      	bcc.n	18d4a <void std::vector<isr_vector*, std::allocator<isr_vector*> >::_M_emplace_back_aux<isr_vector*>(isr_vector*&&)+0x6c>
   18cfe:	f06f 4440 	mvn.w	r4, #3221225472	; 0xc0000000
_ZN9__gnu_cxx13new_allocatorIP10isr_vectorE8allocateEjPKv():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/ext/new_allocator.h:104
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
   18d02:	00a0      	lsls	r0, r4, #2
   18d04:	f7ff fbd0 	bl	184a8 <operator new(unsigned int)>
   18d08:	4607      	mov	r7, r0
_ZNKSt6vectorIP10isr_vectorSaIS1_EE4sizeEv():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/stl_vector.h:656
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   18d0a:	f8d6 8000 	ldr.w	r8, [r6]
   18d0e:	6875      	ldr	r5, [r6, #4]
   18d10:	f8d9 3000 	ldr.w	r3, [r9]
   18d14:	eba5 0508 	sub.w	r5, r5, r8
_ZN9__gnu_cxx13new_allocatorIP10isr_vectorE9constructIS2_JS2_EEEvPT_DpOT0_():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/ext/new_allocator.h:120

#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
        void
        construct(_Up* __p, _Args&&... __args)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   18d18:	42ef      	cmn	r7, r5
   18d1a:	bf18      	it	ne
   18d1c:	517b      	strne	r3, [r7, r5]
_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP10isr_vectorEEPT_PKS5_S8_S6_():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/stl_algobase.h:367
					   is_copy_assignable<_Tp>>;
	  // trivial types can have deleted assignment
	  static_assert( __assignable::type::value, "type is not assignable" );
#endif
	  const ptrdiff_t _Num = __last - __first;
	  if (_Num)
   18d1e:	08ab      	lsrs	r3, r5, #2
   18d20:	d004      	beq.n	18d2c <void std::vector<isr_vector*, std::allocator<isr_vector*> >::_M_emplace_back_aux<isr_vector*>(isr_vector*&&)+0x4e>
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/stl_algobase.h:368
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   18d22:	462a      	mov	r2, r5
   18d24:	4641      	mov	r1, r8
   18d26:	4638      	mov	r0, r7
   18d28:	f002 f8a8 	bl	1ae7c <memmove>
_ZNSt6vectorIP10isr_vectorSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/vector.tcc:425
	    __new_finish
	      = std::__uninitialized_move_if_noexcept_a
	      (this->_M_impl._M_start, this->_M_impl._M_finish,
	       __new_start, _M_get_Tp_allocator());

	    ++__new_finish;
   18d2c:	3504      	adds	r5, #4
   18d2e:	443d      	add	r5, r7
_ZNSt12_Vector_baseIP10isr_vectorSaIS1_EE13_M_deallocateEPS1_j():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/stl_vector.h:177
	if (__p)
   18d30:	f1b8 0f00 	cmp.w	r8, #0
   18d34:	d002      	beq.n	18d3c <void std::vector<isr_vector*, std::allocator<isr_vector*> >::_M_emplace_back_aux<isr_vector*>(isr_vector*&&)+0x5e>
_ZN9__gnu_cxx13new_allocatorIP10isr_vectorE10deallocateEPS2_j():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/ext/new_allocator.h:110
      { ::operator delete(__p); }
   18d36:	4640      	mov	r0, r8
   18d38:	f7ff fbb8 	bl	184ac <operator delete(void*)>
_ZNSt6vectorIP10isr_vectorSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/vector.tcc:443
	_M_deallocate(this->_M_impl._M_start,
		      this->_M_impl._M_end_of_storage
		      - this->_M_impl._M_start);
	this->_M_impl._M_start = __new_start;
	this->_M_impl._M_finish = __new_finish;
	this->_M_impl._M_end_of_storage = __new_start + __len;
   18d3c:	eb07 0484 	add.w	r4, r7, r4, lsl #2
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/vector.tcc:441
	this->_M_impl._M_start = __new_start;
   18d40:	6037      	str	r7, [r6, #0]
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/vector.tcc:442
	this->_M_impl._M_finish = __new_finish;
   18d42:	6075      	str	r5, [r6, #4]
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/vector.tcc:443
	this->_M_impl._M_end_of_storage = __new_start + __len;
   18d44:	60b4      	str	r4, [r6, #8]
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/vector.tcc:444
      }
   18d46:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
_ZNSt12_Vector_baseIP10isr_vectorSaIS1_EE11_M_allocateEj():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/stl_vector.h:170
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   18d4a:	2c00      	cmp	r4, #0
   18d4c:	d1d9      	bne.n	18d02 <void std::vector<isr_vector*, std::allocator<isr_vector*> >::_M_emplace_back_aux<isr_vector*>(isr_vector*&&)+0x24>
   18d4e:	4627      	mov	r7, r4
   18d50:	e7db      	b.n	18d0a <void std::vector<isr_vector*, std::allocator<isr_vector*> >::_M_emplace_back_aux<isr_vector*>(isr_vector*&&)+0x2c>
_ZNSt6vectorIP10isr_vectorSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_():
   18d52:	Address 0x0000000000018d52 is out of bounds.


00018d54 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)>:
_ZN17LabGPIOInterrupts22attachInterruptHandlerEhmPFvvE20InterruptCondition_E():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:14
{
   18d54:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   18d56:	f89d 5020 	ldrb.w	r5, [sp, #32]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:15
	if((port == 0) && (pin > 30))
   18d5a:	b919      	cbnz	r1, 18d64 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x10>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:15 (discriminator 1)
   18d5c:	2a1e      	cmp	r2, #30
   18d5e:	d91a      	bls.n	18d96 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x42>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:17
		return false;
   18d60:	2000      	movs	r0, #0
   18d62:	e044      	b.n	18dee <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x9a>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:19
	if((port == 2) && (pin > 10))
   18d64:	2902      	cmp	r1, #2
   18d66:	d101      	bne.n	18d6c <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x18>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:19 (discriminator 1)
   18d68:	2a0a      	cmp	r2, #10
   18d6a:	d8f9      	bhi.n	18d60 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0xc>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:25
	if(condition == rising_edge || condition == both_edges)
   18d6c:	b10d      	cbz	r5, 18d72 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x1e>
   18d6e:	2d02      	cmp	r5, #2
   18d70:	d118      	bne.n	18da4 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x50>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:33
			LPC_GPIOINT->IO2IntEnR |= (1 << pin);
   18d72:	2401      	movs	r4, #1
   18d74:	4e20      	ldr	r6, [pc, #128]	; (18df8 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0xa4>)
   18d76:	4094      	lsls	r4, r2
   18d78:	6b37      	ldr	r7, [r6, #48]	; 0x30
   18d7a:	433c      	orrs	r4, r7
   18d7c:	6334      	str	r4, [r6, #48]	; 0x30
   18d7e:	e011      	b.n	18da4 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x50>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:44
			LPC_GPIOINT->IO2IntEnF |= (1 << pin);
   18d80:	6b77      	ldr	r7, [r6, #52]	; 0x34
   18d82:	4094      	lsls	r4, r2
   18d84:	433c      	orrs	r4, r7
   18d86:	6374      	str	r4, [r6, #52]	; 0x34
   18d88:	e017      	b.n	18dba <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x66>
_ZNSt6vectorIP10isr_vectorSaIS1_EE12emplace_backIJS1_EEEvDpOT_():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/vector.tcc:101
	  _M_emplace_back_aux(std::forward<_Args>(__args)...);
   18d8a:	a901      	add	r1, sp, #4
   18d8c:	f500 703a 	add.w	r0, r0, #744	; 0x2e8
   18d90:	f7ff ffa5 	bl	18cde <void std::vector<isr_vector*, std::allocator<isr_vector*> >::_M_emplace_back_aux<isr_vector*>(isr_vector*&&)>
   18d94:	e02a      	b.n	18dec <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x98>
_ZN17LabGPIOInterrupts22attachInterruptHandlerEhmPFvvE20InterruptCondition_E():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:25
	if(condition == rising_edge || condition == both_edges)
   18d96:	bb65      	cbnz	r5, 18df2 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x9e>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:29
			LPC_GPIOINT->IO0IntEnR |= (1 << pin);
   18d98:	2401      	movs	r4, #1
   18d9a:	4e17      	ldr	r6, [pc, #92]	; (18df8 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0xa4>)
   18d9c:	4094      	lsls	r4, r2
   18d9e:	6937      	ldr	r7, [r6, #16]
   18da0:	433c      	orrs	r4, r7
   18da2:	6134      	str	r4, [r6, #16]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:36
	if(condition == falling_edge || condition == both_edges)
   18da4:	1e6c      	subs	r4, r5, #1
   18da6:	2c01      	cmp	r4, #1
   18da8:	d807      	bhi.n	18dba <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x66>
   18daa:	4e13      	ldr	r6, [pc, #76]	; (18df8 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0xa4>)
   18dac:	2401      	movs	r4, #1
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:38
		if(port == 0)
   18dae:	2900      	cmp	r1, #0
   18db0:	d1e6      	bne.n	18d80 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x2c>
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:40
			LPC_GPIOINT->IO0IntEnF |= (1 << pin);
   18db2:	6977      	ldr	r7, [r6, #20]
   18db4:	4094      	lsls	r4, r2
   18db6:	433c      	orrs	r4, r7
   18db8:	6174      	str	r4, [r6, #20]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:49
	this->isrs[row][pin].isr        = pin_isr;
   18dba:	2900      	cmp	r1, #0
   18dbc:	bf14      	ite	ne
   18dbe:	f44f 74ba 	movne.w	r4, #372	; 0x174
   18dc2:	2400      	moveq	r4, #0
   18dc4:	260c      	movs	r6, #12
   18dc6:	fb06 4602 	mla	r6, r6, r2, r4
   18dca:	1984      	adds	r4, r0, r6
   18dcc:	5183      	str	r3, [r0, r6]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:52
	this->isrs[row][pin].port       = port;
   18dce:	7161      	strb	r1, [r4, #5]
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:51
	this->isrs[row][pin].pin        = pin;
   18dd0:	60a2      	str	r2, [r4, #8]
_ZNSt6vectorIP10isr_vectorSaIS1_EE12emplace_backIJS1_EEEvDpOT_():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/vector.tcc:94
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   18dd2:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
   18dd6:	f8d0 22f0 	ldr.w	r2, [r0, #752]	; 0x2f0
_ZN17LabGPIOInterrupts22attachInterruptHandlerEhmPFvvE20InterruptCondition_E():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:50
	this->isrs[row][pin].condition  = condition;
   18dda:	7125      	strb	r5, [r4, #4]
_ZNSt6vectorIP10isr_vectorSaIS1_EE12emplace_backIJS1_EEEvDpOT_():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/vector.tcc:94
   18ddc:	4293      	cmp	r3, r2
_ZN17LabGPIOInterrupts22attachInterruptHandlerEhmPFvvE20InterruptCondition_E():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:53
	this->registered.push_back(&isrs[row][pin]);
   18dde:	9401      	str	r4, [sp, #4]
_ZNSt6vectorIP10isr_vectorSaIS1_EE12emplace_backIJS1_EEEvDpOT_():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/vector.tcc:94
   18de0:	d0d3      	beq.n	18d8a <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x36>
_ZN9__gnu_cxx13new_allocatorIP10isr_vectorE9constructIS2_JS2_EEEvPT_DpOT0_():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/ext/new_allocator.h:120
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   18de2:	b103      	cbz	r3, 18de6 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x92>
   18de4:	601c      	str	r4, [r3, #0]
_ZNSt6vectorIP10isr_vectorSaIS1_EE12emplace_backIJS1_EEEvDpOT_():
/home/peter/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/6.3.1/bits/vector.tcc:98
	    ++this->_M_impl._M_finish;
   18de6:	3304      	adds	r3, #4
   18de8:	f8c0 32ec 	str.w	r3, [r0, #748]	; 0x2ec
_ZN17LabGPIOInterrupts22attachInterruptHandlerEhmPFvvE20InterruptCondition_E():
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:55
	return true;
   18dec:	2001      	movs	r0, #1
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:56
}
   18dee:	b003      	add	sp, #12
   18df0:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/peter/SJSU-Dev/Labs/mp3/L5_Application/LabGPIOInterrupts.cpp:25
	if(condition == rising_edge || condition == both_edges)
   18df2:	2d02      	cmp	r5, #2
   18df4:	d0d0      	beq.n	18d98 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x44>
   18df6:	e7d5      	b.n	18da4 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x50>
   18df8:	40028080 	.word	0x40028080

00018dfc <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv():
   18dfc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   18dfe:	2310      	movs	r3, #16
   18e00:	2400      	movs	r4, #0
   18e02:	9302      	str	r3, [sp, #8]
   18e04:	6803      	ldr	r3, [r0, #0]
   18e06:	4615      	mov	r5, r2
   18e08:	699e      	ldr	r6, [r3, #24]
   18e0a:	9400      	str	r4, [sp, #0]
   18e0c:	466b      	mov	r3, sp
   18e0e:	f88d 4004 	strb.w	r4, [sp, #4]
   18e12:	9403      	str	r4, [sp, #12]
   18e14:	6812      	ldr	r2, [r2, #0]
   18e16:	47b0      	blx	r6
   18e18:	f89d 3004 	ldrb.w	r3, [sp, #4]
   18e1c:	f003 0306 	and.w	r3, r3, #6
   18e20:	2b06      	cmp	r3, #6
   18e22:	bf09      	itett	eq
   18e24:	2001      	moveq	r0, #1
   18e26:	4620      	movne	r0, r4
   18e28:	9b00      	ldreq	r3, [sp, #0]
   18e2a:	602b      	streq	r3, [r5, #0]
   18e2c:	b004      	add	sp, #16
   18e2e:	bd70      	pop	{r4, r5, r6, pc}

00018e30 <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_():
   18e30:	9800      	ldr	r0, [sp, #0]
   18e32:	4290      	cmp	r0, r2
   18e34:	bf0c      	ite	eq
   18e36:	2006      	moveq	r0, #6
   18e38:	2001      	movne	r0, #1
   18e3a:	4770      	bx	lr

00018e3c <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD2Ev():
   18e3c:	b510      	push	{r4, lr}
   18e3e:	4604      	mov	r4, r0
   18e40:	4b02      	ldr	r3, [pc, #8]	; (18e4c <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
   18e42:	6003      	str	r3, [r0, #0]
   18e44:	f000 fb25 	bl	19492 <std::type_info::~type_info()>
   18e48:	4620      	mov	r0, r4
   18e4a:	bd10      	pop	{r4, pc}
   18e4c:	00022250 	.word	0x00022250

00018e50 <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD0Ev():
   18e50:	b510      	push	{r4, lr}
   18e52:	4604      	mov	r4, r0
   18e54:	f7ff fff2 	bl	18e3c <__cxxabiv1::__class_type_info::~__class_type_info()>
   18e58:	4620      	mov	r0, r4
   18e5a:	2108      	movs	r1, #8
   18e5c:	f000 f8c3 	bl	18fe6 <operator delete(void*, unsigned int)>
   18e60:	4620      	mov	r0, r4
   18e62:	bd10      	pop	{r4, pc}

00018e64 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE():
   18e64:	b538      	push	{r3, r4, r5, lr}
   18e66:	4615      	mov	r5, r2
   18e68:	461c      	mov	r4, r3
   18e6a:	f000 fb15 	bl	19498 <std::type_info::operator==(std::type_info const&) const>
   18e6e:	b120      	cbz	r0, 18e7a <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x16>
   18e70:	2308      	movs	r3, #8
   18e72:	60e3      	str	r3, [r4, #12]
   18e74:	2306      	movs	r3, #6
   18e76:	6025      	str	r5, [r4, #0]
   18e78:	7123      	strb	r3, [r4, #4]
   18e7a:	bd38      	pop	{r3, r4, r5, pc}

00018e7c <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj():
   18e7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18e80:	4605      	mov	r5, r0
   18e82:	460c      	mov	r4, r1
   18e84:	4616      	mov	r6, r2
   18e86:	461f      	mov	r7, r3
   18e88:	f000 fb06 	bl	19498 <std::type_info::operator==(std::type_info const&) const>
   18e8c:	b948      	cbnz	r0, 18ea2 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   18e8e:	2f03      	cmp	r7, #3
   18e90:	d807      	bhi.n	18ea2 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   18e92:	6823      	ldr	r3, [r4, #0]
   18e94:	4632      	mov	r2, r6
   18e96:	4629      	mov	r1, r5
   18e98:	4620      	mov	r0, r4
   18e9a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   18e9e:	695b      	ldr	r3, [r3, #20]
   18ea0:	4718      	bx	r3
   18ea2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00018ea6 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE():
   18ea6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18eaa:	9e06      	ldr	r6, [sp, #24]
   18eac:	4698      	mov	r8, r3
   18eae:	9b08      	ldr	r3, [sp, #32]
   18eb0:	4607      	mov	r7, r0
   18eb2:	429e      	cmp	r6, r3
   18eb4:	4615      	mov	r5, r2
   18eb6:	9c09      	ldr	r4, [sp, #36]	; 0x24
   18eb8:	d103      	bne.n	18ec2 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c>
   18eba:	9907      	ldr	r1, [sp, #28]
   18ebc:	f000 faec 	bl	19498 <std::type_info::operator==(std::type_info const&) const>
   18ec0:	b958      	cbnz	r0, 18eda <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   18ec2:	4641      	mov	r1, r8
   18ec4:	4638      	mov	r0, r7
   18ec6:	f000 fae7 	bl	19498 <std::type_info::operator==(std::type_info const&) const>
   18eca:	b118      	cbz	r0, 18ed4 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
   18ecc:	2301      	movs	r3, #1
   18ece:	6026      	str	r6, [r4, #0]
   18ed0:	7125      	strb	r5, [r4, #4]
   18ed2:	71a3      	strb	r3, [r4, #6]
   18ed4:	2000      	movs	r0, #0
   18ed6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18eda:	7165      	strb	r5, [r4, #5]
   18edc:	e7fa      	b.n	18ed4 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
   18ede:	Address 0x0000000000018ede is out of bounds.


00018ee0 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD1Ev():
   18ee0:	b510      	push	{r4, lr}
   18ee2:	4604      	mov	r4, r0
   18ee4:	4b02      	ldr	r3, [pc, #8]	; (18ef0 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
   18ee6:	6003      	str	r3, [r0, #0]
   18ee8:	f7ff ffa8 	bl	18e3c <__cxxabiv1::__class_type_info::~__class_type_info()>
   18eec:	4620      	mov	r0, r4
   18eee:	bd10      	pop	{r4, pc}
   18ef0:	000222b0 	.word	0x000222b0

00018ef4 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD0Ev():
   18ef4:	b510      	push	{r4, lr}
   18ef6:	4604      	mov	r4, r0
   18ef8:	f7ff fff2 	bl	18ee0 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>
   18efc:	4620      	mov	r0, r4
   18efe:	210c      	movs	r1, #12
   18f00:	f000 f871 	bl	18fe6 <operator delete(void*, unsigned int)>
   18f04:	4620      	mov	r0, r4
   18f06:	bd10      	pop	{r4, pc}

00018f08 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   18f08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18f0c:	9e06      	ldr	r6, [sp, #24]
   18f0e:	4680      	mov	r8, r0
   18f10:	4296      	cmp	r6, r2
   18f12:	460f      	mov	r7, r1
   18f14:	4614      	mov	r4, r2
   18f16:	461d      	mov	r5, r3
   18f18:	d103      	bne.n	18f22 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1a>
   18f1a:	4619      	mov	r1, r3
   18f1c:	f000 fabc 	bl	19498 <std::type_info::operator==(std::type_info const&) const>
   18f20:	b958      	cbnz	r0, 18f3a <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x32>
   18f22:	f8d8 0008 	ldr.w	r0, [r8, #8]
   18f26:	4622      	mov	r2, r4
   18f28:	6803      	ldr	r3, [r0, #0]
   18f2a:	9606      	str	r6, [sp, #24]
   18f2c:	6a1e      	ldr	r6, [r3, #32]
   18f2e:	4639      	mov	r1, r7
   18f30:	462b      	mov	r3, r5
   18f32:	46b4      	mov	ip, r6
   18f34:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   18f38:	4760      	bx	ip
   18f3a:	2006      	movs	r0, #6
   18f3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00018f40 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   18f40:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18f44:	460e      	mov	r6, r1
   18f46:	4619      	mov	r1, r3
   18f48:	4683      	mov	fp, r0
   18f4a:	4617      	mov	r7, r2
   18f4c:	4699      	mov	r9, r3
   18f4e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   18f50:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   18f54:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   18f58:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   18f5a:	f000 fa9d 	bl	19498 <std::type_info::operator==(std::type_info const&) const>
   18f5e:	b190      	cbz	r0, 18f86 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x46>
   18f60:	2e00      	cmp	r6, #0
   18f62:	602c      	str	r4, [r5, #0]
   18f64:	712f      	strb	r7, [r5, #4]
   18f66:	db09      	blt.n	18f7c <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x3c>
   18f68:	4434      	add	r4, r6
   18f6a:	45a0      	cmp	r8, r4
   18f6c:	bf0c      	ite	eq
   18f6e:	2406      	moveq	r4, #6
   18f70:	2401      	movne	r4, #1
   18f72:	71ac      	strb	r4, [r5, #6]
   18f74:	2000      	movs	r0, #0
   18f76:	b001      	add	sp, #4
   18f78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f7c:	3602      	adds	r6, #2
   18f7e:	d1f9      	bne.n	18f74 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   18f80:	2301      	movs	r3, #1
   18f82:	71ab      	strb	r3, [r5, #6]
   18f84:	e7f6      	b.n	18f74 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   18f86:	4544      	cmp	r4, r8
   18f88:	d104      	bne.n	18f94 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x54>
   18f8a:	4651      	mov	r1, sl
   18f8c:	4658      	mov	r0, fp
   18f8e:	f000 fa83 	bl	19498 <std::type_info::operator==(std::type_info const&) const>
   18f92:	b988      	cbnz	r0, 18fb8 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x78>
   18f94:	f8db 0008 	ldr.w	r0, [fp, #8]
   18f98:	463a      	mov	r2, r7
   18f9a:	6803      	ldr	r3, [r0, #0]
   18f9c:	950d      	str	r5, [sp, #52]	; 0x34
   18f9e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
   18fa2:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
   18fa6:	940a      	str	r4, [sp, #40]	; 0x28
   18fa8:	69dc      	ldr	r4, [r3, #28]
   18faa:	4631      	mov	r1, r6
   18fac:	464b      	mov	r3, r9
   18fae:	46a4      	mov	ip, r4
   18fb0:	b001      	add	sp, #4
   18fb2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18fb6:	4760      	bx	ip
   18fb8:	716f      	strb	r7, [r5, #5]
   18fba:	e7db      	b.n	18f74 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>

00018fbc <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   18fbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18fc0:	4604      	mov	r4, r0
   18fc2:	460d      	mov	r5, r1
   18fc4:	4616      	mov	r6, r2
   18fc6:	461f      	mov	r7, r3
   18fc8:	f7ff ff4c 	bl	18e64 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   18fcc:	b948      	cbnz	r0, 18fe2 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x26>
   18fce:	68a0      	ldr	r0, [r4, #8]
   18fd0:	4632      	mov	r2, r6
   18fd2:	6803      	ldr	r3, [r0, #0]
   18fd4:	4629      	mov	r1, r5
   18fd6:	699c      	ldr	r4, [r3, #24]
   18fd8:	463b      	mov	r3, r7
   18fda:	46a4      	mov	ip, r4
   18fdc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   18fe0:	4760      	bx	ip
   18fe2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00018fe6 <operator delete(void*, unsigned int)>:
_ZdlPvj():
   18fe6:	f7ff ba61 	b.w	184ac <operator delete(void*)>

00018fea <__cxa_guard_acquire>:
__cxa_guard_acquire():
   18fea:	6803      	ldr	r3, [r0, #0]
   18fec:	07db      	lsls	r3, r3, #31
   18fee:	d406      	bmi.n	18ffe <__cxa_guard_acquire+0x14>
   18ff0:	7843      	ldrb	r3, [r0, #1]
   18ff2:	b103      	cbz	r3, 18ff6 <__cxa_guard_acquire+0xc>
   18ff4:	deff      	udf	#255	; 0xff
   18ff6:	2301      	movs	r3, #1
   18ff8:	7043      	strb	r3, [r0, #1]
   18ffa:	4618      	mov	r0, r3
   18ffc:	4770      	bx	lr
   18ffe:	2000      	movs	r0, #0
   19000:	4770      	bx	lr

00019002 <__cxa_guard_release>:
__cxa_guard_release():
   19002:	2301      	movs	r3, #1
   19004:	6003      	str	r3, [r0, #0]
   19006:	4770      	bx	lr

00019008 <__cxa_pure_virtual>:
__cxa_pure_virtual():
   19008:	b508      	push	{r3, lr}
   1900a:	f000 fa67 	bl	194dc <std::terminate()>
   1900e:	Address 0x000000000001900e is out of bounds.


00019010 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD2Ev():
   19010:	b510      	push	{r4, lr}
   19012:	4604      	mov	r4, r0
   19014:	4b02      	ldr	r3, [pc, #8]	; (19020 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()+0x10>)
   19016:	6003      	str	r3, [r0, #0]
   19018:	f7ff ff10 	bl	18e3c <__cxxabiv1::__class_type_info::~__class_type_info()>
   1901c:	4620      	mov	r0, r4
   1901e:	bd10      	pop	{r4, pc}
   19020:	00022310 	.word	0x00022310

00019024 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD0Ev():
   19024:	b510      	push	{r4, lr}
   19026:	4604      	mov	r4, r0
   19028:	f7ff fff2 	bl	19010 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>
   1902c:	4620      	mov	r0, r4
   1902e:	2118      	movs	r1, #24
   19030:	f7ff ffd9 	bl	18fe6 <operator delete(void*, unsigned int)>
   19034:	4620      	mov	r0, r4
   19036:	bd10      	pop	{r4, pc}

00019038 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   19038:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1903c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
   19040:	4604      	mov	r4, r0
   19042:	454a      	cmp	r2, r9
   19044:	460f      	mov	r7, r1
   19046:	4616      	mov	r6, r2
   19048:	4698      	mov	r8, r3
   1904a:	d103      	bne.n	19054 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1c>
   1904c:	4619      	mov	r1, r3
   1904e:	f000 fa23 	bl	19498 <std::type_info::operator==(std::type_info const&) const>
   19052:	bb38      	cbnz	r0, 190a4 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6c>
   19054:	68e5      	ldr	r5, [r4, #12]
   19056:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   1905a:	e001      	b.n	19060 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x28>
   1905c:	3d01      	subs	r5, #1
   1905e:	3c08      	subs	r4, #8
   19060:	b315      	cbz	r5, 190a8 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x70>
   19062:	68e3      	ldr	r3, [r4, #12]
   19064:	079a      	lsls	r2, r3, #30
   19066:	d5f9      	bpl.n	1905c <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   19068:	f013 0a01 	ands.w	sl, r3, #1
   1906c:	ea4f 2223 	mov.w	r2, r3, asr #8
   19070:	d003      	beq.n	1907a <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x42>
   19072:	1cfb      	adds	r3, r7, #3
   19074:	d0f2      	beq.n	1905c <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   19076:	6833      	ldr	r3, [r6, #0]
   19078:	589a      	ldr	r2, [r3, r2]
   1907a:	68a0      	ldr	r0, [r4, #8]
   1907c:	4432      	add	r2, r6
   1907e:	6803      	ldr	r3, [r0, #0]
   19080:	f8cd 9000 	str.w	r9, [sp]
   19084:	f8d3 b020 	ldr.w	fp, [r3, #32]
   19088:	4639      	mov	r1, r7
   1908a:	4643      	mov	r3, r8
   1908c:	47d8      	blx	fp
   1908e:	2803      	cmp	r0, #3
   19090:	dde4      	ble.n	1905c <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   19092:	f1ba 0f00 	cmp.w	sl, #0
   19096:	d002      	beq.n	1909e <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>
   19098:	f040 0001 	orr.w	r0, r0, #1
   1909c:	b2c0      	uxtb	r0, r0
   1909e:	b003      	add	sp, #12
   190a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   190a4:	2006      	movs	r0, #6
   190a6:	e7fa      	b.n	1909e <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>
   190a8:	2001      	movs	r0, #1
   190aa:	e7f8      	b.n	1909e <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>

000190ac <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_():
   190ac:	b4f0      	push	{r4, r5, r6, r7}
   190ae:	1e0e      	subs	r6, r1, #0
   190b0:	9c04      	ldr	r4, [sp, #16]
   190b2:	db06      	blt.n	190c2 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x16>
   190b4:	1990      	adds	r0, r2, r6
   190b6:	4284      	cmp	r4, r0
   190b8:	bf14      	ite	ne
   190ba:	2001      	movne	r0, #1
   190bc:	2006      	moveq	r0, #6
   190be:	bcf0      	pop	{r4, r5, r6, r7}
   190c0:	4770      	bx	lr
   190c2:	3602      	adds	r6, #2
   190c4:	d005      	beq.n	190d2 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x26>
   190c6:	6805      	ldr	r5, [r0, #0]
   190c8:	9404      	str	r4, [sp, #16]
   190ca:	6a2c      	ldr	r4, [r5, #32]
   190cc:	46a4      	mov	ip, r4
   190ce:	bcf0      	pop	{r4, r5, r6, r7}
   190d0:	4760      	bx	ip
   190d2:	2001      	movs	r0, #1
   190d4:	e7f3      	b.n	190be <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x12>

000190d6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   190d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   190da:	b091      	sub	sp, #68	; 0x44
   190dc:	9c1d      	ldr	r4, [sp, #116]	; 0x74
   190de:	9308      	str	r3, [sp, #32]
   190e0:	68a3      	ldr	r3, [r4, #8]
   190e2:	4688      	mov	r8, r1
   190e4:	06d9      	lsls	r1, r3, #27
   190e6:	bf48      	it	mi
   190e8:	6883      	ldrmi	r3, [r0, #8]
   190ea:	9207      	str	r2, [sp, #28]
   190ec:	bf48      	it	mi
   190ee:	60a3      	strmi	r3, [r4, #8]
   190f0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
   190f2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   190f4:	4681      	mov	r9, r0
   190f6:	4293      	cmp	r3, r2
   190f8:	d105      	bne.n	19106 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x30>
   190fa:	991b      	ldr	r1, [sp, #108]	; 0x6c
   190fc:	f000 f9cc 	bl	19498 <std::type_info::operator==(std::type_info const&) const>
   19100:	2800      	cmp	r0, #0
   19102:	f040 8119 	bne.w	19338 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x262>
   19106:	9908      	ldr	r1, [sp, #32]
   19108:	4648      	mov	r0, r9
   1910a:	f000 f9c5 	bl	19498 <std::type_info::operator==(std::type_info const&) const>
   1910e:	4682      	mov	sl, r0
   19110:	2800      	cmp	r0, #0
   19112:	d16e      	bne.n	191f2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x11c>
   19114:	2600      	movs	r6, #0
   19116:	f1b8 0f00 	cmp.w	r8, #0
   1911a:	bfa8      	it	ge
   1911c:	9b1c      	ldrge	r3, [sp, #112]	; 0x70
   1911e:	46b3      	mov	fp, r6
   19120:	bfa4      	itt	ge
   19122:	eba3 0308 	subge.w	r3, r3, r8
   19126:	9309      	strge	r3, [sp, #36]	; 0x24
   19128:	f04f 0301 	mov.w	r3, #1
   1912c:	930a      	str	r3, [sp, #40]	; 0x28
   1912e:	9b07      	ldr	r3, [sp, #28]
   19130:	bfb8      	it	lt
   19132:	f8cd a024 	strlt.w	sl, [sp, #36]	; 0x24
   19136:	f043 0301 	orr.w	r3, r3, #1
   1913a:	9606      	str	r6, [sp, #24]
   1913c:	930b      	str	r3, [sp, #44]	; 0x2c
   1913e:	f8d9 300c 	ldr.w	r3, [r9, #12]
   19142:	9304      	str	r3, [sp, #16]
   19144:	eb09 03c3 	add.w	r3, r9, r3, lsl #3
   19148:	9305      	str	r3, [sp, #20]
   1914a:	9b04      	ldr	r3, [sp, #16]
   1914c:	2b00      	cmp	r3, #0
   1914e:	f000 80e9 	beq.w	19324 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x24e>
   19152:	9b05      	ldr	r3, [sp, #20]
   19154:	68a5      	ldr	r5, [r4, #8]
   19156:	68db      	ldr	r3, [r3, #12]
   19158:	950f      	str	r5, [sp, #60]	; 0x3c
   1915a:	07da      	lsls	r2, r3, #31
   1915c:	bf48      	it	mi
   1915e:	981a      	ldrmi	r0, [sp, #104]	; 0x68
   19160:	ea4f 2123 	mov.w	r1, r3, asr #8
   19164:	bf48      	it	mi
   19166:	6800      	ldrmi	r0, [r0, #0]
   19168:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
   1916c:	bf48      	it	mi
   1916e:	5841      	ldrmi	r1, [r0, r1]
   19170:	981a      	ldr	r0, [sp, #104]	; 0x68
   19172:	f88d b038 	strb.w	fp, [sp, #56]	; 0x38
   19176:	4401      	add	r1, r0
   19178:	9809      	ldr	r0, [sp, #36]	; 0x24
   1917a:	f88d b039 	strb.w	fp, [sp, #57]	; 0x39
   1917e:	f88d b03a 	strb.w	fp, [sp, #58]	; 0x3a
   19182:	bf4c      	ite	mi
   19184:	9a0b      	ldrmi	r2, [sp, #44]	; 0x2c
   19186:	9a07      	ldrpl	r2, [sp, #28]
   19188:	b138      	cbz	r0, 1919a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xc4>
   1918a:	4288      	cmp	r0, r1
   1918c:	bf2c      	ite	cs
   1918e:	2000      	movcs	r0, #0
   19190:	2001      	movcc	r0, #1
   19192:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   19194:	42b8      	cmp	r0, r7
   19196:	f000 80ba 	beq.w	1930e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x238>
   1919a:	079b      	lsls	r3, r3, #30
   1919c:	d407      	bmi.n	191ae <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd8>
   1919e:	f118 0f02 	cmn.w	r8, #2
   191a2:	d102      	bne.n	191aa <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd4>
   191a4:	07af      	lsls	r7, r5, #30
   191a6:	f000 80b4 	beq.w	19312 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23c>
   191aa:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
   191ae:	9b05      	ldr	r3, [sp, #20]
   191b0:	ad0d      	add	r5, sp, #52	; 0x34
   191b2:	6898      	ldr	r0, [r3, #8]
   191b4:	6803      	ldr	r3, [r0, #0]
   191b6:	9503      	str	r5, [sp, #12]
   191b8:	9d1c      	ldr	r5, [sp, #112]	; 0x70
   191ba:	9502      	str	r5, [sp, #8]
   191bc:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   191be:	e88d 0022 	stmia.w	sp, {r1, r5}
   191c2:	4641      	mov	r1, r8
   191c4:	69dd      	ldr	r5, [r3, #28]
   191c6:	9b08      	ldr	r3, [sp, #32]
   191c8:	47a8      	blx	r5
   191ca:	7961      	ldrb	r1, [r4, #5]
   191cc:	f89d 2039 	ldrb.w	r2, [sp, #57]	; 0x39
   191d0:	f89d 503a 	ldrb.w	r5, [sp, #58]	; 0x3a
   191d4:	4311      	orrs	r1, r2
   191d6:	2d06      	cmp	r5, #6
   191d8:	4603      	mov	r3, r0
   191da:	7161      	strb	r1, [r4, #5]
   191dc:	d001      	beq.n	191e2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x10c>
   191de:	2d02      	cmp	r5, #2
   191e0:	d122      	bne.n	19228 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x152>
   191e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   191e4:	71a5      	strb	r5, [r4, #6]
   191e6:	6023      	str	r3, [r4, #0]
   191e8:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   191ec:	7123      	strb	r3, [r4, #4]
   191ee:	4682      	mov	sl, r0
   191f0:	e078      	b.n	192e4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   191f2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   191f4:	f1b8 0f00 	cmp.w	r8, #0
   191f8:	6023      	str	r3, [r4, #0]
   191fa:	f89d 301c 	ldrb.w	r3, [sp, #28]
   191fe:	7123      	strb	r3, [r4, #4]
   19200:	db0c      	blt.n	1921c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x146>
   19202:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   19204:	4498      	add	r8, r3
   19206:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   19208:	4543      	cmp	r3, r8
   1920a:	bf0c      	ite	eq
   1920c:	f04f 0806 	moveq.w	r8, #6
   19210:	f04f 0801 	movne.w	r8, #1
   19214:	f884 8006 	strb.w	r8, [r4, #6]
   19218:	2600      	movs	r6, #0
   1921a:	e064      	b.n	192e6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   1921c:	f118 0f02 	cmn.w	r8, #2
   19220:	d1fa      	bne.n	19218 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   19222:	2301      	movs	r3, #1
   19224:	71a3      	strb	r3, [r4, #6]
   19226:	e7f7      	b.n	19218 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   19228:	6822      	ldr	r2, [r4, #0]
   1922a:	b986      	cbnz	r6, 1924e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x178>
   1922c:	b97a      	cbnz	r2, 1924e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x178>
   1922e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   19230:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
   19234:	6022      	str	r2, [r4, #0]
   19236:	7125      	strb	r5, [r4, #4]
   19238:	b122      	cbz	r2, 19244 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1923a:	b119      	cbz	r1, 19244 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1923c:	f8d9 2008 	ldr.w	r2, [r9, #8]
   19240:	07d5      	lsls	r5, r2, #31
   19242:	d5d4      	bpl.n	191ee <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x118>
   19244:	7962      	ldrb	r2, [r4, #5]
   19246:	2a04      	cmp	r2, #4
   19248:	d164      	bne.n	19314 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23e>
   1924a:	469a      	mov	sl, r3
   1924c:	e04a      	b.n	192e4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   1924e:	b15a      	cbz	r2, 19268 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x192>
   19250:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   19252:	429a      	cmp	r2, r3
   19254:	d106      	bne.n	19264 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18e>
   19256:	7923      	ldrb	r3, [r4, #4]
   19258:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
   1925c:	4313      	orrs	r3, r2
   1925e:	7123      	strb	r3, [r4, #4]
   19260:	4633      	mov	r3, r6
   19262:	e7ef      	b.n	19244 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   19264:	b92b      	cbnz	r3, 19272 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19c>
   19266:	b920      	cbnz	r0, 19272 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19c>
   19268:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1926a:	2b00      	cmp	r3, #0
   1926c:	d0f8      	beq.n	19260 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18a>
   1926e:	2e00      	cmp	r6, #0
   19270:	d0f6      	beq.n	19260 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18a>
   19272:	2903      	cmp	r1, #3
   19274:	79a7      	ldrb	r7, [r4, #6]
   19276:	d904      	bls.n	19282 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ac>
   19278:	07c8      	lsls	r0, r1, #31
   1927a:	d561      	bpl.n	19340 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1927c:	68a3      	ldr	r3, [r4, #8]
   1927e:	0799      	lsls	r1, r3, #30
   19280:	d55e      	bpl.n	19340 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   19282:	b97f      	cbnz	r7, 192a4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ce>
   19284:	2d03      	cmp	r5, #3
   19286:	dd05      	ble.n	19294 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1be>
   19288:	07eb      	lsls	r3, r5, #31
   1928a:	d560      	bpl.n	1934e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x278>
   1928c:	f8d9 3008 	ldr.w	r3, [r9, #8]
   19290:	079f      	lsls	r7, r3, #30
   19292:	d52c      	bpl.n	192ee <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   19294:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   19296:	4641      	mov	r1, r8
   19298:	9300      	str	r3, [sp, #0]
   1929a:	9808      	ldr	r0, [sp, #32]
   1929c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1929e:	f7ff ff05 	bl	190ac <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   192a2:	4607      	mov	r7, r0
   192a4:	b945      	cbnz	r5, 192b8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   192a6:	2f03      	cmp	r7, #3
   192a8:	dd54      	ble.n	19354 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27e>
   192aa:	07fd      	lsls	r5, r7, #31
   192ac:	d503      	bpl.n	192b6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e0>
   192ae:	f8d9 3008 	ldr.w	r3, [r9, #8]
   192b2:	0798      	lsls	r0, r3, #30
   192b4:	d44e      	bmi.n	19354 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27e>
   192b6:	2501      	movs	r5, #1
   192b8:	ea85 0307 	eor.w	r3, r5, r7
   192bc:	b2db      	uxtb	r3, r3
   192be:	2b03      	cmp	r3, #3
   192c0:	d917      	bls.n	192f2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x21c>
   192c2:	2d03      	cmp	r5, #3
   192c4:	bfc5      	ittet	gt
   192c6:	462f      	movgt	r7, r5
   192c8:	9b0d      	ldrgt	r3, [sp, #52]	; 0x34
   192ca:	4633      	movle	r3, r6
   192cc:	6023      	strgt	r3, [r4, #0]
   192ce:	bfc8      	it	gt
   192d0:	f89d 3038 	ldrbgt.w	r3, [sp, #56]	; 0x38
   192d4:	71a7      	strb	r7, [r4, #6]
   192d6:	bfc4      	itt	gt
   192d8:	7123      	strbgt	r3, [r4, #4]
   192da:	2300      	movgt	r3, #0
   192dc:	07b9      	lsls	r1, r7, #30
   192de:	d401      	bmi.n	192e4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   192e0:	07fa      	lsls	r2, r7, #31
   192e2:	d4af      	bmi.n	19244 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   192e4:	4656      	mov	r6, sl
   192e6:	4630      	mov	r0, r6
   192e8:	b011      	add	sp, #68	; 0x44
   192ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192ee:	2701      	movs	r7, #1
   192f0:	e7e2      	b.n	192b8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   192f2:	403d      	ands	r5, r7
   192f4:	b2ed      	uxtb	r5, r5
   192f6:	2d03      	cmp	r5, #3
   192f8:	f8c4 b000 	str.w	fp, [r4]
   192fc:	d904      	bls.n	19308 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x232>
   192fe:	2302      	movs	r3, #2
   19300:	f04f 0a01 	mov.w	sl, #1
   19304:	71a3      	strb	r3, [r4, #6]
   19306:	e7ed      	b.n	192e4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   19308:	2301      	movs	r3, #1
   1930a:	71a3      	strb	r3, [r4, #6]
   1930c:	e79a      	b.n	19244 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1930e:	2301      	movs	r3, #1
   19310:	9306      	str	r3, [sp, #24]
   19312:	4633      	mov	r3, r6
   19314:	9a04      	ldr	r2, [sp, #16]
   19316:	461e      	mov	r6, r3
   19318:	3a01      	subs	r2, #1
   1931a:	9204      	str	r2, [sp, #16]
   1931c:	9a05      	ldr	r2, [sp, #20]
   1931e:	3a08      	subs	r2, #8
   19320:	9205      	str	r2, [sp, #20]
   19322:	e712      	b.n	1914a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x74>
   19324:	9b06      	ldr	r3, [sp, #24]
   19326:	2b00      	cmp	r3, #0
   19328:	d0dd      	beq.n	192e6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   1932a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1932c:	9306      	str	r3, [sp, #24]
   1932e:	2b00      	cmp	r3, #0
   19330:	d0d9      	beq.n	192e6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   19332:	9b04      	ldr	r3, [sp, #16]
   19334:	930a      	str	r3, [sp, #40]	; 0x28
   19336:	e702      	b.n	1913e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x68>
   19338:	f89d 301c 	ldrb.w	r3, [sp, #28]
   1933c:	7163      	strb	r3, [r4, #5]
   1933e:	e76b      	b.n	19218 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   19340:	2f00      	cmp	r7, #0
   19342:	bf08      	it	eq
   19344:	2701      	moveq	r7, #1
   19346:	2d00      	cmp	r5, #0
   19348:	bf08      	it	eq
   1934a:	2501      	moveq	r5, #1
   1934c:	e7b4      	b.n	192b8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   1934e:	2d00      	cmp	r5, #0
   19350:	d1cd      	bne.n	192ee <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   19352:	2701      	movs	r7, #1
   19354:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   19356:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   19358:	9300      	str	r3, [sp, #0]
   1935a:	4641      	mov	r1, r8
   1935c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1935e:	9808      	ldr	r0, [sp, #32]
   19360:	f7ff fea4 	bl	190ac <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   19364:	4605      	mov	r5, r0
   19366:	e7a7      	b.n	192b8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>

00019368 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   19368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1936c:	b089      	sub	sp, #36	; 0x24
   1936e:	4607      	mov	r7, r0
   19370:	9102      	str	r1, [sp, #8]
   19372:	4692      	mov	sl, r2
   19374:	461c      	mov	r4, r3
   19376:	f7ff fd75 	bl	18e64 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   1937a:	4605      	mov	r5, r0
   1937c:	2800      	cmp	r0, #0
   1937e:	d155      	bne.n	1942c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   19380:	f04f 0b00 	mov.w	fp, #0
   19384:	f8d4 8008 	ldr.w	r8, [r4, #8]
   19388:	f8d7 900c 	ldr.w	r9, [r7, #12]
   1938c:	f018 0f10 	tst.w	r8, #16
   19390:	bf18      	it	ne
   19392:	f8d7 8008 	ldrne.w	r8, [r7, #8]
   19396:	eb07 06c9 	add.w	r6, r7, r9, lsl #3
   1939a:	f008 0301 	and.w	r3, r8, #1
   1939e:	9303      	str	r3, [sp, #12]
   193a0:	f1b9 0f00 	cmp.w	r9, #0
   193a4:	d06b      	beq.n	1947e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x116>
   193a6:	68f2      	ldr	r2, [r6, #12]
   193a8:	f8cd b010 	str.w	fp, [sp, #16]
   193ac:	f002 0301 	and.w	r3, r2, #1
   193b0:	9300      	str	r3, [sp, #0]
   193b2:	f012 0302 	ands.w	r3, r2, #2
   193b6:	f88d b014 	strb.w	fp, [sp, #20]
   193ba:	f8cd 8018 	str.w	r8, [sp, #24]
   193be:	f8cd b01c 	str.w	fp, [sp, #28]
   193c2:	9301      	str	r3, [sp, #4]
   193c4:	d102      	bne.n	193cc <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x64>
   193c6:	9b03      	ldr	r3, [sp, #12]
   193c8:	2b00      	cmp	r3, #0
   193ca:	d04a      	beq.n	19462 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   193cc:	f1ba 0f00 	cmp.w	sl, #0
   193d0:	d030      	beq.n	19434 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xcc>
   193d2:	9b00      	ldr	r3, [sp, #0]
   193d4:	1212      	asrs	r2, r2, #8
   193d6:	b113      	cbz	r3, 193de <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x76>
   193d8:	f8da 3000 	ldr.w	r3, [sl]
   193dc:	589a      	ldr	r2, [r3, r2]
   193de:	4452      	add	r2, sl
   193e0:	68b0      	ldr	r0, [r6, #8]
   193e2:	9902      	ldr	r1, [sp, #8]
   193e4:	6803      	ldr	r3, [r0, #0]
   193e6:	699d      	ldr	r5, [r3, #24]
   193e8:	ab04      	add	r3, sp, #16
   193ea:	47a8      	blx	r5
   193ec:	4605      	mov	r5, r0
   193ee:	2800      	cmp	r0, #0
   193f0:	d037      	beq.n	19462 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   193f2:	9b07      	ldr	r3, [sp, #28]
   193f4:	2b08      	cmp	r3, #8
   193f6:	d103      	bne.n	19400 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   193f8:	9b00      	ldr	r3, [sp, #0]
   193fa:	b10b      	cbz	r3, 19400 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   193fc:	68b3      	ldr	r3, [r6, #8]
   193fe:	9307      	str	r3, [sp, #28]
   19400:	f89d 3014 	ldrb.w	r3, [sp, #20]
   19404:	2b03      	cmp	r3, #3
   19406:	dd02      	ble.n	1940e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>
   19408:	9a01      	ldr	r2, [sp, #4]
   1940a:	2a00      	cmp	r2, #0
   1940c:	d03c      	beq.n	19488 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x120>
   1940e:	68e1      	ldr	r1, [r4, #12]
   19410:	b9c1      	cbnz	r1, 19444 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xdc>
   19412:	ab04      	add	r3, sp, #16
   19414:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   19416:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
   1941a:	7923      	ldrb	r3, [r4, #4]
   1941c:	2b03      	cmp	r3, #3
   1941e:	dd05      	ble.n	1942c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   19420:	079a      	lsls	r2, r3, #30
   19422:	d509      	bpl.n	19438 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xd0>
   19424:	68bb      	ldr	r3, [r7, #8]
   19426:	f013 0f01 	tst.w	r3, #1
   1942a:	d11a      	bne.n	19462 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   1942c:	4628      	mov	r0, r5
   1942e:	b009      	add	sp, #36	; 0x24
   19430:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19434:	4652      	mov	r2, sl
   19436:	e7d3      	b.n	193e0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x78>
   19438:	07db      	lsls	r3, r3, #31
   1943a:	d5f7      	bpl.n	1942c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1943c:	68bb      	ldr	r3, [r7, #8]
   1943e:	f013 0f02 	tst.w	r3, #2
   19442:	e7f2      	b.n	1942a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc2>
   19444:	6823      	ldr	r3, [r4, #0]
   19446:	9a04      	ldr	r2, [sp, #16]
   19448:	4293      	cmp	r3, r2
   1944a:	d004      	beq.n	19456 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xee>
   1944c:	2300      	movs	r3, #0
   1944e:	6023      	str	r3, [r4, #0]
   19450:	2302      	movs	r3, #2
   19452:	7123      	strb	r3, [r4, #4]
   19454:	e7ea      	b.n	1942c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   19456:	b143      	cbz	r3, 1946a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x102>
   19458:	7923      	ldrb	r3, [r4, #4]
   1945a:	f89d 2014 	ldrb.w	r2, [sp, #20]
   1945e:	4313      	orrs	r3, r2
   19460:	7123      	strb	r3, [r4, #4]
   19462:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
   19466:	3e08      	subs	r6, #8
   19468:	e79a      	b.n	193a0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x38>
   1946a:	9807      	ldr	r0, [sp, #28]
   1946c:	2808      	cmp	r0, #8
   1946e:	d0ef      	beq.n	19450 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   19470:	2908      	cmp	r1, #8
   19472:	d0ed      	beq.n	19450 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   19474:	f000 f810 	bl	19498 <std::type_info::operator==(std::type_info const&) const>
   19478:	2800      	cmp	r0, #0
   1947a:	d1ed      	bne.n	19458 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xf0>
   1947c:	e7e8      	b.n	19450 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   1947e:	7925      	ldrb	r5, [r4, #4]
   19480:	3500      	adds	r5, #0
   19482:	bf18      	it	ne
   19484:	2501      	movne	r5, #1
   19486:	e7d1      	b.n	1942c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   19488:	f023 0302 	bic.w	r3, r3, #2
   1948c:	f88d 3014 	strb.w	r3, [sp, #20]
   19490:	e7bd      	b.n	1940e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>

00019492 <std::type_info::~type_info()>:
_ZNSt9type_infoD2Ev():
   19492:	4770      	bx	lr

00019494 <std::type_info::__is_pointer_p() const>:
_ZNKSt9type_info14__is_pointer_pEv():
   19494:	2000      	movs	r0, #0
   19496:	4770      	bx	lr

00019498 <std::type_info::operator==(std::type_info const&) const>:
_ZNKSt9type_infoeqERKS_():
   19498:	4281      	cmp	r1, r0
   1949a:	b508      	push	{r3, lr}
   1949c:	d00e      	beq.n	194bc <std::type_info::operator==(std::type_info const&) const+0x24>
   1949e:	6840      	ldr	r0, [r0, #4]
   194a0:	7803      	ldrb	r3, [r0, #0]
   194a2:	2b2a      	cmp	r3, #42	; 0x2a
   194a4:	d00c      	beq.n	194c0 <std::type_info::operator==(std::type_info const&) const+0x28>
   194a6:	6849      	ldr	r1, [r1, #4]
   194a8:	780b      	ldrb	r3, [r1, #0]
   194aa:	2b2a      	cmp	r3, #42	; 0x2a
   194ac:	bf08      	it	eq
   194ae:	3101      	addeq	r1, #1
   194b0:	f003 fa11 	bl	1c8d6 <strcmp>
   194b4:	fab0 f080 	clz	r0, r0
   194b8:	0940      	lsrs	r0, r0, #5
   194ba:	bd08      	pop	{r3, pc}
   194bc:	2001      	movs	r0, #1
   194be:	bd08      	pop	{r3, pc}
   194c0:	2000      	movs	r0, #0
   194c2:	bd08      	pop	{r3, pc}

000194c4 <__cxxabiv1::__terminate(void (*)())>:
_ZN10__cxxabiv111__terminateEPFvvE():
   194c4:	b508      	push	{r3, lr}
   194c6:	4780      	blx	r0
   194c8:	f001 f85a 	bl	1a580 <abort>

000194cc <std::get_terminate()>:
_ZSt13get_terminatev():
   194cc:	4b02      	ldr	r3, [pc, #8]	; (194d8 <std::get_terminate()+0xc>)
   194ce:	6818      	ldr	r0, [r3, #0]
   194d0:	f3bf 8f5b 	dmb	ish
   194d4:	4770      	bx	lr
   194d6:	bf00      	nop
   194d8:	2007c0e0 	.word	0x2007c0e0

000194dc <std::terminate()>:
_ZSt9terminatev():
   194dc:	b508      	push	{r3, lr}
   194de:	f7ff fff5 	bl	194cc <std::get_terminate()>
   194e2:	f7ff ffef 	bl	194c4 <__cxxabiv1::__terminate(void (*)())>
   194e6:	Address 0x00000000000194e6 is out of bounds.


000194e8 <__aeabi_llsl>:
__aeabi_llsl():
   194e8:	4091      	lsls	r1, r2
   194ea:	1c03      	adds	r3, r0, #0
   194ec:	4090      	lsls	r0, r2
   194ee:	469c      	mov	ip, r3
   194f0:	3a20      	subs	r2, #32
   194f2:	4093      	lsls	r3, r2
   194f4:	4319      	orrs	r1, r3
   194f6:	4252      	negs	r2, r2
   194f8:	4663      	mov	r3, ip
   194fa:	40d3      	lsrs	r3, r2
   194fc:	4319      	orrs	r1, r3
   194fe:	4770      	bx	lr

00019500 <__aeabi_drsub>:
__aeabi_drsub():
   19500:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   19504:	e002      	b.n	1950c <__adddf3>
   19506:	bf00      	nop

00019508 <__aeabi_dsub>:
__subdf3():
   19508:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0001950c <__adddf3>:
__aeabi_dadd():
   1950c:	b530      	push	{r4, r5, lr}
   1950e:	ea4f 0441 	mov.w	r4, r1, lsl #1
   19512:	ea4f 0543 	mov.w	r5, r3, lsl #1
   19516:	ea94 0f05 	teq	r4, r5
   1951a:	bf08      	it	eq
   1951c:	ea90 0f02 	teqeq	r0, r2
   19520:	bf1f      	itttt	ne
   19522:	ea54 0c00 	orrsne.w	ip, r4, r0
   19526:	ea55 0c02 	orrsne.w	ip, r5, r2
   1952a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   1952e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   19532:	f000 80e2 	beq.w	196fa <__adddf3+0x1ee>
   19536:	ea4f 5454 	mov.w	r4, r4, lsr #21
   1953a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   1953e:	bfb8      	it	lt
   19540:	426d      	neglt	r5, r5
   19542:	dd0c      	ble.n	1955e <__adddf3+0x52>
   19544:	442c      	add	r4, r5
   19546:	ea80 0202 	eor.w	r2, r0, r2
   1954a:	ea81 0303 	eor.w	r3, r1, r3
   1954e:	ea82 0000 	eor.w	r0, r2, r0
   19552:	ea83 0101 	eor.w	r1, r3, r1
   19556:	ea80 0202 	eor.w	r2, r0, r2
   1955a:	ea81 0303 	eor.w	r3, r1, r3
   1955e:	2d36      	cmp	r5, #54	; 0x36
   19560:	bf88      	it	hi
   19562:	bd30      	pophi	{r4, r5, pc}
   19564:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   19568:	ea4f 3101 	mov.w	r1, r1, lsl #12
   1956c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   19570:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   19574:	d002      	beq.n	1957c <__adddf3+0x70>
   19576:	4240      	negs	r0, r0
   19578:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1957c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   19580:	ea4f 3303 	mov.w	r3, r3, lsl #12
   19584:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   19588:	d002      	beq.n	19590 <__adddf3+0x84>
   1958a:	4252      	negs	r2, r2
   1958c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   19590:	ea94 0f05 	teq	r4, r5
   19594:	f000 80a7 	beq.w	196e6 <__adddf3+0x1da>
   19598:	f1a4 0401 	sub.w	r4, r4, #1
   1959c:	f1d5 0e20 	rsbs	lr, r5, #32
   195a0:	db0d      	blt.n	195be <__adddf3+0xb2>
   195a2:	fa02 fc0e 	lsl.w	ip, r2, lr
   195a6:	fa22 f205 	lsr.w	r2, r2, r5
   195aa:	1880      	adds	r0, r0, r2
   195ac:	f141 0100 	adc.w	r1, r1, #0
   195b0:	fa03 f20e 	lsl.w	r2, r3, lr
   195b4:	1880      	adds	r0, r0, r2
   195b6:	fa43 f305 	asr.w	r3, r3, r5
   195ba:	4159      	adcs	r1, r3
   195bc:	e00e      	b.n	195dc <__adddf3+0xd0>
   195be:	f1a5 0520 	sub.w	r5, r5, #32
   195c2:	f10e 0e20 	add.w	lr, lr, #32
   195c6:	2a01      	cmp	r2, #1
   195c8:	fa03 fc0e 	lsl.w	ip, r3, lr
   195cc:	bf28      	it	cs
   195ce:	f04c 0c02 	orrcs.w	ip, ip, #2
   195d2:	fa43 f305 	asr.w	r3, r3, r5
   195d6:	18c0      	adds	r0, r0, r3
   195d8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   195dc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   195e0:	d507      	bpl.n	195f2 <__adddf3+0xe6>
   195e2:	f04f 0e00 	mov.w	lr, #0
   195e6:	f1dc 0c00 	rsbs	ip, ip, #0
   195ea:	eb7e 0000 	sbcs.w	r0, lr, r0
   195ee:	eb6e 0101 	sbc.w	r1, lr, r1
   195f2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   195f6:	d31b      	bcc.n	19630 <__adddf3+0x124>
   195f8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   195fc:	d30c      	bcc.n	19618 <__adddf3+0x10c>
   195fe:	0849      	lsrs	r1, r1, #1
   19600:	ea5f 0030 	movs.w	r0, r0, rrx
   19604:	ea4f 0c3c 	mov.w	ip, ip, rrx
   19608:	f104 0401 	add.w	r4, r4, #1
   1960c:	ea4f 5244 	mov.w	r2, r4, lsl #21
   19610:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   19614:	f080 809a 	bcs.w	1974c <__adddf3+0x240>
   19618:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   1961c:	bf08      	it	eq
   1961e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   19622:	f150 0000 	adcs.w	r0, r0, #0
   19626:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1962a:	ea41 0105 	orr.w	r1, r1, r5
   1962e:	bd30      	pop	{r4, r5, pc}
   19630:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   19634:	4140      	adcs	r0, r0
   19636:	eb41 0101 	adc.w	r1, r1, r1
   1963a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1963e:	f1a4 0401 	sub.w	r4, r4, #1
   19642:	d1e9      	bne.n	19618 <__adddf3+0x10c>
   19644:	f091 0f00 	teq	r1, #0
   19648:	bf04      	itt	eq
   1964a:	4601      	moveq	r1, r0
   1964c:	2000      	moveq	r0, #0
   1964e:	fab1 f381 	clz	r3, r1
   19652:	bf08      	it	eq
   19654:	3320      	addeq	r3, #32
   19656:	f1a3 030b 	sub.w	r3, r3, #11
   1965a:	f1b3 0220 	subs.w	r2, r3, #32
   1965e:	da0c      	bge.n	1967a <__adddf3+0x16e>
   19660:	320c      	adds	r2, #12
   19662:	dd08      	ble.n	19676 <__adddf3+0x16a>
   19664:	f102 0c14 	add.w	ip, r2, #20
   19668:	f1c2 020c 	rsb	r2, r2, #12
   1966c:	fa01 f00c 	lsl.w	r0, r1, ip
   19670:	fa21 f102 	lsr.w	r1, r1, r2
   19674:	e00c      	b.n	19690 <__adddf3+0x184>
   19676:	f102 0214 	add.w	r2, r2, #20
   1967a:	bfd8      	it	le
   1967c:	f1c2 0c20 	rsble	ip, r2, #32
   19680:	fa01 f102 	lsl.w	r1, r1, r2
   19684:	fa20 fc0c 	lsr.w	ip, r0, ip
   19688:	bfdc      	itt	le
   1968a:	ea41 010c 	orrle.w	r1, r1, ip
   1968e:	4090      	lslle	r0, r2
   19690:	1ae4      	subs	r4, r4, r3
   19692:	bfa2      	ittt	ge
   19694:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   19698:	4329      	orrge	r1, r5
   1969a:	bd30      	popge	{r4, r5, pc}
   1969c:	ea6f 0404 	mvn.w	r4, r4
   196a0:	3c1f      	subs	r4, #31
   196a2:	da1c      	bge.n	196de <__adddf3+0x1d2>
   196a4:	340c      	adds	r4, #12
   196a6:	dc0e      	bgt.n	196c6 <__adddf3+0x1ba>
   196a8:	f104 0414 	add.w	r4, r4, #20
   196ac:	f1c4 0220 	rsb	r2, r4, #32
   196b0:	fa20 f004 	lsr.w	r0, r0, r4
   196b4:	fa01 f302 	lsl.w	r3, r1, r2
   196b8:	ea40 0003 	orr.w	r0, r0, r3
   196bc:	fa21 f304 	lsr.w	r3, r1, r4
   196c0:	ea45 0103 	orr.w	r1, r5, r3
   196c4:	bd30      	pop	{r4, r5, pc}
   196c6:	f1c4 040c 	rsb	r4, r4, #12
   196ca:	f1c4 0220 	rsb	r2, r4, #32
   196ce:	fa20 f002 	lsr.w	r0, r0, r2
   196d2:	fa01 f304 	lsl.w	r3, r1, r4
   196d6:	ea40 0003 	orr.w	r0, r0, r3
   196da:	4629      	mov	r1, r5
   196dc:	bd30      	pop	{r4, r5, pc}
   196de:	fa21 f004 	lsr.w	r0, r1, r4
   196e2:	4629      	mov	r1, r5
   196e4:	bd30      	pop	{r4, r5, pc}
   196e6:	f094 0f00 	teq	r4, #0
   196ea:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   196ee:	bf06      	itte	eq
   196f0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   196f4:	3401      	addeq	r4, #1
   196f6:	3d01      	subne	r5, #1
   196f8:	e74e      	b.n	19598 <__adddf3+0x8c>
   196fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   196fe:	bf18      	it	ne
   19700:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   19704:	d029      	beq.n	1975a <__adddf3+0x24e>
   19706:	ea94 0f05 	teq	r4, r5
   1970a:	bf08      	it	eq
   1970c:	ea90 0f02 	teqeq	r0, r2
   19710:	d005      	beq.n	1971e <__adddf3+0x212>
   19712:	ea54 0c00 	orrs.w	ip, r4, r0
   19716:	bf04      	itt	eq
   19718:	4619      	moveq	r1, r3
   1971a:	4610      	moveq	r0, r2
   1971c:	bd30      	pop	{r4, r5, pc}
   1971e:	ea91 0f03 	teq	r1, r3
   19722:	bf1e      	ittt	ne
   19724:	2100      	movne	r1, #0
   19726:	2000      	movne	r0, #0
   19728:	bd30      	popne	{r4, r5, pc}
   1972a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   1972e:	d105      	bne.n	1973c <__adddf3+0x230>
   19730:	0040      	lsls	r0, r0, #1
   19732:	4149      	adcs	r1, r1
   19734:	bf28      	it	cs
   19736:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   1973a:	bd30      	pop	{r4, r5, pc}
   1973c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   19740:	bf3c      	itt	cc
   19742:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   19746:	bd30      	popcc	{r4, r5, pc}
   19748:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1974c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   19750:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   19754:	f04f 0000 	mov.w	r0, #0
   19758:	bd30      	pop	{r4, r5, pc}
   1975a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   1975e:	bf1a      	itte	ne
   19760:	4619      	movne	r1, r3
   19762:	4610      	movne	r0, r2
   19764:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   19768:	bf1c      	itt	ne
   1976a:	460b      	movne	r3, r1
   1976c:	4602      	movne	r2, r0
   1976e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   19772:	bf06      	itte	eq
   19774:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   19778:	ea91 0f03 	teqeq	r1, r3
   1977c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   19780:	bd30      	pop	{r4, r5, pc}
   19782:	bf00      	nop

00019784 <__aeabi_ui2d>:
__floatunsidf():
   19784:	f090 0f00 	teq	r0, #0
   19788:	bf04      	itt	eq
   1978a:	2100      	moveq	r1, #0
   1978c:	4770      	bxeq	lr
   1978e:	b530      	push	{r4, r5, lr}
   19790:	f44f 6480 	mov.w	r4, #1024	; 0x400
   19794:	f104 0432 	add.w	r4, r4, #50	; 0x32
   19798:	f04f 0500 	mov.w	r5, #0
   1979c:	f04f 0100 	mov.w	r1, #0
   197a0:	e750      	b.n	19644 <__adddf3+0x138>
   197a2:	bf00      	nop

000197a4 <__aeabi_i2d>:
__aeabi_i2d():
   197a4:	f090 0f00 	teq	r0, #0
   197a8:	bf04      	itt	eq
   197aa:	2100      	moveq	r1, #0
   197ac:	4770      	bxeq	lr
   197ae:	b530      	push	{r4, r5, lr}
   197b0:	f44f 6480 	mov.w	r4, #1024	; 0x400
   197b4:	f104 0432 	add.w	r4, r4, #50	; 0x32
   197b8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   197bc:	bf48      	it	mi
   197be:	4240      	negmi	r0, r0
   197c0:	f04f 0100 	mov.w	r1, #0
   197c4:	e73e      	b.n	19644 <__adddf3+0x138>
   197c6:	bf00      	nop

000197c8 <__aeabi_f2d>:
__aeabi_f2d():
   197c8:	0042      	lsls	r2, r0, #1
   197ca:	ea4f 01e2 	mov.w	r1, r2, asr #3
   197ce:	ea4f 0131 	mov.w	r1, r1, rrx
   197d2:	ea4f 7002 	mov.w	r0, r2, lsl #28
   197d6:	bf1f      	itttt	ne
   197d8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   197dc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   197e0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   197e4:	4770      	bxne	lr
   197e6:	f092 0f00 	teq	r2, #0
   197ea:	bf14      	ite	ne
   197ec:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   197f0:	4770      	bxeq	lr
   197f2:	b530      	push	{r4, r5, lr}
   197f4:	f44f 7460 	mov.w	r4, #896	; 0x380
   197f8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   197fc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   19800:	e720      	b.n	19644 <__adddf3+0x138>
   19802:	bf00      	nop

00019804 <__aeabi_ul2d>:
__floatundidf():
   19804:	ea50 0201 	orrs.w	r2, r0, r1
   19808:	bf08      	it	eq
   1980a:	4770      	bxeq	lr
   1980c:	b530      	push	{r4, r5, lr}
   1980e:	f04f 0500 	mov.w	r5, #0
   19812:	e00a      	b.n	1982a <__aeabi_l2d+0x16>

00019814 <__aeabi_l2d>:
__aeabi_l2d():
   19814:	ea50 0201 	orrs.w	r2, r0, r1
   19818:	bf08      	it	eq
   1981a:	4770      	bxeq	lr
   1981c:	b530      	push	{r4, r5, lr}
   1981e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   19822:	d502      	bpl.n	1982a <__aeabi_l2d+0x16>
   19824:	4240      	negs	r0, r0
   19826:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1982a:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1982e:	f104 0432 	add.w	r4, r4, #50	; 0x32
   19832:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   19836:	f43f aedc 	beq.w	195f2 <__adddf3+0xe6>
   1983a:	f04f 0203 	mov.w	r2, #3
   1983e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   19842:	bf18      	it	ne
   19844:	3203      	addne	r2, #3
   19846:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1984a:	bf18      	it	ne
   1984c:	3203      	addne	r2, #3
   1984e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   19852:	f1c2 0320 	rsb	r3, r2, #32
   19856:	fa00 fc03 	lsl.w	ip, r0, r3
   1985a:	fa20 f002 	lsr.w	r0, r0, r2
   1985e:	fa01 fe03 	lsl.w	lr, r1, r3
   19862:	ea40 000e 	orr.w	r0, r0, lr
   19866:	fa21 f102 	lsr.w	r1, r1, r2
   1986a:	4414      	add	r4, r2
   1986c:	e6c1      	b.n	195f2 <__adddf3+0xe6>
   1986e:	bf00      	nop

00019870 <__aeabi_dmul>:
__muldf3():
   19870:	b570      	push	{r4, r5, r6, lr}
   19872:	f04f 0cff 	mov.w	ip, #255	; 0xff
   19876:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   1987a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   1987e:	bf1d      	ittte	ne
   19880:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   19884:	ea94 0f0c 	teqne	r4, ip
   19888:	ea95 0f0c 	teqne	r5, ip
   1988c:	f000 f8de 	bleq	19a4c <__aeabi_dmul+0x1dc>
   19890:	442c      	add	r4, r5
   19892:	ea81 0603 	eor.w	r6, r1, r3
   19896:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   1989a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   1989e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   198a2:	bf18      	it	ne
   198a4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   198a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   198ac:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   198b0:	d038      	beq.n	19924 <__aeabi_dmul+0xb4>
   198b2:	fba0 ce02 	umull	ip, lr, r0, r2
   198b6:	f04f 0500 	mov.w	r5, #0
   198ba:	fbe1 e502 	umlal	lr, r5, r1, r2
   198be:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   198c2:	fbe0 e503 	umlal	lr, r5, r0, r3
   198c6:	f04f 0600 	mov.w	r6, #0
   198ca:	fbe1 5603 	umlal	r5, r6, r1, r3
   198ce:	f09c 0f00 	teq	ip, #0
   198d2:	bf18      	it	ne
   198d4:	f04e 0e01 	orrne.w	lr, lr, #1
   198d8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   198dc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   198e0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   198e4:	d204      	bcs.n	198f0 <__aeabi_dmul+0x80>
   198e6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   198ea:	416d      	adcs	r5, r5
   198ec:	eb46 0606 	adc.w	r6, r6, r6
   198f0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   198f4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   198f8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   198fc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   19900:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   19904:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   19908:	bf88      	it	hi
   1990a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   1990e:	d81e      	bhi.n	1994e <__aeabi_dmul+0xde>
   19910:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   19914:	bf08      	it	eq
   19916:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   1991a:	f150 0000 	adcs.w	r0, r0, #0
   1991e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   19922:	bd70      	pop	{r4, r5, r6, pc}
   19924:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   19928:	ea46 0101 	orr.w	r1, r6, r1
   1992c:	ea40 0002 	orr.w	r0, r0, r2
   19930:	ea81 0103 	eor.w	r1, r1, r3
   19934:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   19938:	bfc2      	ittt	gt
   1993a:	ebd4 050c 	rsbsgt	r5, r4, ip
   1993e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   19942:	bd70      	popgt	{r4, r5, r6, pc}
   19944:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   19948:	f04f 0e00 	mov.w	lr, #0
   1994c:	3c01      	subs	r4, #1
   1994e:	f300 80ab 	bgt.w	19aa8 <__aeabi_dmul+0x238>
   19952:	f114 0f36 	cmn.w	r4, #54	; 0x36
   19956:	bfde      	ittt	le
   19958:	2000      	movle	r0, #0
   1995a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   1995e:	bd70      	pople	{r4, r5, r6, pc}
   19960:	f1c4 0400 	rsb	r4, r4, #0
   19964:	3c20      	subs	r4, #32
   19966:	da35      	bge.n	199d4 <__aeabi_dmul+0x164>
   19968:	340c      	adds	r4, #12
   1996a:	dc1b      	bgt.n	199a4 <__aeabi_dmul+0x134>
   1996c:	f104 0414 	add.w	r4, r4, #20
   19970:	f1c4 0520 	rsb	r5, r4, #32
   19974:	fa00 f305 	lsl.w	r3, r0, r5
   19978:	fa20 f004 	lsr.w	r0, r0, r4
   1997c:	fa01 f205 	lsl.w	r2, r1, r5
   19980:	ea40 0002 	orr.w	r0, r0, r2
   19984:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   19988:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   1998c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   19990:	fa21 f604 	lsr.w	r6, r1, r4
   19994:	eb42 0106 	adc.w	r1, r2, r6
   19998:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1999c:	bf08      	it	eq
   1999e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   199a2:	bd70      	pop	{r4, r5, r6, pc}
   199a4:	f1c4 040c 	rsb	r4, r4, #12
   199a8:	f1c4 0520 	rsb	r5, r4, #32
   199ac:	fa00 f304 	lsl.w	r3, r0, r4
   199b0:	fa20 f005 	lsr.w	r0, r0, r5
   199b4:	fa01 f204 	lsl.w	r2, r1, r4
   199b8:	ea40 0002 	orr.w	r0, r0, r2
   199bc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   199c0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   199c4:	f141 0100 	adc.w	r1, r1, #0
   199c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   199cc:	bf08      	it	eq
   199ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   199d2:	bd70      	pop	{r4, r5, r6, pc}
   199d4:	f1c4 0520 	rsb	r5, r4, #32
   199d8:	fa00 f205 	lsl.w	r2, r0, r5
   199dc:	ea4e 0e02 	orr.w	lr, lr, r2
   199e0:	fa20 f304 	lsr.w	r3, r0, r4
   199e4:	fa01 f205 	lsl.w	r2, r1, r5
   199e8:	ea43 0302 	orr.w	r3, r3, r2
   199ec:	fa21 f004 	lsr.w	r0, r1, r4
   199f0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   199f4:	fa21 f204 	lsr.w	r2, r1, r4
   199f8:	ea20 0002 	bic.w	r0, r0, r2
   199fc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   19a00:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   19a04:	bf08      	it	eq
   19a06:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   19a0a:	bd70      	pop	{r4, r5, r6, pc}
   19a0c:	f094 0f00 	teq	r4, #0
   19a10:	d10f      	bne.n	19a32 <__aeabi_dmul+0x1c2>
   19a12:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   19a16:	0040      	lsls	r0, r0, #1
   19a18:	eb41 0101 	adc.w	r1, r1, r1
   19a1c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   19a20:	bf08      	it	eq
   19a22:	3c01      	subeq	r4, #1
   19a24:	d0f7      	beq.n	19a16 <__aeabi_dmul+0x1a6>
   19a26:	ea41 0106 	orr.w	r1, r1, r6
   19a2a:	f095 0f00 	teq	r5, #0
   19a2e:	bf18      	it	ne
   19a30:	4770      	bxne	lr
   19a32:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   19a36:	0052      	lsls	r2, r2, #1
   19a38:	eb43 0303 	adc.w	r3, r3, r3
   19a3c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   19a40:	bf08      	it	eq
   19a42:	3d01      	subeq	r5, #1
   19a44:	d0f7      	beq.n	19a36 <__aeabi_dmul+0x1c6>
   19a46:	ea43 0306 	orr.w	r3, r3, r6
   19a4a:	4770      	bx	lr
   19a4c:	ea94 0f0c 	teq	r4, ip
   19a50:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   19a54:	bf18      	it	ne
   19a56:	ea95 0f0c 	teqne	r5, ip
   19a5a:	d00c      	beq.n	19a76 <__aeabi_dmul+0x206>
   19a5c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   19a60:	bf18      	it	ne
   19a62:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   19a66:	d1d1      	bne.n	19a0c <__aeabi_dmul+0x19c>
   19a68:	ea81 0103 	eor.w	r1, r1, r3
   19a6c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   19a70:	f04f 0000 	mov.w	r0, #0
   19a74:	bd70      	pop	{r4, r5, r6, pc}
   19a76:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   19a7a:	bf06      	itte	eq
   19a7c:	4610      	moveq	r0, r2
   19a7e:	4619      	moveq	r1, r3
   19a80:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   19a84:	d019      	beq.n	19aba <__aeabi_dmul+0x24a>
   19a86:	ea94 0f0c 	teq	r4, ip
   19a8a:	d102      	bne.n	19a92 <__aeabi_dmul+0x222>
   19a8c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   19a90:	d113      	bne.n	19aba <__aeabi_dmul+0x24a>
   19a92:	ea95 0f0c 	teq	r5, ip
   19a96:	d105      	bne.n	19aa4 <__aeabi_dmul+0x234>
   19a98:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   19a9c:	bf1c      	itt	ne
   19a9e:	4610      	movne	r0, r2
   19aa0:	4619      	movne	r1, r3
   19aa2:	d10a      	bne.n	19aba <__aeabi_dmul+0x24a>
   19aa4:	ea81 0103 	eor.w	r1, r1, r3
   19aa8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   19aac:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   19ab0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   19ab4:	f04f 0000 	mov.w	r0, #0
   19ab8:	bd70      	pop	{r4, r5, r6, pc}
   19aba:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   19abe:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   19ac2:	bd70      	pop	{r4, r5, r6, pc}

00019ac4 <__aeabi_ddiv>:
__divdf3():
   19ac4:	b570      	push	{r4, r5, r6, lr}
   19ac6:	f04f 0cff 	mov.w	ip, #255	; 0xff
   19aca:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   19ace:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   19ad2:	bf1d      	ittte	ne
   19ad4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   19ad8:	ea94 0f0c 	teqne	r4, ip
   19adc:	ea95 0f0c 	teqne	r5, ip
   19ae0:	f000 f8a7 	bleq	19c32 <__aeabi_ddiv+0x16e>
   19ae4:	eba4 0405 	sub.w	r4, r4, r5
   19ae8:	ea81 0e03 	eor.w	lr, r1, r3
   19aec:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   19af0:	ea4f 3101 	mov.w	r1, r1, lsl #12
   19af4:	f000 8088 	beq.w	19c08 <__aeabi_ddiv+0x144>
   19af8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   19afc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   19b00:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   19b04:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   19b08:	ea4f 2202 	mov.w	r2, r2, lsl #8
   19b0c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   19b10:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   19b14:	ea4f 2600 	mov.w	r6, r0, lsl #8
   19b18:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   19b1c:	429d      	cmp	r5, r3
   19b1e:	bf08      	it	eq
   19b20:	4296      	cmpeq	r6, r2
   19b22:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   19b26:	f504 7440 	add.w	r4, r4, #768	; 0x300
   19b2a:	d202      	bcs.n	19b32 <__aeabi_ddiv+0x6e>
   19b2c:	085b      	lsrs	r3, r3, #1
   19b2e:	ea4f 0232 	mov.w	r2, r2, rrx
   19b32:	1ab6      	subs	r6, r6, r2
   19b34:	eb65 0503 	sbc.w	r5, r5, r3
   19b38:	085b      	lsrs	r3, r3, #1
   19b3a:	ea4f 0232 	mov.w	r2, r2, rrx
   19b3e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   19b42:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   19b46:	ebb6 0e02 	subs.w	lr, r6, r2
   19b4a:	eb75 0e03 	sbcs.w	lr, r5, r3
   19b4e:	bf22      	ittt	cs
   19b50:	1ab6      	subcs	r6, r6, r2
   19b52:	4675      	movcs	r5, lr
   19b54:	ea40 000c 	orrcs.w	r0, r0, ip
   19b58:	085b      	lsrs	r3, r3, #1
   19b5a:	ea4f 0232 	mov.w	r2, r2, rrx
   19b5e:	ebb6 0e02 	subs.w	lr, r6, r2
   19b62:	eb75 0e03 	sbcs.w	lr, r5, r3
   19b66:	bf22      	ittt	cs
   19b68:	1ab6      	subcs	r6, r6, r2
   19b6a:	4675      	movcs	r5, lr
   19b6c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   19b70:	085b      	lsrs	r3, r3, #1
   19b72:	ea4f 0232 	mov.w	r2, r2, rrx
   19b76:	ebb6 0e02 	subs.w	lr, r6, r2
   19b7a:	eb75 0e03 	sbcs.w	lr, r5, r3
   19b7e:	bf22      	ittt	cs
   19b80:	1ab6      	subcs	r6, r6, r2
   19b82:	4675      	movcs	r5, lr
   19b84:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   19b88:	085b      	lsrs	r3, r3, #1
   19b8a:	ea4f 0232 	mov.w	r2, r2, rrx
   19b8e:	ebb6 0e02 	subs.w	lr, r6, r2
   19b92:	eb75 0e03 	sbcs.w	lr, r5, r3
   19b96:	bf22      	ittt	cs
   19b98:	1ab6      	subcs	r6, r6, r2
   19b9a:	4675      	movcs	r5, lr
   19b9c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   19ba0:	ea55 0e06 	orrs.w	lr, r5, r6
   19ba4:	d018      	beq.n	19bd8 <__aeabi_ddiv+0x114>
   19ba6:	ea4f 1505 	mov.w	r5, r5, lsl #4
   19baa:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   19bae:	ea4f 1606 	mov.w	r6, r6, lsl #4
   19bb2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   19bb6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   19bba:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   19bbe:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   19bc2:	d1c0      	bne.n	19b46 <__aeabi_ddiv+0x82>
   19bc4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   19bc8:	d10b      	bne.n	19be2 <__aeabi_ddiv+0x11e>
   19bca:	ea41 0100 	orr.w	r1, r1, r0
   19bce:	f04f 0000 	mov.w	r0, #0
   19bd2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   19bd6:	e7b6      	b.n	19b46 <__aeabi_ddiv+0x82>
   19bd8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   19bdc:	bf04      	itt	eq
   19bde:	4301      	orreq	r1, r0
   19be0:	2000      	moveq	r0, #0
   19be2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   19be6:	bf88      	it	hi
   19be8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   19bec:	f63f aeaf 	bhi.w	1994e <__aeabi_dmul+0xde>
   19bf0:	ebb5 0c03 	subs.w	ip, r5, r3
   19bf4:	bf04      	itt	eq
   19bf6:	ebb6 0c02 	subseq.w	ip, r6, r2
   19bfa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   19bfe:	f150 0000 	adcs.w	r0, r0, #0
   19c02:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   19c06:	bd70      	pop	{r4, r5, r6, pc}
   19c08:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   19c0c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   19c10:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   19c14:	bfc2      	ittt	gt
   19c16:	ebd4 050c 	rsbsgt	r5, r4, ip
   19c1a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   19c1e:	bd70      	popgt	{r4, r5, r6, pc}
   19c20:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   19c24:	f04f 0e00 	mov.w	lr, #0
   19c28:	3c01      	subs	r4, #1
   19c2a:	e690      	b.n	1994e <__aeabi_dmul+0xde>
   19c2c:	ea45 0e06 	orr.w	lr, r5, r6
   19c30:	e68d      	b.n	1994e <__aeabi_dmul+0xde>
   19c32:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   19c36:	ea94 0f0c 	teq	r4, ip
   19c3a:	bf08      	it	eq
   19c3c:	ea95 0f0c 	teqeq	r5, ip
   19c40:	f43f af3b 	beq.w	19aba <__aeabi_dmul+0x24a>
   19c44:	ea94 0f0c 	teq	r4, ip
   19c48:	d10a      	bne.n	19c60 <__aeabi_ddiv+0x19c>
   19c4a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   19c4e:	f47f af34 	bne.w	19aba <__aeabi_dmul+0x24a>
   19c52:	ea95 0f0c 	teq	r5, ip
   19c56:	f47f af25 	bne.w	19aa4 <__aeabi_dmul+0x234>
   19c5a:	4610      	mov	r0, r2
   19c5c:	4619      	mov	r1, r3
   19c5e:	e72c      	b.n	19aba <__aeabi_dmul+0x24a>
   19c60:	ea95 0f0c 	teq	r5, ip
   19c64:	d106      	bne.n	19c74 <__aeabi_ddiv+0x1b0>
   19c66:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   19c6a:	f43f aefd 	beq.w	19a68 <__aeabi_dmul+0x1f8>
   19c6e:	4610      	mov	r0, r2
   19c70:	4619      	mov	r1, r3
   19c72:	e722      	b.n	19aba <__aeabi_dmul+0x24a>
   19c74:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   19c78:	bf18      	it	ne
   19c7a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   19c7e:	f47f aec5 	bne.w	19a0c <__aeabi_dmul+0x19c>
   19c82:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   19c86:	f47f af0d 	bne.w	19aa4 <__aeabi_dmul+0x234>
   19c8a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   19c8e:	f47f aeeb 	bne.w	19a68 <__aeabi_dmul+0x1f8>
   19c92:	e712      	b.n	19aba <__aeabi_dmul+0x24a>

00019c94 <__aeabi_d2uiz>:
__aeabi_d2uiz():
   19c94:	004a      	lsls	r2, r1, #1
   19c96:	d211      	bcs.n	19cbc <__aeabi_d2uiz+0x28>
   19c98:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   19c9c:	d211      	bcs.n	19cc2 <__aeabi_d2uiz+0x2e>
   19c9e:	d50d      	bpl.n	19cbc <__aeabi_d2uiz+0x28>
   19ca0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   19ca4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   19ca8:	d40e      	bmi.n	19cc8 <__aeabi_d2uiz+0x34>
   19caa:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   19cae:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   19cb2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   19cb6:	fa23 f002 	lsr.w	r0, r3, r2
   19cba:	4770      	bx	lr
   19cbc:	f04f 0000 	mov.w	r0, #0
   19cc0:	4770      	bx	lr
   19cc2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   19cc6:	d102      	bne.n	19cce <__aeabi_d2uiz+0x3a>
   19cc8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   19ccc:	4770      	bx	lr
   19cce:	f04f 0000 	mov.w	r0, #0
   19cd2:	4770      	bx	lr

00019cd4 <__aeabi_d2f>:
__truncdfsf2():
   19cd4:	ea4f 0241 	mov.w	r2, r1, lsl #1
   19cd8:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
   19cdc:	bf24      	itt	cs
   19cde:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
   19ce2:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
   19ce6:	d90d      	bls.n	19d04 <__aeabi_d2f+0x30>
   19ce8:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   19cec:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   19cf0:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   19cf4:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
   19cf8:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   19cfc:	bf08      	it	eq
   19cfe:	f020 0001 	biceq.w	r0, r0, #1
   19d02:	4770      	bx	lr
   19d04:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
   19d08:	d121      	bne.n	19d4e <__aeabi_d2f+0x7a>
   19d0a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
   19d0e:	bfbc      	itt	lt
   19d10:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
   19d14:	4770      	bxlt	lr
   19d16:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   19d1a:	ea4f 5252 	mov.w	r2, r2, lsr #21
   19d1e:	f1c2 0218 	rsb	r2, r2, #24
   19d22:	f1c2 0c20 	rsb	ip, r2, #32
   19d26:	fa10 f30c 	lsls.w	r3, r0, ip
   19d2a:	fa20 f002 	lsr.w	r0, r0, r2
   19d2e:	bf18      	it	ne
   19d30:	f040 0001 	orrne.w	r0, r0, #1
   19d34:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   19d38:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   19d3c:	fa03 fc0c 	lsl.w	ip, r3, ip
   19d40:	ea40 000c 	orr.w	r0, r0, ip
   19d44:	fa23 f302 	lsr.w	r3, r3, r2
   19d48:	ea4f 0343 	mov.w	r3, r3, lsl #1
   19d4c:	e7cc      	b.n	19ce8 <__aeabi_d2f+0x14>
   19d4e:	ea7f 5362 	mvns.w	r3, r2, asr #21
   19d52:	d107      	bne.n	19d64 <__aeabi_d2f+0x90>
   19d54:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   19d58:	bf1e      	ittt	ne
   19d5a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
   19d5e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
   19d62:	4770      	bxne	lr
   19d64:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
   19d68:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   19d6c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   19d70:	4770      	bx	lr
   19d72:	bf00      	nop

00019d74 <__aeabi_frsub>:
__aeabi_frsub():
   19d74:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   19d78:	e002      	b.n	19d80 <__addsf3>
   19d7a:	bf00      	nop

00019d7c <__aeabi_fsub>:
__aeabi_fsub():
   19d7c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00019d80 <__addsf3>:
__addsf3():
   19d80:	0042      	lsls	r2, r0, #1
   19d82:	bf1f      	itttt	ne
   19d84:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   19d88:	ea92 0f03 	teqne	r2, r3
   19d8c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   19d90:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   19d94:	d06a      	beq.n	19e6c <__addsf3+0xec>
   19d96:	ea4f 6212 	mov.w	r2, r2, lsr #24
   19d9a:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   19d9e:	bfc1      	itttt	gt
   19da0:	18d2      	addgt	r2, r2, r3
   19da2:	4041      	eorgt	r1, r0
   19da4:	4048      	eorgt	r0, r1
   19da6:	4041      	eorgt	r1, r0
   19da8:	bfb8      	it	lt
   19daa:	425b      	neglt	r3, r3
   19dac:	2b19      	cmp	r3, #25
   19dae:	bf88      	it	hi
   19db0:	4770      	bxhi	lr
   19db2:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   19db6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   19dba:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   19dbe:	bf18      	it	ne
   19dc0:	4240      	negne	r0, r0
   19dc2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   19dc6:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   19dca:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   19dce:	bf18      	it	ne
   19dd0:	4249      	negne	r1, r1
   19dd2:	ea92 0f03 	teq	r2, r3
   19dd6:	d03f      	beq.n	19e58 <__addsf3+0xd8>
   19dd8:	f1a2 0201 	sub.w	r2, r2, #1
   19ddc:	fa41 fc03 	asr.w	ip, r1, r3
   19de0:	eb10 000c 	adds.w	r0, r0, ip
   19de4:	f1c3 0320 	rsb	r3, r3, #32
   19de8:	fa01 f103 	lsl.w	r1, r1, r3
   19dec:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   19df0:	d502      	bpl.n	19df8 <__addsf3+0x78>
   19df2:	4249      	negs	r1, r1
   19df4:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   19df8:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   19dfc:	d313      	bcc.n	19e26 <__addsf3+0xa6>
   19dfe:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   19e02:	d306      	bcc.n	19e12 <__addsf3+0x92>
   19e04:	0840      	lsrs	r0, r0, #1
   19e06:	ea4f 0131 	mov.w	r1, r1, rrx
   19e0a:	f102 0201 	add.w	r2, r2, #1
   19e0e:	2afe      	cmp	r2, #254	; 0xfe
   19e10:	d251      	bcs.n	19eb6 <__addsf3+0x136>
   19e12:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   19e16:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   19e1a:	bf08      	it	eq
   19e1c:	f020 0001 	biceq.w	r0, r0, #1
   19e20:	ea40 0003 	orr.w	r0, r0, r3
   19e24:	4770      	bx	lr
   19e26:	0049      	lsls	r1, r1, #1
   19e28:	eb40 0000 	adc.w	r0, r0, r0
   19e2c:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   19e30:	f1a2 0201 	sub.w	r2, r2, #1
   19e34:	d1ed      	bne.n	19e12 <__addsf3+0x92>
   19e36:	fab0 fc80 	clz	ip, r0
   19e3a:	f1ac 0c08 	sub.w	ip, ip, #8
   19e3e:	ebb2 020c 	subs.w	r2, r2, ip
   19e42:	fa00 f00c 	lsl.w	r0, r0, ip
   19e46:	bfaa      	itet	ge
   19e48:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   19e4c:	4252      	neglt	r2, r2
   19e4e:	4318      	orrge	r0, r3
   19e50:	bfbc      	itt	lt
   19e52:	40d0      	lsrlt	r0, r2
   19e54:	4318      	orrlt	r0, r3
   19e56:	4770      	bx	lr
   19e58:	f092 0f00 	teq	r2, #0
   19e5c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   19e60:	bf06      	itte	eq
   19e62:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   19e66:	3201      	addeq	r2, #1
   19e68:	3b01      	subne	r3, #1
   19e6a:	e7b5      	b.n	19dd8 <__addsf3+0x58>
   19e6c:	ea4f 0341 	mov.w	r3, r1, lsl #1
   19e70:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   19e74:	bf18      	it	ne
   19e76:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   19e7a:	d021      	beq.n	19ec0 <__addsf3+0x140>
   19e7c:	ea92 0f03 	teq	r2, r3
   19e80:	d004      	beq.n	19e8c <__addsf3+0x10c>
   19e82:	f092 0f00 	teq	r2, #0
   19e86:	bf08      	it	eq
   19e88:	4608      	moveq	r0, r1
   19e8a:	4770      	bx	lr
   19e8c:	ea90 0f01 	teq	r0, r1
   19e90:	bf1c      	itt	ne
   19e92:	2000      	movne	r0, #0
   19e94:	4770      	bxne	lr
   19e96:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   19e9a:	d104      	bne.n	19ea6 <__addsf3+0x126>
   19e9c:	0040      	lsls	r0, r0, #1
   19e9e:	bf28      	it	cs
   19ea0:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   19ea4:	4770      	bx	lr
   19ea6:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   19eaa:	bf3c      	itt	cc
   19eac:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   19eb0:	4770      	bxcc	lr
   19eb2:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   19eb6:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   19eba:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   19ebe:	4770      	bx	lr
   19ec0:	ea7f 6222 	mvns.w	r2, r2, asr #24
   19ec4:	bf16      	itet	ne
   19ec6:	4608      	movne	r0, r1
   19ec8:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   19ecc:	4601      	movne	r1, r0
   19ece:	0242      	lsls	r2, r0, #9
   19ed0:	bf06      	itte	eq
   19ed2:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   19ed6:	ea90 0f01 	teqeq	r0, r1
   19eda:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   19ede:	4770      	bx	lr

00019ee0 <__aeabi_ui2f>:
__floatunsisf():
   19ee0:	f04f 0300 	mov.w	r3, #0
   19ee4:	e004      	b.n	19ef0 <__aeabi_i2f+0x8>
   19ee6:	bf00      	nop

00019ee8 <__aeabi_i2f>:
__floatsisf():
   19ee8:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   19eec:	bf48      	it	mi
   19eee:	4240      	negmi	r0, r0
   19ef0:	ea5f 0c00 	movs.w	ip, r0
   19ef4:	bf08      	it	eq
   19ef6:	4770      	bxeq	lr
   19ef8:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   19efc:	4601      	mov	r1, r0
   19efe:	f04f 0000 	mov.w	r0, #0
   19f02:	e01c      	b.n	19f3e <__aeabi_l2f+0x2a>

00019f04 <__aeabi_ul2f>:
__aeabi_ul2f():
   19f04:	ea50 0201 	orrs.w	r2, r0, r1
   19f08:	bf08      	it	eq
   19f0a:	4770      	bxeq	lr
   19f0c:	f04f 0300 	mov.w	r3, #0
   19f10:	e00a      	b.n	19f28 <__aeabi_l2f+0x14>
   19f12:	bf00      	nop

00019f14 <__aeabi_l2f>:
__aeabi_l2f():
   19f14:	ea50 0201 	orrs.w	r2, r0, r1
   19f18:	bf08      	it	eq
   19f1a:	4770      	bxeq	lr
   19f1c:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   19f20:	d502      	bpl.n	19f28 <__aeabi_l2f+0x14>
   19f22:	4240      	negs	r0, r0
   19f24:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   19f28:	ea5f 0c01 	movs.w	ip, r1
   19f2c:	bf02      	ittt	eq
   19f2e:	4684      	moveq	ip, r0
   19f30:	4601      	moveq	r1, r0
   19f32:	2000      	moveq	r0, #0
   19f34:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   19f38:	bf08      	it	eq
   19f3a:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   19f3e:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   19f42:	fabc f28c 	clz	r2, ip
   19f46:	3a08      	subs	r2, #8
   19f48:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   19f4c:	db10      	blt.n	19f70 <__aeabi_l2f+0x5c>
   19f4e:	fa01 fc02 	lsl.w	ip, r1, r2
   19f52:	4463      	add	r3, ip
   19f54:	fa00 fc02 	lsl.w	ip, r0, r2
   19f58:	f1c2 0220 	rsb	r2, r2, #32
   19f5c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   19f60:	fa20 f202 	lsr.w	r2, r0, r2
   19f64:	eb43 0002 	adc.w	r0, r3, r2
   19f68:	bf08      	it	eq
   19f6a:	f020 0001 	biceq.w	r0, r0, #1
   19f6e:	4770      	bx	lr
   19f70:	f102 0220 	add.w	r2, r2, #32
   19f74:	fa01 fc02 	lsl.w	ip, r1, r2
   19f78:	f1c2 0220 	rsb	r2, r2, #32
   19f7c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   19f80:	fa21 f202 	lsr.w	r2, r1, r2
   19f84:	eb43 0002 	adc.w	r0, r3, r2
   19f88:	bf08      	it	eq
   19f8a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   19f8e:	4770      	bx	lr

00019f90 <__aeabi_fmul>:
__aeabi_fmul():
   19f90:	f04f 0cff 	mov.w	ip, #255	; 0xff
   19f94:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   19f98:	bf1e      	ittt	ne
   19f9a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   19f9e:	ea92 0f0c 	teqne	r2, ip
   19fa2:	ea93 0f0c 	teqne	r3, ip
   19fa6:	d06f      	beq.n	1a088 <__aeabi_fmul+0xf8>
   19fa8:	441a      	add	r2, r3
   19faa:	ea80 0c01 	eor.w	ip, r0, r1
   19fae:	0240      	lsls	r0, r0, #9
   19fb0:	bf18      	it	ne
   19fb2:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   19fb6:	d01e      	beq.n	19ff6 <__aeabi_fmul+0x66>
   19fb8:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   19fbc:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   19fc0:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   19fc4:	fba0 3101 	umull	r3, r1, r0, r1
   19fc8:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   19fcc:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   19fd0:	bf3e      	ittt	cc
   19fd2:	0049      	lslcc	r1, r1, #1
   19fd4:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   19fd8:	005b      	lslcc	r3, r3, #1
   19fda:	ea40 0001 	orr.w	r0, r0, r1
   19fde:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   19fe2:	2afd      	cmp	r2, #253	; 0xfd
   19fe4:	d81d      	bhi.n	1a022 <__aeabi_fmul+0x92>
   19fe6:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   19fea:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   19fee:	bf08      	it	eq
   19ff0:	f020 0001 	biceq.w	r0, r0, #1
   19ff4:	4770      	bx	lr
   19ff6:	f090 0f00 	teq	r0, #0
   19ffa:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   19ffe:	bf08      	it	eq
   1a000:	0249      	lsleq	r1, r1, #9
   1a002:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1a006:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   1a00a:	3a7f      	subs	r2, #127	; 0x7f
   1a00c:	bfc2      	ittt	gt
   1a00e:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1a012:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1a016:	4770      	bxgt	lr
   1a018:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1a01c:	f04f 0300 	mov.w	r3, #0
   1a020:	3a01      	subs	r2, #1
   1a022:	dc5d      	bgt.n	1a0e0 <__aeabi_fmul+0x150>
   1a024:	f112 0f19 	cmn.w	r2, #25
   1a028:	bfdc      	itt	le
   1a02a:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   1a02e:	4770      	bxle	lr
   1a030:	f1c2 0200 	rsb	r2, r2, #0
   1a034:	0041      	lsls	r1, r0, #1
   1a036:	fa21 f102 	lsr.w	r1, r1, r2
   1a03a:	f1c2 0220 	rsb	r2, r2, #32
   1a03e:	fa00 fc02 	lsl.w	ip, r0, r2
   1a042:	ea5f 0031 	movs.w	r0, r1, rrx
   1a046:	f140 0000 	adc.w	r0, r0, #0
   1a04a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   1a04e:	bf08      	it	eq
   1a050:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1a054:	4770      	bx	lr
   1a056:	f092 0f00 	teq	r2, #0
   1a05a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1a05e:	bf02      	ittt	eq
   1a060:	0040      	lsleq	r0, r0, #1
   1a062:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1a066:	3a01      	subeq	r2, #1
   1a068:	d0f9      	beq.n	1a05e <__aeabi_fmul+0xce>
   1a06a:	ea40 000c 	orr.w	r0, r0, ip
   1a06e:	f093 0f00 	teq	r3, #0
   1a072:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1a076:	bf02      	ittt	eq
   1a078:	0049      	lsleq	r1, r1, #1
   1a07a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1a07e:	3b01      	subeq	r3, #1
   1a080:	d0f9      	beq.n	1a076 <__aeabi_fmul+0xe6>
   1a082:	ea41 010c 	orr.w	r1, r1, ip
   1a086:	e78f      	b.n	19fa8 <__aeabi_fmul+0x18>
   1a088:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1a08c:	ea92 0f0c 	teq	r2, ip
   1a090:	bf18      	it	ne
   1a092:	ea93 0f0c 	teqne	r3, ip
   1a096:	d00a      	beq.n	1a0ae <__aeabi_fmul+0x11e>
   1a098:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1a09c:	bf18      	it	ne
   1a09e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1a0a2:	d1d8      	bne.n	1a056 <__aeabi_fmul+0xc6>
   1a0a4:	ea80 0001 	eor.w	r0, r0, r1
   1a0a8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1a0ac:	4770      	bx	lr
   1a0ae:	f090 0f00 	teq	r0, #0
   1a0b2:	bf17      	itett	ne
   1a0b4:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   1a0b8:	4608      	moveq	r0, r1
   1a0ba:	f091 0f00 	teqne	r1, #0
   1a0be:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   1a0c2:	d014      	beq.n	1a0ee <__aeabi_fmul+0x15e>
   1a0c4:	ea92 0f0c 	teq	r2, ip
   1a0c8:	d101      	bne.n	1a0ce <__aeabi_fmul+0x13e>
   1a0ca:	0242      	lsls	r2, r0, #9
   1a0cc:	d10f      	bne.n	1a0ee <__aeabi_fmul+0x15e>
   1a0ce:	ea93 0f0c 	teq	r3, ip
   1a0d2:	d103      	bne.n	1a0dc <__aeabi_fmul+0x14c>
   1a0d4:	024b      	lsls	r3, r1, #9
   1a0d6:	bf18      	it	ne
   1a0d8:	4608      	movne	r0, r1
   1a0da:	d108      	bne.n	1a0ee <__aeabi_fmul+0x15e>
   1a0dc:	ea80 0001 	eor.w	r0, r0, r1
   1a0e0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1a0e4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1a0e8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1a0ec:	4770      	bx	lr
   1a0ee:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1a0f2:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   1a0f6:	4770      	bx	lr

0001a0f8 <__aeabi_fdiv>:
__aeabi_fdiv():
   1a0f8:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1a0fc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   1a100:	bf1e      	ittt	ne
   1a102:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1a106:	ea92 0f0c 	teqne	r2, ip
   1a10a:	ea93 0f0c 	teqne	r3, ip
   1a10e:	d069      	beq.n	1a1e4 <__aeabi_fdiv+0xec>
   1a110:	eba2 0203 	sub.w	r2, r2, r3
   1a114:	ea80 0c01 	eor.w	ip, r0, r1
   1a118:	0249      	lsls	r1, r1, #9
   1a11a:	ea4f 2040 	mov.w	r0, r0, lsl #9
   1a11e:	d037      	beq.n	1a190 <__aeabi_fdiv+0x98>
   1a120:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   1a124:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   1a128:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   1a12c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   1a130:	428b      	cmp	r3, r1
   1a132:	bf38      	it	cc
   1a134:	005b      	lslcc	r3, r3, #1
   1a136:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   1a13a:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   1a13e:	428b      	cmp	r3, r1
   1a140:	bf24      	itt	cs
   1a142:	1a5b      	subcs	r3, r3, r1
   1a144:	ea40 000c 	orrcs.w	r0, r0, ip
   1a148:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   1a14c:	bf24      	itt	cs
   1a14e:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   1a152:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1a156:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   1a15a:	bf24      	itt	cs
   1a15c:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   1a160:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1a164:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   1a168:	bf24      	itt	cs
   1a16a:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   1a16e:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   1a172:	011b      	lsls	r3, r3, #4
   1a174:	bf18      	it	ne
   1a176:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   1a17a:	d1e0      	bne.n	1a13e <__aeabi_fdiv+0x46>
   1a17c:	2afd      	cmp	r2, #253	; 0xfd
   1a17e:	f63f af50 	bhi.w	1a022 <__aeabi_fmul+0x92>
   1a182:	428b      	cmp	r3, r1
   1a184:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1a188:	bf08      	it	eq
   1a18a:	f020 0001 	biceq.w	r0, r0, #1
   1a18e:	4770      	bx	lr
   1a190:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   1a194:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1a198:	327f      	adds	r2, #127	; 0x7f
   1a19a:	bfc2      	ittt	gt
   1a19c:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1a1a0:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1a1a4:	4770      	bxgt	lr
   1a1a6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1a1aa:	f04f 0300 	mov.w	r3, #0
   1a1ae:	3a01      	subs	r2, #1
   1a1b0:	e737      	b.n	1a022 <__aeabi_fmul+0x92>
   1a1b2:	f092 0f00 	teq	r2, #0
   1a1b6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1a1ba:	bf02      	ittt	eq
   1a1bc:	0040      	lsleq	r0, r0, #1
   1a1be:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1a1c2:	3a01      	subeq	r2, #1
   1a1c4:	d0f9      	beq.n	1a1ba <__aeabi_fdiv+0xc2>
   1a1c6:	ea40 000c 	orr.w	r0, r0, ip
   1a1ca:	f093 0f00 	teq	r3, #0
   1a1ce:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1a1d2:	bf02      	ittt	eq
   1a1d4:	0049      	lsleq	r1, r1, #1
   1a1d6:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1a1da:	3b01      	subeq	r3, #1
   1a1dc:	d0f9      	beq.n	1a1d2 <__aeabi_fdiv+0xda>
   1a1de:	ea41 010c 	orr.w	r1, r1, ip
   1a1e2:	e795      	b.n	1a110 <__aeabi_fdiv+0x18>
   1a1e4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1a1e8:	ea92 0f0c 	teq	r2, ip
   1a1ec:	d108      	bne.n	1a200 <__aeabi_fdiv+0x108>
   1a1ee:	0242      	lsls	r2, r0, #9
   1a1f0:	f47f af7d 	bne.w	1a0ee <__aeabi_fmul+0x15e>
   1a1f4:	ea93 0f0c 	teq	r3, ip
   1a1f8:	f47f af70 	bne.w	1a0dc <__aeabi_fmul+0x14c>
   1a1fc:	4608      	mov	r0, r1
   1a1fe:	e776      	b.n	1a0ee <__aeabi_fmul+0x15e>
   1a200:	ea93 0f0c 	teq	r3, ip
   1a204:	d104      	bne.n	1a210 <__aeabi_fdiv+0x118>
   1a206:	024b      	lsls	r3, r1, #9
   1a208:	f43f af4c 	beq.w	1a0a4 <__aeabi_fmul+0x114>
   1a20c:	4608      	mov	r0, r1
   1a20e:	e76e      	b.n	1a0ee <__aeabi_fmul+0x15e>
   1a210:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1a214:	bf18      	it	ne
   1a216:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1a21a:	d1ca      	bne.n	1a1b2 <__aeabi_fdiv+0xba>
   1a21c:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   1a220:	f47f af5c 	bne.w	1a0dc <__aeabi_fmul+0x14c>
   1a224:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   1a228:	f47f af3c 	bne.w	1a0a4 <__aeabi_fmul+0x114>
   1a22c:	e75f      	b.n	1a0ee <__aeabi_fmul+0x15e>
   1a22e:	bf00      	nop

0001a230 <__aeabi_f2uiz>:
__fixunssfsi():
   1a230:	0042      	lsls	r2, r0, #1
   1a232:	d20e      	bcs.n	1a252 <__aeabi_f2uiz+0x22>
   1a234:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   1a238:	d30b      	bcc.n	1a252 <__aeabi_f2uiz+0x22>
   1a23a:	f04f 039e 	mov.w	r3, #158	; 0x9e
   1a23e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   1a242:	d409      	bmi.n	1a258 <__aeabi_f2uiz+0x28>
   1a244:	ea4f 2300 	mov.w	r3, r0, lsl #8
   1a248:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1a24c:	fa23 f002 	lsr.w	r0, r3, r2
   1a250:	4770      	bx	lr
   1a252:	f04f 0000 	mov.w	r0, #0
   1a256:	4770      	bx	lr
   1a258:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1a25c:	d101      	bne.n	1a262 <__aeabi_f2uiz+0x32>
   1a25e:	0242      	lsls	r2, r0, #9
   1a260:	d102      	bne.n	1a268 <__aeabi_f2uiz+0x38>
   1a262:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a266:	4770      	bx	lr
   1a268:	f04f 0000 	mov.w	r0, #0
   1a26c:	4770      	bx	lr
   1a26e:	bf00      	nop

0001a270 <__aeabi_uldivmod>:
__aeabi_uldivmod():
   1a270:	b953      	cbnz	r3, 1a288 <__aeabi_uldivmod+0x18>
   1a272:	b94a      	cbnz	r2, 1a288 <__aeabi_uldivmod+0x18>
   1a274:	2900      	cmp	r1, #0
   1a276:	bf08      	it	eq
   1a278:	2800      	cmpeq	r0, #0
   1a27a:	bf1c      	itt	ne
   1a27c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
   1a280:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   1a284:	f000 b97a 	b.w	1a57c <__aeabi_idiv0>
   1a288:	f1ad 0c08 	sub.w	ip, sp, #8
   1a28c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   1a290:	f000 f806 	bl	1a2a0 <__udivmoddi4>
   1a294:	f8dd e004 	ldr.w	lr, [sp, #4]
   1a298:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1a29c:	b004      	add	sp, #16
   1a29e:	4770      	bx	lr

0001a2a0 <__udivmoddi4>:
__udivmoddi4():
   1a2a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1a2a4:	468c      	mov	ip, r1
   1a2a6:	460e      	mov	r6, r1
   1a2a8:	4604      	mov	r4, r0
   1a2aa:	9d08      	ldr	r5, [sp, #32]
   1a2ac:	2b00      	cmp	r3, #0
   1a2ae:	d150      	bne.n	1a352 <__udivmoddi4+0xb2>
   1a2b0:	428a      	cmp	r2, r1
   1a2b2:	4617      	mov	r7, r2
   1a2b4:	d96c      	bls.n	1a390 <__udivmoddi4+0xf0>
   1a2b6:	fab2 fe82 	clz	lr, r2
   1a2ba:	f1be 0f00 	cmp.w	lr, #0
   1a2be:	d00b      	beq.n	1a2d8 <__udivmoddi4+0x38>
   1a2c0:	f1ce 0c20 	rsb	ip, lr, #32
   1a2c4:	fa01 f60e 	lsl.w	r6, r1, lr
   1a2c8:	fa20 fc0c 	lsr.w	ip, r0, ip
   1a2cc:	fa02 f70e 	lsl.w	r7, r2, lr
   1a2d0:	ea4c 0c06 	orr.w	ip, ip, r6
   1a2d4:	fa00 f40e 	lsl.w	r4, r0, lr
   1a2d8:	0c3a      	lsrs	r2, r7, #16
   1a2da:	fbbc f9f2 	udiv	r9, ip, r2
   1a2de:	b2bb      	uxth	r3, r7
   1a2e0:	fb02 cc19 	mls	ip, r2, r9, ip
   1a2e4:	fb09 fa03 	mul.w	sl, r9, r3
   1a2e8:	ea4f 4814 	mov.w	r8, r4, lsr #16
   1a2ec:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   1a2f0:	45b2      	cmp	sl, r6
   1a2f2:	d90a      	bls.n	1a30a <__udivmoddi4+0x6a>
   1a2f4:	19f6      	adds	r6, r6, r7
   1a2f6:	f109 31ff 	add.w	r1, r9, #4294967295	; 0xffffffff
   1a2fa:	f080 8125 	bcs.w	1a548 <__udivmoddi4+0x2a8>
   1a2fe:	45b2      	cmp	sl, r6
   1a300:	f240 8122 	bls.w	1a548 <__udivmoddi4+0x2a8>
   1a304:	f1a9 0902 	sub.w	r9, r9, #2
   1a308:	443e      	add	r6, r7
   1a30a:	eba6 060a 	sub.w	r6, r6, sl
   1a30e:	fbb6 f0f2 	udiv	r0, r6, r2
   1a312:	fb02 6610 	mls	r6, r2, r0, r6
   1a316:	fb00 f303 	mul.w	r3, r0, r3
   1a31a:	b2a4      	uxth	r4, r4
   1a31c:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   1a320:	42a3      	cmp	r3, r4
   1a322:	d909      	bls.n	1a338 <__udivmoddi4+0x98>
   1a324:	19e4      	adds	r4, r4, r7
   1a326:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
   1a32a:	f080 810b 	bcs.w	1a544 <__udivmoddi4+0x2a4>
   1a32e:	42a3      	cmp	r3, r4
   1a330:	f240 8108 	bls.w	1a544 <__udivmoddi4+0x2a4>
   1a334:	3802      	subs	r0, #2
   1a336:	443c      	add	r4, r7
   1a338:	2100      	movs	r1, #0
   1a33a:	1ae4      	subs	r4, r4, r3
   1a33c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   1a340:	2d00      	cmp	r5, #0
   1a342:	d062      	beq.n	1a40a <__udivmoddi4+0x16a>
   1a344:	2300      	movs	r3, #0
   1a346:	fa24 f40e 	lsr.w	r4, r4, lr
   1a34a:	602c      	str	r4, [r5, #0]
   1a34c:	606b      	str	r3, [r5, #4]
   1a34e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1a352:	428b      	cmp	r3, r1
   1a354:	d907      	bls.n	1a366 <__udivmoddi4+0xc6>
   1a356:	2d00      	cmp	r5, #0
   1a358:	d055      	beq.n	1a406 <__udivmoddi4+0x166>
   1a35a:	2100      	movs	r1, #0
   1a35c:	e885 0041 	stmia.w	r5, {r0, r6}
   1a360:	4608      	mov	r0, r1
   1a362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1a366:	fab3 f183 	clz	r1, r3
   1a36a:	2900      	cmp	r1, #0
   1a36c:	f040 808f 	bne.w	1a48e <__udivmoddi4+0x1ee>
   1a370:	42b3      	cmp	r3, r6
   1a372:	d302      	bcc.n	1a37a <__udivmoddi4+0xda>
   1a374:	4282      	cmp	r2, r0
   1a376:	f200 80fc 	bhi.w	1a572 <__udivmoddi4+0x2d2>
   1a37a:	1a84      	subs	r4, r0, r2
   1a37c:	eb66 0603 	sbc.w	r6, r6, r3
   1a380:	2001      	movs	r0, #1
   1a382:	46b4      	mov	ip, r6
   1a384:	2d00      	cmp	r5, #0
   1a386:	d040      	beq.n	1a40a <__udivmoddi4+0x16a>
   1a388:	e885 1010 	stmia.w	r5, {r4, ip}
   1a38c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1a390:	b912      	cbnz	r2, 1a398 <__udivmoddi4+0xf8>
   1a392:	2701      	movs	r7, #1
   1a394:	fbb7 f7f2 	udiv	r7, r7, r2
   1a398:	fab7 fe87 	clz	lr, r7
   1a39c:	f1be 0f00 	cmp.w	lr, #0
   1a3a0:	d135      	bne.n	1a40e <__udivmoddi4+0x16e>
   1a3a2:	2101      	movs	r1, #1
   1a3a4:	1bf6      	subs	r6, r6, r7
   1a3a6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   1a3aa:	fa1f f887 	uxth.w	r8, r7
   1a3ae:	fbb6 f2fc 	udiv	r2, r6, ip
   1a3b2:	fb0c 6612 	mls	r6, ip, r2, r6
   1a3b6:	fb08 f002 	mul.w	r0, r8, r2
   1a3ba:	0c23      	lsrs	r3, r4, #16
   1a3bc:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   1a3c0:	42b0      	cmp	r0, r6
   1a3c2:	d907      	bls.n	1a3d4 <__udivmoddi4+0x134>
   1a3c4:	19f6      	adds	r6, r6, r7
   1a3c6:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
   1a3ca:	d202      	bcs.n	1a3d2 <__udivmoddi4+0x132>
   1a3cc:	42b0      	cmp	r0, r6
   1a3ce:	f200 80d2 	bhi.w	1a576 <__udivmoddi4+0x2d6>
   1a3d2:	461a      	mov	r2, r3
   1a3d4:	1a36      	subs	r6, r6, r0
   1a3d6:	fbb6 f0fc 	udiv	r0, r6, ip
   1a3da:	fb0c 6610 	mls	r6, ip, r0, r6
   1a3de:	fb08 f800 	mul.w	r8, r8, r0
   1a3e2:	b2a3      	uxth	r3, r4
   1a3e4:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   1a3e8:	45a0      	cmp	r8, r4
   1a3ea:	d907      	bls.n	1a3fc <__udivmoddi4+0x15c>
   1a3ec:	19e4      	adds	r4, r4, r7
   1a3ee:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   1a3f2:	d202      	bcs.n	1a3fa <__udivmoddi4+0x15a>
   1a3f4:	45a0      	cmp	r8, r4
   1a3f6:	f200 80b9 	bhi.w	1a56c <__udivmoddi4+0x2cc>
   1a3fa:	4618      	mov	r0, r3
   1a3fc:	eba4 0408 	sub.w	r4, r4, r8
   1a400:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   1a404:	e79c      	b.n	1a340 <__udivmoddi4+0xa0>
   1a406:	4629      	mov	r1, r5
   1a408:	4628      	mov	r0, r5
   1a40a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1a40e:	fa07 f70e 	lsl.w	r7, r7, lr
   1a412:	f1ce 0320 	rsb	r3, lr, #32
   1a416:	fa26 f203 	lsr.w	r2, r6, r3
   1a41a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   1a41e:	fbb2 f1fc 	udiv	r1, r2, ip
   1a422:	fa1f f887 	uxth.w	r8, r7
   1a426:	fb0c 2211 	mls	r2, ip, r1, r2
   1a42a:	fa06 f60e 	lsl.w	r6, r6, lr
   1a42e:	fa20 f303 	lsr.w	r3, r0, r3
   1a432:	fb01 f908 	mul.w	r9, r1, r8
   1a436:	4333      	orrs	r3, r6
   1a438:	0c1e      	lsrs	r6, r3, #16
   1a43a:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   1a43e:	45b1      	cmp	r9, r6
   1a440:	fa00 f40e 	lsl.w	r4, r0, lr
   1a444:	d909      	bls.n	1a45a <__udivmoddi4+0x1ba>
   1a446:	19f6      	adds	r6, r6, r7
   1a448:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
   1a44c:	f080 808c 	bcs.w	1a568 <__udivmoddi4+0x2c8>
   1a450:	45b1      	cmp	r9, r6
   1a452:	f240 8089 	bls.w	1a568 <__udivmoddi4+0x2c8>
   1a456:	3902      	subs	r1, #2
   1a458:	443e      	add	r6, r7
   1a45a:	eba6 0609 	sub.w	r6, r6, r9
   1a45e:	fbb6 f0fc 	udiv	r0, r6, ip
   1a462:	fb0c 6210 	mls	r2, ip, r0, r6
   1a466:	fb00 f908 	mul.w	r9, r0, r8
   1a46a:	b29e      	uxth	r6, r3
   1a46c:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   1a470:	45b1      	cmp	r9, r6
   1a472:	d907      	bls.n	1a484 <__udivmoddi4+0x1e4>
   1a474:	19f6      	adds	r6, r6, r7
   1a476:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   1a47a:	d271      	bcs.n	1a560 <__udivmoddi4+0x2c0>
   1a47c:	45b1      	cmp	r9, r6
   1a47e:	d96f      	bls.n	1a560 <__udivmoddi4+0x2c0>
   1a480:	3802      	subs	r0, #2
   1a482:	443e      	add	r6, r7
   1a484:	eba6 0609 	sub.w	r6, r6, r9
   1a488:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   1a48c:	e78f      	b.n	1a3ae <__udivmoddi4+0x10e>
   1a48e:	f1c1 0720 	rsb	r7, r1, #32
   1a492:	fa22 f807 	lsr.w	r8, r2, r7
   1a496:	408b      	lsls	r3, r1
   1a498:	ea48 0303 	orr.w	r3, r8, r3
   1a49c:	fa26 f407 	lsr.w	r4, r6, r7
   1a4a0:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   1a4a4:	fbb4 f9fe 	udiv	r9, r4, lr
   1a4a8:	fa1f fc83 	uxth.w	ip, r3
   1a4ac:	fb0e 4419 	mls	r4, lr, r9, r4
   1a4b0:	408e      	lsls	r6, r1
   1a4b2:	fa20 f807 	lsr.w	r8, r0, r7
   1a4b6:	fb09 fa0c 	mul.w	sl, r9, ip
   1a4ba:	ea48 0806 	orr.w	r8, r8, r6
   1a4be:	ea4f 4618 	mov.w	r6, r8, lsr #16
   1a4c2:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   1a4c6:	45a2      	cmp	sl, r4
   1a4c8:	fa02 f201 	lsl.w	r2, r2, r1
   1a4cc:	fa00 f601 	lsl.w	r6, r0, r1
   1a4d0:	d908      	bls.n	1a4e4 <__udivmoddi4+0x244>
   1a4d2:	18e4      	adds	r4, r4, r3
   1a4d4:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
   1a4d8:	d244      	bcs.n	1a564 <__udivmoddi4+0x2c4>
   1a4da:	45a2      	cmp	sl, r4
   1a4dc:	d942      	bls.n	1a564 <__udivmoddi4+0x2c4>
   1a4de:	f1a9 0902 	sub.w	r9, r9, #2
   1a4e2:	441c      	add	r4, r3
   1a4e4:	eba4 040a 	sub.w	r4, r4, sl
   1a4e8:	fbb4 f0fe 	udiv	r0, r4, lr
   1a4ec:	fb0e 4410 	mls	r4, lr, r0, r4
   1a4f0:	fb00 fc0c 	mul.w	ip, r0, ip
   1a4f4:	fa1f f888 	uxth.w	r8, r8
   1a4f8:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   1a4fc:	45a4      	cmp	ip, r4
   1a4fe:	d907      	bls.n	1a510 <__udivmoddi4+0x270>
   1a500:	18e4      	adds	r4, r4, r3
   1a502:	f100 3eff 	add.w	lr, r0, #4294967295	; 0xffffffff
   1a506:	d229      	bcs.n	1a55c <__udivmoddi4+0x2bc>
   1a508:	45a4      	cmp	ip, r4
   1a50a:	d927      	bls.n	1a55c <__udivmoddi4+0x2bc>
   1a50c:	3802      	subs	r0, #2
   1a50e:	441c      	add	r4, r3
   1a510:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   1a514:	fba0 8902 	umull	r8, r9, r0, r2
   1a518:	eba4 0c0c 	sub.w	ip, r4, ip
   1a51c:	45cc      	cmp	ip, r9
   1a51e:	46c2      	mov	sl, r8
   1a520:	46ce      	mov	lr, r9
   1a522:	d315      	bcc.n	1a550 <__udivmoddi4+0x2b0>
   1a524:	d012      	beq.n	1a54c <__udivmoddi4+0x2ac>
   1a526:	b155      	cbz	r5, 1a53e <__udivmoddi4+0x29e>
   1a528:	ebb6 030a 	subs.w	r3, r6, sl
   1a52c:	eb6c 060e 	sbc.w	r6, ip, lr
   1a530:	fa06 f707 	lsl.w	r7, r6, r7
   1a534:	40cb      	lsrs	r3, r1
   1a536:	431f      	orrs	r7, r3
   1a538:	40ce      	lsrs	r6, r1
   1a53a:	602f      	str	r7, [r5, #0]
   1a53c:	606e      	str	r6, [r5, #4]
   1a53e:	2100      	movs	r1, #0
   1a540:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1a544:	4610      	mov	r0, r2
   1a546:	e6f7      	b.n	1a338 <__udivmoddi4+0x98>
   1a548:	4689      	mov	r9, r1
   1a54a:	e6de      	b.n	1a30a <__udivmoddi4+0x6a>
   1a54c:	4546      	cmp	r6, r8
   1a54e:	d2ea      	bcs.n	1a526 <__udivmoddi4+0x286>
   1a550:	ebb8 0a02 	subs.w	sl, r8, r2
   1a554:	eb69 0e03 	sbc.w	lr, r9, r3
   1a558:	3801      	subs	r0, #1
   1a55a:	e7e4      	b.n	1a526 <__udivmoddi4+0x286>
   1a55c:	4670      	mov	r0, lr
   1a55e:	e7d7      	b.n	1a510 <__udivmoddi4+0x270>
   1a560:	4618      	mov	r0, r3
   1a562:	e78f      	b.n	1a484 <__udivmoddi4+0x1e4>
   1a564:	4681      	mov	r9, r0
   1a566:	e7bd      	b.n	1a4e4 <__udivmoddi4+0x244>
   1a568:	4611      	mov	r1, r2
   1a56a:	e776      	b.n	1a45a <__udivmoddi4+0x1ba>
   1a56c:	3802      	subs	r0, #2
   1a56e:	443c      	add	r4, r7
   1a570:	e744      	b.n	1a3fc <__udivmoddi4+0x15c>
   1a572:	4608      	mov	r0, r1
   1a574:	e706      	b.n	1a384 <__udivmoddi4+0xe4>
   1a576:	3a02      	subs	r2, #2
   1a578:	443e      	add	r6, r7
   1a57a:	e72b      	b.n	1a3d4 <__udivmoddi4+0x134>

0001a57c <__aeabi_idiv0>:
__aeabi_idiv0():
   1a57c:	4770      	bx	lr
   1a57e:	bf00      	nop

0001a580 <abort>:
abort():
   1a580:	b508      	push	{r3, lr}
   1a582:	2006      	movs	r0, #6
   1a584:	f002 f8ea 	bl	1c75c <raise>
   1a588:	2001      	movs	r0, #1
   1a58a:	f7fd fd77 	bl	1807c <_exit>

0001a58e <atoi>:
atoi():
   1a58e:	220a      	movs	r2, #10
   1a590:	2100      	movs	r1, #0
   1a592:	f003 b8e3 	b.w	1d75c <strtol>
   1a596:	Address 0x000000000001a596 is out of bounds.


0001a598 <calloc>:
calloc():
   1a598:	4b02      	ldr	r3, [pc, #8]	; (1a5a4 <calloc+0xc>)
   1a59a:	460a      	mov	r2, r1
   1a59c:	4601      	mov	r1, r0
   1a59e:	6818      	ldr	r0, [r3, #0]
   1a5a0:	f000 bef4 	b.w	1b38c <_calloc_r>
   1a5a4:	2007c0e4 	.word	0x2007c0e4

0001a5a8 <__errno>:
__errno():
   1a5a8:	4b01      	ldr	r3, [pc, #4]	; (1a5b0 <__errno+0x8>)
   1a5aa:	6818      	ldr	r0, [r3, #0]
   1a5ac:	4770      	bx	lr
   1a5ae:	bf00      	nop
   1a5b0:	2007c0e4 	.word	0x2007c0e4

0001a5b4 <_fclose_r>:
_fclose_r():
   1a5b4:	b570      	push	{r4, r5, r6, lr}
   1a5b6:	4605      	mov	r5, r0
   1a5b8:	460c      	mov	r4, r1
   1a5ba:	b911      	cbnz	r1, 1a5c2 <_fclose_r+0xe>
   1a5bc:	2600      	movs	r6, #0
   1a5be:	4630      	mov	r0, r6
   1a5c0:	bd70      	pop	{r4, r5, r6, pc}
   1a5c2:	b118      	cbz	r0, 1a5cc <_fclose_r+0x18>
   1a5c4:	6983      	ldr	r3, [r0, #24]
   1a5c6:	b90b      	cbnz	r3, 1a5cc <_fclose_r+0x18>
   1a5c8:	f000 f9f2 	bl	1a9b0 <__sinit>
   1a5cc:	4b1f      	ldr	r3, [pc, #124]	; (1a64c <_fclose_r+0x98>)
   1a5ce:	429c      	cmp	r4, r3
   1a5d0:	d132      	bne.n	1a638 <_fclose_r+0x84>
   1a5d2:	686c      	ldr	r4, [r5, #4]
   1a5d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1a5d8:	2b00      	cmp	r3, #0
   1a5da:	d0ef      	beq.n	1a5bc <_fclose_r+0x8>
   1a5dc:	4621      	mov	r1, r4
   1a5de:	4628      	mov	r0, r5
   1a5e0:	f000 f842 	bl	1a668 <__sflush_r>
   1a5e4:	6b23      	ldr	r3, [r4, #48]	; 0x30
   1a5e6:	4606      	mov	r6, r0
   1a5e8:	b133      	cbz	r3, 1a5f8 <_fclose_r+0x44>
   1a5ea:	6a21      	ldr	r1, [r4, #32]
   1a5ec:	4628      	mov	r0, r5
   1a5ee:	4798      	blx	r3
   1a5f0:	2800      	cmp	r0, #0
   1a5f2:	bfb8      	it	lt
   1a5f4:	f04f 36ff 	movlt.w	r6, #4294967295	; 0xffffffff
   1a5f8:	89a3      	ldrh	r3, [r4, #12]
   1a5fa:	061b      	lsls	r3, r3, #24
   1a5fc:	d503      	bpl.n	1a606 <_fclose_r+0x52>
   1a5fe:	6921      	ldr	r1, [r4, #16]
   1a600:	4628      	mov	r0, r5
   1a602:	f000 fed1 	bl	1b3a8 <_free_r>
   1a606:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1a608:	b141      	cbz	r1, 1a61c <_fclose_r+0x68>
   1a60a:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1a60e:	4299      	cmp	r1, r3
   1a610:	d002      	beq.n	1a618 <_fclose_r+0x64>
   1a612:	4628      	mov	r0, r5
   1a614:	f000 fec8 	bl	1b3a8 <_free_r>
   1a618:	2300      	movs	r3, #0
   1a61a:	6363      	str	r3, [r4, #52]	; 0x34
   1a61c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
   1a61e:	b121      	cbz	r1, 1a62a <_fclose_r+0x76>
   1a620:	4628      	mov	r0, r5
   1a622:	f000 fec1 	bl	1b3a8 <_free_r>
   1a626:	2300      	movs	r3, #0
   1a628:	64a3      	str	r3, [r4, #72]	; 0x48
   1a62a:	f000 fa2d 	bl	1aa88 <__sfp_lock_acquire>
   1a62e:	2300      	movs	r3, #0
   1a630:	81a3      	strh	r3, [r4, #12]
   1a632:	f000 fa2a 	bl	1aa8a <__sfp_lock_release>
   1a636:	e7c2      	b.n	1a5be <_fclose_r+0xa>
   1a638:	4b05      	ldr	r3, [pc, #20]	; (1a650 <_fclose_r+0x9c>)
   1a63a:	429c      	cmp	r4, r3
   1a63c:	d101      	bne.n	1a642 <_fclose_r+0x8e>
   1a63e:	68ac      	ldr	r4, [r5, #8]
   1a640:	e7c8      	b.n	1a5d4 <_fclose_r+0x20>
   1a642:	4b04      	ldr	r3, [pc, #16]	; (1a654 <_fclose_r+0xa0>)
   1a644:	429c      	cmp	r4, r3
   1a646:	bf08      	it	eq
   1a648:	68ec      	ldreq	r4, [r5, #12]
   1a64a:	e7c3      	b.n	1a5d4 <_fclose_r+0x20>
   1a64c:	0002236c 	.word	0x0002236c
   1a650:	0002238c 	.word	0x0002238c
   1a654:	0002234c 	.word	0x0002234c

0001a658 <fclose>:
fclose():
   1a658:	4b02      	ldr	r3, [pc, #8]	; (1a664 <fclose+0xc>)
   1a65a:	4601      	mov	r1, r0
   1a65c:	6818      	ldr	r0, [r3, #0]
   1a65e:	f7ff bfa9 	b.w	1a5b4 <_fclose_r>
   1a662:	bf00      	nop
   1a664:	2007c0e4 	.word	0x2007c0e4

0001a668 <__sflush_r>:
__sflush_r():
   1a668:	898a      	ldrh	r2, [r1, #12]
   1a66a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1a66e:	4605      	mov	r5, r0
   1a670:	0710      	lsls	r0, r2, #28
   1a672:	460c      	mov	r4, r1
   1a674:	d45a      	bmi.n	1a72c <__sflush_r+0xc4>
   1a676:	684b      	ldr	r3, [r1, #4]
   1a678:	2b00      	cmp	r3, #0
   1a67a:	dc05      	bgt.n	1a688 <__sflush_r+0x20>
   1a67c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
   1a67e:	2b00      	cmp	r3, #0
   1a680:	dc02      	bgt.n	1a688 <__sflush_r+0x20>
   1a682:	2000      	movs	r0, #0
   1a684:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1a688:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   1a68a:	2e00      	cmp	r6, #0
   1a68c:	d0f9      	beq.n	1a682 <__sflush_r+0x1a>
   1a68e:	2300      	movs	r3, #0
   1a690:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   1a694:	682f      	ldr	r7, [r5, #0]
   1a696:	602b      	str	r3, [r5, #0]
   1a698:	d033      	beq.n	1a702 <__sflush_r+0x9a>
   1a69a:	6d60      	ldr	r0, [r4, #84]	; 0x54
   1a69c:	89a3      	ldrh	r3, [r4, #12]
   1a69e:	075a      	lsls	r2, r3, #29
   1a6a0:	d505      	bpl.n	1a6ae <__sflush_r+0x46>
   1a6a2:	6863      	ldr	r3, [r4, #4]
   1a6a4:	1ac0      	subs	r0, r0, r3
   1a6a6:	6b63      	ldr	r3, [r4, #52]	; 0x34
   1a6a8:	b10b      	cbz	r3, 1a6ae <__sflush_r+0x46>
   1a6aa:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1a6ac:	1ac0      	subs	r0, r0, r3
   1a6ae:	2300      	movs	r3, #0
   1a6b0:	4602      	mov	r2, r0
   1a6b2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   1a6b4:	6a21      	ldr	r1, [r4, #32]
   1a6b6:	4628      	mov	r0, r5
   1a6b8:	47b0      	blx	r6
   1a6ba:	1c43      	adds	r3, r0, #1
   1a6bc:	89a3      	ldrh	r3, [r4, #12]
   1a6be:	d106      	bne.n	1a6ce <__sflush_r+0x66>
   1a6c0:	6829      	ldr	r1, [r5, #0]
   1a6c2:	291d      	cmp	r1, #29
   1a6c4:	d84b      	bhi.n	1a75e <__sflush_r+0xf6>
   1a6c6:	4a2b      	ldr	r2, [pc, #172]	; (1a774 <__sflush_r+0x10c>)
   1a6c8:	40ca      	lsrs	r2, r1
   1a6ca:	07d6      	lsls	r6, r2, #31
   1a6cc:	d547      	bpl.n	1a75e <__sflush_r+0xf6>
   1a6ce:	2200      	movs	r2, #0
   1a6d0:	6062      	str	r2, [r4, #4]
   1a6d2:	6922      	ldr	r2, [r4, #16]
   1a6d4:	04d9      	lsls	r1, r3, #19
   1a6d6:	6022      	str	r2, [r4, #0]
   1a6d8:	d504      	bpl.n	1a6e4 <__sflush_r+0x7c>
   1a6da:	1c42      	adds	r2, r0, #1
   1a6dc:	d101      	bne.n	1a6e2 <__sflush_r+0x7a>
   1a6de:	682b      	ldr	r3, [r5, #0]
   1a6e0:	b903      	cbnz	r3, 1a6e4 <__sflush_r+0x7c>
   1a6e2:	6560      	str	r0, [r4, #84]	; 0x54
   1a6e4:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1a6e6:	602f      	str	r7, [r5, #0]
   1a6e8:	2900      	cmp	r1, #0
   1a6ea:	d0ca      	beq.n	1a682 <__sflush_r+0x1a>
   1a6ec:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1a6f0:	4299      	cmp	r1, r3
   1a6f2:	d002      	beq.n	1a6fa <__sflush_r+0x92>
   1a6f4:	4628      	mov	r0, r5
   1a6f6:	f000 fe57 	bl	1b3a8 <_free_r>
   1a6fa:	2000      	movs	r0, #0
   1a6fc:	6360      	str	r0, [r4, #52]	; 0x34
   1a6fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1a702:	6a21      	ldr	r1, [r4, #32]
   1a704:	2301      	movs	r3, #1
   1a706:	4628      	mov	r0, r5
   1a708:	47b0      	blx	r6
   1a70a:	1c41      	adds	r1, r0, #1
   1a70c:	d1c6      	bne.n	1a69c <__sflush_r+0x34>
   1a70e:	682b      	ldr	r3, [r5, #0]
   1a710:	2b00      	cmp	r3, #0
   1a712:	d0c3      	beq.n	1a69c <__sflush_r+0x34>
   1a714:	2b1d      	cmp	r3, #29
   1a716:	d001      	beq.n	1a71c <__sflush_r+0xb4>
   1a718:	2b16      	cmp	r3, #22
   1a71a:	d101      	bne.n	1a720 <__sflush_r+0xb8>
   1a71c:	602f      	str	r7, [r5, #0]
   1a71e:	e7b0      	b.n	1a682 <__sflush_r+0x1a>
   1a720:	89a3      	ldrh	r3, [r4, #12]
   1a722:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1a726:	81a3      	strh	r3, [r4, #12]
   1a728:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1a72c:	690f      	ldr	r7, [r1, #16]
   1a72e:	2f00      	cmp	r7, #0
   1a730:	d0a7      	beq.n	1a682 <__sflush_r+0x1a>
   1a732:	0793      	lsls	r3, r2, #30
   1a734:	bf18      	it	ne
   1a736:	2300      	movne	r3, #0
   1a738:	680e      	ldr	r6, [r1, #0]
   1a73a:	bf08      	it	eq
   1a73c:	694b      	ldreq	r3, [r1, #20]
   1a73e:	eba6 0807 	sub.w	r8, r6, r7
   1a742:	600f      	str	r7, [r1, #0]
   1a744:	608b      	str	r3, [r1, #8]
   1a746:	f1b8 0f00 	cmp.w	r8, #0
   1a74a:	dd9a      	ble.n	1a682 <__sflush_r+0x1a>
   1a74c:	4643      	mov	r3, r8
   1a74e:	463a      	mov	r2, r7
   1a750:	6a21      	ldr	r1, [r4, #32]
   1a752:	4628      	mov	r0, r5
   1a754:	6aa6      	ldr	r6, [r4, #40]	; 0x28
   1a756:	47b0      	blx	r6
   1a758:	2800      	cmp	r0, #0
   1a75a:	dc07      	bgt.n	1a76c <__sflush_r+0x104>
   1a75c:	89a3      	ldrh	r3, [r4, #12]
   1a75e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1a762:	81a3      	strh	r3, [r4, #12]
   1a764:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a768:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1a76c:	4407      	add	r7, r0
   1a76e:	eba8 0800 	sub.w	r8, r8, r0
   1a772:	e7e8      	b.n	1a746 <__sflush_r+0xde>
   1a774:	20400001 	.word	0x20400001

0001a778 <_fflush_r>:
_fflush_r():
   1a778:	b538      	push	{r3, r4, r5, lr}
   1a77a:	690b      	ldr	r3, [r1, #16]
   1a77c:	4605      	mov	r5, r0
   1a77e:	460c      	mov	r4, r1
   1a780:	b1db      	cbz	r3, 1a7ba <_fflush_r+0x42>
   1a782:	b118      	cbz	r0, 1a78c <_fflush_r+0x14>
   1a784:	6983      	ldr	r3, [r0, #24]
   1a786:	b90b      	cbnz	r3, 1a78c <_fflush_r+0x14>
   1a788:	f000 f912 	bl	1a9b0 <__sinit>
   1a78c:	4b0c      	ldr	r3, [pc, #48]	; (1a7c0 <_fflush_r+0x48>)
   1a78e:	429c      	cmp	r4, r3
   1a790:	d109      	bne.n	1a7a6 <_fflush_r+0x2e>
   1a792:	686c      	ldr	r4, [r5, #4]
   1a794:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1a798:	b17b      	cbz	r3, 1a7ba <_fflush_r+0x42>
   1a79a:	4621      	mov	r1, r4
   1a79c:	4628      	mov	r0, r5
   1a79e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a7a2:	f7ff bf61 	b.w	1a668 <__sflush_r>
   1a7a6:	4b07      	ldr	r3, [pc, #28]	; (1a7c4 <_fflush_r+0x4c>)
   1a7a8:	429c      	cmp	r4, r3
   1a7aa:	d101      	bne.n	1a7b0 <_fflush_r+0x38>
   1a7ac:	68ac      	ldr	r4, [r5, #8]
   1a7ae:	e7f1      	b.n	1a794 <_fflush_r+0x1c>
   1a7b0:	4b05      	ldr	r3, [pc, #20]	; (1a7c8 <_fflush_r+0x50>)
   1a7b2:	429c      	cmp	r4, r3
   1a7b4:	bf08      	it	eq
   1a7b6:	68ec      	ldreq	r4, [r5, #12]
   1a7b8:	e7ec      	b.n	1a794 <_fflush_r+0x1c>
   1a7ba:	2000      	movs	r0, #0
   1a7bc:	bd38      	pop	{r3, r4, r5, pc}
   1a7be:	bf00      	nop
   1a7c0:	0002236c 	.word	0x0002236c
   1a7c4:	0002238c 	.word	0x0002238c
   1a7c8:	0002234c 	.word	0x0002234c

0001a7cc <fflush>:
fflush():
   1a7cc:	4601      	mov	r1, r0
   1a7ce:	b920      	cbnz	r0, 1a7da <fflush+0xe>
   1a7d0:	4b04      	ldr	r3, [pc, #16]	; (1a7e4 <fflush+0x18>)
   1a7d2:	4905      	ldr	r1, [pc, #20]	; (1a7e8 <fflush+0x1c>)
   1a7d4:	6818      	ldr	r0, [r3, #0]
   1a7d6:	f000 ba4f 	b.w	1ac78 <_fwalk_reent>
   1a7da:	4b04      	ldr	r3, [pc, #16]	; (1a7ec <fflush+0x20>)
   1a7dc:	6818      	ldr	r0, [r3, #0]
   1a7de:	f7ff bfcb 	b.w	1a778 <_fflush_r>
   1a7e2:	bf00      	nop
   1a7e4:	000223ac 	.word	0x000223ac
   1a7e8:	0001a779 	.word	0x0001a779
   1a7ec:	2007c0e4 	.word	0x2007c0e4

0001a7f0 <_fgetc_r>:
_fgetc_r():
   1a7f0:	b538      	push	{r3, r4, r5, lr}
   1a7f2:	460c      	mov	r4, r1
   1a7f4:	4605      	mov	r5, r0
   1a7f6:	b118      	cbz	r0, 1a800 <_fgetc_r+0x10>
   1a7f8:	6983      	ldr	r3, [r0, #24]
   1a7fa:	b90b      	cbnz	r3, 1a800 <_fgetc_r+0x10>
   1a7fc:	f000 f8d8 	bl	1a9b0 <__sinit>
   1a800:	4b0e      	ldr	r3, [pc, #56]	; (1a83c <_fgetc_r+0x4c>)
   1a802:	429c      	cmp	r4, r3
   1a804:	d10b      	bne.n	1a81e <_fgetc_r+0x2e>
   1a806:	686c      	ldr	r4, [r5, #4]
   1a808:	6863      	ldr	r3, [r4, #4]
   1a80a:	3b01      	subs	r3, #1
   1a80c:	2b00      	cmp	r3, #0
   1a80e:	6063      	str	r3, [r4, #4]
   1a810:	da0f      	bge.n	1a832 <_fgetc_r+0x42>
   1a812:	4621      	mov	r1, r4
   1a814:	4628      	mov	r0, r5
   1a816:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a81a:	f001 be71 	b.w	1c500 <__srget_r>
   1a81e:	4b08      	ldr	r3, [pc, #32]	; (1a840 <_fgetc_r+0x50>)
   1a820:	429c      	cmp	r4, r3
   1a822:	d101      	bne.n	1a828 <_fgetc_r+0x38>
   1a824:	68ac      	ldr	r4, [r5, #8]
   1a826:	e7ef      	b.n	1a808 <_fgetc_r+0x18>
   1a828:	4b06      	ldr	r3, [pc, #24]	; (1a844 <_fgetc_r+0x54>)
   1a82a:	429c      	cmp	r4, r3
   1a82c:	bf08      	it	eq
   1a82e:	68ec      	ldreq	r4, [r5, #12]
   1a830:	e7ea      	b.n	1a808 <_fgetc_r+0x18>
   1a832:	6823      	ldr	r3, [r4, #0]
   1a834:	1c5a      	adds	r2, r3, #1
   1a836:	6022      	str	r2, [r4, #0]
   1a838:	7818      	ldrb	r0, [r3, #0]
   1a83a:	bd38      	pop	{r3, r4, r5, pc}
   1a83c:	0002236c 	.word	0x0002236c
   1a840:	0002238c 	.word	0x0002238c
   1a844:	0002234c 	.word	0x0002234c

0001a848 <fgetc>:
fgetc():
   1a848:	4b02      	ldr	r3, [pc, #8]	; (1a854 <fgetc+0xc>)
   1a84a:	4601      	mov	r1, r0
   1a84c:	6818      	ldr	r0, [r3, #0]
   1a84e:	f7ff bfcf 	b.w	1a7f0 <_fgetc_r>
   1a852:	bf00      	nop
   1a854:	2007c0e4 	.word	0x2007c0e4

0001a858 <_fgets_r>:
_fgets_r():
   1a858:	2a01      	cmp	r2, #1
   1a85a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1a85e:	4681      	mov	r9, r0
   1a860:	460e      	mov	r6, r1
   1a862:	4690      	mov	r8, r2
   1a864:	461c      	mov	r4, r3
   1a866:	dc02      	bgt.n	1a86e <_fgets_r+0x16>
   1a868:	2000      	movs	r0, #0
   1a86a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1a86e:	b118      	cbz	r0, 1a878 <_fgets_r+0x20>
   1a870:	6983      	ldr	r3, [r0, #24]
   1a872:	b90b      	cbnz	r3, 1a878 <_fgets_r+0x20>
   1a874:	f000 f89c 	bl	1a9b0 <__sinit>
   1a878:	4b25      	ldr	r3, [pc, #148]	; (1a910 <_fgets_r+0xb8>)
   1a87a:	429c      	cmp	r4, r3
   1a87c:	d110      	bne.n	1a8a0 <_fgets_r+0x48>
   1a87e:	f8d9 4004 	ldr.w	r4, [r9, #4]
   1a882:	4637      	mov	r7, r6
   1a884:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
   1a888:	6865      	ldr	r5, [r4, #4]
   1a88a:	b9b5      	cbnz	r5, 1a8ba <_fgets_r+0x62>
   1a88c:	4621      	mov	r1, r4
   1a88e:	4648      	mov	r0, r9
   1a890:	f001 fdaa 	bl	1c3e8 <__srefill_r>
   1a894:	b180      	cbz	r0, 1a8b8 <_fgets_r+0x60>
   1a896:	42b7      	cmp	r7, r6
   1a898:	d0e6      	beq.n	1a868 <_fgets_r+0x10>
   1a89a:	2300      	movs	r3, #0
   1a89c:	703b      	strb	r3, [r7, #0]
   1a89e:	e025      	b.n	1a8ec <_fgets_r+0x94>
   1a8a0:	4b1c      	ldr	r3, [pc, #112]	; (1a914 <_fgets_r+0xbc>)
   1a8a2:	429c      	cmp	r4, r3
   1a8a4:	d102      	bne.n	1a8ac <_fgets_r+0x54>
   1a8a6:	f8d9 4008 	ldr.w	r4, [r9, #8]
   1a8aa:	e7ea      	b.n	1a882 <_fgets_r+0x2a>
   1a8ac:	4b1a      	ldr	r3, [pc, #104]	; (1a918 <_fgets_r+0xc0>)
   1a8ae:	429c      	cmp	r4, r3
   1a8b0:	bf08      	it	eq
   1a8b2:	f8d9 400c 	ldreq.w	r4, [r9, #12]
   1a8b6:	e7e4      	b.n	1a882 <_fgets_r+0x2a>
   1a8b8:	6865      	ldr	r5, [r4, #4]
   1a8ba:	4545      	cmp	r5, r8
   1a8bc:	bf28      	it	cs
   1a8be:	4645      	movcs	r5, r8
   1a8c0:	f8d4 a000 	ldr.w	sl, [r4]
   1a8c4:	462a      	mov	r2, r5
   1a8c6:	210a      	movs	r1, #10
   1a8c8:	4650      	mov	r0, sl
   1a8ca:	f000 faaf 	bl	1ae2c <memchr>
   1a8ce:	6863      	ldr	r3, [r4, #4]
   1a8d0:	b178      	cbz	r0, 1a8f2 <_fgets_r+0x9a>
   1a8d2:	3001      	adds	r0, #1
   1a8d4:	eba0 050a 	sub.w	r5, r0, sl
   1a8d8:	1b5b      	subs	r3, r3, r5
   1a8da:	e884 0009 	stmia.w	r4, {r0, r3}
   1a8de:	462a      	mov	r2, r5
   1a8e0:	4651      	mov	r1, sl
   1a8e2:	4638      	mov	r0, r7
   1a8e4:	f000 fabf 	bl	1ae66 <memcpy>
   1a8e8:	2300      	movs	r3, #0
   1a8ea:	557b      	strb	r3, [r7, r5]
   1a8ec:	4630      	mov	r0, r6
   1a8ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1a8f2:	1b5b      	subs	r3, r3, r5
   1a8f4:	6063      	str	r3, [r4, #4]
   1a8f6:	6823      	ldr	r3, [r4, #0]
   1a8f8:	4638      	mov	r0, r7
   1a8fa:	442b      	add	r3, r5
   1a8fc:	6023      	str	r3, [r4, #0]
   1a8fe:	462a      	mov	r2, r5
   1a900:	4651      	mov	r1, sl
   1a902:	f000 fab0 	bl	1ae66 <memcpy>
   1a906:	ebb8 0805 	subs.w	r8, r8, r5
   1a90a:	442f      	add	r7, r5
   1a90c:	d1bc      	bne.n	1a888 <_fgets_r+0x30>
   1a90e:	e7c4      	b.n	1a89a <_fgets_r+0x42>
   1a910:	0002236c 	.word	0x0002236c
   1a914:	0002238c 	.word	0x0002238c
   1a918:	0002234c 	.word	0x0002234c

0001a91c <fgets>:
fgets():
   1a91c:	4613      	mov	r3, r2
   1a91e:	460a      	mov	r2, r1
   1a920:	4601      	mov	r1, r0
   1a922:	4802      	ldr	r0, [pc, #8]	; (1a92c <fgets+0x10>)
   1a924:	6800      	ldr	r0, [r0, #0]
   1a926:	f7ff bf97 	b.w	1a858 <_fgets_r>
   1a92a:	bf00      	nop
   1a92c:	2007c0e4 	.word	0x2007c0e4

0001a930 <_cleanup_r>:
_cleanup_r():
   1a930:	4901      	ldr	r1, [pc, #4]	; (1a938 <_cleanup_r+0x8>)
   1a932:	f000 b9a1 	b.w	1ac78 <_fwalk_reent>
   1a936:	bf00      	nop
   1a938:	0001a779 	.word	0x0001a779

0001a93c <std.isra.0>:
std.isra.0():
   1a93c:	2300      	movs	r3, #0
   1a93e:	b510      	push	{r4, lr}
   1a940:	4604      	mov	r4, r0
   1a942:	6003      	str	r3, [r0, #0]
   1a944:	6043      	str	r3, [r0, #4]
   1a946:	6083      	str	r3, [r0, #8]
   1a948:	8181      	strh	r1, [r0, #12]
   1a94a:	6643      	str	r3, [r0, #100]	; 0x64
   1a94c:	81c2      	strh	r2, [r0, #14]
   1a94e:	6103      	str	r3, [r0, #16]
   1a950:	6143      	str	r3, [r0, #20]
   1a952:	6183      	str	r3, [r0, #24]
   1a954:	4619      	mov	r1, r3
   1a956:	2208      	movs	r2, #8
   1a958:	305c      	adds	r0, #92	; 0x5c
   1a95a:	f000 faa9 	bl	1aeb0 <memset>
   1a95e:	4b05      	ldr	r3, [pc, #20]	; (1a974 <std.isra.0+0x38>)
   1a960:	6224      	str	r4, [r4, #32]
   1a962:	6263      	str	r3, [r4, #36]	; 0x24
   1a964:	4b04      	ldr	r3, [pc, #16]	; (1a978 <std.isra.0+0x3c>)
   1a966:	62a3      	str	r3, [r4, #40]	; 0x28
   1a968:	4b04      	ldr	r3, [pc, #16]	; (1a97c <std.isra.0+0x40>)
   1a96a:	62e3      	str	r3, [r4, #44]	; 0x2c
   1a96c:	4b04      	ldr	r3, [pc, #16]	; (1a980 <std.isra.0+0x44>)
   1a96e:	6323      	str	r3, [r4, #48]	; 0x30
   1a970:	bd10      	pop	{r4, pc}
   1a972:	bf00      	nop
   1a974:	0001c831 	.word	0x0001c831
   1a978:	0001c857 	.word	0x0001c857
   1a97c:	0001c88f 	.word	0x0001c88f
   1a980:	0001c8b3 	.word	0x0001c8b3

0001a984 <__sfmoreglue>:
__sfmoreglue():
   1a984:	b570      	push	{r4, r5, r6, lr}
   1a986:	2568      	movs	r5, #104	; 0x68
   1a988:	1e4a      	subs	r2, r1, #1
   1a98a:	4355      	muls	r5, r2
   1a98c:	460e      	mov	r6, r1
   1a98e:	f105 0174 	add.w	r1, r5, #116	; 0x74
   1a992:	f000 fd87 	bl	1b4a4 <_malloc_r>
   1a996:	4604      	mov	r4, r0
   1a998:	b140      	cbz	r0, 1a9ac <__sfmoreglue+0x28>
   1a99a:	2100      	movs	r1, #0
   1a99c:	e880 0042 	stmia.w	r0, {r1, r6}
   1a9a0:	300c      	adds	r0, #12
   1a9a2:	60a0      	str	r0, [r4, #8]
   1a9a4:	f105 0268 	add.w	r2, r5, #104	; 0x68
   1a9a8:	f000 fa82 	bl	1aeb0 <memset>
   1a9ac:	4620      	mov	r0, r4
   1a9ae:	bd70      	pop	{r4, r5, r6, pc}

0001a9b0 <__sinit>:
__sinit():
   1a9b0:	6983      	ldr	r3, [r0, #24]
   1a9b2:	b510      	push	{r4, lr}
   1a9b4:	4604      	mov	r4, r0
   1a9b6:	bb33      	cbnz	r3, 1aa06 <__sinit+0x56>
   1a9b8:	6483      	str	r3, [r0, #72]	; 0x48
   1a9ba:	64c3      	str	r3, [r0, #76]	; 0x4c
   1a9bc:	6503      	str	r3, [r0, #80]	; 0x50
   1a9be:	4b12      	ldr	r3, [pc, #72]	; (1aa08 <__sinit+0x58>)
   1a9c0:	4a12      	ldr	r2, [pc, #72]	; (1aa0c <__sinit+0x5c>)
   1a9c2:	681b      	ldr	r3, [r3, #0]
   1a9c4:	6282      	str	r2, [r0, #40]	; 0x28
   1a9c6:	4298      	cmp	r0, r3
   1a9c8:	bf04      	itt	eq
   1a9ca:	2301      	moveq	r3, #1
   1a9cc:	6183      	streq	r3, [r0, #24]
   1a9ce:	f000 f81f 	bl	1aa10 <__sfp>
   1a9d2:	6060      	str	r0, [r4, #4]
   1a9d4:	4620      	mov	r0, r4
   1a9d6:	f000 f81b 	bl	1aa10 <__sfp>
   1a9da:	60a0      	str	r0, [r4, #8]
   1a9dc:	4620      	mov	r0, r4
   1a9de:	f000 f817 	bl	1aa10 <__sfp>
   1a9e2:	2200      	movs	r2, #0
   1a9e4:	60e0      	str	r0, [r4, #12]
   1a9e6:	2104      	movs	r1, #4
   1a9e8:	6860      	ldr	r0, [r4, #4]
   1a9ea:	f7ff ffa7 	bl	1a93c <std.isra.0>
   1a9ee:	2201      	movs	r2, #1
   1a9f0:	2109      	movs	r1, #9
   1a9f2:	68a0      	ldr	r0, [r4, #8]
   1a9f4:	f7ff ffa2 	bl	1a93c <std.isra.0>
   1a9f8:	2202      	movs	r2, #2
   1a9fa:	2112      	movs	r1, #18
   1a9fc:	68e0      	ldr	r0, [r4, #12]
   1a9fe:	f7ff ff9d 	bl	1a93c <std.isra.0>
   1aa02:	2301      	movs	r3, #1
   1aa04:	61a3      	str	r3, [r4, #24]
   1aa06:	bd10      	pop	{r4, pc}
   1aa08:	000223ac 	.word	0x000223ac
   1aa0c:	0001a931 	.word	0x0001a931

0001aa10 <__sfp>:
__sfp():
   1aa10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1aa12:	4b1c      	ldr	r3, [pc, #112]	; (1aa84 <__sfp+0x74>)
   1aa14:	4607      	mov	r7, r0
   1aa16:	681e      	ldr	r6, [r3, #0]
   1aa18:	69b3      	ldr	r3, [r6, #24]
   1aa1a:	b913      	cbnz	r3, 1aa22 <__sfp+0x12>
   1aa1c:	4630      	mov	r0, r6
   1aa1e:	f7ff ffc7 	bl	1a9b0 <__sinit>
   1aa22:	3648      	adds	r6, #72	; 0x48
   1aa24:	68b4      	ldr	r4, [r6, #8]
   1aa26:	6873      	ldr	r3, [r6, #4]
   1aa28:	3b01      	subs	r3, #1
   1aa2a:	d503      	bpl.n	1aa34 <__sfp+0x24>
   1aa2c:	6833      	ldr	r3, [r6, #0]
   1aa2e:	b133      	cbz	r3, 1aa3e <__sfp+0x2e>
   1aa30:	6836      	ldr	r6, [r6, #0]
   1aa32:	e7f7      	b.n	1aa24 <__sfp+0x14>
   1aa34:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
   1aa38:	b16d      	cbz	r5, 1aa56 <__sfp+0x46>
   1aa3a:	3468      	adds	r4, #104	; 0x68
   1aa3c:	e7f4      	b.n	1aa28 <__sfp+0x18>
   1aa3e:	2104      	movs	r1, #4
   1aa40:	4638      	mov	r0, r7
   1aa42:	f7ff ff9f 	bl	1a984 <__sfmoreglue>
   1aa46:	6030      	str	r0, [r6, #0]
   1aa48:	2800      	cmp	r0, #0
   1aa4a:	d1f1      	bne.n	1aa30 <__sfp+0x20>
   1aa4c:	230c      	movs	r3, #12
   1aa4e:	4604      	mov	r4, r0
   1aa50:	603b      	str	r3, [r7, #0]
   1aa52:	4620      	mov	r0, r4
   1aa54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1aa56:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1aa5a:	81e3      	strh	r3, [r4, #14]
   1aa5c:	2301      	movs	r3, #1
   1aa5e:	6665      	str	r5, [r4, #100]	; 0x64
   1aa60:	81a3      	strh	r3, [r4, #12]
   1aa62:	6025      	str	r5, [r4, #0]
   1aa64:	60a5      	str	r5, [r4, #8]
   1aa66:	6065      	str	r5, [r4, #4]
   1aa68:	6125      	str	r5, [r4, #16]
   1aa6a:	6165      	str	r5, [r4, #20]
   1aa6c:	61a5      	str	r5, [r4, #24]
   1aa6e:	2208      	movs	r2, #8
   1aa70:	4629      	mov	r1, r5
   1aa72:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   1aa76:	f000 fa1b 	bl	1aeb0 <memset>
   1aa7a:	6365      	str	r5, [r4, #52]	; 0x34
   1aa7c:	63a5      	str	r5, [r4, #56]	; 0x38
   1aa7e:	64a5      	str	r5, [r4, #72]	; 0x48
   1aa80:	64e5      	str	r5, [r4, #76]	; 0x4c
   1aa82:	e7e6      	b.n	1aa52 <__sfp+0x42>
   1aa84:	000223ac 	.word	0x000223ac

0001aa88 <__sfp_lock_acquire>:
__sfp_lock_acquire():
   1aa88:	4770      	bx	lr

0001aa8a <__sfp_lock_release>:
__sfp_lock_release():
   1aa8a:	4770      	bx	lr

0001aa8c <_fopen_r>:
_fopen_r():
   1aa8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1aa8e:	460f      	mov	r7, r1
   1aa90:	4611      	mov	r1, r2
   1aa92:	aa01      	add	r2, sp, #4
   1aa94:	4605      	mov	r5, r0
   1aa96:	f004 f85b 	bl	1eb50 <__sflags>
   1aa9a:	4606      	mov	r6, r0
   1aa9c:	b918      	cbnz	r0, 1aaa6 <_fopen_r+0x1a>
   1aa9e:	2400      	movs	r4, #0
   1aaa0:	4620      	mov	r0, r4
   1aaa2:	b003      	add	sp, #12
   1aaa4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1aaa6:	4628      	mov	r0, r5
   1aaa8:	f7ff ffb2 	bl	1aa10 <__sfp>
   1aaac:	4604      	mov	r4, r0
   1aaae:	2800      	cmp	r0, #0
   1aab0:	d0f5      	beq.n	1aa9e <_fopen_r+0x12>
   1aab2:	f44f 73db 	mov.w	r3, #438	; 0x1b6
   1aab6:	9a01      	ldr	r2, [sp, #4]
   1aab8:	4639      	mov	r1, r7
   1aaba:	4628      	mov	r0, r5
   1aabc:	f001 fb92 	bl	1c1e4 <_open_r>
   1aac0:	2800      	cmp	r0, #0
   1aac2:	da06      	bge.n	1aad2 <_fopen_r+0x46>
   1aac4:	2500      	movs	r5, #0
   1aac6:	f7ff ffdf 	bl	1aa88 <__sfp_lock_acquire>
   1aaca:	81a5      	strh	r5, [r4, #12]
   1aacc:	f7ff ffdd 	bl	1aa8a <__sfp_lock_release>
   1aad0:	e7e5      	b.n	1aa9e <_fopen_r+0x12>
   1aad2:	4b0a      	ldr	r3, [pc, #40]	; (1aafc <_fopen_r+0x70>)
   1aad4:	81e0      	strh	r0, [r4, #14]
   1aad6:	6263      	str	r3, [r4, #36]	; 0x24
   1aad8:	4b09      	ldr	r3, [pc, #36]	; (1ab00 <_fopen_r+0x74>)
   1aada:	81a6      	strh	r6, [r4, #12]
   1aadc:	62a3      	str	r3, [r4, #40]	; 0x28
   1aade:	4b09      	ldr	r3, [pc, #36]	; (1ab04 <_fopen_r+0x78>)
   1aae0:	6224      	str	r4, [r4, #32]
   1aae2:	62e3      	str	r3, [r4, #44]	; 0x2c
   1aae4:	4b08      	ldr	r3, [pc, #32]	; (1ab08 <_fopen_r+0x7c>)
   1aae6:	6323      	str	r3, [r4, #48]	; 0x30
   1aae8:	05f3      	lsls	r3, r6, #23
   1aaea:	d5d9      	bpl.n	1aaa0 <_fopen_r+0x14>
   1aaec:	2302      	movs	r3, #2
   1aaee:	2200      	movs	r2, #0
   1aaf0:	4621      	mov	r1, r4
   1aaf2:	4628      	mov	r0, r5
   1aaf4:	f000 f812 	bl	1ab1c <_fseek_r>
   1aaf8:	e7d2      	b.n	1aaa0 <_fopen_r+0x14>
   1aafa:	bf00      	nop
   1aafc:	0001c831 	.word	0x0001c831
   1ab00:	0001c857 	.word	0x0001c857
   1ab04:	0001c88f 	.word	0x0001c88f
   1ab08:	0001c8b3 	.word	0x0001c8b3

0001ab0c <fopen>:
fopen():
   1ab0c:	4b02      	ldr	r3, [pc, #8]	; (1ab18 <fopen+0xc>)
   1ab0e:	460a      	mov	r2, r1
   1ab10:	4601      	mov	r1, r0
   1ab12:	6818      	ldr	r0, [r3, #0]
   1ab14:	f7ff bfba 	b.w	1aa8c <_fopen_r>
   1ab18:	2007c0e4 	.word	0x2007c0e4

0001ab1c <_fseek_r>:
_fseek_r():
   1ab1c:	f000 b800 	b.w	1ab20 <_fseeko_r>

0001ab20 <_fseeko_r>:
_fseeko_r():
   1ab20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1ab24:	460c      	mov	r4, r1
   1ab26:	4691      	mov	r9, r2
   1ab28:	461e      	mov	r6, r3
   1ab2a:	4605      	mov	r5, r0
   1ab2c:	b118      	cbz	r0, 1ab36 <_fseeko_r+0x16>
   1ab2e:	6983      	ldr	r3, [r0, #24]
   1ab30:	b90b      	cbnz	r3, 1ab36 <_fseeko_r+0x16>
   1ab32:	f7ff ff3d 	bl	1a9b0 <__sinit>
   1ab36:	4b3f      	ldr	r3, [pc, #252]	; (1ac34 <_fseeko_r+0x114>)
   1ab38:	429c      	cmp	r4, r3
   1ab3a:	d112      	bne.n	1ab62 <_fseeko_r+0x42>
   1ab3c:	686c      	ldr	r4, [r5, #4]
   1ab3e:	89a3      	ldrh	r3, [r4, #12]
   1ab40:	f403 7384 	and.w	r3, r3, #264	; 0x108
   1ab44:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   1ab48:	d103      	bne.n	1ab52 <_fseeko_r+0x32>
   1ab4a:	4621      	mov	r1, r4
   1ab4c:	4628      	mov	r0, r5
   1ab4e:	f7ff fe13 	bl	1a778 <_fflush_r>
   1ab52:	f8d4 802c 	ldr.w	r8, [r4, #44]	; 0x2c
   1ab56:	f1b8 0f00 	cmp.w	r8, #0
   1ab5a:	d10c      	bne.n	1ab76 <_fseeko_r+0x56>
   1ab5c:	231d      	movs	r3, #29
   1ab5e:	602b      	str	r3, [r5, #0]
   1ab60:	e057      	b.n	1ac12 <_fseeko_r+0xf2>
   1ab62:	4b35      	ldr	r3, [pc, #212]	; (1ac38 <_fseeko_r+0x118>)
   1ab64:	429c      	cmp	r4, r3
   1ab66:	d101      	bne.n	1ab6c <_fseeko_r+0x4c>
   1ab68:	68ac      	ldr	r4, [r5, #8]
   1ab6a:	e7e8      	b.n	1ab3e <_fseeko_r+0x1e>
   1ab6c:	4b33      	ldr	r3, [pc, #204]	; (1ac3c <_fseeko_r+0x11c>)
   1ab6e:	429c      	cmp	r4, r3
   1ab70:	bf08      	it	eq
   1ab72:	68ec      	ldreq	r4, [r5, #12]
   1ab74:	e7e3      	b.n	1ab3e <_fseeko_r+0x1e>
   1ab76:	2e01      	cmp	r6, #1
   1ab78:	d030      	beq.n	1abdc <_fseeko_r+0xbc>
   1ab7a:	2e02      	cmp	r6, #2
   1ab7c:	d001      	beq.n	1ab82 <_fseeko_r+0x62>
   1ab7e:	2e00      	cmp	r6, #0
   1ab80:	d155      	bne.n	1ac2e <_fseeko_r+0x10e>
   1ab82:	6923      	ldr	r3, [r4, #16]
   1ab84:	b91b      	cbnz	r3, 1ab8e <_fseeko_r+0x6e>
   1ab86:	4621      	mov	r1, r4
   1ab88:	4628      	mov	r0, r5
   1ab8a:	f000 f8ed 	bl	1ad68 <__smakebuf_r>
   1ab8e:	4621      	mov	r1, r4
   1ab90:	4628      	mov	r0, r5
   1ab92:	f7ff fdf1 	bl	1a778 <_fflush_r>
   1ab96:	4607      	mov	r7, r0
   1ab98:	2800      	cmp	r0, #0
   1ab9a:	d13a      	bne.n	1ac12 <_fseeko_r+0xf2>
   1ab9c:	4633      	mov	r3, r6
   1ab9e:	464a      	mov	r2, r9
   1aba0:	6a21      	ldr	r1, [r4, #32]
   1aba2:	4628      	mov	r0, r5
   1aba4:	47c0      	blx	r8
   1aba6:	3001      	adds	r0, #1
   1aba8:	d033      	beq.n	1ac12 <_fseeko_r+0xf2>
   1abaa:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1abac:	b141      	cbz	r1, 1abc0 <_fseeko_r+0xa0>
   1abae:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1abb2:	4299      	cmp	r1, r3
   1abb4:	d002      	beq.n	1abbc <_fseeko_r+0x9c>
   1abb6:	4628      	mov	r0, r5
   1abb8:	f000 fbf6 	bl	1b3a8 <_free_r>
   1abbc:	2300      	movs	r3, #0
   1abbe:	6363      	str	r3, [r4, #52]	; 0x34
   1abc0:	2100      	movs	r1, #0
   1abc2:	6923      	ldr	r3, [r4, #16]
   1abc4:	6061      	str	r1, [r4, #4]
   1abc6:	6023      	str	r3, [r4, #0]
   1abc8:	89a3      	ldrh	r3, [r4, #12]
   1abca:	2208      	movs	r2, #8
   1abcc:	f423 6302 	bic.w	r3, r3, #2080	; 0x820
   1abd0:	81a3      	strh	r3, [r4, #12]
   1abd2:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   1abd6:	f000 f96b 	bl	1aeb0 <memset>
   1abda:	e01c      	b.n	1ac16 <_fseeko_r+0xf6>
   1abdc:	4621      	mov	r1, r4
   1abde:	4628      	mov	r0, r5
   1abe0:	f7ff fdca 	bl	1a778 <_fflush_r>
   1abe4:	89a2      	ldrh	r2, [r4, #12]
   1abe6:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   1abea:	d00c      	beq.n	1ac06 <_fseeko_r+0xe6>
   1abec:	6d60      	ldr	r0, [r4, #84]	; 0x54
   1abee:	89a3      	ldrh	r3, [r4, #12]
   1abf0:	075a      	lsls	r2, r3, #29
   1abf2:	d513      	bpl.n	1ac1c <_fseeko_r+0xfc>
   1abf4:	6863      	ldr	r3, [r4, #4]
   1abf6:	1ac0      	subs	r0, r0, r3
   1abf8:	6b63      	ldr	r3, [r4, #52]	; 0x34
   1abfa:	b10b      	cbz	r3, 1ac00 <_fseeko_r+0xe0>
   1abfc:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1abfe:	1ac0      	subs	r0, r0, r3
   1ac00:	4481      	add	r9, r0
   1ac02:	2600      	movs	r6, #0
   1ac04:	e7bd      	b.n	1ab82 <_fseeko_r+0x62>
   1ac06:	6a21      	ldr	r1, [r4, #32]
   1ac08:	4633      	mov	r3, r6
   1ac0a:	4628      	mov	r0, r5
   1ac0c:	47c0      	blx	r8
   1ac0e:	1c41      	adds	r1, r0, #1
   1ac10:	d1ed      	bne.n	1abee <_fseeko_r+0xce>
   1ac12:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1ac16:	4638      	mov	r0, r7
   1ac18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1ac1c:	071b      	lsls	r3, r3, #28
   1ac1e:	d5ef      	bpl.n	1ac00 <_fseeko_r+0xe0>
   1ac20:	6823      	ldr	r3, [r4, #0]
   1ac22:	2b00      	cmp	r3, #0
   1ac24:	d0ec      	beq.n	1ac00 <_fseeko_r+0xe0>
   1ac26:	6922      	ldr	r2, [r4, #16]
   1ac28:	1a9b      	subs	r3, r3, r2
   1ac2a:	4418      	add	r0, r3
   1ac2c:	e7e8      	b.n	1ac00 <_fseeko_r+0xe0>
   1ac2e:	2316      	movs	r3, #22
   1ac30:	e795      	b.n	1ab5e <_fseeko_r+0x3e>
   1ac32:	bf00      	nop
   1ac34:	0002236c 	.word	0x0002236c
   1ac38:	0002238c 	.word	0x0002238c
   1ac3c:	0002234c 	.word	0x0002234c

0001ac40 <_fwalk>:
_fwalk():
   1ac40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ac44:	4688      	mov	r8, r1
   1ac46:	2600      	movs	r6, #0
   1ac48:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1ac4c:	b914      	cbnz	r4, 1ac54 <_fwalk+0x14>
   1ac4e:	4630      	mov	r0, r6
   1ac50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ac54:	68a5      	ldr	r5, [r4, #8]
   1ac56:	6867      	ldr	r7, [r4, #4]
   1ac58:	3f01      	subs	r7, #1
   1ac5a:	d501      	bpl.n	1ac60 <_fwalk+0x20>
   1ac5c:	6824      	ldr	r4, [r4, #0]
   1ac5e:	e7f5      	b.n	1ac4c <_fwalk+0xc>
   1ac60:	89ab      	ldrh	r3, [r5, #12]
   1ac62:	2b01      	cmp	r3, #1
   1ac64:	d906      	bls.n	1ac74 <_fwalk+0x34>
   1ac66:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1ac6a:	3301      	adds	r3, #1
   1ac6c:	d002      	beq.n	1ac74 <_fwalk+0x34>
   1ac6e:	4628      	mov	r0, r5
   1ac70:	47c0      	blx	r8
   1ac72:	4306      	orrs	r6, r0
   1ac74:	3568      	adds	r5, #104	; 0x68
   1ac76:	e7ef      	b.n	1ac58 <_fwalk+0x18>

0001ac78 <_fwalk_reent>:
_fwalk_reent():
   1ac78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1ac7c:	4680      	mov	r8, r0
   1ac7e:	4689      	mov	r9, r1
   1ac80:	2600      	movs	r6, #0
   1ac82:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1ac86:	b914      	cbnz	r4, 1ac8e <_fwalk_reent+0x16>
   1ac88:	4630      	mov	r0, r6
   1ac8a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1ac8e:	68a5      	ldr	r5, [r4, #8]
   1ac90:	6867      	ldr	r7, [r4, #4]
   1ac92:	3f01      	subs	r7, #1
   1ac94:	d501      	bpl.n	1ac9a <_fwalk_reent+0x22>
   1ac96:	6824      	ldr	r4, [r4, #0]
   1ac98:	e7f5      	b.n	1ac86 <_fwalk_reent+0xe>
   1ac9a:	89ab      	ldrh	r3, [r5, #12]
   1ac9c:	2b01      	cmp	r3, #1
   1ac9e:	d907      	bls.n	1acb0 <_fwalk_reent+0x38>
   1aca0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1aca4:	3301      	adds	r3, #1
   1aca6:	d003      	beq.n	1acb0 <_fwalk_reent+0x38>
   1aca8:	4629      	mov	r1, r5
   1acaa:	4640      	mov	r0, r8
   1acac:	47c8      	blx	r9
   1acae:	4306      	orrs	r6, r0
   1acb0:	3568      	adds	r5, #104	; 0x68
   1acb2:	e7ee      	b.n	1ac92 <_fwalk_reent+0x1a>

0001acb4 <__libc_init_array>:
__libc_init_array():
   1acb4:	b570      	push	{r4, r5, r6, lr}
   1acb6:	2500      	movs	r5, #0
   1acb8:	4e0c      	ldr	r6, [pc, #48]	; (1acec <__libc_init_array+0x38>)
   1acba:	4c0d      	ldr	r4, [pc, #52]	; (1acf0 <__libc_init_array+0x3c>)
   1acbc:	1ba4      	subs	r4, r4, r6
   1acbe:	10a4      	asrs	r4, r4, #2
   1acc0:	42a5      	cmp	r5, r4
   1acc2:	d109      	bne.n	1acd8 <__libc_init_array+0x24>
   1acc4:	f7fd f9e4 	bl	18090 <_init>
   1acc8:	2500      	movs	r5, #0
   1acca:	4e0a      	ldr	r6, [pc, #40]	; (1acf4 <__libc_init_array+0x40>)
   1accc:	4c0a      	ldr	r4, [pc, #40]	; (1acf8 <__libc_init_array+0x44>)
   1acce:	1ba4      	subs	r4, r4, r6
   1acd0:	10a4      	asrs	r4, r4, #2
   1acd2:	42a5      	cmp	r5, r4
   1acd4:	d105      	bne.n	1ace2 <__libc_init_array+0x2e>
   1acd6:	bd70      	pop	{r4, r5, r6, pc}
   1acd8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   1acdc:	4798      	blx	r3
   1acde:	3501      	adds	r5, #1
   1ace0:	e7ee      	b.n	1acc0 <__libc_init_array+0xc>
   1ace2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   1ace6:	4798      	blx	r3
   1ace8:	3501      	adds	r5, #1
   1acea:	e7f2      	b.n	1acd2 <__libc_init_array+0x1e>
   1acec:	00022788 	.word	0x00022788
   1acf0:	00022788 	.word	0x00022788
   1acf4:	00022788 	.word	0x00022788
   1acf8:	0002278c 	.word	0x0002278c

0001acfc <__locale_ctype_ptr_l>:
__locale_ctype_ptr_l():
   1acfc:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
   1ad00:	4770      	bx	lr
   1ad02:	Address 0x000000000001ad02 is out of bounds.


0001ad04 <__locale_ctype_ptr>:
__locale_ctype_ptr():
   1ad04:	4b04      	ldr	r3, [pc, #16]	; (1ad18 <__locale_ctype_ptr+0x14>)
   1ad06:	4a05      	ldr	r2, [pc, #20]	; (1ad1c <__locale_ctype_ptr+0x18>)
   1ad08:	681b      	ldr	r3, [r3, #0]
   1ad0a:	6a1b      	ldr	r3, [r3, #32]
   1ad0c:	2b00      	cmp	r3, #0
   1ad0e:	bf08      	it	eq
   1ad10:	4613      	moveq	r3, r2
   1ad12:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
   1ad16:	4770      	bx	lr
   1ad18:	2007c0e4 	.word	0x2007c0e4
   1ad1c:	2007c148 	.word	0x2007c148

0001ad20 <__swhatbuf_r>:
__swhatbuf_r():
   1ad20:	b570      	push	{r4, r5, r6, lr}
   1ad22:	460e      	mov	r6, r1
   1ad24:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ad28:	b090      	sub	sp, #64	; 0x40
   1ad2a:	2900      	cmp	r1, #0
   1ad2c:	4614      	mov	r4, r2
   1ad2e:	461d      	mov	r5, r3
   1ad30:	da07      	bge.n	1ad42 <__swhatbuf_r+0x22>
   1ad32:	2300      	movs	r3, #0
   1ad34:	602b      	str	r3, [r5, #0]
   1ad36:	89b3      	ldrh	r3, [r6, #12]
   1ad38:	061a      	lsls	r2, r3, #24
   1ad3a:	d410      	bmi.n	1ad5e <__swhatbuf_r+0x3e>
   1ad3c:	f44f 6380 	mov.w	r3, #1024	; 0x400
   1ad40:	e00e      	b.n	1ad60 <__swhatbuf_r+0x40>
   1ad42:	aa01      	add	r2, sp, #4
   1ad44:	f003 ff3a 	bl	1ebbc <_fstat_r>
   1ad48:	2800      	cmp	r0, #0
   1ad4a:	dbf2      	blt.n	1ad32 <__swhatbuf_r+0x12>
   1ad4c:	9a02      	ldr	r2, [sp, #8]
   1ad4e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   1ad52:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
   1ad56:	425a      	negs	r2, r3
   1ad58:	415a      	adcs	r2, r3
   1ad5a:	602a      	str	r2, [r5, #0]
   1ad5c:	e7ee      	b.n	1ad3c <__swhatbuf_r+0x1c>
   1ad5e:	2340      	movs	r3, #64	; 0x40
   1ad60:	2000      	movs	r0, #0
   1ad62:	6023      	str	r3, [r4, #0]
   1ad64:	b010      	add	sp, #64	; 0x40
   1ad66:	bd70      	pop	{r4, r5, r6, pc}

0001ad68 <__smakebuf_r>:
__smakebuf_r():
   1ad68:	898b      	ldrh	r3, [r1, #12]
   1ad6a:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1ad6c:	079d      	lsls	r5, r3, #30
   1ad6e:	4606      	mov	r6, r0
   1ad70:	460c      	mov	r4, r1
   1ad72:	d507      	bpl.n	1ad84 <__smakebuf_r+0x1c>
   1ad74:	f104 0347 	add.w	r3, r4, #71	; 0x47
   1ad78:	6023      	str	r3, [r4, #0]
   1ad7a:	6123      	str	r3, [r4, #16]
   1ad7c:	2301      	movs	r3, #1
   1ad7e:	6163      	str	r3, [r4, #20]
   1ad80:	b002      	add	sp, #8
   1ad82:	bd70      	pop	{r4, r5, r6, pc}
   1ad84:	ab01      	add	r3, sp, #4
   1ad86:	466a      	mov	r2, sp
   1ad88:	f7ff ffca 	bl	1ad20 <__swhatbuf_r>
   1ad8c:	9900      	ldr	r1, [sp, #0]
   1ad8e:	4605      	mov	r5, r0
   1ad90:	4630      	mov	r0, r6
   1ad92:	f000 fb87 	bl	1b4a4 <_malloc_r>
   1ad96:	b948      	cbnz	r0, 1adac <__smakebuf_r+0x44>
   1ad98:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1ad9c:	059a      	lsls	r2, r3, #22
   1ad9e:	d4ef      	bmi.n	1ad80 <__smakebuf_r+0x18>
   1ada0:	f023 0303 	bic.w	r3, r3, #3
   1ada4:	f043 0302 	orr.w	r3, r3, #2
   1ada8:	81a3      	strh	r3, [r4, #12]
   1adaa:	e7e3      	b.n	1ad74 <__smakebuf_r+0xc>
   1adac:	4b0d      	ldr	r3, [pc, #52]	; (1ade4 <__smakebuf_r+0x7c>)
   1adae:	62b3      	str	r3, [r6, #40]	; 0x28
   1adb0:	89a3      	ldrh	r3, [r4, #12]
   1adb2:	6020      	str	r0, [r4, #0]
   1adb4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1adb8:	81a3      	strh	r3, [r4, #12]
   1adba:	9b00      	ldr	r3, [sp, #0]
   1adbc:	6120      	str	r0, [r4, #16]
   1adbe:	6163      	str	r3, [r4, #20]
   1adc0:	9b01      	ldr	r3, [sp, #4]
   1adc2:	b15b      	cbz	r3, 1addc <__smakebuf_r+0x74>
   1adc4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1adc8:	4630      	mov	r0, r6
   1adca:	f004 fa85 	bl	1f2d8 <_isatty_r>
   1adce:	b128      	cbz	r0, 1addc <__smakebuf_r+0x74>
   1add0:	89a3      	ldrh	r3, [r4, #12]
   1add2:	f023 0303 	bic.w	r3, r3, #3
   1add6:	f043 0301 	orr.w	r3, r3, #1
   1adda:	81a3      	strh	r3, [r4, #12]
   1addc:	89a3      	ldrh	r3, [r4, #12]
   1adde:	431d      	orrs	r5, r3
   1ade0:	81a5      	strh	r5, [r4, #12]
   1ade2:	e7cd      	b.n	1ad80 <__smakebuf_r+0x18>
   1ade4:	0001a931 	.word	0x0001a931

0001ade8 <malloc>:
malloc():
   1ade8:	4b02      	ldr	r3, [pc, #8]	; (1adf4 <malloc+0xc>)
   1adea:	4601      	mov	r1, r0
   1adec:	6818      	ldr	r0, [r3, #0]
   1adee:	f000 bb59 	b.w	1b4a4 <_malloc_r>
   1adf2:	bf00      	nop
   1adf4:	2007c0e4 	.word	0x2007c0e4

0001adf8 <free>:
free():
   1adf8:	4b02      	ldr	r3, [pc, #8]	; (1ae04 <free+0xc>)
   1adfa:	4601      	mov	r1, r0
   1adfc:	6818      	ldr	r0, [r3, #0]
   1adfe:	f000 bad3 	b.w	1b3a8 <_free_r>
   1ae02:	bf00      	nop
   1ae04:	2007c0e4 	.word	0x2007c0e4

0001ae08 <__ascii_mbtowc>:
__ascii_mbtowc():
   1ae08:	b082      	sub	sp, #8
   1ae0a:	b901      	cbnz	r1, 1ae0e <__ascii_mbtowc+0x6>
   1ae0c:	a901      	add	r1, sp, #4
   1ae0e:	b142      	cbz	r2, 1ae22 <__ascii_mbtowc+0x1a>
   1ae10:	b14b      	cbz	r3, 1ae26 <__ascii_mbtowc+0x1e>
   1ae12:	7813      	ldrb	r3, [r2, #0]
   1ae14:	600b      	str	r3, [r1, #0]
   1ae16:	7812      	ldrb	r2, [r2, #0]
   1ae18:	1c10      	adds	r0, r2, #0
   1ae1a:	bf18      	it	ne
   1ae1c:	2001      	movne	r0, #1
   1ae1e:	b002      	add	sp, #8
   1ae20:	4770      	bx	lr
   1ae22:	4610      	mov	r0, r2
   1ae24:	e7fb      	b.n	1ae1e <__ascii_mbtowc+0x16>
   1ae26:	f06f 0001 	mvn.w	r0, #1
   1ae2a:	e7f8      	b.n	1ae1e <__ascii_mbtowc+0x16>

0001ae2c <memchr>:
memchr():
   1ae2c:	b510      	push	{r4, lr}
   1ae2e:	b2c9      	uxtb	r1, r1
   1ae30:	4402      	add	r2, r0
   1ae32:	4290      	cmp	r0, r2
   1ae34:	4603      	mov	r3, r0
   1ae36:	d101      	bne.n	1ae3c <memchr+0x10>
   1ae38:	2000      	movs	r0, #0
   1ae3a:	bd10      	pop	{r4, pc}
   1ae3c:	781c      	ldrb	r4, [r3, #0]
   1ae3e:	3001      	adds	r0, #1
   1ae40:	428c      	cmp	r4, r1
   1ae42:	d1f6      	bne.n	1ae32 <memchr+0x6>
   1ae44:	4618      	mov	r0, r3
   1ae46:	bd10      	pop	{r4, pc}

0001ae48 <memcmp>:
memcmp():
   1ae48:	b510      	push	{r4, lr}
   1ae4a:	3901      	subs	r1, #1
   1ae4c:	4402      	add	r2, r0
   1ae4e:	4290      	cmp	r0, r2
   1ae50:	d101      	bne.n	1ae56 <memcmp+0xe>
   1ae52:	2000      	movs	r0, #0
   1ae54:	bd10      	pop	{r4, pc}
   1ae56:	f810 3b01 	ldrb.w	r3, [r0], #1
   1ae5a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
   1ae5e:	42a3      	cmp	r3, r4
   1ae60:	d0f5      	beq.n	1ae4e <memcmp+0x6>
   1ae62:	1b18      	subs	r0, r3, r4
   1ae64:	bd10      	pop	{r4, pc}

0001ae66 <memcpy>:
memcpy():
   1ae66:	b510      	push	{r4, lr}
   1ae68:	1e43      	subs	r3, r0, #1
   1ae6a:	440a      	add	r2, r1
   1ae6c:	4291      	cmp	r1, r2
   1ae6e:	d100      	bne.n	1ae72 <memcpy+0xc>
   1ae70:	bd10      	pop	{r4, pc}
   1ae72:	f811 4b01 	ldrb.w	r4, [r1], #1
   1ae76:	f803 4f01 	strb.w	r4, [r3, #1]!
   1ae7a:	e7f7      	b.n	1ae6c <memcpy+0x6>

0001ae7c <memmove>:
memmove():
   1ae7c:	4288      	cmp	r0, r1
   1ae7e:	b510      	push	{r4, lr}
   1ae80:	eb01 0302 	add.w	r3, r1, r2
   1ae84:	d803      	bhi.n	1ae8e <memmove+0x12>
   1ae86:	1e42      	subs	r2, r0, #1
   1ae88:	4299      	cmp	r1, r3
   1ae8a:	d10c      	bne.n	1aea6 <memmove+0x2a>
   1ae8c:	bd10      	pop	{r4, pc}
   1ae8e:	4298      	cmp	r0, r3
   1ae90:	d2f9      	bcs.n	1ae86 <memmove+0xa>
   1ae92:	1881      	adds	r1, r0, r2
   1ae94:	1ad2      	subs	r2, r2, r3
   1ae96:	42d3      	cmn	r3, r2
   1ae98:	d100      	bne.n	1ae9c <memmove+0x20>
   1ae9a:	bd10      	pop	{r4, pc}
   1ae9c:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   1aea0:	f801 4d01 	strb.w	r4, [r1, #-1]!
   1aea4:	e7f7      	b.n	1ae96 <memmove+0x1a>
   1aea6:	f811 4b01 	ldrb.w	r4, [r1], #1
   1aeaa:	f802 4f01 	strb.w	r4, [r2, #1]!
   1aeae:	e7eb      	b.n	1ae88 <memmove+0xc>

0001aeb0 <memset>:
memset():
   1aeb0:	4603      	mov	r3, r0
   1aeb2:	4402      	add	r2, r0
   1aeb4:	4293      	cmp	r3, r2
   1aeb6:	d100      	bne.n	1aeba <memset+0xa>
   1aeb8:	4770      	bx	lr
   1aeba:	f803 1b01 	strb.w	r1, [r3], #1
   1aebe:	e7f9      	b.n	1aeb4 <memset+0x4>

0001aec0 <validate_structure>:
validate_structure():
   1aec0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1aec2:	6801      	ldr	r1, [r0, #0]
   1aec4:	4604      	mov	r4, r0
   1aec6:	293b      	cmp	r1, #59	; 0x3b
   1aec8:	d911      	bls.n	1aeee <validate_structure+0x2e>
   1aeca:	223c      	movs	r2, #60	; 0x3c
   1aecc:	4668      	mov	r0, sp
   1aece:	f002 ffcb 	bl	1de68 <div>
   1aed2:	9a01      	ldr	r2, [sp, #4]
   1aed4:	6863      	ldr	r3, [r4, #4]
   1aed6:	9900      	ldr	r1, [sp, #0]
   1aed8:	2a00      	cmp	r2, #0
   1aeda:	440b      	add	r3, r1
   1aedc:	6063      	str	r3, [r4, #4]
   1aede:	bfbb      	ittet	lt
   1aee0:	323c      	addlt	r2, #60	; 0x3c
   1aee2:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1aee6:	6022      	strge	r2, [r4, #0]
   1aee8:	6022      	strlt	r2, [r4, #0]
   1aeea:	bfb8      	it	lt
   1aeec:	6063      	strlt	r3, [r4, #4]
   1aeee:	6861      	ldr	r1, [r4, #4]
   1aef0:	293b      	cmp	r1, #59	; 0x3b
   1aef2:	d911      	bls.n	1af18 <validate_structure+0x58>
   1aef4:	223c      	movs	r2, #60	; 0x3c
   1aef6:	4668      	mov	r0, sp
   1aef8:	f002 ffb6 	bl	1de68 <div>
   1aefc:	9a01      	ldr	r2, [sp, #4]
   1aefe:	68a3      	ldr	r3, [r4, #8]
   1af00:	9900      	ldr	r1, [sp, #0]
   1af02:	2a00      	cmp	r2, #0
   1af04:	440b      	add	r3, r1
   1af06:	60a3      	str	r3, [r4, #8]
   1af08:	bfbb      	ittet	lt
   1af0a:	323c      	addlt	r2, #60	; 0x3c
   1af0c:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1af10:	6062      	strge	r2, [r4, #4]
   1af12:	6062      	strlt	r2, [r4, #4]
   1af14:	bfb8      	it	lt
   1af16:	60a3      	strlt	r3, [r4, #8]
   1af18:	68a1      	ldr	r1, [r4, #8]
   1af1a:	2917      	cmp	r1, #23
   1af1c:	d911      	bls.n	1af42 <validate_structure+0x82>
   1af1e:	2218      	movs	r2, #24
   1af20:	4668      	mov	r0, sp
   1af22:	f002 ffa1 	bl	1de68 <div>
   1af26:	9a01      	ldr	r2, [sp, #4]
   1af28:	68e3      	ldr	r3, [r4, #12]
   1af2a:	9900      	ldr	r1, [sp, #0]
   1af2c:	2a00      	cmp	r2, #0
   1af2e:	440b      	add	r3, r1
   1af30:	60e3      	str	r3, [r4, #12]
   1af32:	bfbb      	ittet	lt
   1af34:	3218      	addlt	r2, #24
   1af36:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1af3a:	60a2      	strge	r2, [r4, #8]
   1af3c:	60a2      	strlt	r2, [r4, #8]
   1af3e:	bfb8      	it	lt
   1af40:	60e3      	strlt	r3, [r4, #12]
   1af42:	6921      	ldr	r1, [r4, #16]
   1af44:	290b      	cmp	r1, #11
   1af46:	d911      	bls.n	1af6c <validate_structure+0xac>
   1af48:	220c      	movs	r2, #12
   1af4a:	4668      	mov	r0, sp
   1af4c:	f002 ff8c 	bl	1de68 <div>
   1af50:	9a01      	ldr	r2, [sp, #4]
   1af52:	6963      	ldr	r3, [r4, #20]
   1af54:	9900      	ldr	r1, [sp, #0]
   1af56:	2a00      	cmp	r2, #0
   1af58:	440b      	add	r3, r1
   1af5a:	6163      	str	r3, [r4, #20]
   1af5c:	bfbb      	ittet	lt
   1af5e:	320c      	addlt	r2, #12
   1af60:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1af64:	6122      	strge	r2, [r4, #16]
   1af66:	6122      	strlt	r2, [r4, #16]
   1af68:	bfb8      	it	lt
   1af6a:	6163      	strlt	r3, [r4, #20]
   1af6c:	6963      	ldr	r3, [r4, #20]
   1af6e:	0799      	lsls	r1, r3, #30
   1af70:	d143      	bne.n	1affa <validate_structure+0x13a>
   1af72:	2164      	movs	r1, #100	; 0x64
   1af74:	fb93 f2f1 	sdiv	r2, r3, r1
   1af78:	fb01 3212 	mls	r2, r1, r2, r3
   1af7c:	2a00      	cmp	r2, #0
   1af7e:	d13e      	bne.n	1affe <validate_structure+0x13e>
   1af80:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1af84:	f203 736c 	addw	r3, r3, #1900	; 0x76c
   1af88:	fb93 f2f1 	sdiv	r2, r3, r1
   1af8c:	fb01 3312 	mls	r3, r1, r2, r3
   1af90:	2b00      	cmp	r3, #0
   1af92:	bf14      	ite	ne
   1af94:	231c      	movne	r3, #28
   1af96:	231d      	moveq	r3, #29
   1af98:	68e2      	ldr	r2, [r4, #12]
   1af9a:	2a00      	cmp	r2, #0
   1af9c:	dd31      	ble.n	1b002 <validate_structure+0x142>
   1af9e:	2602      	movs	r6, #2
   1afa0:	f04f 0e00 	mov.w	lr, #0
   1afa4:	2064      	movs	r0, #100	; 0x64
   1afa6:	f44f 75c8 	mov.w	r5, #400	; 0x190
   1afaa:	4f34      	ldr	r7, [pc, #208]	; (1b07c <validate_structure+0x1bc>)
   1afac:	6921      	ldr	r1, [r4, #16]
   1afae:	68e2      	ldr	r2, [r4, #12]
   1afb0:	2901      	cmp	r1, #1
   1afb2:	d05d      	beq.n	1b070 <validate_structure+0x1b0>
   1afb4:	f857 c021 	ldr.w	ip, [r7, r1, lsl #2]
   1afb8:	4562      	cmp	r2, ip
   1afba:	dd2c      	ble.n	1b016 <validate_structure+0x156>
   1afbc:	3101      	adds	r1, #1
   1afbe:	eba2 020c 	sub.w	r2, r2, ip
   1afc2:	290c      	cmp	r1, #12
   1afc4:	60e2      	str	r2, [r4, #12]
   1afc6:	6121      	str	r1, [r4, #16]
   1afc8:	d1f0      	bne.n	1afac <validate_structure+0xec>
   1afca:	6963      	ldr	r3, [r4, #20]
   1afcc:	f8c4 e010 	str.w	lr, [r4, #16]
   1afd0:	1c5a      	adds	r2, r3, #1
   1afd2:	0791      	lsls	r1, r2, #30
   1afd4:	6162      	str	r2, [r4, #20]
   1afd6:	d147      	bne.n	1b068 <validate_structure+0x1a8>
   1afd8:	fb92 f1f0 	sdiv	r1, r2, r0
   1afdc:	fb00 2211 	mls	r2, r0, r1, r2
   1afe0:	2a00      	cmp	r2, #0
   1afe2:	d143      	bne.n	1b06c <validate_structure+0x1ac>
   1afe4:	f203 736d 	addw	r3, r3, #1901	; 0x76d
   1afe8:	fb93 f2f5 	sdiv	r2, r3, r5
   1afec:	fb05 3312 	mls	r3, r5, r2, r3
   1aff0:	2b00      	cmp	r3, #0
   1aff2:	bf14      	ite	ne
   1aff4:	231c      	movne	r3, #28
   1aff6:	231d      	moveq	r3, #29
   1aff8:	e7d8      	b.n	1afac <validate_structure+0xec>
   1affa:	231c      	movs	r3, #28
   1affc:	e7cc      	b.n	1af98 <validate_structure+0xd8>
   1affe:	231d      	movs	r3, #29
   1b000:	e7ca      	b.n	1af98 <validate_structure+0xd8>
   1b002:	260b      	movs	r6, #11
   1b004:	2064      	movs	r0, #100	; 0x64
   1b006:	f44f 75c8 	mov.w	r5, #400	; 0x190
   1b00a:	4f1c      	ldr	r7, [pc, #112]	; (1b07c <validate_structure+0x1bc>)
   1b00c:	f8d4 e00c 	ldr.w	lr, [r4, #12]
   1b010:	f1be 0f00 	cmp.w	lr, #0
   1b014:	dd01      	ble.n	1b01a <validate_structure+0x15a>
   1b016:	b003      	add	sp, #12
   1b018:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1b01a:	6921      	ldr	r1, [r4, #16]
   1b01c:	3901      	subs	r1, #1
   1b01e:	6121      	str	r1, [r4, #16]
   1b020:	3101      	adds	r1, #1
   1b022:	d114      	bne.n	1b04e <validate_structure+0x18e>
   1b024:	6963      	ldr	r3, [r4, #20]
   1b026:	6126      	str	r6, [r4, #16]
   1b028:	1e59      	subs	r1, r3, #1
   1b02a:	078a      	lsls	r2, r1, #30
   1b02c:	6161      	str	r1, [r4, #20]
   1b02e:	d117      	bne.n	1b060 <validate_structure+0x1a0>
   1b030:	fb91 f2f0 	sdiv	r2, r1, r0
   1b034:	fb00 1112 	mls	r1, r0, r2, r1
   1b038:	b9a1      	cbnz	r1, 1b064 <validate_structure+0x1a4>
   1b03a:	f203 736b 	addw	r3, r3, #1899	; 0x76b
   1b03e:	fb93 f2f5 	sdiv	r2, r3, r5
   1b042:	fb05 3312 	mls	r3, r5, r2, r3
   1b046:	2b00      	cmp	r3, #0
   1b048:	bf14      	ite	ne
   1b04a:	231c      	movne	r3, #28
   1b04c:	231d      	moveq	r3, #29
   1b04e:	6922      	ldr	r2, [r4, #16]
   1b050:	2a01      	cmp	r2, #1
   1b052:	bf0c      	ite	eq
   1b054:	461a      	moveq	r2, r3
   1b056:	f857 2022 	ldrne.w	r2, [r7, r2, lsl #2]
   1b05a:	4472      	add	r2, lr
   1b05c:	60e2      	str	r2, [r4, #12]
   1b05e:	e7d5      	b.n	1b00c <validate_structure+0x14c>
   1b060:	231c      	movs	r3, #28
   1b062:	e7f4      	b.n	1b04e <validate_structure+0x18e>
   1b064:	231d      	movs	r3, #29
   1b066:	e7f2      	b.n	1b04e <validate_structure+0x18e>
   1b068:	231c      	movs	r3, #28
   1b06a:	e79f      	b.n	1afac <validate_structure+0xec>
   1b06c:	231d      	movs	r3, #29
   1b06e:	e79d      	b.n	1afac <validate_structure+0xec>
   1b070:	4293      	cmp	r3, r2
   1b072:	dad0      	bge.n	1b016 <validate_structure+0x156>
   1b074:	1ad2      	subs	r2, r2, r3
   1b076:	60e2      	str	r2, [r4, #12]
   1b078:	6126      	str	r6, [r4, #16]
   1b07a:	e797      	b.n	1afac <validate_structure+0xec>
   1b07c:	000223b8 	.word	0x000223b8

0001b080 <mktime>:
mktime():
   1b080:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1b084:	4681      	mov	r9, r0
   1b086:	f004 f923 	bl	1f2d0 <__gettzinfo>
   1b08a:	253c      	movs	r5, #60	; 0x3c
   1b08c:	4680      	mov	r8, r0
   1b08e:	4648      	mov	r0, r9
   1b090:	f7ff ff16 	bl	1aec0 <validate_structure>
   1b094:	e899 0081 	ldmia.w	r9, {r0, r7}
   1b098:	fb05 0707 	mla	r7, r5, r7, r0
   1b09c:	f44f 6561 	mov.w	r5, #3600	; 0xe10
   1b0a0:	f8d9 3010 	ldr.w	r3, [r9, #16]
   1b0a4:	4ab1      	ldr	r2, [pc, #708]	; (1b36c <mktime+0x2ec>)
   1b0a6:	f8d9 400c 	ldr.w	r4, [r9, #12]
   1b0aa:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   1b0ae:	f8d9 0008 	ldr.w	r0, [r9, #8]
   1b0b2:	3c01      	subs	r4, #1
   1b0b4:	2b01      	cmp	r3, #1
   1b0b6:	fb05 7000 	mla	r0, r5, r0, r7
   1b0ba:	4414      	add	r4, r2
   1b0bc:	f8d9 3014 	ldr.w	r3, [r9, #20]
   1b0c0:	dd11      	ble.n	1b0e6 <mktime+0x66>
   1b0c2:	0799      	lsls	r1, r3, #30
   1b0c4:	d10f      	bne.n	1b0e6 <mktime+0x66>
   1b0c6:	2164      	movs	r1, #100	; 0x64
   1b0c8:	fb93 f2f1 	sdiv	r2, r3, r1
   1b0cc:	fb01 3212 	mls	r2, r1, r2, r3
   1b0d0:	b942      	cbnz	r2, 1b0e4 <mktime+0x64>
   1b0d2:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1b0d6:	f203 756c 	addw	r5, r3, #1900	; 0x76c
   1b0da:	fb95 f2f1 	sdiv	r2, r5, r1
   1b0de:	fb01 5212 	mls	r2, r1, r2, r5
   1b0e2:	b902      	cbnz	r2, 1b0e6 <mktime+0x66>
   1b0e4:	3401      	adds	r4, #1
   1b0e6:	f644 6120 	movw	r1, #20000	; 0x4e20
   1b0ea:	f503 521c 	add.w	r2, r3, #9984	; 0x2700
   1b0ee:	3210      	adds	r2, #16
   1b0f0:	428a      	cmp	r2, r1
   1b0f2:	f8c9 401c 	str.w	r4, [r9, #28]
   1b0f6:	f200 812d 	bhi.w	1b354 <mktime+0x2d4>
   1b0fa:	2b46      	cmp	r3, #70	; 0x46
   1b0fc:	dd70      	ble.n	1b1e0 <mktime+0x160>
   1b0fe:	2546      	movs	r5, #70	; 0x46
   1b100:	f240 176d 	movw	r7, #365	; 0x16d
   1b104:	2164      	movs	r1, #100	; 0x64
   1b106:	f44f 76c8 	mov.w	r6, #400	; 0x190
   1b10a:	07aa      	lsls	r2, r5, #30
   1b10c:	d162      	bne.n	1b1d4 <mktime+0x154>
   1b10e:	fb95 f2f1 	sdiv	r2, r5, r1
   1b112:	fb01 5212 	mls	r2, r1, r2, r5
   1b116:	2a00      	cmp	r2, #0
   1b118:	d15f      	bne.n	1b1da <mktime+0x15a>
   1b11a:	f205 7e6c 	addw	lr, r5, #1900	; 0x76c
   1b11e:	fb9e f2f6 	sdiv	r2, lr, r6
   1b122:	fb06 e212 	mls	r2, r6, r2, lr
   1b126:	2a00      	cmp	r2, #0
   1b128:	bf14      	ite	ne
   1b12a:	463a      	movne	r2, r7
   1b12c:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1b130:	3501      	adds	r5, #1
   1b132:	42ab      	cmp	r3, r5
   1b134:	4414      	add	r4, r2
   1b136:	d1e8      	bne.n	1b10a <mktime+0x8a>
   1b138:	4f8d      	ldr	r7, [pc, #564]	; (1b370 <mktime+0x2f0>)
   1b13a:	fb07 0704 	mla	r7, r7, r4, r0
   1b13e:	f002 fbdf 	bl	1d900 <__tz_lock>
   1b142:	f002 fbdf 	bl	1d904 <_tzset_unlocked>
   1b146:	4b8b      	ldr	r3, [pc, #556]	; (1b374 <mktime+0x2f4>)
   1b148:	681e      	ldr	r6, [r3, #0]
   1b14a:	2e00      	cmp	r6, #0
   1b14c:	f000 810a 	beq.w	1b364 <mktime+0x2e4>
   1b150:	f8d9 3020 	ldr.w	r3, [r9, #32]
   1b154:	f8d9 0014 	ldr.w	r0, [r9, #20]
   1b158:	2b01      	cmp	r3, #1
   1b15a:	bfa8      	it	ge
   1b15c:	2301      	movge	r3, #1
   1b15e:	469a      	mov	sl, r3
   1b160:	f8d8 3004 	ldr.w	r3, [r8, #4]
   1b164:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   1b168:	4298      	cmp	r0, r3
   1b16a:	d17c      	bne.n	1b266 <mktime+0x1e6>
   1b16c:	f8d8 2038 	ldr.w	r2, [r8, #56]	; 0x38
   1b170:	f8d8 3020 	ldr.w	r3, [r8, #32]
   1b174:	f8d8 003c 	ldr.w	r0, [r8, #60]	; 0x3c
   1b178:	f8d8 101c 	ldr.w	r1, [r8, #28]
   1b17c:	1ad6      	subs	r6, r2, r3
   1b17e:	42b7      	cmp	r7, r6
   1b180:	eba1 0100 	sub.w	r1, r1, r0
   1b184:	da76      	bge.n	1b274 <mktime+0x1f4>
   1b186:	f8d8 2000 	ldr.w	r2, [r8]
   1b18a:	2a00      	cmp	r2, #0
   1b18c:	d076      	beq.n	1b27c <mktime+0x1fc>
   1b18e:	428f      	cmp	r7, r1
   1b190:	f2c0 80e3 	blt.w	1b35a <mktime+0x2da>
   1b194:	42b7      	cmp	r7, r6
   1b196:	bfac      	ite	ge
   1b198:	2600      	movge	r6, #0
   1b19a:	2601      	movlt	r6, #1
   1b19c:	f1ba 0f00 	cmp.w	sl, #0
   1b1a0:	da72      	bge.n	1b288 <mktime+0x208>
   1b1a2:	2e01      	cmp	r6, #1
   1b1a4:	f040 80de 	bne.w	1b364 <mktime+0x2e4>
   1b1a8:	2601      	movs	r6, #1
   1b1aa:	f8d8 503c 	ldr.w	r5, [r8, #60]	; 0x3c
   1b1ae:	443d      	add	r5, r7
   1b1b0:	f002 fba7 	bl	1d902 <__tz_unlock>
   1b1b4:	2307      	movs	r3, #7
   1b1b6:	3404      	adds	r4, #4
   1b1b8:	fb94 f3f3 	sdiv	r3, r4, r3
   1b1bc:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   1b1c0:	1ae4      	subs	r4, r4, r3
   1b1c2:	bf48      	it	mi
   1b1c4:	3407      	addmi	r4, #7
   1b1c6:	f8c9 6020 	str.w	r6, [r9, #32]
   1b1ca:	f8c9 4018 	str.w	r4, [r9, #24]
   1b1ce:	4628      	mov	r0, r5
   1b1d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1b1d4:	f240 126d 	movw	r2, #365	; 0x16d
   1b1d8:	e7aa      	b.n	1b130 <mktime+0xb0>
   1b1da:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1b1de:	e7a7      	b.n	1b130 <mktime+0xb0>
   1b1e0:	d01e      	beq.n	1b220 <mktime+0x1a0>
   1b1e2:	2245      	movs	r2, #69	; 0x45
   1b1e4:	f240 176d 	movw	r7, #365	; 0x16d
   1b1e8:	2564      	movs	r5, #100	; 0x64
   1b1ea:	f44f 76c8 	mov.w	r6, #400	; 0x190
   1b1ee:	429a      	cmp	r2, r3
   1b1f0:	dc18      	bgt.n	1b224 <mktime+0x1a4>
   1b1f2:	079d      	lsls	r5, r3, #30
   1b1f4:	d131      	bne.n	1b25a <mktime+0x1da>
   1b1f6:	2164      	movs	r1, #100	; 0x64
   1b1f8:	fb93 f2f1 	sdiv	r2, r3, r1
   1b1fc:	fb01 3212 	mls	r2, r1, r2, r3
   1b200:	bb72      	cbnz	r2, 1b260 <mktime+0x1e0>
   1b202:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1b206:	f203 756c 	addw	r5, r3, #1900	; 0x76c
   1b20a:	fb95 f2f1 	sdiv	r2, r5, r1
   1b20e:	fb01 5212 	mls	r2, r1, r2, r5
   1b212:	2a00      	cmp	r2, #0
   1b214:	f240 126d 	movw	r2, #365	; 0x16d
   1b218:	bf08      	it	eq
   1b21a:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1b21e:	1aa4      	subs	r4, r4, r2
   1b220:	461d      	mov	r5, r3
   1b222:	e789      	b.n	1b138 <mktime+0xb8>
   1b224:	0791      	lsls	r1, r2, #30
   1b226:	d112      	bne.n	1b24e <mktime+0x1ce>
   1b228:	fb92 f1f5 	sdiv	r1, r2, r5
   1b22c:	fb05 2111 	mls	r1, r5, r1, r2
   1b230:	b981      	cbnz	r1, 1b254 <mktime+0x1d4>
   1b232:	f202 7e6c 	addw	lr, r2, #1900	; 0x76c
   1b236:	fb9e f1f6 	sdiv	r1, lr, r6
   1b23a:	fb06 e111 	mls	r1, r6, r1, lr
   1b23e:	2900      	cmp	r1, #0
   1b240:	bf14      	ite	ne
   1b242:	4639      	movne	r1, r7
   1b244:	f44f 71b7 	moveq.w	r1, #366	; 0x16e
   1b248:	1a64      	subs	r4, r4, r1
   1b24a:	3a01      	subs	r2, #1
   1b24c:	e7cf      	b.n	1b1ee <mktime+0x16e>
   1b24e:	f240 116d 	movw	r1, #365	; 0x16d
   1b252:	e7f9      	b.n	1b248 <mktime+0x1c8>
   1b254:	f44f 71b7 	mov.w	r1, #366	; 0x16e
   1b258:	e7f6      	b.n	1b248 <mktime+0x1c8>
   1b25a:	f240 126d 	movw	r2, #365	; 0x16d
   1b25e:	e7de      	b.n	1b21e <mktime+0x19e>
   1b260:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1b264:	e7db      	b.n	1b21e <mktime+0x19e>
   1b266:	f002 faa3 	bl	1d7b0 <__tzcalc_limits>
   1b26a:	2800      	cmp	r0, #0
   1b26c:	f47f af7e 	bne.w	1b16c <mktime+0xec>
   1b270:	4656      	mov	r6, sl
   1b272:	e796      	b.n	1b1a2 <mktime+0x122>
   1b274:	1a12      	subs	r2, r2, r0
   1b276:	4297      	cmp	r7, r2
   1b278:	dbfa      	blt.n	1b270 <mktime+0x1f0>
   1b27a:	e784      	b.n	1b186 <mktime+0x106>
   1b27c:	428f      	cmp	r7, r1
   1b27e:	db89      	blt.n	1b194 <mktime+0x114>
   1b280:	f1ba 0f00 	cmp.w	sl, #0
   1b284:	db90      	blt.n	1b1a8 <mktime+0x128>
   1b286:	2601      	movs	r6, #1
   1b288:	ea8a 0a06 	eor.w	sl, sl, r6
   1b28c:	f1ba 0f01 	cmp.w	sl, #1
   1b290:	d187      	bne.n	1b1a2 <mktime+0x122>
   1b292:	1a1b      	subs	r3, r3, r0
   1b294:	b906      	cbnz	r6, 1b298 <mktime+0x218>
   1b296:	425b      	negs	r3, r3
   1b298:	f8d9 2000 	ldr.w	r2, [r9]
   1b29c:	4648      	mov	r0, r9
   1b29e:	441a      	add	r2, r3
   1b2a0:	f8c9 2000 	str.w	r2, [r9]
   1b2a4:	441f      	add	r7, r3
   1b2a6:	f8d9 a00c 	ldr.w	sl, [r9, #12]
   1b2aa:	f7ff fe09 	bl	1aec0 <validate_structure>
   1b2ae:	f8d9 300c 	ldr.w	r3, [r9, #12]
   1b2b2:	ebb3 030a 	subs.w	r3, r3, sl
   1b2b6:	f43f af74 	beq.w	1b1a2 <mktime+0x122>
   1b2ba:	2b01      	cmp	r3, #1
   1b2bc:	dc21      	bgt.n	1b302 <mktime+0x282>
   1b2be:	1c98      	adds	r0, r3, #2
   1b2c0:	bfd8      	it	le
   1b2c2:	2301      	movle	r3, #1
   1b2c4:	f8d9 201c 	ldr.w	r2, [r9, #28]
   1b2c8:	441c      	add	r4, r3
   1b2ca:	189b      	adds	r3, r3, r2
   1b2cc:	d522      	bpl.n	1b314 <mktime+0x294>
   1b2ce:	1e6a      	subs	r2, r5, #1
   1b2d0:	0791      	lsls	r1, r2, #30
   1b2d2:	d119      	bne.n	1b308 <mktime+0x288>
   1b2d4:	2164      	movs	r1, #100	; 0x64
   1b2d6:	fb92 f3f1 	sdiv	r3, r2, r1
   1b2da:	fb01 2313 	mls	r3, r1, r3, r2
   1b2de:	b9b3      	cbnz	r3, 1b30e <mktime+0x28e>
   1b2e0:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1b2e4:	f205 756b 	addw	r5, r5, #1899	; 0x76b
   1b2e8:	fb95 f3f2 	sdiv	r3, r5, r2
   1b2ec:	fb02 5513 	mls	r5, r2, r3, r5
   1b2f0:	2d00      	cmp	r5, #0
   1b2f2:	f240 136d 	movw	r3, #365	; 0x16d
   1b2f6:	bf18      	it	ne
   1b2f8:	f44f 73b6 	movne.w	r3, #364	; 0x16c
   1b2fc:	f8c9 301c 	str.w	r3, [r9, #28]
   1b300:	e74f      	b.n	1b1a2 <mktime+0x122>
   1b302:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1b306:	e7dd      	b.n	1b2c4 <mktime+0x244>
   1b308:	f44f 73b6 	mov.w	r3, #364	; 0x16c
   1b30c:	e7f6      	b.n	1b2fc <mktime+0x27c>
   1b30e:	f240 136d 	movw	r3, #365	; 0x16d
   1b312:	e7f3      	b.n	1b2fc <mktime+0x27c>
   1b314:	07aa      	lsls	r2, r5, #30
   1b316:	d117      	bne.n	1b348 <mktime+0x2c8>
   1b318:	2164      	movs	r1, #100	; 0x64
   1b31a:	fb95 f2f1 	sdiv	r2, r5, r1
   1b31e:	fb01 5212 	mls	r2, r1, r2, r5
   1b322:	b9a2      	cbnz	r2, 1b34e <mktime+0x2ce>
   1b324:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1b328:	f205 756c 	addw	r5, r5, #1900	; 0x76c
   1b32c:	fb95 f2f1 	sdiv	r2, r5, r1
   1b330:	fb01 5512 	mls	r5, r1, r2, r5
   1b334:	2d00      	cmp	r5, #0
   1b336:	f240 126d 	movw	r2, #365	; 0x16d
   1b33a:	bf08      	it	eq
   1b33c:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1b340:	429a      	cmp	r2, r3
   1b342:	bfd8      	it	le
   1b344:	1a9b      	suble	r3, r3, r2
   1b346:	e7d9      	b.n	1b2fc <mktime+0x27c>
   1b348:	f240 126d 	movw	r2, #365	; 0x16d
   1b34c:	e7f8      	b.n	1b340 <mktime+0x2c0>
   1b34e:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1b352:	e7f5      	b.n	1b340 <mktime+0x2c0>
   1b354:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   1b358:	e739      	b.n	1b1ce <mktime+0x14e>
   1b35a:	f1ba 0f00 	cmp.w	sl, #0
   1b35e:	f04f 0600 	mov.w	r6, #0
   1b362:	da91      	bge.n	1b288 <mktime+0x208>
   1b364:	f8d8 5020 	ldr.w	r5, [r8, #32]
   1b368:	443d      	add	r5, r7
   1b36a:	e721      	b.n	1b1b0 <mktime+0x130>
   1b36c:	000223e8 	.word	0x000223e8
   1b370:	00015180 	.word	0x00015180
   1b374:	2007d058 	.word	0x2007d058

0001b378 <mallinfo>:
mallinfo():
   1b378:	b510      	push	{r4, lr}
   1b37a:	4604      	mov	r4, r0
   1b37c:	4b02      	ldr	r3, [pc, #8]	; (1b388 <mallinfo+0x10>)
   1b37e:	6819      	ldr	r1, [r3, #0]
   1b380:	f000 f85e 	bl	1b440 <_mallinfo_r>
   1b384:	4620      	mov	r0, r4
   1b386:	bd10      	pop	{r4, pc}
   1b388:	2007c0e4 	.word	0x2007c0e4

0001b38c <_calloc_r>:
_calloc_r():
   1b38c:	b538      	push	{r3, r4, r5, lr}
   1b38e:	fb02 f401 	mul.w	r4, r2, r1
   1b392:	4621      	mov	r1, r4
   1b394:	f000 f886 	bl	1b4a4 <_malloc_r>
   1b398:	4605      	mov	r5, r0
   1b39a:	b118      	cbz	r0, 1b3a4 <_calloc_r+0x18>
   1b39c:	4622      	mov	r2, r4
   1b39e:	2100      	movs	r1, #0
   1b3a0:	f7ff fd86 	bl	1aeb0 <memset>
   1b3a4:	4628      	mov	r0, r5
   1b3a6:	bd38      	pop	{r3, r4, r5, pc}

0001b3a8 <_free_r>:
_free_r():
   1b3a8:	b538      	push	{r3, r4, r5, lr}
   1b3aa:	4605      	mov	r5, r0
   1b3ac:	2900      	cmp	r1, #0
   1b3ae:	d043      	beq.n	1b438 <_free_r+0x90>
   1b3b0:	f851 3c04 	ldr.w	r3, [r1, #-4]
   1b3b4:	1f0c      	subs	r4, r1, #4
   1b3b6:	2b00      	cmp	r3, #0
   1b3b8:	bfb8      	it	lt
   1b3ba:	18e4      	addlt	r4, r4, r3
   1b3bc:	f7fc fde1 	bl	17f82 <__malloc_lock>
   1b3c0:	4a1e      	ldr	r2, [pc, #120]	; (1b43c <_free_r+0x94>)
   1b3c2:	6813      	ldr	r3, [r2, #0]
   1b3c4:	4610      	mov	r0, r2
   1b3c6:	b933      	cbnz	r3, 1b3d6 <_free_r+0x2e>
   1b3c8:	6063      	str	r3, [r4, #4]
   1b3ca:	6014      	str	r4, [r2, #0]
   1b3cc:	4628      	mov	r0, r5
   1b3ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1b3d2:	f7fc bdd8 	b.w	17f86 <__malloc_unlock>
   1b3d6:	42a3      	cmp	r3, r4
   1b3d8:	d90b      	bls.n	1b3f2 <_free_r+0x4a>
   1b3da:	6821      	ldr	r1, [r4, #0]
   1b3dc:	1862      	adds	r2, r4, r1
   1b3de:	4293      	cmp	r3, r2
   1b3e0:	bf01      	itttt	eq
   1b3e2:	681a      	ldreq	r2, [r3, #0]
   1b3e4:	685b      	ldreq	r3, [r3, #4]
   1b3e6:	1852      	addeq	r2, r2, r1
   1b3e8:	6022      	streq	r2, [r4, #0]
   1b3ea:	6063      	str	r3, [r4, #4]
   1b3ec:	6004      	str	r4, [r0, #0]
   1b3ee:	e7ed      	b.n	1b3cc <_free_r+0x24>
   1b3f0:	4613      	mov	r3, r2
   1b3f2:	685a      	ldr	r2, [r3, #4]
   1b3f4:	b10a      	cbz	r2, 1b3fa <_free_r+0x52>
   1b3f6:	42a2      	cmp	r2, r4
   1b3f8:	d9fa      	bls.n	1b3f0 <_free_r+0x48>
   1b3fa:	6819      	ldr	r1, [r3, #0]
   1b3fc:	1858      	adds	r0, r3, r1
   1b3fe:	42a0      	cmp	r0, r4
   1b400:	d10b      	bne.n	1b41a <_free_r+0x72>
   1b402:	6820      	ldr	r0, [r4, #0]
   1b404:	4401      	add	r1, r0
   1b406:	1858      	adds	r0, r3, r1
   1b408:	4282      	cmp	r2, r0
   1b40a:	6019      	str	r1, [r3, #0]
   1b40c:	d1de      	bne.n	1b3cc <_free_r+0x24>
   1b40e:	6810      	ldr	r0, [r2, #0]
   1b410:	6852      	ldr	r2, [r2, #4]
   1b412:	4401      	add	r1, r0
   1b414:	6019      	str	r1, [r3, #0]
   1b416:	605a      	str	r2, [r3, #4]
   1b418:	e7d8      	b.n	1b3cc <_free_r+0x24>
   1b41a:	d902      	bls.n	1b422 <_free_r+0x7a>
   1b41c:	230c      	movs	r3, #12
   1b41e:	602b      	str	r3, [r5, #0]
   1b420:	e7d4      	b.n	1b3cc <_free_r+0x24>
   1b422:	6820      	ldr	r0, [r4, #0]
   1b424:	1821      	adds	r1, r4, r0
   1b426:	428a      	cmp	r2, r1
   1b428:	bf01      	itttt	eq
   1b42a:	6811      	ldreq	r1, [r2, #0]
   1b42c:	6852      	ldreq	r2, [r2, #4]
   1b42e:	1809      	addeq	r1, r1, r0
   1b430:	6021      	streq	r1, [r4, #0]
   1b432:	6062      	str	r2, [r4, #4]
   1b434:	605c      	str	r4, [r3, #4]
   1b436:	e7c9      	b.n	1b3cc <_free_r+0x24>
   1b438:	bd38      	pop	{r3, r4, r5, pc}
   1b43a:	bf00      	nop
   1b43c:	2007d034 	.word	0x2007d034

0001b440 <_mallinfo_r>:
_mallinfo_r():
   1b440:	b570      	push	{r4, r5, r6, lr}
   1b442:	4c15      	ldr	r4, [pc, #84]	; (1b498 <_mallinfo_r+0x58>)
   1b444:	4606      	mov	r6, r0
   1b446:	4608      	mov	r0, r1
   1b448:	460d      	mov	r5, r1
   1b44a:	f7fc fd9a 	bl	17f82 <__malloc_lock>
   1b44e:	6820      	ldr	r0, [r4, #0]
   1b450:	b138      	cbz	r0, 1b462 <_mallinfo_r+0x22>
   1b452:	2100      	movs	r1, #0
   1b454:	4628      	mov	r0, r5
   1b456:	f001 f87f 	bl	1c558 <_sbrk_r>
   1b45a:	1c43      	adds	r3, r0, #1
   1b45c:	bf1c      	itt	ne
   1b45e:	6823      	ldrne	r3, [r4, #0]
   1b460:	1ac0      	subne	r0, r0, r3
   1b462:	4b0e      	ldr	r3, [pc, #56]	; (1b49c <_mallinfo_r+0x5c>)
   1b464:	681a      	ldr	r2, [r3, #0]
   1b466:	2300      	movs	r3, #0
   1b468:	b992      	cbnz	r2, 1b490 <_mallinfo_r+0x50>
   1b46a:	4c0d      	ldr	r4, [pc, #52]	; (1b4a0 <_mallinfo_r+0x60>)
   1b46c:	6020      	str	r0, [r4, #0]
   1b46e:	1ac0      	subs	r0, r0, r3
   1b470:	61e0      	str	r0, [r4, #28]
   1b472:	4628      	mov	r0, r5
   1b474:	4635      	mov	r5, r6
   1b476:	6223      	str	r3, [r4, #32]
   1b478:	f7fc fd85 	bl	17f86 <__malloc_unlock>
   1b47c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1b47e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1b480:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1b482:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1b484:	e894 0003 	ldmia.w	r4, {r0, r1}
   1b488:	e885 0003 	stmia.w	r5, {r0, r1}
   1b48c:	4630      	mov	r0, r6
   1b48e:	bd70      	pop	{r4, r5, r6, pc}
   1b490:	6811      	ldr	r1, [r2, #0]
   1b492:	6852      	ldr	r2, [r2, #4]
   1b494:	440b      	add	r3, r1
   1b496:	e7e7      	b.n	1b468 <_mallinfo_r+0x28>
   1b498:	2007d038 	.word	0x2007d038
   1b49c:	2007d034 	.word	0x2007d034
   1b4a0:	2007d00c 	.word	0x2007d00c

0001b4a4 <_malloc_r>:
_malloc_r():
   1b4a4:	b570      	push	{r4, r5, r6, lr}
   1b4a6:	1ccd      	adds	r5, r1, #3
   1b4a8:	f025 0503 	bic.w	r5, r5, #3
   1b4ac:	3508      	adds	r5, #8
   1b4ae:	2d0c      	cmp	r5, #12
   1b4b0:	bf38      	it	cc
   1b4b2:	250c      	movcc	r5, #12
   1b4b4:	2d00      	cmp	r5, #0
   1b4b6:	4606      	mov	r6, r0
   1b4b8:	db01      	blt.n	1b4be <_malloc_r+0x1a>
   1b4ba:	42a9      	cmp	r1, r5
   1b4bc:	d903      	bls.n	1b4c6 <_malloc_r+0x22>
   1b4be:	230c      	movs	r3, #12
   1b4c0:	6033      	str	r3, [r6, #0]
   1b4c2:	2000      	movs	r0, #0
   1b4c4:	bd70      	pop	{r4, r5, r6, pc}
   1b4c6:	f7fc fd5c 	bl	17f82 <__malloc_lock>
   1b4ca:	4a23      	ldr	r2, [pc, #140]	; (1b558 <_malloc_r+0xb4>)
   1b4cc:	6814      	ldr	r4, [r2, #0]
   1b4ce:	4621      	mov	r1, r4
   1b4d0:	b991      	cbnz	r1, 1b4f8 <_malloc_r+0x54>
   1b4d2:	4c22      	ldr	r4, [pc, #136]	; (1b55c <_malloc_r+0xb8>)
   1b4d4:	6823      	ldr	r3, [r4, #0]
   1b4d6:	b91b      	cbnz	r3, 1b4e0 <_malloc_r+0x3c>
   1b4d8:	4630      	mov	r0, r6
   1b4da:	f001 f83d 	bl	1c558 <_sbrk_r>
   1b4de:	6020      	str	r0, [r4, #0]
   1b4e0:	4629      	mov	r1, r5
   1b4e2:	4630      	mov	r0, r6
   1b4e4:	f001 f838 	bl	1c558 <_sbrk_r>
   1b4e8:	1c43      	adds	r3, r0, #1
   1b4ea:	d126      	bne.n	1b53a <_malloc_r+0x96>
   1b4ec:	230c      	movs	r3, #12
   1b4ee:	4630      	mov	r0, r6
   1b4f0:	6033      	str	r3, [r6, #0]
   1b4f2:	f7fc fd48 	bl	17f86 <__malloc_unlock>
   1b4f6:	e7e4      	b.n	1b4c2 <_malloc_r+0x1e>
   1b4f8:	680b      	ldr	r3, [r1, #0]
   1b4fa:	1b5b      	subs	r3, r3, r5
   1b4fc:	d41a      	bmi.n	1b534 <_malloc_r+0x90>
   1b4fe:	2b0b      	cmp	r3, #11
   1b500:	d90f      	bls.n	1b522 <_malloc_r+0x7e>
   1b502:	600b      	str	r3, [r1, #0]
   1b504:	18cc      	adds	r4, r1, r3
   1b506:	50cd      	str	r5, [r1, r3]
   1b508:	4630      	mov	r0, r6
   1b50a:	f7fc fd3c 	bl	17f86 <__malloc_unlock>
   1b50e:	f104 000b 	add.w	r0, r4, #11
   1b512:	1d23      	adds	r3, r4, #4
   1b514:	f020 0007 	bic.w	r0, r0, #7
   1b518:	1ac3      	subs	r3, r0, r3
   1b51a:	d01b      	beq.n	1b554 <_malloc_r+0xb0>
   1b51c:	425a      	negs	r2, r3
   1b51e:	50e2      	str	r2, [r4, r3]
   1b520:	bd70      	pop	{r4, r5, r6, pc}
   1b522:	428c      	cmp	r4, r1
   1b524:	bf0b      	itete	eq
   1b526:	6863      	ldreq	r3, [r4, #4]
   1b528:	684b      	ldrne	r3, [r1, #4]
   1b52a:	6013      	streq	r3, [r2, #0]
   1b52c:	6063      	strne	r3, [r4, #4]
   1b52e:	bf18      	it	ne
   1b530:	460c      	movne	r4, r1
   1b532:	e7e9      	b.n	1b508 <_malloc_r+0x64>
   1b534:	460c      	mov	r4, r1
   1b536:	6849      	ldr	r1, [r1, #4]
   1b538:	e7ca      	b.n	1b4d0 <_malloc_r+0x2c>
   1b53a:	1cc4      	adds	r4, r0, #3
   1b53c:	f024 0403 	bic.w	r4, r4, #3
   1b540:	42a0      	cmp	r0, r4
   1b542:	d005      	beq.n	1b550 <_malloc_r+0xac>
   1b544:	1a21      	subs	r1, r4, r0
   1b546:	4630      	mov	r0, r6
   1b548:	f001 f806 	bl	1c558 <_sbrk_r>
   1b54c:	3001      	adds	r0, #1
   1b54e:	d0cd      	beq.n	1b4ec <_malloc_r+0x48>
   1b550:	6025      	str	r5, [r4, #0]
   1b552:	e7d9      	b.n	1b508 <_malloc_r+0x64>
   1b554:	bd70      	pop	{r4, r5, r6, pc}
   1b556:	bf00      	nop
   1b558:	2007d034 	.word	0x2007d034
   1b55c:	2007d038 	.word	0x2007d038

0001b560 <__cvt>:
__cvt():
   1b560:	2b00      	cmp	r3, #0
   1b562:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1b566:	461e      	mov	r6, r3
   1b568:	bfbb      	ittet	lt
   1b56a:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
   1b56e:	461e      	movlt	r6, r3
   1b570:	2300      	movge	r3, #0
   1b572:	232d      	movlt	r3, #45	; 0x2d
   1b574:	b088      	sub	sp, #32
   1b576:	9f14      	ldr	r7, [sp, #80]	; 0x50
   1b578:	9912      	ldr	r1, [sp, #72]	; 0x48
   1b57a:	f027 0720 	bic.w	r7, r7, #32
   1b57e:	2f46      	cmp	r7, #70	; 0x46
   1b580:	4614      	mov	r4, r2
   1b582:	9d10      	ldr	r5, [sp, #64]	; 0x40
   1b584:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
   1b588:	700b      	strb	r3, [r1, #0]
   1b58a:	d004      	beq.n	1b596 <__cvt+0x36>
   1b58c:	2f45      	cmp	r7, #69	; 0x45
   1b58e:	d100      	bne.n	1b592 <__cvt+0x32>
   1b590:	3501      	adds	r5, #1
   1b592:	2302      	movs	r3, #2
   1b594:	e000      	b.n	1b598 <__cvt+0x38>
   1b596:	2303      	movs	r3, #3
   1b598:	aa07      	add	r2, sp, #28
   1b59a:	9204      	str	r2, [sp, #16]
   1b59c:	aa06      	add	r2, sp, #24
   1b59e:	9203      	str	r2, [sp, #12]
   1b5a0:	e88d 0428 	stmia.w	sp, {r3, r5, sl}
   1b5a4:	4622      	mov	r2, r4
   1b5a6:	4633      	mov	r3, r6
   1b5a8:	f002 fcfe 	bl	1dfa8 <_dtoa_r>
   1b5ac:	2f47      	cmp	r7, #71	; 0x47
   1b5ae:	4680      	mov	r8, r0
   1b5b0:	d102      	bne.n	1b5b8 <__cvt+0x58>
   1b5b2:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1b5b4:	07db      	lsls	r3, r3, #31
   1b5b6:	d526      	bpl.n	1b606 <__cvt+0xa6>
   1b5b8:	2f46      	cmp	r7, #70	; 0x46
   1b5ba:	eb08 0905 	add.w	r9, r8, r5
   1b5be:	d111      	bne.n	1b5e4 <__cvt+0x84>
   1b5c0:	f898 3000 	ldrb.w	r3, [r8]
   1b5c4:	2b30      	cmp	r3, #48	; 0x30
   1b5c6:	d10a      	bne.n	1b5de <__cvt+0x7e>
   1b5c8:	2200      	movs	r2, #0
   1b5ca:	2300      	movs	r3, #0
   1b5cc:	4620      	mov	r0, r4
   1b5ce:	4631      	mov	r1, r6
   1b5d0:	f005 fbc8 	bl	20d64 <__aeabi_dcmpeq>
   1b5d4:	b918      	cbnz	r0, 1b5de <__cvt+0x7e>
   1b5d6:	f1c5 0501 	rsb	r5, r5, #1
   1b5da:	f8ca 5000 	str.w	r5, [sl]
   1b5de:	f8da 3000 	ldr.w	r3, [sl]
   1b5e2:	4499      	add	r9, r3
   1b5e4:	2200      	movs	r2, #0
   1b5e6:	2300      	movs	r3, #0
   1b5e8:	4620      	mov	r0, r4
   1b5ea:	4631      	mov	r1, r6
   1b5ec:	f005 fbba 	bl	20d64 <__aeabi_dcmpeq>
   1b5f0:	b938      	cbnz	r0, 1b602 <__cvt+0xa2>
   1b5f2:	2230      	movs	r2, #48	; 0x30
   1b5f4:	9b07      	ldr	r3, [sp, #28]
   1b5f6:	4599      	cmp	r9, r3
   1b5f8:	d905      	bls.n	1b606 <__cvt+0xa6>
   1b5fa:	1c59      	adds	r1, r3, #1
   1b5fc:	9107      	str	r1, [sp, #28]
   1b5fe:	701a      	strb	r2, [r3, #0]
   1b600:	e7f8      	b.n	1b5f4 <__cvt+0x94>
   1b602:	f8cd 901c 	str.w	r9, [sp, #28]
   1b606:	4640      	mov	r0, r8
   1b608:	9b07      	ldr	r3, [sp, #28]
   1b60a:	9a15      	ldr	r2, [sp, #84]	; 0x54
   1b60c:	eba3 0308 	sub.w	r3, r3, r8
   1b610:	6013      	str	r3, [r2, #0]
   1b612:	b008      	add	sp, #32
   1b614:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0001b618 <__exponent>:
__exponent():
   1b618:	4603      	mov	r3, r0
   1b61a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1b61c:	2900      	cmp	r1, #0
   1b61e:	f803 2b02 	strb.w	r2, [r3], #2
   1b622:	bfb6      	itet	lt
   1b624:	222d      	movlt	r2, #45	; 0x2d
   1b626:	222b      	movge	r2, #43	; 0x2b
   1b628:	4249      	neglt	r1, r1
   1b62a:	2909      	cmp	r1, #9
   1b62c:	7042      	strb	r2, [r0, #1]
   1b62e:	dd21      	ble.n	1b674 <__exponent+0x5c>
   1b630:	f10d 0207 	add.w	r2, sp, #7
   1b634:	4617      	mov	r7, r2
   1b636:	260a      	movs	r6, #10
   1b638:	fb91 f5f6 	sdiv	r5, r1, r6
   1b63c:	fb06 1115 	mls	r1, r6, r5, r1
   1b640:	2d09      	cmp	r5, #9
   1b642:	f101 0130 	add.w	r1, r1, #48	; 0x30
   1b646:	f802 1c01 	strb.w	r1, [r2, #-1]
   1b64a:	f102 34ff 	add.w	r4, r2, #4294967295	; 0xffffffff
   1b64e:	4629      	mov	r1, r5
   1b650:	dc09      	bgt.n	1b666 <__exponent+0x4e>
   1b652:	3130      	adds	r1, #48	; 0x30
   1b654:	3a02      	subs	r2, #2
   1b656:	f804 1c01 	strb.w	r1, [r4, #-1]
   1b65a:	42ba      	cmp	r2, r7
   1b65c:	461c      	mov	r4, r3
   1b65e:	d304      	bcc.n	1b66a <__exponent+0x52>
   1b660:	1a20      	subs	r0, r4, r0
   1b662:	b003      	add	sp, #12
   1b664:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1b666:	4622      	mov	r2, r4
   1b668:	e7e6      	b.n	1b638 <__exponent+0x20>
   1b66a:	f812 1b01 	ldrb.w	r1, [r2], #1
   1b66e:	f803 1b01 	strb.w	r1, [r3], #1
   1b672:	e7f2      	b.n	1b65a <__exponent+0x42>
   1b674:	2230      	movs	r2, #48	; 0x30
   1b676:	461c      	mov	r4, r3
   1b678:	4411      	add	r1, r2
   1b67a:	f804 2b02 	strb.w	r2, [r4], #2
   1b67e:	7059      	strb	r1, [r3, #1]
   1b680:	e7ee      	b.n	1b660 <__exponent+0x48>
   1b682:	Address 0x000000000001b682 is out of bounds.


0001b684 <_printf_float>:
_printf_float():
   1b684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b688:	b091      	sub	sp, #68	; 0x44
   1b68a:	460c      	mov	r4, r1
   1b68c:	9f1a      	ldr	r7, [sp, #104]	; 0x68
   1b68e:	4693      	mov	fp, r2
   1b690:	461e      	mov	r6, r3
   1b692:	4605      	mov	r5, r0
   1b694:	f003 fe32 	bl	1f2fc <_localeconv_r>
   1b698:	6803      	ldr	r3, [r0, #0]
   1b69a:	4618      	mov	r0, r3
   1b69c:	9309      	str	r3, [sp, #36]	; 0x24
   1b69e:	f001 f92c 	bl	1c8fa <strlen>
   1b6a2:	2300      	movs	r3, #0
   1b6a4:	930e      	str	r3, [sp, #56]	; 0x38
   1b6a6:	683b      	ldr	r3, [r7, #0]
   1b6a8:	900a      	str	r0, [sp, #40]	; 0x28
   1b6aa:	3307      	adds	r3, #7
   1b6ac:	f023 0307 	bic.w	r3, r3, #7
   1b6b0:	f103 0208 	add.w	r2, r3, #8
   1b6b4:	f894 8018 	ldrb.w	r8, [r4, #24]
   1b6b8:	f8d4 a000 	ldr.w	sl, [r4]
   1b6bc:	603a      	str	r2, [r7, #0]
   1b6be:	e9d3 2300 	ldrd	r2, r3, [r3]
   1b6c2:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
   1b6c6:	f8d4 904c 	ldr.w	r9, [r4, #76]	; 0x4c
   1b6ca:	6ca7      	ldr	r7, [r4, #72]	; 0x48
   1b6cc:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
   1b6d0:	930b      	str	r3, [sp, #44]	; 0x2c
   1b6d2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b6d6:	4ba6      	ldr	r3, [pc, #664]	; (1b970 <_printf_float+0x2ec>)
   1b6d8:	4638      	mov	r0, r7
   1b6da:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1b6dc:	f005 fb74 	bl	20dc8 <__aeabi_dcmpun>
   1b6e0:	2800      	cmp	r0, #0
   1b6e2:	f040 81f7 	bne.w	1bad4 <_printf_float+0x450>
   1b6e6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b6ea:	4ba1      	ldr	r3, [pc, #644]	; (1b970 <_printf_float+0x2ec>)
   1b6ec:	4638      	mov	r0, r7
   1b6ee:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1b6f0:	f005 fb4c 	bl	20d8c <__aeabi_dcmple>
   1b6f4:	2800      	cmp	r0, #0
   1b6f6:	f040 81ed 	bne.w	1bad4 <_printf_float+0x450>
   1b6fa:	2200      	movs	r2, #0
   1b6fc:	2300      	movs	r3, #0
   1b6fe:	4638      	mov	r0, r7
   1b700:	4649      	mov	r1, r9
   1b702:	f005 fb39 	bl	20d78 <__aeabi_dcmplt>
   1b706:	b110      	cbz	r0, 1b70e <_printf_float+0x8a>
   1b708:	232d      	movs	r3, #45	; 0x2d
   1b70a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1b70e:	4b99      	ldr	r3, [pc, #612]	; (1b974 <_printf_float+0x2f0>)
   1b710:	4f99      	ldr	r7, [pc, #612]	; (1b978 <_printf_float+0x2f4>)
   1b712:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   1b716:	bf98      	it	ls
   1b718:	461f      	movls	r7, r3
   1b71a:	2303      	movs	r3, #3
   1b71c:	f04f 0900 	mov.w	r9, #0
   1b720:	6123      	str	r3, [r4, #16]
   1b722:	f02a 0304 	bic.w	r3, sl, #4
   1b726:	6023      	str	r3, [r4, #0]
   1b728:	9600      	str	r6, [sp, #0]
   1b72a:	465b      	mov	r3, fp
   1b72c:	aa0f      	add	r2, sp, #60	; 0x3c
   1b72e:	4621      	mov	r1, r4
   1b730:	4628      	mov	r0, r5
   1b732:	f000 f9df 	bl	1baf4 <_printf_common>
   1b736:	3001      	adds	r0, #1
   1b738:	f040 809a 	bne.w	1b870 <_printf_float+0x1ec>
   1b73c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1b740:	b011      	add	sp, #68	; 0x44
   1b742:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b746:	6862      	ldr	r2, [r4, #4]
   1b748:	a80e      	add	r0, sp, #56	; 0x38
   1b74a:	1c53      	adds	r3, r2, #1
   1b74c:	f10d 0e34 	add.w	lr, sp, #52	; 0x34
   1b750:	f44a 6380 	orr.w	r3, sl, #1024	; 0x400
   1b754:	d141      	bne.n	1b7da <_printf_float+0x156>
   1b756:	2206      	movs	r2, #6
   1b758:	6062      	str	r2, [r4, #4]
   1b75a:	2100      	movs	r1, #0
   1b75c:	6023      	str	r3, [r4, #0]
   1b75e:	9301      	str	r3, [sp, #4]
   1b760:	6863      	ldr	r3, [r4, #4]
   1b762:	f10d 0233 	add.w	r2, sp, #51	; 0x33
   1b766:	9005      	str	r0, [sp, #20]
   1b768:	9202      	str	r2, [sp, #8]
   1b76a:	9300      	str	r3, [sp, #0]
   1b76c:	463a      	mov	r2, r7
   1b76e:	464b      	mov	r3, r9
   1b770:	9106      	str	r1, [sp, #24]
   1b772:	f8cd 8010 	str.w	r8, [sp, #16]
   1b776:	f8cd e00c 	str.w	lr, [sp, #12]
   1b77a:	4628      	mov	r0, r5
   1b77c:	f7ff fef0 	bl	1b560 <__cvt>
   1b780:	f008 03df 	and.w	r3, r8, #223	; 0xdf
   1b784:	2b47      	cmp	r3, #71	; 0x47
   1b786:	4607      	mov	r7, r0
   1b788:	d109      	bne.n	1b79e <_printf_float+0x11a>
   1b78a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1b78c:	1cd8      	adds	r0, r3, #3
   1b78e:	db02      	blt.n	1b796 <_printf_float+0x112>
   1b790:	6862      	ldr	r2, [r4, #4]
   1b792:	4293      	cmp	r3, r2
   1b794:	dd59      	ble.n	1b84a <_printf_float+0x1c6>
   1b796:	f1a8 0802 	sub.w	r8, r8, #2
   1b79a:	fa5f f888 	uxtb.w	r8, r8
   1b79e:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   1b7a2:	990d      	ldr	r1, [sp, #52]	; 0x34
   1b7a4:	d836      	bhi.n	1b814 <_printf_float+0x190>
   1b7a6:	3901      	subs	r1, #1
   1b7a8:	4642      	mov	r2, r8
   1b7aa:	f104 0050 	add.w	r0, r4, #80	; 0x50
   1b7ae:	910d      	str	r1, [sp, #52]	; 0x34
   1b7b0:	f7ff ff32 	bl	1b618 <__exponent>
   1b7b4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1b7b6:	4681      	mov	r9, r0
   1b7b8:	1883      	adds	r3, r0, r2
   1b7ba:	2a01      	cmp	r2, #1
   1b7bc:	6123      	str	r3, [r4, #16]
   1b7be:	dc02      	bgt.n	1b7c6 <_printf_float+0x142>
   1b7c0:	6822      	ldr	r2, [r4, #0]
   1b7c2:	07d1      	lsls	r1, r2, #31
   1b7c4:	d501      	bpl.n	1b7ca <_printf_float+0x146>
   1b7c6:	3301      	adds	r3, #1
   1b7c8:	6123      	str	r3, [r4, #16]
   1b7ca:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
   1b7ce:	2b00      	cmp	r3, #0
   1b7d0:	d0aa      	beq.n	1b728 <_printf_float+0xa4>
   1b7d2:	232d      	movs	r3, #45	; 0x2d
   1b7d4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1b7d8:	e7a6      	b.n	1b728 <_printf_float+0xa4>
   1b7da:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
   1b7de:	d002      	beq.n	1b7e6 <_printf_float+0x162>
   1b7e0:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   1b7e4:	d1b9      	bne.n	1b75a <_printf_float+0xd6>
   1b7e6:	b19a      	cbz	r2, 1b810 <_printf_float+0x18c>
   1b7e8:	2100      	movs	r1, #0
   1b7ea:	9106      	str	r1, [sp, #24]
   1b7ec:	f10d 0133 	add.w	r1, sp, #51	; 0x33
   1b7f0:	e88d 000c 	stmia.w	sp, {r2, r3}
   1b7f4:	6023      	str	r3, [r4, #0]
   1b7f6:	9005      	str	r0, [sp, #20]
   1b7f8:	463a      	mov	r2, r7
   1b7fa:	f8cd 8010 	str.w	r8, [sp, #16]
   1b7fe:	f8cd e00c 	str.w	lr, [sp, #12]
   1b802:	9102      	str	r1, [sp, #8]
   1b804:	464b      	mov	r3, r9
   1b806:	4628      	mov	r0, r5
   1b808:	f7ff feaa 	bl	1b560 <__cvt>
   1b80c:	4607      	mov	r7, r0
   1b80e:	e7bc      	b.n	1b78a <_printf_float+0x106>
   1b810:	2201      	movs	r2, #1
   1b812:	e7a1      	b.n	1b758 <_printf_float+0xd4>
   1b814:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   1b818:	d119      	bne.n	1b84e <_printf_float+0x1ca>
   1b81a:	2900      	cmp	r1, #0
   1b81c:	6863      	ldr	r3, [r4, #4]
   1b81e:	dd0c      	ble.n	1b83a <_printf_float+0x1b6>
   1b820:	6121      	str	r1, [r4, #16]
   1b822:	b913      	cbnz	r3, 1b82a <_printf_float+0x1a6>
   1b824:	6822      	ldr	r2, [r4, #0]
   1b826:	07d2      	lsls	r2, r2, #31
   1b828:	d502      	bpl.n	1b830 <_printf_float+0x1ac>
   1b82a:	3301      	adds	r3, #1
   1b82c:	440b      	add	r3, r1
   1b82e:	6123      	str	r3, [r4, #16]
   1b830:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1b832:	f04f 0900 	mov.w	r9, #0
   1b836:	65a3      	str	r3, [r4, #88]	; 0x58
   1b838:	e7c7      	b.n	1b7ca <_printf_float+0x146>
   1b83a:	b913      	cbnz	r3, 1b842 <_printf_float+0x1be>
   1b83c:	6822      	ldr	r2, [r4, #0]
   1b83e:	07d0      	lsls	r0, r2, #31
   1b840:	d501      	bpl.n	1b846 <_printf_float+0x1c2>
   1b842:	3302      	adds	r3, #2
   1b844:	e7f3      	b.n	1b82e <_printf_float+0x1aa>
   1b846:	2301      	movs	r3, #1
   1b848:	e7f1      	b.n	1b82e <_printf_float+0x1aa>
   1b84a:	f04f 0867 	mov.w	r8, #103	; 0x67
   1b84e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1b850:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1b852:	4293      	cmp	r3, r2
   1b854:	db05      	blt.n	1b862 <_printf_float+0x1de>
   1b856:	6822      	ldr	r2, [r4, #0]
   1b858:	6123      	str	r3, [r4, #16]
   1b85a:	07d1      	lsls	r1, r2, #31
   1b85c:	d5e8      	bpl.n	1b830 <_printf_float+0x1ac>
   1b85e:	3301      	adds	r3, #1
   1b860:	e7e5      	b.n	1b82e <_printf_float+0x1aa>
   1b862:	2b00      	cmp	r3, #0
   1b864:	bfcc      	ite	gt
   1b866:	2301      	movgt	r3, #1
   1b868:	f1c3 0302 	rsble	r3, r3, #2
   1b86c:	4413      	add	r3, r2
   1b86e:	e7de      	b.n	1b82e <_printf_float+0x1aa>
   1b870:	6823      	ldr	r3, [r4, #0]
   1b872:	055a      	lsls	r2, r3, #21
   1b874:	d407      	bmi.n	1b886 <_printf_float+0x202>
   1b876:	6923      	ldr	r3, [r4, #16]
   1b878:	463a      	mov	r2, r7
   1b87a:	4659      	mov	r1, fp
   1b87c:	4628      	mov	r0, r5
   1b87e:	47b0      	blx	r6
   1b880:	3001      	adds	r0, #1
   1b882:	d12a      	bne.n	1b8da <_printf_float+0x256>
   1b884:	e75a      	b.n	1b73c <_printf_float+0xb8>
   1b886:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   1b88a:	f240 80dc 	bls.w	1ba46 <_printf_float+0x3c2>
   1b88e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   1b892:	2200      	movs	r2, #0
   1b894:	2300      	movs	r3, #0
   1b896:	f005 fa65 	bl	20d64 <__aeabi_dcmpeq>
   1b89a:	2800      	cmp	r0, #0
   1b89c:	d039      	beq.n	1b912 <_printf_float+0x28e>
   1b89e:	2301      	movs	r3, #1
   1b8a0:	4a36      	ldr	r2, [pc, #216]	; (1b97c <_printf_float+0x2f8>)
   1b8a2:	4659      	mov	r1, fp
   1b8a4:	4628      	mov	r0, r5
   1b8a6:	47b0      	blx	r6
   1b8a8:	3001      	adds	r0, #1
   1b8aa:	f43f af47 	beq.w	1b73c <_printf_float+0xb8>
   1b8ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1b8b0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1b8b2:	429a      	cmp	r2, r3
   1b8b4:	db02      	blt.n	1b8bc <_printf_float+0x238>
   1b8b6:	6823      	ldr	r3, [r4, #0]
   1b8b8:	07d8      	lsls	r0, r3, #31
   1b8ba:	d50e      	bpl.n	1b8da <_printf_float+0x256>
   1b8bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1b8be:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1b8c0:	4659      	mov	r1, fp
   1b8c2:	4628      	mov	r0, r5
   1b8c4:	47b0      	blx	r6
   1b8c6:	3001      	adds	r0, #1
   1b8c8:	f43f af38 	beq.w	1b73c <_printf_float+0xb8>
   1b8cc:	2700      	movs	r7, #0
   1b8ce:	f104 081a 	add.w	r8, r4, #26
   1b8d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1b8d4:	3b01      	subs	r3, #1
   1b8d6:	429f      	cmp	r7, r3
   1b8d8:	db11      	blt.n	1b8fe <_printf_float+0x27a>
   1b8da:	6823      	ldr	r3, [r4, #0]
   1b8dc:	079f      	lsls	r7, r3, #30
   1b8de:	d508      	bpl.n	1b8f2 <_printf_float+0x26e>
   1b8e0:	2700      	movs	r7, #0
   1b8e2:	f104 0819 	add.w	r8, r4, #25
   1b8e6:	68e3      	ldr	r3, [r4, #12]
   1b8e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   1b8ea:	1a9b      	subs	r3, r3, r2
   1b8ec:	429f      	cmp	r7, r3
   1b8ee:	f2c0 80e7 	blt.w	1bac0 <_printf_float+0x43c>
   1b8f2:	68e0      	ldr	r0, [r4, #12]
   1b8f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1b8f6:	4298      	cmp	r0, r3
   1b8f8:	bfb8      	it	lt
   1b8fa:	4618      	movlt	r0, r3
   1b8fc:	e720      	b.n	1b740 <_printf_float+0xbc>
   1b8fe:	2301      	movs	r3, #1
   1b900:	4642      	mov	r2, r8
   1b902:	4659      	mov	r1, fp
   1b904:	4628      	mov	r0, r5
   1b906:	47b0      	blx	r6
   1b908:	3001      	adds	r0, #1
   1b90a:	f43f af17 	beq.w	1b73c <_printf_float+0xb8>
   1b90e:	3701      	adds	r7, #1
   1b910:	e7df      	b.n	1b8d2 <_printf_float+0x24e>
   1b912:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1b914:	2b00      	cmp	r3, #0
   1b916:	dc33      	bgt.n	1b980 <_printf_float+0x2fc>
   1b918:	2301      	movs	r3, #1
   1b91a:	4a18      	ldr	r2, [pc, #96]	; (1b97c <_printf_float+0x2f8>)
   1b91c:	4659      	mov	r1, fp
   1b91e:	4628      	mov	r0, r5
   1b920:	47b0      	blx	r6
   1b922:	3001      	adds	r0, #1
   1b924:	f43f af0a 	beq.w	1b73c <_printf_float+0xb8>
   1b928:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1b92a:	b923      	cbnz	r3, 1b936 <_printf_float+0x2b2>
   1b92c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1b92e:	b913      	cbnz	r3, 1b936 <_printf_float+0x2b2>
   1b930:	6823      	ldr	r3, [r4, #0]
   1b932:	07d9      	lsls	r1, r3, #31
   1b934:	d5d1      	bpl.n	1b8da <_printf_float+0x256>
   1b936:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1b938:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1b93a:	4659      	mov	r1, fp
   1b93c:	4628      	mov	r0, r5
   1b93e:	47b0      	blx	r6
   1b940:	3001      	adds	r0, #1
   1b942:	f43f aefb 	beq.w	1b73c <_printf_float+0xb8>
   1b946:	f04f 0800 	mov.w	r8, #0
   1b94a:	f104 091a 	add.w	r9, r4, #26
   1b94e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1b950:	425b      	negs	r3, r3
   1b952:	4598      	cmp	r8, r3
   1b954:	db01      	blt.n	1b95a <_printf_float+0x2d6>
   1b956:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1b958:	e78e      	b.n	1b878 <_printf_float+0x1f4>
   1b95a:	2301      	movs	r3, #1
   1b95c:	464a      	mov	r2, r9
   1b95e:	4659      	mov	r1, fp
   1b960:	4628      	mov	r0, r5
   1b962:	47b0      	blx	r6
   1b964:	3001      	adds	r0, #1
   1b966:	f43f aee9 	beq.w	1b73c <_printf_float+0xb8>
   1b96a:	f108 0801 	add.w	r8, r8, #1
   1b96e:	e7ee      	b.n	1b94e <_printf_float+0x2ca>
   1b970:	7fefffff 	.word	0x7fefffff
   1b974:	00022478 	.word	0x00022478
   1b978:	0002247c 	.word	0x0002247c
   1b97c:	000210e4 	.word	0x000210e4
   1b980:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1b982:	6da3      	ldr	r3, [r4, #88]	; 0x58
   1b984:	429a      	cmp	r2, r3
   1b986:	bfa8      	it	ge
   1b988:	461a      	movge	r2, r3
   1b98a:	2a00      	cmp	r2, #0
   1b98c:	4690      	mov	r8, r2
   1b98e:	dc36      	bgt.n	1b9fe <_printf_float+0x37a>
   1b990:	f04f 0a00 	mov.w	sl, #0
   1b994:	f104 031a 	add.w	r3, r4, #26
   1b998:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
   1b99c:	930b      	str	r3, [sp, #44]	; 0x2c
   1b99e:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
   1b9a2:	eba9 0308 	sub.w	r3, r9, r8
   1b9a6:	459a      	cmp	sl, r3
   1b9a8:	db31      	blt.n	1ba0e <_printf_float+0x38a>
   1b9aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1b9ac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1b9ae:	429a      	cmp	r2, r3
   1b9b0:	db38      	blt.n	1ba24 <_printf_float+0x3a0>
   1b9b2:	6823      	ldr	r3, [r4, #0]
   1b9b4:	07da      	lsls	r2, r3, #31
   1b9b6:	d435      	bmi.n	1ba24 <_printf_float+0x3a0>
   1b9b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1b9ba:	990d      	ldr	r1, [sp, #52]	; 0x34
   1b9bc:	eba3 0209 	sub.w	r2, r3, r9
   1b9c0:	eba3 0801 	sub.w	r8, r3, r1
   1b9c4:	4590      	cmp	r8, r2
   1b9c6:	bfa8      	it	ge
   1b9c8:	4690      	movge	r8, r2
   1b9ca:	f1b8 0f00 	cmp.w	r8, #0
   1b9ce:	dc31      	bgt.n	1ba34 <_printf_float+0x3b0>
   1b9d0:	2700      	movs	r7, #0
   1b9d2:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
   1b9d6:	f104 091a 	add.w	r9, r4, #26
   1b9da:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1b9dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1b9de:	1a9b      	subs	r3, r3, r2
   1b9e0:	eba3 0308 	sub.w	r3, r3, r8
   1b9e4:	429f      	cmp	r7, r3
   1b9e6:	f6bf af78 	bge.w	1b8da <_printf_float+0x256>
   1b9ea:	2301      	movs	r3, #1
   1b9ec:	464a      	mov	r2, r9
   1b9ee:	4659      	mov	r1, fp
   1b9f0:	4628      	mov	r0, r5
   1b9f2:	47b0      	blx	r6
   1b9f4:	3001      	adds	r0, #1
   1b9f6:	f43f aea1 	beq.w	1b73c <_printf_float+0xb8>
   1b9fa:	3701      	adds	r7, #1
   1b9fc:	e7ed      	b.n	1b9da <_printf_float+0x356>
   1b9fe:	4613      	mov	r3, r2
   1ba00:	4659      	mov	r1, fp
   1ba02:	463a      	mov	r2, r7
   1ba04:	4628      	mov	r0, r5
   1ba06:	47b0      	blx	r6
   1ba08:	3001      	adds	r0, #1
   1ba0a:	d1c1      	bne.n	1b990 <_printf_float+0x30c>
   1ba0c:	e696      	b.n	1b73c <_printf_float+0xb8>
   1ba0e:	2301      	movs	r3, #1
   1ba10:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   1ba12:	4659      	mov	r1, fp
   1ba14:	4628      	mov	r0, r5
   1ba16:	47b0      	blx	r6
   1ba18:	3001      	adds	r0, #1
   1ba1a:	f43f ae8f 	beq.w	1b73c <_printf_float+0xb8>
   1ba1e:	f10a 0a01 	add.w	sl, sl, #1
   1ba22:	e7bc      	b.n	1b99e <_printf_float+0x31a>
   1ba24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1ba26:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1ba28:	4659      	mov	r1, fp
   1ba2a:	4628      	mov	r0, r5
   1ba2c:	47b0      	blx	r6
   1ba2e:	3001      	adds	r0, #1
   1ba30:	d1c2      	bne.n	1b9b8 <_printf_float+0x334>
   1ba32:	e683      	b.n	1b73c <_printf_float+0xb8>
   1ba34:	4643      	mov	r3, r8
   1ba36:	eb07 0209 	add.w	r2, r7, r9
   1ba3a:	4659      	mov	r1, fp
   1ba3c:	4628      	mov	r0, r5
   1ba3e:	47b0      	blx	r6
   1ba40:	3001      	adds	r0, #1
   1ba42:	d1c5      	bne.n	1b9d0 <_printf_float+0x34c>
   1ba44:	e67a      	b.n	1b73c <_printf_float+0xb8>
   1ba46:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1ba48:	2a01      	cmp	r2, #1
   1ba4a:	dc01      	bgt.n	1ba50 <_printf_float+0x3cc>
   1ba4c:	07db      	lsls	r3, r3, #31
   1ba4e:	d534      	bpl.n	1baba <_printf_float+0x436>
   1ba50:	2301      	movs	r3, #1
   1ba52:	463a      	mov	r2, r7
   1ba54:	4659      	mov	r1, fp
   1ba56:	4628      	mov	r0, r5
   1ba58:	47b0      	blx	r6
   1ba5a:	3001      	adds	r0, #1
   1ba5c:	f43f ae6e 	beq.w	1b73c <_printf_float+0xb8>
   1ba60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1ba62:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1ba64:	4659      	mov	r1, fp
   1ba66:	4628      	mov	r0, r5
   1ba68:	47b0      	blx	r6
   1ba6a:	3001      	adds	r0, #1
   1ba6c:	f43f ae66 	beq.w	1b73c <_printf_float+0xb8>
   1ba70:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   1ba74:	2200      	movs	r2, #0
   1ba76:	2300      	movs	r3, #0
   1ba78:	f005 f974 	bl	20d64 <__aeabi_dcmpeq>
   1ba7c:	b150      	cbz	r0, 1ba94 <_printf_float+0x410>
   1ba7e:	2700      	movs	r7, #0
   1ba80:	f104 081a 	add.w	r8, r4, #26
   1ba84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1ba86:	3b01      	subs	r3, #1
   1ba88:	429f      	cmp	r7, r3
   1ba8a:	db0c      	blt.n	1baa6 <_printf_float+0x422>
   1ba8c:	464b      	mov	r3, r9
   1ba8e:	f104 0250 	add.w	r2, r4, #80	; 0x50
   1ba92:	e6f2      	b.n	1b87a <_printf_float+0x1f6>
   1ba94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1ba96:	1c7a      	adds	r2, r7, #1
   1ba98:	3b01      	subs	r3, #1
   1ba9a:	4659      	mov	r1, fp
   1ba9c:	4628      	mov	r0, r5
   1ba9e:	47b0      	blx	r6
   1baa0:	3001      	adds	r0, #1
   1baa2:	d1f3      	bne.n	1ba8c <_printf_float+0x408>
   1baa4:	e64a      	b.n	1b73c <_printf_float+0xb8>
   1baa6:	2301      	movs	r3, #1
   1baa8:	4642      	mov	r2, r8
   1baaa:	4659      	mov	r1, fp
   1baac:	4628      	mov	r0, r5
   1baae:	47b0      	blx	r6
   1bab0:	3001      	adds	r0, #1
   1bab2:	f43f ae43 	beq.w	1b73c <_printf_float+0xb8>
   1bab6:	3701      	adds	r7, #1
   1bab8:	e7e4      	b.n	1ba84 <_printf_float+0x400>
   1baba:	2301      	movs	r3, #1
   1babc:	463a      	mov	r2, r7
   1babe:	e7ec      	b.n	1ba9a <_printf_float+0x416>
   1bac0:	2301      	movs	r3, #1
   1bac2:	4642      	mov	r2, r8
   1bac4:	4659      	mov	r1, fp
   1bac6:	4628      	mov	r0, r5
   1bac8:	47b0      	blx	r6
   1baca:	3001      	adds	r0, #1
   1bacc:	f43f ae36 	beq.w	1b73c <_printf_float+0xb8>
   1bad0:	3701      	adds	r7, #1
   1bad2:	e708      	b.n	1b8e6 <_printf_float+0x262>
   1bad4:	463a      	mov	r2, r7
   1bad6:	464b      	mov	r3, r9
   1bad8:	4638      	mov	r0, r7
   1bada:	4649      	mov	r1, r9
   1badc:	f005 f974 	bl	20dc8 <__aeabi_dcmpun>
   1bae0:	2800      	cmp	r0, #0
   1bae2:	f43f ae30 	beq.w	1b746 <_printf_float+0xc2>
   1bae6:	4b01      	ldr	r3, [pc, #4]	; (1baec <_printf_float+0x468>)
   1bae8:	4f01      	ldr	r7, [pc, #4]	; (1baf0 <_printf_float+0x46c>)
   1baea:	e612      	b.n	1b712 <_printf_float+0x8e>
   1baec:	00022480 	.word	0x00022480
   1baf0:	00022484 	.word	0x00022484

0001baf4 <_printf_common>:
_printf_common():
   1baf4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1baf8:	4691      	mov	r9, r2
   1bafa:	461f      	mov	r7, r3
   1bafc:	688a      	ldr	r2, [r1, #8]
   1bafe:	690b      	ldr	r3, [r1, #16]
   1bb00:	4606      	mov	r6, r0
   1bb02:	4293      	cmp	r3, r2
   1bb04:	bfb8      	it	lt
   1bb06:	4613      	movlt	r3, r2
   1bb08:	f8c9 3000 	str.w	r3, [r9]
   1bb0c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
   1bb10:	460c      	mov	r4, r1
   1bb12:	f8dd 8020 	ldr.w	r8, [sp, #32]
   1bb16:	b112      	cbz	r2, 1bb1e <_printf_common+0x2a>
   1bb18:	3301      	adds	r3, #1
   1bb1a:	f8c9 3000 	str.w	r3, [r9]
   1bb1e:	6823      	ldr	r3, [r4, #0]
   1bb20:	0699      	lsls	r1, r3, #26
   1bb22:	bf42      	ittt	mi
   1bb24:	f8d9 3000 	ldrmi.w	r3, [r9]
   1bb28:	3302      	addmi	r3, #2
   1bb2a:	f8c9 3000 	strmi.w	r3, [r9]
   1bb2e:	6825      	ldr	r5, [r4, #0]
   1bb30:	f015 0506 	ands.w	r5, r5, #6
   1bb34:	d107      	bne.n	1bb46 <_printf_common+0x52>
   1bb36:	f104 0a19 	add.w	sl, r4, #25
   1bb3a:	68e3      	ldr	r3, [r4, #12]
   1bb3c:	f8d9 2000 	ldr.w	r2, [r9]
   1bb40:	1a9b      	subs	r3, r3, r2
   1bb42:	429d      	cmp	r5, r3
   1bb44:	db2a      	blt.n	1bb9c <_printf_common+0xa8>
   1bb46:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
   1bb4a:	6822      	ldr	r2, [r4, #0]
   1bb4c:	3300      	adds	r3, #0
   1bb4e:	bf18      	it	ne
   1bb50:	2301      	movne	r3, #1
   1bb52:	0692      	lsls	r2, r2, #26
   1bb54:	d42f      	bmi.n	1bbb6 <_printf_common+0xc2>
   1bb56:	f104 0243 	add.w	r2, r4, #67	; 0x43
   1bb5a:	4639      	mov	r1, r7
   1bb5c:	4630      	mov	r0, r6
   1bb5e:	47c0      	blx	r8
   1bb60:	3001      	adds	r0, #1
   1bb62:	d022      	beq.n	1bbaa <_printf_common+0xb6>
   1bb64:	6823      	ldr	r3, [r4, #0]
   1bb66:	68e5      	ldr	r5, [r4, #12]
   1bb68:	f003 0306 	and.w	r3, r3, #6
   1bb6c:	2b04      	cmp	r3, #4
   1bb6e:	bf18      	it	ne
   1bb70:	2500      	movne	r5, #0
   1bb72:	f8d9 2000 	ldr.w	r2, [r9]
   1bb76:	f04f 0900 	mov.w	r9, #0
   1bb7a:	bf08      	it	eq
   1bb7c:	1aad      	subeq	r5, r5, r2
   1bb7e:	68a3      	ldr	r3, [r4, #8]
   1bb80:	6922      	ldr	r2, [r4, #16]
   1bb82:	bf08      	it	eq
   1bb84:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
   1bb88:	4293      	cmp	r3, r2
   1bb8a:	bfc4      	itt	gt
   1bb8c:	1a9b      	subgt	r3, r3, r2
   1bb8e:	18ed      	addgt	r5, r5, r3
   1bb90:	341a      	adds	r4, #26
   1bb92:	454d      	cmp	r5, r9
   1bb94:	d11b      	bne.n	1bbce <_printf_common+0xda>
   1bb96:	2000      	movs	r0, #0
   1bb98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1bb9c:	2301      	movs	r3, #1
   1bb9e:	4652      	mov	r2, sl
   1bba0:	4639      	mov	r1, r7
   1bba2:	4630      	mov	r0, r6
   1bba4:	47c0      	blx	r8
   1bba6:	3001      	adds	r0, #1
   1bba8:	d103      	bne.n	1bbb2 <_printf_common+0xbe>
   1bbaa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1bbae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1bbb2:	3501      	adds	r5, #1
   1bbb4:	e7c1      	b.n	1bb3a <_printf_common+0x46>
   1bbb6:	2030      	movs	r0, #48	; 0x30
   1bbb8:	18e1      	adds	r1, r4, r3
   1bbba:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
   1bbbe:	1c5a      	adds	r2, r3, #1
   1bbc0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
   1bbc4:	4422      	add	r2, r4
   1bbc6:	3302      	adds	r3, #2
   1bbc8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
   1bbcc:	e7c3      	b.n	1bb56 <_printf_common+0x62>
   1bbce:	2301      	movs	r3, #1
   1bbd0:	4622      	mov	r2, r4
   1bbd2:	4639      	mov	r1, r7
   1bbd4:	4630      	mov	r0, r6
   1bbd6:	47c0      	blx	r8
   1bbd8:	3001      	adds	r0, #1
   1bbda:	d0e6      	beq.n	1bbaa <_printf_common+0xb6>
   1bbdc:	f109 0901 	add.w	r9, r9, #1
   1bbe0:	e7d7      	b.n	1bb92 <_printf_common+0x9e>
   1bbe2:	Address 0x000000000001bbe2 is out of bounds.


0001bbe4 <_printf_i>:
_printf_i():
   1bbe4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1bbe8:	4617      	mov	r7, r2
   1bbea:	7e0a      	ldrb	r2, [r1, #24]
   1bbec:	b085      	sub	sp, #20
   1bbee:	2a6e      	cmp	r2, #110	; 0x6e
   1bbf0:	4698      	mov	r8, r3
   1bbf2:	4606      	mov	r6, r0
   1bbf4:	460c      	mov	r4, r1
   1bbf6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1bbf8:	f101 0e43 	add.w	lr, r1, #67	; 0x43
   1bbfc:	f000 80bc 	beq.w	1bd78 <_printf_i+0x194>
   1bc00:	d81a      	bhi.n	1bc38 <_printf_i+0x54>
   1bc02:	2a63      	cmp	r2, #99	; 0x63
   1bc04:	d02e      	beq.n	1bc64 <_printf_i+0x80>
   1bc06:	d80a      	bhi.n	1bc1e <_printf_i+0x3a>
   1bc08:	2a00      	cmp	r2, #0
   1bc0a:	f000 80c8 	beq.w	1bd9e <_printf_i+0x1ba>
   1bc0e:	2a58      	cmp	r2, #88	; 0x58
   1bc10:	f000 808a 	beq.w	1bd28 <_printf_i+0x144>
   1bc14:	f104 0542 	add.w	r5, r4, #66	; 0x42
   1bc18:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
   1bc1c:	e02a      	b.n	1bc74 <_printf_i+0x90>
   1bc1e:	2a64      	cmp	r2, #100	; 0x64
   1bc20:	d001      	beq.n	1bc26 <_printf_i+0x42>
   1bc22:	2a69      	cmp	r2, #105	; 0x69
   1bc24:	d1f6      	bne.n	1bc14 <_printf_i+0x30>
   1bc26:	6821      	ldr	r1, [r4, #0]
   1bc28:	681a      	ldr	r2, [r3, #0]
   1bc2a:	f011 0f80 	tst.w	r1, #128	; 0x80
   1bc2e:	d023      	beq.n	1bc78 <_printf_i+0x94>
   1bc30:	1d11      	adds	r1, r2, #4
   1bc32:	6019      	str	r1, [r3, #0]
   1bc34:	6813      	ldr	r3, [r2, #0]
   1bc36:	e027      	b.n	1bc88 <_printf_i+0xa4>
   1bc38:	2a73      	cmp	r2, #115	; 0x73
   1bc3a:	f000 80b4 	beq.w	1bda6 <_printf_i+0x1c2>
   1bc3e:	d808      	bhi.n	1bc52 <_printf_i+0x6e>
   1bc40:	2a6f      	cmp	r2, #111	; 0x6f
   1bc42:	d02a      	beq.n	1bc9a <_printf_i+0xb6>
   1bc44:	2a70      	cmp	r2, #112	; 0x70
   1bc46:	d1e5      	bne.n	1bc14 <_printf_i+0x30>
   1bc48:	680a      	ldr	r2, [r1, #0]
   1bc4a:	f042 0220 	orr.w	r2, r2, #32
   1bc4e:	600a      	str	r2, [r1, #0]
   1bc50:	e003      	b.n	1bc5a <_printf_i+0x76>
   1bc52:	2a75      	cmp	r2, #117	; 0x75
   1bc54:	d021      	beq.n	1bc9a <_printf_i+0xb6>
   1bc56:	2a78      	cmp	r2, #120	; 0x78
   1bc58:	d1dc      	bne.n	1bc14 <_printf_i+0x30>
   1bc5a:	2278      	movs	r2, #120	; 0x78
   1bc5c:	496f      	ldr	r1, [pc, #444]	; (1be1c <_printf_i+0x238>)
   1bc5e:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
   1bc62:	e064      	b.n	1bd2e <_printf_i+0x14a>
   1bc64:	681a      	ldr	r2, [r3, #0]
   1bc66:	f101 0542 	add.w	r5, r1, #66	; 0x42
   1bc6a:	1d11      	adds	r1, r2, #4
   1bc6c:	6019      	str	r1, [r3, #0]
   1bc6e:	6813      	ldr	r3, [r2, #0]
   1bc70:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   1bc74:	2301      	movs	r3, #1
   1bc76:	e0a3      	b.n	1bdc0 <_printf_i+0x1dc>
   1bc78:	f011 0f40 	tst.w	r1, #64	; 0x40
   1bc7c:	f102 0104 	add.w	r1, r2, #4
   1bc80:	6019      	str	r1, [r3, #0]
   1bc82:	d0d7      	beq.n	1bc34 <_printf_i+0x50>
   1bc84:	f9b2 3000 	ldrsh.w	r3, [r2]
   1bc88:	2b00      	cmp	r3, #0
   1bc8a:	da03      	bge.n	1bc94 <_printf_i+0xb0>
   1bc8c:	222d      	movs	r2, #45	; 0x2d
   1bc8e:	425b      	negs	r3, r3
   1bc90:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
   1bc94:	4962      	ldr	r1, [pc, #392]	; (1be20 <_printf_i+0x23c>)
   1bc96:	220a      	movs	r2, #10
   1bc98:	e017      	b.n	1bcca <_printf_i+0xe6>
   1bc9a:	6820      	ldr	r0, [r4, #0]
   1bc9c:	6819      	ldr	r1, [r3, #0]
   1bc9e:	f010 0f80 	tst.w	r0, #128	; 0x80
   1bca2:	d003      	beq.n	1bcac <_printf_i+0xc8>
   1bca4:	1d08      	adds	r0, r1, #4
   1bca6:	6018      	str	r0, [r3, #0]
   1bca8:	680b      	ldr	r3, [r1, #0]
   1bcaa:	e006      	b.n	1bcba <_printf_i+0xd6>
   1bcac:	f010 0f40 	tst.w	r0, #64	; 0x40
   1bcb0:	f101 0004 	add.w	r0, r1, #4
   1bcb4:	6018      	str	r0, [r3, #0]
   1bcb6:	d0f7      	beq.n	1bca8 <_printf_i+0xc4>
   1bcb8:	880b      	ldrh	r3, [r1, #0]
   1bcba:	2a6f      	cmp	r2, #111	; 0x6f
   1bcbc:	bf14      	ite	ne
   1bcbe:	220a      	movne	r2, #10
   1bcc0:	2208      	moveq	r2, #8
   1bcc2:	4957      	ldr	r1, [pc, #348]	; (1be20 <_printf_i+0x23c>)
   1bcc4:	2000      	movs	r0, #0
   1bcc6:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
   1bcca:	6865      	ldr	r5, [r4, #4]
   1bccc:	2d00      	cmp	r5, #0
   1bcce:	60a5      	str	r5, [r4, #8]
   1bcd0:	f2c0 809c 	blt.w	1be0c <_printf_i+0x228>
   1bcd4:	6820      	ldr	r0, [r4, #0]
   1bcd6:	f020 0004 	bic.w	r0, r0, #4
   1bcda:	6020      	str	r0, [r4, #0]
   1bcdc:	2b00      	cmp	r3, #0
   1bcde:	d13f      	bne.n	1bd60 <_printf_i+0x17c>
   1bce0:	2d00      	cmp	r5, #0
   1bce2:	f040 8095 	bne.w	1be10 <_printf_i+0x22c>
   1bce6:	4675      	mov	r5, lr
   1bce8:	2a08      	cmp	r2, #8
   1bcea:	d10b      	bne.n	1bd04 <_printf_i+0x120>
   1bcec:	6823      	ldr	r3, [r4, #0]
   1bcee:	07da      	lsls	r2, r3, #31
   1bcf0:	d508      	bpl.n	1bd04 <_printf_i+0x120>
   1bcf2:	6923      	ldr	r3, [r4, #16]
   1bcf4:	6862      	ldr	r2, [r4, #4]
   1bcf6:	429a      	cmp	r2, r3
   1bcf8:	bfde      	ittt	le
   1bcfa:	2330      	movle	r3, #48	; 0x30
   1bcfc:	f805 3c01 	strble.w	r3, [r5, #-1]
   1bd00:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
   1bd04:	ebae 0305 	sub.w	r3, lr, r5
   1bd08:	6123      	str	r3, [r4, #16]
   1bd0a:	f8cd 8000 	str.w	r8, [sp]
   1bd0e:	463b      	mov	r3, r7
   1bd10:	aa03      	add	r2, sp, #12
   1bd12:	4621      	mov	r1, r4
   1bd14:	4630      	mov	r0, r6
   1bd16:	f7ff feed 	bl	1baf4 <_printf_common>
   1bd1a:	3001      	adds	r0, #1
   1bd1c:	d155      	bne.n	1bdca <_printf_i+0x1e6>
   1bd1e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1bd22:	b005      	add	sp, #20
   1bd24:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1bd28:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
   1bd2c:	493c      	ldr	r1, [pc, #240]	; (1be20 <_printf_i+0x23c>)
   1bd2e:	6822      	ldr	r2, [r4, #0]
   1bd30:	6818      	ldr	r0, [r3, #0]
   1bd32:	f012 0f80 	tst.w	r2, #128	; 0x80
   1bd36:	f100 0504 	add.w	r5, r0, #4
   1bd3a:	601d      	str	r5, [r3, #0]
   1bd3c:	d001      	beq.n	1bd42 <_printf_i+0x15e>
   1bd3e:	6803      	ldr	r3, [r0, #0]
   1bd40:	e002      	b.n	1bd48 <_printf_i+0x164>
   1bd42:	0655      	lsls	r5, r2, #25
   1bd44:	d5fb      	bpl.n	1bd3e <_printf_i+0x15a>
   1bd46:	8803      	ldrh	r3, [r0, #0]
   1bd48:	07d0      	lsls	r0, r2, #31
   1bd4a:	bf44      	itt	mi
   1bd4c:	f042 0220 	orrmi.w	r2, r2, #32
   1bd50:	6022      	strmi	r2, [r4, #0]
   1bd52:	b91b      	cbnz	r3, 1bd5c <_printf_i+0x178>
   1bd54:	6822      	ldr	r2, [r4, #0]
   1bd56:	f022 0220 	bic.w	r2, r2, #32
   1bd5a:	6022      	str	r2, [r4, #0]
   1bd5c:	2210      	movs	r2, #16
   1bd5e:	e7b1      	b.n	1bcc4 <_printf_i+0xe0>
   1bd60:	4675      	mov	r5, lr
   1bd62:	fbb3 f0f2 	udiv	r0, r3, r2
   1bd66:	fb02 3310 	mls	r3, r2, r0, r3
   1bd6a:	5ccb      	ldrb	r3, [r1, r3]
   1bd6c:	f805 3d01 	strb.w	r3, [r5, #-1]!
   1bd70:	4603      	mov	r3, r0
   1bd72:	2800      	cmp	r0, #0
   1bd74:	d1f5      	bne.n	1bd62 <_printf_i+0x17e>
   1bd76:	e7b7      	b.n	1bce8 <_printf_i+0x104>
   1bd78:	6808      	ldr	r0, [r1, #0]
   1bd7a:	681a      	ldr	r2, [r3, #0]
   1bd7c:	f010 0f80 	tst.w	r0, #128	; 0x80
   1bd80:	6949      	ldr	r1, [r1, #20]
   1bd82:	d004      	beq.n	1bd8e <_printf_i+0x1aa>
   1bd84:	1d10      	adds	r0, r2, #4
   1bd86:	6018      	str	r0, [r3, #0]
   1bd88:	6813      	ldr	r3, [r2, #0]
   1bd8a:	6019      	str	r1, [r3, #0]
   1bd8c:	e007      	b.n	1bd9e <_printf_i+0x1ba>
   1bd8e:	f010 0f40 	tst.w	r0, #64	; 0x40
   1bd92:	f102 0004 	add.w	r0, r2, #4
   1bd96:	6018      	str	r0, [r3, #0]
   1bd98:	6813      	ldr	r3, [r2, #0]
   1bd9a:	d0f6      	beq.n	1bd8a <_printf_i+0x1a6>
   1bd9c:	8019      	strh	r1, [r3, #0]
   1bd9e:	2300      	movs	r3, #0
   1bda0:	4675      	mov	r5, lr
   1bda2:	6123      	str	r3, [r4, #16]
   1bda4:	e7b1      	b.n	1bd0a <_printf_i+0x126>
   1bda6:	681a      	ldr	r2, [r3, #0]
   1bda8:	1d11      	adds	r1, r2, #4
   1bdaa:	6019      	str	r1, [r3, #0]
   1bdac:	6815      	ldr	r5, [r2, #0]
   1bdae:	2100      	movs	r1, #0
   1bdb0:	6862      	ldr	r2, [r4, #4]
   1bdb2:	4628      	mov	r0, r5
   1bdb4:	f7ff f83a 	bl	1ae2c <memchr>
   1bdb8:	b108      	cbz	r0, 1bdbe <_printf_i+0x1da>
   1bdba:	1b40      	subs	r0, r0, r5
   1bdbc:	6060      	str	r0, [r4, #4]
   1bdbe:	6863      	ldr	r3, [r4, #4]
   1bdc0:	6123      	str	r3, [r4, #16]
   1bdc2:	2300      	movs	r3, #0
   1bdc4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1bdc8:	e79f      	b.n	1bd0a <_printf_i+0x126>
   1bdca:	6923      	ldr	r3, [r4, #16]
   1bdcc:	462a      	mov	r2, r5
   1bdce:	4639      	mov	r1, r7
   1bdd0:	4630      	mov	r0, r6
   1bdd2:	47c0      	blx	r8
   1bdd4:	3001      	adds	r0, #1
   1bdd6:	d0a2      	beq.n	1bd1e <_printf_i+0x13a>
   1bdd8:	6823      	ldr	r3, [r4, #0]
   1bdda:	079b      	lsls	r3, r3, #30
   1bddc:	d507      	bpl.n	1bdee <_printf_i+0x20a>
   1bdde:	2500      	movs	r5, #0
   1bde0:	f104 0919 	add.w	r9, r4, #25
   1bde4:	68e3      	ldr	r3, [r4, #12]
   1bde6:	9a03      	ldr	r2, [sp, #12]
   1bde8:	1a9b      	subs	r3, r3, r2
   1bdea:	429d      	cmp	r5, r3
   1bdec:	db05      	blt.n	1bdfa <_printf_i+0x216>
   1bdee:	68e0      	ldr	r0, [r4, #12]
   1bdf0:	9b03      	ldr	r3, [sp, #12]
   1bdf2:	4298      	cmp	r0, r3
   1bdf4:	bfb8      	it	lt
   1bdf6:	4618      	movlt	r0, r3
   1bdf8:	e793      	b.n	1bd22 <_printf_i+0x13e>
   1bdfa:	2301      	movs	r3, #1
   1bdfc:	464a      	mov	r2, r9
   1bdfe:	4639      	mov	r1, r7
   1be00:	4630      	mov	r0, r6
   1be02:	47c0      	blx	r8
   1be04:	3001      	adds	r0, #1
   1be06:	d08a      	beq.n	1bd1e <_printf_i+0x13a>
   1be08:	3501      	adds	r5, #1
   1be0a:	e7eb      	b.n	1bde4 <_printf_i+0x200>
   1be0c:	2b00      	cmp	r3, #0
   1be0e:	d1a7      	bne.n	1bd60 <_printf_i+0x17c>
   1be10:	780b      	ldrb	r3, [r1, #0]
   1be12:	f104 0542 	add.w	r5, r4, #66	; 0x42
   1be16:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   1be1a:	e765      	b.n	1bce8 <_printf_i+0x104>
   1be1c:	00022499 	.word	0x00022499
   1be20:	00022488 	.word	0x00022488

0001be24 <_scanf_float>:
_scanf_float():
   1be24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1be28:	469a      	mov	sl, r3
   1be2a:	688b      	ldr	r3, [r1, #8]
   1be2c:	4616      	mov	r6, r2
   1be2e:	1e5a      	subs	r2, r3, #1
   1be30:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
   1be34:	bf88      	it	hi
   1be36:	f46f 72ae 	mvnhi.w	r2, #348	; 0x15c
   1be3a:	b087      	sub	sp, #28
   1be3c:	bf85      	ittet	hi
   1be3e:	189b      	addhi	r3, r3, r2
   1be40:	9301      	strhi	r3, [sp, #4]
   1be42:	2300      	movls	r3, #0
   1be44:	f240 135d 	movwhi	r3, #349	; 0x15d
   1be48:	4688      	mov	r8, r1
   1be4a:	f04f 0b00 	mov.w	fp, #0
   1be4e:	bf8c      	ite	hi
   1be50:	608b      	strhi	r3, [r1, #8]
   1be52:	9301      	strls	r3, [sp, #4]
   1be54:	680b      	ldr	r3, [r1, #0]
   1be56:	4607      	mov	r7, r0
   1be58:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
   1be5c:	f848 3b1c 	str.w	r3, [r8], #28
   1be60:	460c      	mov	r4, r1
   1be62:	4645      	mov	r5, r8
   1be64:	465a      	mov	r2, fp
   1be66:	46d9      	mov	r9, fp
   1be68:	f8cd b010 	str.w	fp, [sp, #16]
   1be6c:	f8cd b00c 	str.w	fp, [sp, #12]
   1be70:	f8cd b008 	str.w	fp, [sp, #8]
   1be74:	68a1      	ldr	r1, [r4, #8]
   1be76:	b181      	cbz	r1, 1be9a <_scanf_float+0x76>
   1be78:	6833      	ldr	r3, [r6, #0]
   1be7a:	781b      	ldrb	r3, [r3, #0]
   1be7c:	2b49      	cmp	r3, #73	; 0x49
   1be7e:	d071      	beq.n	1bf64 <_scanf_float+0x140>
   1be80:	d84d      	bhi.n	1bf1e <_scanf_float+0xfa>
   1be82:	2b39      	cmp	r3, #57	; 0x39
   1be84:	d840      	bhi.n	1bf08 <_scanf_float+0xe4>
   1be86:	2b31      	cmp	r3, #49	; 0x31
   1be88:	f080 8088 	bcs.w	1bf9c <_scanf_float+0x178>
   1be8c:	2b2d      	cmp	r3, #45	; 0x2d
   1be8e:	f000 8090 	beq.w	1bfb2 <_scanf_float+0x18e>
   1be92:	d815      	bhi.n	1bec0 <_scanf_float+0x9c>
   1be94:	2b2b      	cmp	r3, #43	; 0x2b
   1be96:	f000 808c 	beq.w	1bfb2 <_scanf_float+0x18e>
   1be9a:	f1b9 0f00 	cmp.w	r9, #0
   1be9e:	d003      	beq.n	1bea8 <_scanf_float+0x84>
   1bea0:	6823      	ldr	r3, [r4, #0]
   1bea2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   1bea6:	6023      	str	r3, [r4, #0]
   1bea8:	3a01      	subs	r2, #1
   1beaa:	2a01      	cmp	r2, #1
   1beac:	f200 80ea 	bhi.w	1c084 <_scanf_float+0x260>
   1beb0:	4545      	cmp	r5, r8
   1beb2:	f200 80dc 	bhi.w	1c06e <_scanf_float+0x24a>
   1beb6:	2601      	movs	r6, #1
   1beb8:	4630      	mov	r0, r6
   1beba:	b007      	add	sp, #28
   1bebc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bec0:	2b2e      	cmp	r3, #46	; 0x2e
   1bec2:	f000 809f 	beq.w	1c004 <_scanf_float+0x1e0>
   1bec6:	2b30      	cmp	r3, #48	; 0x30
   1bec8:	d1e7      	bne.n	1be9a <_scanf_float+0x76>
   1beca:	6820      	ldr	r0, [r4, #0]
   1becc:	f410 7f80 	tst.w	r0, #256	; 0x100
   1bed0:	d064      	beq.n	1bf9c <_scanf_float+0x178>
   1bed2:	9b01      	ldr	r3, [sp, #4]
   1bed4:	f020 0080 	bic.w	r0, r0, #128	; 0x80
   1bed8:	6020      	str	r0, [r4, #0]
   1beda:	f109 0901 	add.w	r9, r9, #1
   1bede:	b11b      	cbz	r3, 1bee8 <_scanf_float+0xc4>
   1bee0:	3b01      	subs	r3, #1
   1bee2:	3101      	adds	r1, #1
   1bee4:	9301      	str	r3, [sp, #4]
   1bee6:	60a1      	str	r1, [r4, #8]
   1bee8:	68a3      	ldr	r3, [r4, #8]
   1beea:	3b01      	subs	r3, #1
   1beec:	60a3      	str	r3, [r4, #8]
   1beee:	6923      	ldr	r3, [r4, #16]
   1bef0:	3301      	adds	r3, #1
   1bef2:	6123      	str	r3, [r4, #16]
   1bef4:	6873      	ldr	r3, [r6, #4]
   1bef6:	3b01      	subs	r3, #1
   1bef8:	2b00      	cmp	r3, #0
   1befa:	6073      	str	r3, [r6, #4]
   1befc:	f340 80ac 	ble.w	1c058 <_scanf_float+0x234>
   1bf00:	6833      	ldr	r3, [r6, #0]
   1bf02:	3301      	adds	r3, #1
   1bf04:	6033      	str	r3, [r6, #0]
   1bf06:	e7b5      	b.n	1be74 <_scanf_float+0x50>
   1bf08:	2b45      	cmp	r3, #69	; 0x45
   1bf0a:	f000 8085 	beq.w	1c018 <_scanf_float+0x1f4>
   1bf0e:	2b46      	cmp	r3, #70	; 0x46
   1bf10:	d06a      	beq.n	1bfe8 <_scanf_float+0x1c4>
   1bf12:	2b41      	cmp	r3, #65	; 0x41
   1bf14:	d1c1      	bne.n	1be9a <_scanf_float+0x76>
   1bf16:	2a01      	cmp	r2, #1
   1bf18:	d1bf      	bne.n	1be9a <_scanf_float+0x76>
   1bf1a:	2202      	movs	r2, #2
   1bf1c:	e046      	b.n	1bfac <_scanf_float+0x188>
   1bf1e:	2b65      	cmp	r3, #101	; 0x65
   1bf20:	d07a      	beq.n	1c018 <_scanf_float+0x1f4>
   1bf22:	d818      	bhi.n	1bf56 <_scanf_float+0x132>
   1bf24:	2b54      	cmp	r3, #84	; 0x54
   1bf26:	d066      	beq.n	1bff6 <_scanf_float+0x1d2>
   1bf28:	d811      	bhi.n	1bf4e <_scanf_float+0x12a>
   1bf2a:	2b4e      	cmp	r3, #78	; 0x4e
   1bf2c:	d1b5      	bne.n	1be9a <_scanf_float+0x76>
   1bf2e:	2a00      	cmp	r2, #0
   1bf30:	d146      	bne.n	1bfc0 <_scanf_float+0x19c>
   1bf32:	f1b9 0f00 	cmp.w	r9, #0
   1bf36:	d145      	bne.n	1bfc4 <_scanf_float+0x1a0>
   1bf38:	6821      	ldr	r1, [r4, #0]
   1bf3a:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   1bf3e:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   1bf42:	d13f      	bne.n	1bfc4 <_scanf_float+0x1a0>
   1bf44:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1bf48:	6021      	str	r1, [r4, #0]
   1bf4a:	2201      	movs	r2, #1
   1bf4c:	e02e      	b.n	1bfac <_scanf_float+0x188>
   1bf4e:	2b59      	cmp	r3, #89	; 0x59
   1bf50:	d01e      	beq.n	1bf90 <_scanf_float+0x16c>
   1bf52:	2b61      	cmp	r3, #97	; 0x61
   1bf54:	e7de      	b.n	1bf14 <_scanf_float+0xf0>
   1bf56:	2b6e      	cmp	r3, #110	; 0x6e
   1bf58:	d0e9      	beq.n	1bf2e <_scanf_float+0x10a>
   1bf5a:	d815      	bhi.n	1bf88 <_scanf_float+0x164>
   1bf5c:	2b66      	cmp	r3, #102	; 0x66
   1bf5e:	d043      	beq.n	1bfe8 <_scanf_float+0x1c4>
   1bf60:	2b69      	cmp	r3, #105	; 0x69
   1bf62:	d19a      	bne.n	1be9a <_scanf_float+0x76>
   1bf64:	f1bb 0f00 	cmp.w	fp, #0
   1bf68:	d138      	bne.n	1bfdc <_scanf_float+0x1b8>
   1bf6a:	f1b9 0f00 	cmp.w	r9, #0
   1bf6e:	d197      	bne.n	1bea0 <_scanf_float+0x7c>
   1bf70:	6821      	ldr	r1, [r4, #0]
   1bf72:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   1bf76:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   1bf7a:	d195      	bne.n	1bea8 <_scanf_float+0x84>
   1bf7c:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1bf80:	6021      	str	r1, [r4, #0]
   1bf82:	f04f 0b01 	mov.w	fp, #1
   1bf86:	e011      	b.n	1bfac <_scanf_float+0x188>
   1bf88:	2b74      	cmp	r3, #116	; 0x74
   1bf8a:	d034      	beq.n	1bff6 <_scanf_float+0x1d2>
   1bf8c:	2b79      	cmp	r3, #121	; 0x79
   1bf8e:	d184      	bne.n	1be9a <_scanf_float+0x76>
   1bf90:	f1bb 0f07 	cmp.w	fp, #7
   1bf94:	d181      	bne.n	1be9a <_scanf_float+0x76>
   1bf96:	f04f 0b08 	mov.w	fp, #8
   1bf9a:	e007      	b.n	1bfac <_scanf_float+0x188>
   1bf9c:	eb12 0f0b 	cmn.w	r2, fp
   1bfa0:	f47f af7b 	bne.w	1be9a <_scanf_float+0x76>
   1bfa4:	6821      	ldr	r1, [r4, #0]
   1bfa6:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
   1bfaa:	6021      	str	r1, [r4, #0]
   1bfac:	702b      	strb	r3, [r5, #0]
   1bfae:	3501      	adds	r5, #1
   1bfb0:	e79a      	b.n	1bee8 <_scanf_float+0xc4>
   1bfb2:	6821      	ldr	r1, [r4, #0]
   1bfb4:	0608      	lsls	r0, r1, #24
   1bfb6:	f57f af70 	bpl.w	1be9a <_scanf_float+0x76>
   1bfba:	f021 0180 	bic.w	r1, r1, #128	; 0x80
   1bfbe:	e7f4      	b.n	1bfaa <_scanf_float+0x186>
   1bfc0:	2a02      	cmp	r2, #2
   1bfc2:	d047      	beq.n	1c054 <_scanf_float+0x230>
   1bfc4:	f1bb 0f01 	cmp.w	fp, #1
   1bfc8:	d003      	beq.n	1bfd2 <_scanf_float+0x1ae>
   1bfca:	f1bb 0f04 	cmp.w	fp, #4
   1bfce:	f47f af64 	bne.w	1be9a <_scanf_float+0x76>
   1bfd2:	f10b 0b01 	add.w	fp, fp, #1
   1bfd6:	fa5f fb8b 	uxtb.w	fp, fp
   1bfda:	e7e7      	b.n	1bfac <_scanf_float+0x188>
   1bfdc:	f1bb 0f03 	cmp.w	fp, #3
   1bfe0:	d0f7      	beq.n	1bfd2 <_scanf_float+0x1ae>
   1bfe2:	f1bb 0f05 	cmp.w	fp, #5
   1bfe6:	e7f2      	b.n	1bfce <_scanf_float+0x1aa>
   1bfe8:	f1bb 0f02 	cmp.w	fp, #2
   1bfec:	f47f af55 	bne.w	1be9a <_scanf_float+0x76>
   1bff0:	f04f 0b03 	mov.w	fp, #3
   1bff4:	e7da      	b.n	1bfac <_scanf_float+0x188>
   1bff6:	f1bb 0f06 	cmp.w	fp, #6
   1bffa:	f47f af4e 	bne.w	1be9a <_scanf_float+0x76>
   1bffe:	f04f 0b07 	mov.w	fp, #7
   1c002:	e7d3      	b.n	1bfac <_scanf_float+0x188>
   1c004:	6821      	ldr	r1, [r4, #0]
   1c006:	0588      	lsls	r0, r1, #22
   1c008:	f57f af47 	bpl.w	1be9a <_scanf_float+0x76>
   1c00c:	f421 7120 	bic.w	r1, r1, #640	; 0x280
   1c010:	6021      	str	r1, [r4, #0]
   1c012:	f8cd 9008 	str.w	r9, [sp, #8]
   1c016:	e7c9      	b.n	1bfac <_scanf_float+0x188>
   1c018:	6821      	ldr	r1, [r4, #0]
   1c01a:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
   1c01e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
   1c022:	d006      	beq.n	1c032 <_scanf_float+0x20e>
   1c024:	0548      	lsls	r0, r1, #21
   1c026:	f57f af38 	bpl.w	1be9a <_scanf_float+0x76>
   1c02a:	f1b9 0f00 	cmp.w	r9, #0
   1c02e:	f43f af3b 	beq.w	1bea8 <_scanf_float+0x84>
   1c032:	0588      	lsls	r0, r1, #22
   1c034:	bf58      	it	pl
   1c036:	9802      	ldrpl	r0, [sp, #8]
   1c038:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1c03c:	bf58      	it	pl
   1c03e:	eba9 0000 	subpl.w	r0, r9, r0
   1c042:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
   1c046:	bf5c      	itt	pl
   1c048:	9003      	strpl	r0, [sp, #12]
   1c04a:	9504      	strpl	r5, [sp, #16]
   1c04c:	6021      	str	r1, [r4, #0]
   1c04e:	f04f 0900 	mov.w	r9, #0
   1c052:	e7ab      	b.n	1bfac <_scanf_float+0x188>
   1c054:	2203      	movs	r2, #3
   1c056:	e7a9      	b.n	1bfac <_scanf_float+0x188>
   1c058:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1c05c:	4631      	mov	r1, r6
   1c05e:	4638      	mov	r0, r7
   1c060:	9205      	str	r2, [sp, #20]
   1c062:	4798      	blx	r3
   1c064:	9a05      	ldr	r2, [sp, #20]
   1c066:	2800      	cmp	r0, #0
   1c068:	f43f af04 	beq.w	1be74 <_scanf_float+0x50>
   1c06c:	e715      	b.n	1be9a <_scanf_float+0x76>
   1c06e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1c072:	4632      	mov	r2, r6
   1c074:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1c078:	4638      	mov	r0, r7
   1c07a:	4798      	blx	r3
   1c07c:	6923      	ldr	r3, [r4, #16]
   1c07e:	3b01      	subs	r3, #1
   1c080:	6123      	str	r3, [r4, #16]
   1c082:	e715      	b.n	1beb0 <_scanf_float+0x8c>
   1c084:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
   1c088:	2b06      	cmp	r3, #6
   1c08a:	d80a      	bhi.n	1c0a2 <_scanf_float+0x27e>
   1c08c:	f1bb 0f02 	cmp.w	fp, #2
   1c090:	d92f      	bls.n	1c0f2 <_scanf_float+0x2ce>
   1c092:	f1ab 0b03 	sub.w	fp, fp, #3
   1c096:	fa5f fb8b 	uxtb.w	fp, fp
   1c09a:	eba5 0b0b 	sub.w	fp, r5, fp
   1c09e:	455d      	cmp	r5, fp
   1c0a0:	d112      	bne.n	1c0c8 <_scanf_float+0x2a4>
   1c0a2:	6823      	ldr	r3, [r4, #0]
   1c0a4:	05da      	lsls	r2, r3, #23
   1c0a6:	d545      	bpl.n	1c134 <_scanf_float+0x310>
   1c0a8:	055b      	lsls	r3, r3, #21
   1c0aa:	d525      	bpl.n	1c0f8 <_scanf_float+0x2d4>
   1c0ac:	4545      	cmp	r5, r8
   1c0ae:	f67f af02 	bls.w	1beb6 <_scanf_float+0x92>
   1c0b2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1c0b6:	4632      	mov	r2, r6
   1c0b8:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1c0bc:	4638      	mov	r0, r7
   1c0be:	4798      	blx	r3
   1c0c0:	6923      	ldr	r3, [r4, #16]
   1c0c2:	3b01      	subs	r3, #1
   1c0c4:	6123      	str	r3, [r4, #16]
   1c0c6:	e7f1      	b.n	1c0ac <_scanf_float+0x288>
   1c0c8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1c0cc:	4632      	mov	r2, r6
   1c0ce:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1c0d2:	4638      	mov	r0, r7
   1c0d4:	4798      	blx	r3
   1c0d6:	6923      	ldr	r3, [r4, #16]
   1c0d8:	3b01      	subs	r3, #1
   1c0da:	6123      	str	r3, [r4, #16]
   1c0dc:	e7df      	b.n	1c09e <_scanf_float+0x27a>
   1c0de:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1c0e2:	4632      	mov	r2, r6
   1c0e4:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1c0e8:	4638      	mov	r0, r7
   1c0ea:	4798      	blx	r3
   1c0ec:	6923      	ldr	r3, [r4, #16]
   1c0ee:	3b01      	subs	r3, #1
   1c0f0:	6123      	str	r3, [r4, #16]
   1c0f2:	4545      	cmp	r5, r8
   1c0f4:	d8f3      	bhi.n	1c0de <_scanf_float+0x2ba>
   1c0f6:	e6de      	b.n	1beb6 <_scanf_float+0x92>
   1c0f8:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   1c0fc:	6923      	ldr	r3, [r4, #16]
   1c0fe:	2965      	cmp	r1, #101	; 0x65
   1c100:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   1c104:	f105 3bff 	add.w	fp, r5, #4294967295	; 0xffffffff
   1c108:	6123      	str	r3, [r4, #16]
   1c10a:	d00d      	beq.n	1c128 <_scanf_float+0x304>
   1c10c:	2945      	cmp	r1, #69	; 0x45
   1c10e:	d00b      	beq.n	1c128 <_scanf_float+0x304>
   1c110:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1c114:	4632      	mov	r2, r6
   1c116:	4638      	mov	r0, r7
   1c118:	4798      	blx	r3
   1c11a:	6923      	ldr	r3, [r4, #16]
   1c11c:	f815 1c02 	ldrb.w	r1, [r5, #-2]
   1c120:	3b01      	subs	r3, #1
   1c122:	f1a5 0b02 	sub.w	fp, r5, #2
   1c126:	6123      	str	r3, [r4, #16]
   1c128:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1c12c:	4632      	mov	r2, r6
   1c12e:	4638      	mov	r0, r7
   1c130:	4798      	blx	r3
   1c132:	465d      	mov	r5, fp
   1c134:	6826      	ldr	r6, [r4, #0]
   1c136:	f016 0610 	ands.w	r6, r6, #16
   1c13a:	d14e      	bne.n	1c1da <_scanf_float+0x3b6>
   1c13c:	702e      	strb	r6, [r5, #0]
   1c13e:	6823      	ldr	r3, [r4, #0]
   1c140:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
   1c144:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   1c148:	d11c      	bne.n	1c184 <_scanf_float+0x360>
   1c14a:	9b02      	ldr	r3, [sp, #8]
   1c14c:	eba9 0303 	sub.w	r3, r9, r3
   1c150:	425a      	negs	r2, r3
   1c152:	bb23      	cbnz	r3, 1c19e <_scanf_float+0x37a>
   1c154:	2200      	movs	r2, #0
   1c156:	4641      	mov	r1, r8
   1c158:	4638      	mov	r0, r7
   1c15a:	f001 fa31 	bl	1d5c0 <_strtod_r>
   1c15e:	6825      	ldr	r5, [r4, #0]
   1c160:	f8da 3000 	ldr.w	r3, [sl]
   1c164:	f015 0f02 	tst.w	r5, #2
   1c168:	f103 0204 	add.w	r2, r3, #4
   1c16c:	4680      	mov	r8, r0
   1c16e:	4689      	mov	r9, r1
   1c170:	f8ca 2000 	str.w	r2, [sl]
   1c174:	d01e      	beq.n	1c1b4 <_scanf_float+0x390>
   1c176:	681b      	ldr	r3, [r3, #0]
   1c178:	e9c3 8900 	strd	r8, r9, [r3]
   1c17c:	68e3      	ldr	r3, [r4, #12]
   1c17e:	3301      	adds	r3, #1
   1c180:	60e3      	str	r3, [r4, #12]
   1c182:	e699      	b.n	1beb8 <_scanf_float+0x94>
   1c184:	9b03      	ldr	r3, [sp, #12]
   1c186:	2b00      	cmp	r3, #0
   1c188:	d0e4      	beq.n	1c154 <_scanf_float+0x330>
   1c18a:	9904      	ldr	r1, [sp, #16]
   1c18c:	230a      	movs	r3, #10
   1c18e:	4632      	mov	r2, r6
   1c190:	3101      	adds	r1, #1
   1c192:	4638      	mov	r0, r7
   1c194:	f001 fad0 	bl	1d738 <_strtol_r>
   1c198:	9b03      	ldr	r3, [sp, #12]
   1c19a:	9d04      	ldr	r5, [sp, #16]
   1c19c:	1ac2      	subs	r2, r0, r3
   1c19e:	f204 136f 	addw	r3, r4, #367	; 0x16f
   1c1a2:	429d      	cmp	r5, r3
   1c1a4:	bf28      	it	cs
   1c1a6:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
   1c1aa:	490d      	ldr	r1, [pc, #52]	; (1c1e0 <_scanf_float+0x3bc>)
   1c1ac:	4628      	mov	r0, r5
   1c1ae:	f000 faf1 	bl	1c794 <siprintf>
   1c1b2:	e7cf      	b.n	1c154 <_scanf_float+0x330>
   1c1b4:	f015 0504 	ands.w	r5, r5, #4
   1c1b8:	d1dd      	bne.n	1c176 <_scanf_float+0x352>
   1c1ba:	681f      	ldr	r7, [r3, #0]
   1c1bc:	4602      	mov	r2, r0
   1c1be:	460b      	mov	r3, r1
   1c1c0:	f004 fe02 	bl	20dc8 <__aeabi_dcmpun>
   1c1c4:	b120      	cbz	r0, 1c1d0 <_scanf_float+0x3ac>
   1c1c6:	4628      	mov	r0, r5
   1c1c8:	f000 fa9c 	bl	1c704 <nanf>
   1c1cc:	6038      	str	r0, [r7, #0]
   1c1ce:	e7d5      	b.n	1c17c <_scanf_float+0x358>
   1c1d0:	4640      	mov	r0, r8
   1c1d2:	4649      	mov	r1, r9
   1c1d4:	f7fd fd7e 	bl	19cd4 <__aeabi_d2f>
   1c1d8:	e7f8      	b.n	1c1cc <_scanf_float+0x3a8>
   1c1da:	2600      	movs	r6, #0
   1c1dc:	e66c      	b.n	1beb8 <_scanf_float+0x94>
   1c1de:	bf00      	nop
   1c1e0:	000224aa 	.word	0x000224aa

0001c1e4 <_open_r>:
_open_r():
   1c1e4:	b538      	push	{r3, r4, r5, lr}
   1c1e6:	4605      	mov	r5, r0
   1c1e8:	4608      	mov	r0, r1
   1c1ea:	4611      	mov	r1, r2
   1c1ec:	2200      	movs	r2, #0
   1c1ee:	4c05      	ldr	r4, [pc, #20]	; (1c204 <_open_r+0x20>)
   1c1f0:	6022      	str	r2, [r4, #0]
   1c1f2:	461a      	mov	r2, r3
   1c1f4:	f7fc f838 	bl	18268 <_open>
   1c1f8:	1c43      	adds	r3, r0, #1
   1c1fa:	d102      	bne.n	1c202 <_open_r+0x1e>
   1c1fc:	6823      	ldr	r3, [r4, #0]
   1c1fe:	b103      	cbz	r3, 1c202 <_open_r+0x1e>
   1c200:	602b      	str	r3, [r5, #0]
   1c202:	bd38      	pop	{r3, r4, r5, pc}
   1c204:	2007d064 	.word	0x2007d064

0001c208 <iprintf>:
iprintf():
   1c208:	b40f      	push	{r0, r1, r2, r3}
   1c20a:	4b0a      	ldr	r3, [pc, #40]	; (1c234 <iprintf+0x2c>)
   1c20c:	b513      	push	{r0, r1, r4, lr}
   1c20e:	681c      	ldr	r4, [r3, #0]
   1c210:	b124      	cbz	r4, 1c21c <iprintf+0x14>
   1c212:	69a3      	ldr	r3, [r4, #24]
   1c214:	b913      	cbnz	r3, 1c21c <iprintf+0x14>
   1c216:	4620      	mov	r0, r4
   1c218:	f7fe fbca 	bl	1a9b0 <__sinit>
   1c21c:	ab05      	add	r3, sp, #20
   1c21e:	9a04      	ldr	r2, [sp, #16]
   1c220:	68a1      	ldr	r1, [r4, #8]
   1c222:	4620      	mov	r0, r4
   1c224:	9301      	str	r3, [sp, #4]
   1c226:	f003 ffbd 	bl	201a4 <_vfiprintf_r>
   1c22a:	b002      	add	sp, #8
   1c22c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1c230:	b004      	add	sp, #16
   1c232:	4770      	bx	lr
   1c234:	2007c0e4 	.word	0x2007c0e4

0001c238 <_puts_r>:
_puts_r():
   1c238:	b570      	push	{r4, r5, r6, lr}
   1c23a:	460e      	mov	r6, r1
   1c23c:	4605      	mov	r5, r0
   1c23e:	b118      	cbz	r0, 1c248 <_puts_r+0x10>
   1c240:	6983      	ldr	r3, [r0, #24]
   1c242:	b90b      	cbnz	r3, 1c248 <_puts_r+0x10>
   1c244:	f7fe fbb4 	bl	1a9b0 <__sinit>
   1c248:	69ab      	ldr	r3, [r5, #24]
   1c24a:	68ac      	ldr	r4, [r5, #8]
   1c24c:	b913      	cbnz	r3, 1c254 <_puts_r+0x1c>
   1c24e:	4628      	mov	r0, r5
   1c250:	f7fe fbae 	bl	1a9b0 <__sinit>
   1c254:	4b23      	ldr	r3, [pc, #140]	; (1c2e4 <_puts_r+0xac>)
   1c256:	429c      	cmp	r4, r3
   1c258:	d117      	bne.n	1c28a <_puts_r+0x52>
   1c25a:	686c      	ldr	r4, [r5, #4]
   1c25c:	89a3      	ldrh	r3, [r4, #12]
   1c25e:	071b      	lsls	r3, r3, #28
   1c260:	d51d      	bpl.n	1c29e <_puts_r+0x66>
   1c262:	6923      	ldr	r3, [r4, #16]
   1c264:	b1db      	cbz	r3, 1c29e <_puts_r+0x66>
   1c266:	3e01      	subs	r6, #1
   1c268:	68a3      	ldr	r3, [r4, #8]
   1c26a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
   1c26e:	3b01      	subs	r3, #1
   1c270:	60a3      	str	r3, [r4, #8]
   1c272:	b9e9      	cbnz	r1, 1c2b0 <_puts_r+0x78>
   1c274:	2b00      	cmp	r3, #0
   1c276:	da2e      	bge.n	1c2d6 <_puts_r+0x9e>
   1c278:	4622      	mov	r2, r4
   1c27a:	210a      	movs	r1, #10
   1c27c:	4628      	mov	r0, r5
   1c27e:	f001 fd03 	bl	1dc88 <__swbuf_r>
   1c282:	3001      	adds	r0, #1
   1c284:	d011      	beq.n	1c2aa <_puts_r+0x72>
   1c286:	200a      	movs	r0, #10
   1c288:	bd70      	pop	{r4, r5, r6, pc}
   1c28a:	4b17      	ldr	r3, [pc, #92]	; (1c2e8 <_puts_r+0xb0>)
   1c28c:	429c      	cmp	r4, r3
   1c28e:	d101      	bne.n	1c294 <_puts_r+0x5c>
   1c290:	68ac      	ldr	r4, [r5, #8]
   1c292:	e7e3      	b.n	1c25c <_puts_r+0x24>
   1c294:	4b15      	ldr	r3, [pc, #84]	; (1c2ec <_puts_r+0xb4>)
   1c296:	429c      	cmp	r4, r3
   1c298:	bf08      	it	eq
   1c29a:	68ec      	ldreq	r4, [r5, #12]
   1c29c:	e7de      	b.n	1c25c <_puts_r+0x24>
   1c29e:	4621      	mov	r1, r4
   1c2a0:	4628      	mov	r0, r5
   1c2a2:	f001 fd63 	bl	1dd6c <__swsetup_r>
   1c2a6:	2800      	cmp	r0, #0
   1c2a8:	d0dd      	beq.n	1c266 <_puts_r+0x2e>
   1c2aa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1c2ae:	bd70      	pop	{r4, r5, r6, pc}
   1c2b0:	2b00      	cmp	r3, #0
   1c2b2:	da04      	bge.n	1c2be <_puts_r+0x86>
   1c2b4:	69a2      	ldr	r2, [r4, #24]
   1c2b6:	4293      	cmp	r3, r2
   1c2b8:	db06      	blt.n	1c2c8 <_puts_r+0x90>
   1c2ba:	290a      	cmp	r1, #10
   1c2bc:	d004      	beq.n	1c2c8 <_puts_r+0x90>
   1c2be:	6823      	ldr	r3, [r4, #0]
   1c2c0:	1c5a      	adds	r2, r3, #1
   1c2c2:	6022      	str	r2, [r4, #0]
   1c2c4:	7019      	strb	r1, [r3, #0]
   1c2c6:	e7cf      	b.n	1c268 <_puts_r+0x30>
   1c2c8:	4622      	mov	r2, r4
   1c2ca:	4628      	mov	r0, r5
   1c2cc:	f001 fcdc 	bl	1dc88 <__swbuf_r>
   1c2d0:	3001      	adds	r0, #1
   1c2d2:	d1c9      	bne.n	1c268 <_puts_r+0x30>
   1c2d4:	e7e9      	b.n	1c2aa <_puts_r+0x72>
   1c2d6:	200a      	movs	r0, #10
   1c2d8:	6823      	ldr	r3, [r4, #0]
   1c2da:	1c5a      	adds	r2, r3, #1
   1c2dc:	6022      	str	r2, [r4, #0]
   1c2de:	7018      	strb	r0, [r3, #0]
   1c2e0:	bd70      	pop	{r4, r5, r6, pc}
   1c2e2:	bf00      	nop
   1c2e4:	0002236c 	.word	0x0002236c
   1c2e8:	0002238c 	.word	0x0002238c
   1c2ec:	0002234c 	.word	0x0002234c

0001c2f0 <puts>:
puts():
   1c2f0:	4b02      	ldr	r3, [pc, #8]	; (1c2fc <puts+0xc>)
   1c2f2:	4601      	mov	r1, r0
   1c2f4:	6818      	ldr	r0, [r3, #0]
   1c2f6:	f7ff bf9f 	b.w	1c238 <_puts_r>
   1c2fa:	bf00      	nop
   1c2fc:	2007c0e4 	.word	0x2007c0e4

0001c300 <srand>:
srand():
   1c300:	b538      	push	{r3, r4, r5, lr}
   1c302:	4b12      	ldr	r3, [pc, #72]	; (1c34c <srand+0x4c>)
   1c304:	4605      	mov	r5, r0
   1c306:	681c      	ldr	r4, [r3, #0]
   1c308:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1c30a:	b9d3      	cbnz	r3, 1c342 <srand+0x42>
   1c30c:	2018      	movs	r0, #24
   1c30e:	f7fe fd6b 	bl	1ade8 <malloc>
   1c312:	f243 330e 	movw	r3, #13070	; 0x330e
   1c316:	63a0      	str	r0, [r4, #56]	; 0x38
   1c318:	8003      	strh	r3, [r0, #0]
   1c31a:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1c31e:	8043      	strh	r3, [r0, #2]
   1c320:	f241 2334 	movw	r3, #4660	; 0x1234
   1c324:	8083      	strh	r3, [r0, #4]
   1c326:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1c32a:	80c3      	strh	r3, [r0, #6]
   1c32c:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1c330:	8103      	strh	r3, [r0, #8]
   1c332:	2305      	movs	r3, #5
   1c334:	8143      	strh	r3, [r0, #10]
   1c336:	230b      	movs	r3, #11
   1c338:	2201      	movs	r2, #1
   1c33a:	8183      	strh	r3, [r0, #12]
   1c33c:	2300      	movs	r3, #0
   1c33e:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1c342:	2200      	movs	r2, #0
   1c344:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1c346:	611d      	str	r5, [r3, #16]
   1c348:	615a      	str	r2, [r3, #20]
   1c34a:	bd38      	pop	{r3, r4, r5, pc}
   1c34c:	2007c0e4 	.word	0x2007c0e4

0001c350 <rand>:
rand():
   1c350:	4b19      	ldr	r3, [pc, #100]	; (1c3b8 <rand+0x68>)
   1c352:	b510      	push	{r4, lr}
   1c354:	681c      	ldr	r4, [r3, #0]
   1c356:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1c358:	b9d3      	cbnz	r3, 1c390 <rand+0x40>
   1c35a:	2018      	movs	r0, #24
   1c35c:	f7fe fd44 	bl	1ade8 <malloc>
   1c360:	f243 330e 	movw	r3, #13070	; 0x330e
   1c364:	63a0      	str	r0, [r4, #56]	; 0x38
   1c366:	8003      	strh	r3, [r0, #0]
   1c368:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1c36c:	8043      	strh	r3, [r0, #2]
   1c36e:	f241 2334 	movw	r3, #4660	; 0x1234
   1c372:	8083      	strh	r3, [r0, #4]
   1c374:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1c378:	80c3      	strh	r3, [r0, #6]
   1c37a:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1c37e:	8103      	strh	r3, [r0, #8]
   1c380:	2305      	movs	r3, #5
   1c382:	8143      	strh	r3, [r0, #10]
   1c384:	230b      	movs	r3, #11
   1c386:	2201      	movs	r2, #1
   1c388:	8183      	strh	r3, [r0, #12]
   1c38a:	2300      	movs	r3, #0
   1c38c:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1c390:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   1c392:	480a      	ldr	r0, [pc, #40]	; (1c3bc <rand+0x6c>)
   1c394:	690a      	ldr	r2, [r1, #16]
   1c396:	694b      	ldr	r3, [r1, #20]
   1c398:	4350      	muls	r0, r2
   1c39a:	4c09      	ldr	r4, [pc, #36]	; (1c3c0 <rand+0x70>)
   1c39c:	fb04 0003 	mla	r0, r4, r3, r0
   1c3a0:	fba2 2304 	umull	r2, r3, r2, r4
   1c3a4:	3201      	adds	r2, #1
   1c3a6:	4403      	add	r3, r0
   1c3a8:	f143 0300 	adc.w	r3, r3, #0
   1c3ac:	e9c1 2304 	strd	r2, r3, [r1, #16]
   1c3b0:	f023 4000 	bic.w	r0, r3, #2147483648	; 0x80000000
   1c3b4:	bd10      	pop	{r4, pc}
   1c3b6:	bf00      	nop
   1c3b8:	2007c0e4 	.word	0x2007c0e4
   1c3bc:	5851f42d 	.word	0x5851f42d
   1c3c0:	4c957f2d 	.word	0x4c957f2d

0001c3c4 <realloc>:
realloc():
   1c3c4:	4b02      	ldr	r3, [pc, #8]	; (1c3d0 <realloc+0xc>)
   1c3c6:	460a      	mov	r2, r1
   1c3c8:	4601      	mov	r1, r0
   1c3ca:	6818      	ldr	r0, [r3, #0]
   1c3cc:	f003 bb9e 	b.w	1fb0c <_realloc_r>
   1c3d0:	2007c0e4 	.word	0x2007c0e4

0001c3d4 <lflush>:
lflush():
   1c3d4:	8983      	ldrh	r3, [r0, #12]
   1c3d6:	f003 0309 	and.w	r3, r3, #9
   1c3da:	2b09      	cmp	r3, #9
   1c3dc:	d101      	bne.n	1c3e2 <lflush+0xe>
   1c3de:	f7fe b9f5 	b.w	1a7cc <fflush>
   1c3e2:	2000      	movs	r0, #0
   1c3e4:	4770      	bx	lr
   1c3e6:	Address 0x000000000001c3e6 is out of bounds.


0001c3e8 <__srefill_r>:
__srefill_r():
   1c3e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1c3ea:	460c      	mov	r4, r1
   1c3ec:	4605      	mov	r5, r0
   1c3ee:	b118      	cbz	r0, 1c3f8 <__srefill_r+0x10>
   1c3f0:	6983      	ldr	r3, [r0, #24]
   1c3f2:	b90b      	cbnz	r3, 1c3f8 <__srefill_r+0x10>
   1c3f4:	f7fe fadc 	bl	1a9b0 <__sinit>
   1c3f8:	4b3c      	ldr	r3, [pc, #240]	; (1c4ec <__srefill_r+0x104>)
   1c3fa:	429c      	cmp	r4, r3
   1c3fc:	d10a      	bne.n	1c414 <__srefill_r+0x2c>
   1c3fe:	686c      	ldr	r4, [r5, #4]
   1c400:	2300      	movs	r3, #0
   1c402:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   1c406:	6063      	str	r3, [r4, #4]
   1c408:	b293      	uxth	r3, r2
   1c40a:	069e      	lsls	r6, r3, #26
   1c40c:	d50c      	bpl.n	1c428 <__srefill_r+0x40>
   1c40e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1c412:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1c414:	4b36      	ldr	r3, [pc, #216]	; (1c4f0 <__srefill_r+0x108>)
   1c416:	429c      	cmp	r4, r3
   1c418:	d101      	bne.n	1c41e <__srefill_r+0x36>
   1c41a:	68ac      	ldr	r4, [r5, #8]
   1c41c:	e7f0      	b.n	1c400 <__srefill_r+0x18>
   1c41e:	4b35      	ldr	r3, [pc, #212]	; (1c4f4 <__srefill_r+0x10c>)
   1c420:	429c      	cmp	r4, r3
   1c422:	bf08      	it	eq
   1c424:	68ec      	ldreq	r4, [r5, #12]
   1c426:	e7eb      	b.n	1c400 <__srefill_r+0x18>
   1c428:	0758      	lsls	r0, r3, #29
   1c42a:	d449      	bmi.n	1c4c0 <__srefill_r+0xd8>
   1c42c:	06d9      	lsls	r1, r3, #27
   1c42e:	d405      	bmi.n	1c43c <__srefill_r+0x54>
   1c430:	2309      	movs	r3, #9
   1c432:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1c436:	602b      	str	r3, [r5, #0]
   1c438:	81a2      	strh	r2, [r4, #12]
   1c43a:	e7e8      	b.n	1c40e <__srefill_r+0x26>
   1c43c:	071a      	lsls	r2, r3, #28
   1c43e:	d50b      	bpl.n	1c458 <__srefill_r+0x70>
   1c440:	4621      	mov	r1, r4
   1c442:	4628      	mov	r0, r5
   1c444:	f7fe f998 	bl	1a778 <_fflush_r>
   1c448:	2800      	cmp	r0, #0
   1c44a:	d1e0      	bne.n	1c40e <__srefill_r+0x26>
   1c44c:	89a3      	ldrh	r3, [r4, #12]
   1c44e:	60a0      	str	r0, [r4, #8]
   1c450:	f023 0308 	bic.w	r3, r3, #8
   1c454:	81a3      	strh	r3, [r4, #12]
   1c456:	61a0      	str	r0, [r4, #24]
   1c458:	89a3      	ldrh	r3, [r4, #12]
   1c45a:	f043 0304 	orr.w	r3, r3, #4
   1c45e:	81a3      	strh	r3, [r4, #12]
   1c460:	6923      	ldr	r3, [r4, #16]
   1c462:	b91b      	cbnz	r3, 1c46c <__srefill_r+0x84>
   1c464:	4621      	mov	r1, r4
   1c466:	4628      	mov	r0, r5
   1c468:	f7fe fc7e 	bl	1ad68 <__smakebuf_r>
   1c46c:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
   1c470:	b2be      	uxth	r6, r7
   1c472:	07b3      	lsls	r3, r6, #30
   1c474:	d00f      	beq.n	1c496 <__srefill_r+0xae>
   1c476:	2301      	movs	r3, #1
   1c478:	81a3      	strh	r3, [r4, #12]
   1c47a:	4b1f      	ldr	r3, [pc, #124]	; (1c4f8 <__srefill_r+0x110>)
   1c47c:	491f      	ldr	r1, [pc, #124]	; (1c4fc <__srefill_r+0x114>)
   1c47e:	6818      	ldr	r0, [r3, #0]
   1c480:	f006 0609 	and.w	r6, r6, #9
   1c484:	f7fe fbdc 	bl	1ac40 <_fwalk>
   1c488:	2e09      	cmp	r6, #9
   1c48a:	81a7      	strh	r7, [r4, #12]
   1c48c:	d103      	bne.n	1c496 <__srefill_r+0xae>
   1c48e:	4621      	mov	r1, r4
   1c490:	4628      	mov	r0, r5
   1c492:	f7fe f8e9 	bl	1a668 <__sflush_r>
   1c496:	6922      	ldr	r2, [r4, #16]
   1c498:	6a66      	ldr	r6, [r4, #36]	; 0x24
   1c49a:	6022      	str	r2, [r4, #0]
   1c49c:	6963      	ldr	r3, [r4, #20]
   1c49e:	6a21      	ldr	r1, [r4, #32]
   1c4a0:	4628      	mov	r0, r5
   1c4a2:	47b0      	blx	r6
   1c4a4:	2800      	cmp	r0, #0
   1c4a6:	6060      	str	r0, [r4, #4]
   1c4a8:	dc1d      	bgt.n	1c4e6 <__srefill_r+0xfe>
   1c4aa:	bf18      	it	ne
   1c4ac:	2200      	movne	r2, #0
   1c4ae:	89a3      	ldrh	r3, [r4, #12]
   1c4b0:	bf16      	itet	ne
   1c4b2:	6062      	strne	r2, [r4, #4]
   1c4b4:	f043 0320 	orreq.w	r3, r3, #32
   1c4b8:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
   1c4bc:	81a3      	strh	r3, [r4, #12]
   1c4be:	e7a6      	b.n	1c40e <__srefill_r+0x26>
   1c4c0:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1c4c2:	2900      	cmp	r1, #0
   1c4c4:	d0cc      	beq.n	1c460 <__srefill_r+0x78>
   1c4c6:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1c4ca:	4299      	cmp	r1, r3
   1c4cc:	d002      	beq.n	1c4d4 <__srefill_r+0xec>
   1c4ce:	4628      	mov	r0, r5
   1c4d0:	f7fe ff6a 	bl	1b3a8 <_free_r>
   1c4d4:	2000      	movs	r0, #0
   1c4d6:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1c4d8:	6360      	str	r0, [r4, #52]	; 0x34
   1c4da:	6063      	str	r3, [r4, #4]
   1c4dc:	2b00      	cmp	r3, #0
   1c4de:	d0bf      	beq.n	1c460 <__srefill_r+0x78>
   1c4e0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1c4e2:	6023      	str	r3, [r4, #0]
   1c4e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1c4e6:	2000      	movs	r0, #0
   1c4e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1c4ea:	bf00      	nop
   1c4ec:	0002236c 	.word	0x0002236c
   1c4f0:	0002238c 	.word	0x0002238c
   1c4f4:	0002234c 	.word	0x0002234c
   1c4f8:	000223ac 	.word	0x000223ac
   1c4fc:	0001c3d5 	.word	0x0001c3d5

0001c500 <__srget_r>:
__srget_r():
   1c500:	b538      	push	{r3, r4, r5, lr}
   1c502:	460c      	mov	r4, r1
   1c504:	4605      	mov	r5, r0
   1c506:	b118      	cbz	r0, 1c510 <__srget_r+0x10>
   1c508:	6983      	ldr	r3, [r0, #24]
   1c50a:	b90b      	cbnz	r3, 1c510 <__srget_r+0x10>
   1c50c:	f7fe fa50 	bl	1a9b0 <__sinit>
   1c510:	4b0e      	ldr	r3, [pc, #56]	; (1c54c <__srget_r+0x4c>)
   1c512:	429c      	cmp	r4, r3
   1c514:	d10d      	bne.n	1c532 <__srget_r+0x32>
   1c516:	686c      	ldr	r4, [r5, #4]
   1c518:	4621      	mov	r1, r4
   1c51a:	4628      	mov	r0, r5
   1c51c:	f7ff ff64 	bl	1c3e8 <__srefill_r>
   1c520:	b988      	cbnz	r0, 1c546 <__srget_r+0x46>
   1c522:	6863      	ldr	r3, [r4, #4]
   1c524:	3b01      	subs	r3, #1
   1c526:	6063      	str	r3, [r4, #4]
   1c528:	6823      	ldr	r3, [r4, #0]
   1c52a:	1c5a      	adds	r2, r3, #1
   1c52c:	6022      	str	r2, [r4, #0]
   1c52e:	7818      	ldrb	r0, [r3, #0]
   1c530:	bd38      	pop	{r3, r4, r5, pc}
   1c532:	4b07      	ldr	r3, [pc, #28]	; (1c550 <__srget_r+0x50>)
   1c534:	429c      	cmp	r4, r3
   1c536:	d101      	bne.n	1c53c <__srget_r+0x3c>
   1c538:	68ac      	ldr	r4, [r5, #8]
   1c53a:	e7ed      	b.n	1c518 <__srget_r+0x18>
   1c53c:	4b05      	ldr	r3, [pc, #20]	; (1c554 <__srget_r+0x54>)
   1c53e:	429c      	cmp	r4, r3
   1c540:	bf08      	it	eq
   1c542:	68ec      	ldreq	r4, [r5, #12]
   1c544:	e7e8      	b.n	1c518 <__srget_r+0x18>
   1c546:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1c54a:	bd38      	pop	{r3, r4, r5, pc}
   1c54c:	0002236c 	.word	0x0002236c
   1c550:	0002238c 	.word	0x0002238c
   1c554:	0002234c 	.word	0x0002234c

0001c558 <_sbrk_r>:
_sbrk_r():
   1c558:	b538      	push	{r3, r4, r5, lr}
   1c55a:	2300      	movs	r3, #0
   1c55c:	4c05      	ldr	r4, [pc, #20]	; (1c574 <_sbrk_r+0x1c>)
   1c55e:	4605      	mov	r5, r0
   1c560:	4608      	mov	r0, r1
   1c562:	6023      	str	r3, [r4, #0]
   1c564:	f7fb ff6a 	bl	1843c <_sbrk>
   1c568:	1c43      	adds	r3, r0, #1
   1c56a:	d102      	bne.n	1c572 <_sbrk_r+0x1a>
   1c56c:	6823      	ldr	r3, [r4, #0]
   1c56e:	b103      	cbz	r3, 1c572 <_sbrk_r+0x1a>
   1c570:	602b      	str	r3, [r5, #0]
   1c572:	bd38      	pop	{r3, r4, r5, pc}
   1c574:	2007d064 	.word	0x2007d064

0001c578 <iscanf>:
scanf():
   1c578:	b40f      	push	{r0, r1, r2, r3}
   1c57a:	4b0a      	ldr	r3, [pc, #40]	; (1c5a4 <iscanf+0x2c>)
   1c57c:	b513      	push	{r0, r1, r4, lr}
   1c57e:	681c      	ldr	r4, [r3, #0]
   1c580:	b124      	cbz	r4, 1c58c <iscanf+0x14>
   1c582:	69a3      	ldr	r3, [r4, #24]
   1c584:	b913      	cbnz	r3, 1c58c <iscanf+0x14>
   1c586:	4620      	mov	r0, r4
   1c588:	f7fe fa12 	bl	1a9b0 <__sinit>
   1c58c:	ab05      	add	r3, sp, #20
   1c58e:	9a04      	ldr	r2, [sp, #16]
   1c590:	6861      	ldr	r1, [r4, #4]
   1c592:	4620      	mov	r0, r4
   1c594:	9301      	str	r3, [sp, #4]
   1c596:	f004 f86f 	bl	20678 <_vfiscanf_r>
   1c59a:	b002      	add	sp, #8
   1c59c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1c5a0:	b004      	add	sp, #16
   1c5a2:	4770      	bx	lr
   1c5a4:	2007c0e4 	.word	0x2007c0e4

0001c5a8 <setvbuf>:
setvbuf():
   1c5a8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1c5ac:	461d      	mov	r5, r3
   1c5ae:	4b51      	ldr	r3, [pc, #324]	; (1c6f4 <setvbuf+0x14c>)
   1c5b0:	4604      	mov	r4, r0
   1c5b2:	681e      	ldr	r6, [r3, #0]
   1c5b4:	460f      	mov	r7, r1
   1c5b6:	4690      	mov	r8, r2
   1c5b8:	b126      	cbz	r6, 1c5c4 <setvbuf+0x1c>
   1c5ba:	69b3      	ldr	r3, [r6, #24]
   1c5bc:	b913      	cbnz	r3, 1c5c4 <setvbuf+0x1c>
   1c5be:	4630      	mov	r0, r6
   1c5c0:	f7fe f9f6 	bl	1a9b0 <__sinit>
   1c5c4:	4b4c      	ldr	r3, [pc, #304]	; (1c6f8 <setvbuf+0x150>)
   1c5c6:	429c      	cmp	r4, r3
   1c5c8:	d152      	bne.n	1c670 <setvbuf+0xc8>
   1c5ca:	6874      	ldr	r4, [r6, #4]
   1c5cc:	f1b8 0f02 	cmp.w	r8, #2
   1c5d0:	d006      	beq.n	1c5e0 <setvbuf+0x38>
   1c5d2:	f1b8 0f01 	cmp.w	r8, #1
   1c5d6:	f200 8089 	bhi.w	1c6ec <setvbuf+0x144>
   1c5da:	2d00      	cmp	r5, #0
   1c5dc:	f2c0 8086 	blt.w	1c6ec <setvbuf+0x144>
   1c5e0:	4621      	mov	r1, r4
   1c5e2:	4630      	mov	r0, r6
   1c5e4:	f7fe f8c8 	bl	1a778 <_fflush_r>
   1c5e8:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1c5ea:	b141      	cbz	r1, 1c5fe <setvbuf+0x56>
   1c5ec:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1c5f0:	4299      	cmp	r1, r3
   1c5f2:	d002      	beq.n	1c5fa <setvbuf+0x52>
   1c5f4:	4630      	mov	r0, r6
   1c5f6:	f7fe fed7 	bl	1b3a8 <_free_r>
   1c5fa:	2300      	movs	r3, #0
   1c5fc:	6363      	str	r3, [r4, #52]	; 0x34
   1c5fe:	2300      	movs	r3, #0
   1c600:	61a3      	str	r3, [r4, #24]
   1c602:	6063      	str	r3, [r4, #4]
   1c604:	89a3      	ldrh	r3, [r4, #12]
   1c606:	061b      	lsls	r3, r3, #24
   1c608:	d503      	bpl.n	1c612 <setvbuf+0x6a>
   1c60a:	6921      	ldr	r1, [r4, #16]
   1c60c:	4630      	mov	r0, r6
   1c60e:	f7fe fecb 	bl	1b3a8 <_free_r>
   1c612:	89a3      	ldrh	r3, [r4, #12]
   1c614:	f1b8 0f02 	cmp.w	r8, #2
   1c618:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
   1c61c:	f023 0303 	bic.w	r3, r3, #3
   1c620:	81a3      	strh	r3, [r4, #12]
   1c622:	d05d      	beq.n	1c6e0 <setvbuf+0x138>
   1c624:	ab01      	add	r3, sp, #4
   1c626:	466a      	mov	r2, sp
   1c628:	4621      	mov	r1, r4
   1c62a:	4630      	mov	r0, r6
   1c62c:	f7fe fb78 	bl	1ad20 <__swhatbuf_r>
   1c630:	89a3      	ldrh	r3, [r4, #12]
   1c632:	4318      	orrs	r0, r3
   1c634:	81a0      	strh	r0, [r4, #12]
   1c636:	bb2d      	cbnz	r5, 1c684 <setvbuf+0xdc>
   1c638:	9d00      	ldr	r5, [sp, #0]
   1c63a:	4628      	mov	r0, r5
   1c63c:	f7fe fbd4 	bl	1ade8 <malloc>
   1c640:	4607      	mov	r7, r0
   1c642:	2800      	cmp	r0, #0
   1c644:	d14e      	bne.n	1c6e4 <setvbuf+0x13c>
   1c646:	f8dd 9000 	ldr.w	r9, [sp]
   1c64a:	45a9      	cmp	r9, r5
   1c64c:	d13c      	bne.n	1c6c8 <setvbuf+0x120>
   1c64e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1c652:	89a3      	ldrh	r3, [r4, #12]
   1c654:	f043 0302 	orr.w	r3, r3, #2
   1c658:	81a3      	strh	r3, [r4, #12]
   1c65a:	2300      	movs	r3, #0
   1c65c:	60a3      	str	r3, [r4, #8]
   1c65e:	f104 0347 	add.w	r3, r4, #71	; 0x47
   1c662:	6023      	str	r3, [r4, #0]
   1c664:	6123      	str	r3, [r4, #16]
   1c666:	2301      	movs	r3, #1
   1c668:	6163      	str	r3, [r4, #20]
   1c66a:	b003      	add	sp, #12
   1c66c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1c670:	4b22      	ldr	r3, [pc, #136]	; (1c6fc <setvbuf+0x154>)
   1c672:	429c      	cmp	r4, r3
   1c674:	d101      	bne.n	1c67a <setvbuf+0xd2>
   1c676:	68b4      	ldr	r4, [r6, #8]
   1c678:	e7a8      	b.n	1c5cc <setvbuf+0x24>
   1c67a:	4b21      	ldr	r3, [pc, #132]	; (1c700 <setvbuf+0x158>)
   1c67c:	429c      	cmp	r4, r3
   1c67e:	bf08      	it	eq
   1c680:	68f4      	ldreq	r4, [r6, #12]
   1c682:	e7a3      	b.n	1c5cc <setvbuf+0x24>
   1c684:	2f00      	cmp	r7, #0
   1c686:	d0d8      	beq.n	1c63a <setvbuf+0x92>
   1c688:	69b3      	ldr	r3, [r6, #24]
   1c68a:	b913      	cbnz	r3, 1c692 <setvbuf+0xea>
   1c68c:	4630      	mov	r0, r6
   1c68e:	f7fe f98f 	bl	1a9b0 <__sinit>
   1c692:	f1b8 0f01 	cmp.w	r8, #1
   1c696:	bf08      	it	eq
   1c698:	89a3      	ldrheq	r3, [r4, #12]
   1c69a:	6027      	str	r7, [r4, #0]
   1c69c:	bf04      	itt	eq
   1c69e:	f043 0301 	orreq.w	r3, r3, #1
   1c6a2:	81a3      	strheq	r3, [r4, #12]
   1c6a4:	89a3      	ldrh	r3, [r4, #12]
   1c6a6:	6127      	str	r7, [r4, #16]
   1c6a8:	f013 0008 	ands.w	r0, r3, #8
   1c6ac:	6165      	str	r5, [r4, #20]
   1c6ae:	d01b      	beq.n	1c6e8 <setvbuf+0x140>
   1c6b0:	f013 0001 	ands.w	r0, r3, #1
   1c6b4:	f04f 0300 	mov.w	r3, #0
   1c6b8:	bf1f      	itttt	ne
   1c6ba:	426d      	negne	r5, r5
   1c6bc:	60a3      	strne	r3, [r4, #8]
   1c6be:	61a5      	strne	r5, [r4, #24]
   1c6c0:	4618      	movne	r0, r3
   1c6c2:	bf08      	it	eq
   1c6c4:	60a5      	streq	r5, [r4, #8]
   1c6c6:	e7d0      	b.n	1c66a <setvbuf+0xc2>
   1c6c8:	4648      	mov	r0, r9
   1c6ca:	f7fe fb8d 	bl	1ade8 <malloc>
   1c6ce:	4607      	mov	r7, r0
   1c6d0:	2800      	cmp	r0, #0
   1c6d2:	d0bc      	beq.n	1c64e <setvbuf+0xa6>
   1c6d4:	89a3      	ldrh	r3, [r4, #12]
   1c6d6:	464d      	mov	r5, r9
   1c6d8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1c6dc:	81a3      	strh	r3, [r4, #12]
   1c6de:	e7d3      	b.n	1c688 <setvbuf+0xe0>
   1c6e0:	2000      	movs	r0, #0
   1c6e2:	e7b6      	b.n	1c652 <setvbuf+0xaa>
   1c6e4:	46a9      	mov	r9, r5
   1c6e6:	e7f5      	b.n	1c6d4 <setvbuf+0x12c>
   1c6e8:	60a0      	str	r0, [r4, #8]
   1c6ea:	e7be      	b.n	1c66a <setvbuf+0xc2>
   1c6ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1c6f0:	e7bb      	b.n	1c66a <setvbuf+0xc2>
   1c6f2:	bf00      	nop
   1c6f4:	2007c0e4 	.word	0x2007c0e4
   1c6f8:	0002236c 	.word	0x0002236c
   1c6fc:	0002238c 	.word	0x0002238c
   1c700:	0002234c 	.word	0x0002234c

0001c704 <nanf>:
nanf():
   1c704:	4800      	ldr	r0, [pc, #0]	; (1c708 <nanf+0x4>)
   1c706:	4770      	bx	lr
   1c708:	7fc00000 	.word	0x7fc00000

0001c70c <_raise_r>:
_raise_r():
   1c70c:	291f      	cmp	r1, #31
   1c70e:	b538      	push	{r3, r4, r5, lr}
   1c710:	4604      	mov	r4, r0
   1c712:	460d      	mov	r5, r1
   1c714:	d904      	bls.n	1c720 <_raise_r+0x14>
   1c716:	2316      	movs	r3, #22
   1c718:	6003      	str	r3, [r0, #0]
   1c71a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1c71e:	bd38      	pop	{r3, r4, r5, pc}
   1c720:	6c42      	ldr	r2, [r0, #68]	; 0x44
   1c722:	b112      	cbz	r2, 1c72a <_raise_r+0x1e>
   1c724:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
   1c728:	b94b      	cbnz	r3, 1c73e <_raise_r+0x32>
   1c72a:	4620      	mov	r0, r4
   1c72c:	f000 f830 	bl	1c790 <_getpid_r>
   1c730:	462a      	mov	r2, r5
   1c732:	4601      	mov	r1, r0
   1c734:	4620      	mov	r0, r4
   1c736:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1c73a:	f000 b817 	b.w	1c76c <_kill_r>
   1c73e:	2b01      	cmp	r3, #1
   1c740:	d00a      	beq.n	1c758 <_raise_r+0x4c>
   1c742:	1c59      	adds	r1, r3, #1
   1c744:	d103      	bne.n	1c74e <_raise_r+0x42>
   1c746:	2316      	movs	r3, #22
   1c748:	6003      	str	r3, [r0, #0]
   1c74a:	2001      	movs	r0, #1
   1c74c:	bd38      	pop	{r3, r4, r5, pc}
   1c74e:	2400      	movs	r4, #0
   1c750:	4628      	mov	r0, r5
   1c752:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
   1c756:	4798      	blx	r3
   1c758:	2000      	movs	r0, #0
   1c75a:	bd38      	pop	{r3, r4, r5, pc}

0001c75c <raise>:
raise():
   1c75c:	4b02      	ldr	r3, [pc, #8]	; (1c768 <raise+0xc>)
   1c75e:	4601      	mov	r1, r0
   1c760:	6818      	ldr	r0, [r3, #0]
   1c762:	f7ff bfd3 	b.w	1c70c <_raise_r>
   1c766:	bf00      	nop
   1c768:	2007c0e4 	.word	0x2007c0e4

0001c76c <_kill_r>:
_kill_r():
   1c76c:	b538      	push	{r3, r4, r5, lr}
   1c76e:	2300      	movs	r3, #0
   1c770:	4c06      	ldr	r4, [pc, #24]	; (1c78c <_kill_r+0x20>)
   1c772:	4605      	mov	r5, r0
   1c774:	4608      	mov	r0, r1
   1c776:	4611      	mov	r1, r2
   1c778:	6023      	str	r3, [r4, #0]
   1c77a:	f7fb fc77 	bl	1806c <_kill>
   1c77e:	1c43      	adds	r3, r0, #1
   1c780:	d102      	bne.n	1c788 <_kill_r+0x1c>
   1c782:	6823      	ldr	r3, [r4, #0]
   1c784:	b103      	cbz	r3, 1c788 <_kill_r+0x1c>
   1c786:	602b      	str	r3, [r5, #0]
   1c788:	bd38      	pop	{r3, r4, r5, pc}
   1c78a:	bf00      	nop
   1c78c:	2007d064 	.word	0x2007d064

0001c790 <_getpid_r>:
_getpid_r():
   1c790:	f7fb bc7c 	b.w	1808c <_getpid>

0001c794 <siprintf>:
siprintf():
   1c794:	b40e      	push	{r1, r2, r3}
   1c796:	f44f 7102 	mov.w	r1, #520	; 0x208
   1c79a:	b500      	push	{lr}
   1c79c:	b09c      	sub	sp, #112	; 0x70
   1c79e:	f8ad 1014 	strh.w	r1, [sp, #20]
   1c7a2:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   1c7a6:	9104      	str	r1, [sp, #16]
   1c7a8:	9107      	str	r1, [sp, #28]
   1c7aa:	f64f 71ff 	movw	r1, #65535	; 0xffff
   1c7ae:	ab1d      	add	r3, sp, #116	; 0x74
   1c7b0:	9002      	str	r0, [sp, #8]
   1c7b2:	9006      	str	r0, [sp, #24]
   1c7b4:	4808      	ldr	r0, [pc, #32]	; (1c7d8 <siprintf+0x44>)
   1c7b6:	f853 2b04 	ldr.w	r2, [r3], #4
   1c7ba:	f8ad 1016 	strh.w	r1, [sp, #22]
   1c7be:	6800      	ldr	r0, [r0, #0]
   1c7c0:	a902      	add	r1, sp, #8
   1c7c2:	9301      	str	r3, [sp, #4]
   1c7c4:	f003 fa24 	bl	1fc10 <_svfiprintf_r>
   1c7c8:	2200      	movs	r2, #0
   1c7ca:	9b02      	ldr	r3, [sp, #8]
   1c7cc:	701a      	strb	r2, [r3, #0]
   1c7ce:	b01c      	add	sp, #112	; 0x70
   1c7d0:	f85d eb04 	ldr.w	lr, [sp], #4
   1c7d4:	b003      	add	sp, #12
   1c7d6:	4770      	bx	lr
   1c7d8:	2007c0e4 	.word	0x2007c0e4

0001c7dc <siscanf>:
siscanf():
   1c7dc:	b40e      	push	{r1, r2, r3}
   1c7de:	f44f 7201 	mov.w	r2, #516	; 0x204
   1c7e2:	b530      	push	{r4, r5, lr}
   1c7e4:	b09c      	sub	sp, #112	; 0x70
   1c7e6:	ac1f      	add	r4, sp, #124	; 0x7c
   1c7e8:	f854 5b04 	ldr.w	r5, [r4], #4
   1c7ec:	f8ad 2014 	strh.w	r2, [sp, #20]
   1c7f0:	9002      	str	r0, [sp, #8]
   1c7f2:	9006      	str	r0, [sp, #24]
   1c7f4:	f000 f881 	bl	1c8fa <strlen>
   1c7f8:	4b0b      	ldr	r3, [pc, #44]	; (1c828 <siscanf+0x4c>)
   1c7fa:	9003      	str	r0, [sp, #12]
   1c7fc:	930b      	str	r3, [sp, #44]	; 0x2c
   1c7fe:	2300      	movs	r3, #0
   1c800:	930f      	str	r3, [sp, #60]	; 0x3c
   1c802:	9314      	str	r3, [sp, #80]	; 0x50
   1c804:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1c808:	9007      	str	r0, [sp, #28]
   1c80a:	4808      	ldr	r0, [pc, #32]	; (1c82c <siscanf+0x50>)
   1c80c:	f8ad 3016 	strh.w	r3, [sp, #22]
   1c810:	462a      	mov	r2, r5
   1c812:	4623      	mov	r3, r4
   1c814:	a902      	add	r1, sp, #8
   1c816:	6800      	ldr	r0, [r0, #0]
   1c818:	9401      	str	r4, [sp, #4]
   1c81a:	f003 fb47 	bl	1feac <__ssvfiscanf_r>
   1c81e:	b01c      	add	sp, #112	; 0x70
   1c820:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   1c824:	b003      	add	sp, #12
   1c826:	4770      	bx	lr
   1c828:	0001c853 	.word	0x0001c853
   1c82c:	2007c0e4 	.word	0x2007c0e4

0001c830 <__sread>:
__sread():
   1c830:	b510      	push	{r4, lr}
   1c832:	460c      	mov	r4, r1
   1c834:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1c838:	f004 f8a0 	bl	2097c <_read_r>
   1c83c:	2800      	cmp	r0, #0
   1c83e:	bfab      	itete	ge
   1c840:	6d63      	ldrge	r3, [r4, #84]	; 0x54
   1c842:	89a3      	ldrhlt	r3, [r4, #12]
   1c844:	181b      	addge	r3, r3, r0
   1c846:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
   1c84a:	bfac      	ite	ge
   1c84c:	6563      	strge	r3, [r4, #84]	; 0x54
   1c84e:	81a3      	strhlt	r3, [r4, #12]
   1c850:	bd10      	pop	{r4, pc}

0001c852 <__seofread>:
__seofread():
   1c852:	2000      	movs	r0, #0
   1c854:	4770      	bx	lr

0001c856 <__swrite>:
__swrite():
   1c856:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c85a:	461f      	mov	r7, r3
   1c85c:	898b      	ldrh	r3, [r1, #12]
   1c85e:	4605      	mov	r5, r0
   1c860:	05db      	lsls	r3, r3, #23
   1c862:	460c      	mov	r4, r1
   1c864:	4616      	mov	r6, r2
   1c866:	d505      	bpl.n	1c874 <__swrite+0x1e>
   1c868:	2302      	movs	r3, #2
   1c86a:	2200      	movs	r2, #0
   1c86c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1c870:	f002 fd52 	bl	1f318 <_lseek_r>
   1c874:	89a3      	ldrh	r3, [r4, #12]
   1c876:	4632      	mov	r2, r6
   1c878:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   1c87c:	81a3      	strh	r3, [r4, #12]
   1c87e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1c882:	463b      	mov	r3, r7
   1c884:	4628      	mov	r0, r5
   1c886:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c88a:	f001 ba5d 	b.w	1dd48 <_write_r>

0001c88e <__sseek>:
__sseek():
   1c88e:	b510      	push	{r4, lr}
   1c890:	460c      	mov	r4, r1
   1c892:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1c896:	f002 fd3f 	bl	1f318 <_lseek_r>
   1c89a:	1c43      	adds	r3, r0, #1
   1c89c:	89a3      	ldrh	r3, [r4, #12]
   1c89e:	bf15      	itete	ne
   1c8a0:	6560      	strne	r0, [r4, #84]	; 0x54
   1c8a2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   1c8a6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   1c8aa:	81a3      	strheq	r3, [r4, #12]
   1c8ac:	bf18      	it	ne
   1c8ae:	81a3      	strhne	r3, [r4, #12]
   1c8b0:	bd10      	pop	{r4, pc}

0001c8b2 <__sclose>:
__sclose():
   1c8b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1c8b6:	f001 bac7 	b.w	1de48 <_close_r>

0001c8ba <strchr>:
strchr():
   1c8ba:	b2c9      	uxtb	r1, r1
   1c8bc:	4603      	mov	r3, r0
   1c8be:	f810 2b01 	ldrb.w	r2, [r0], #1
   1c8c2:	b11a      	cbz	r2, 1c8cc <strchr+0x12>
   1c8c4:	4291      	cmp	r1, r2
   1c8c6:	d1f9      	bne.n	1c8bc <strchr+0x2>
   1c8c8:	4618      	mov	r0, r3
   1c8ca:	4770      	bx	lr
   1c8cc:	2900      	cmp	r1, #0
   1c8ce:	bf0c      	ite	eq
   1c8d0:	4618      	moveq	r0, r3
   1c8d2:	2000      	movne	r0, #0
   1c8d4:	4770      	bx	lr

0001c8d6 <strcmp>:
strcmp():
   1c8d6:	f810 2b01 	ldrb.w	r2, [r0], #1
   1c8da:	f811 3b01 	ldrb.w	r3, [r1], #1
   1c8de:	2a01      	cmp	r2, #1
   1c8e0:	bf28      	it	cs
   1c8e2:	429a      	cmpcs	r2, r3
   1c8e4:	d0f7      	beq.n	1c8d6 <strcmp>
   1c8e6:	1ad0      	subs	r0, r2, r3
   1c8e8:	4770      	bx	lr

0001c8ea <strcpy>:
strcpy():
   1c8ea:	4603      	mov	r3, r0
   1c8ec:	f811 2b01 	ldrb.w	r2, [r1], #1
   1c8f0:	f803 2b01 	strb.w	r2, [r3], #1
   1c8f4:	2a00      	cmp	r2, #0
   1c8f6:	d1f9      	bne.n	1c8ec <strcpy+0x2>
   1c8f8:	4770      	bx	lr

0001c8fa <strlen>:
strlen():
   1c8fa:	4603      	mov	r3, r0
   1c8fc:	f813 2b01 	ldrb.w	r2, [r3], #1
   1c900:	2a00      	cmp	r2, #0
   1c902:	d1fb      	bne.n	1c8fc <strlen+0x2>
   1c904:	1a18      	subs	r0, r3, r0
   1c906:	3801      	subs	r0, #1
   1c908:	4770      	bx	lr

0001c90a <strncmp>:
strncmp():
   1c90a:	b510      	push	{r4, lr}
   1c90c:	b16a      	cbz	r2, 1c92a <strncmp+0x20>
   1c90e:	3901      	subs	r1, #1
   1c910:	1884      	adds	r4, r0, r2
   1c912:	f810 3b01 	ldrb.w	r3, [r0], #1
   1c916:	f811 2f01 	ldrb.w	r2, [r1, #1]!
   1c91a:	4293      	cmp	r3, r2
   1c91c:	d103      	bne.n	1c926 <strncmp+0x1c>
   1c91e:	42a0      	cmp	r0, r4
   1c920:	d001      	beq.n	1c926 <strncmp+0x1c>
   1c922:	2b00      	cmp	r3, #0
   1c924:	d1f5      	bne.n	1c912 <strncmp+0x8>
   1c926:	1a98      	subs	r0, r3, r2
   1c928:	bd10      	pop	{r4, pc}
   1c92a:	4610      	mov	r0, r2
   1c92c:	bd10      	pop	{r4, pc}

0001c92e <strncpy>:
strncpy():
   1c92e:	b570      	push	{r4, r5, r6, lr}
   1c930:	4604      	mov	r4, r0
   1c932:	b902      	cbnz	r2, 1c936 <strncpy+0x8>
   1c934:	bd70      	pop	{r4, r5, r6, pc}
   1c936:	4623      	mov	r3, r4
   1c938:	f811 5b01 	ldrb.w	r5, [r1], #1
   1c93c:	1e56      	subs	r6, r2, #1
   1c93e:	f803 5b01 	strb.w	r5, [r3], #1
   1c942:	b91d      	cbnz	r5, 1c94c <strncpy+0x1e>
   1c944:	4414      	add	r4, r2
   1c946:	42a3      	cmp	r3, r4
   1c948:	d103      	bne.n	1c952 <strncpy+0x24>
   1c94a:	bd70      	pop	{r4, r5, r6, pc}
   1c94c:	461c      	mov	r4, r3
   1c94e:	4632      	mov	r2, r6
   1c950:	e7ef      	b.n	1c932 <strncpy+0x4>
   1c952:	f803 5b01 	strb.w	r5, [r3], #1
   1c956:	e7f6      	b.n	1c946 <strncpy+0x18>

0001c958 <strstr>:
strstr():
   1c958:	b5f0      	push	{r4, r5, r6, r7, lr}
   1c95a:	7803      	ldrb	r3, [r0, #0]
   1c95c:	b133      	cbz	r3, 1c96c <strstr+0x14>
   1c95e:	4603      	mov	r3, r0
   1c960:	4618      	mov	r0, r3
   1c962:	1c5e      	adds	r6, r3, #1
   1c964:	781b      	ldrb	r3, [r3, #0]
   1c966:	b933      	cbnz	r3, 1c976 <strstr+0x1e>
   1c968:	4618      	mov	r0, r3
   1c96a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1c96c:	780b      	ldrb	r3, [r1, #0]
   1c96e:	2b00      	cmp	r3, #0
   1c970:	bf18      	it	ne
   1c972:	2000      	movne	r0, #0
   1c974:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1c976:	1e4d      	subs	r5, r1, #1
   1c978:	1e44      	subs	r4, r0, #1
   1c97a:	f815 2f01 	ldrb.w	r2, [r5, #1]!
   1c97e:	2a00      	cmp	r2, #0
   1c980:	d0f3      	beq.n	1c96a <strstr+0x12>
   1c982:	f814 7f01 	ldrb.w	r7, [r4, #1]!
   1c986:	4633      	mov	r3, r6
   1c988:	4297      	cmp	r7, r2
   1c98a:	d0f6      	beq.n	1c97a <strstr+0x22>
   1c98c:	e7e8      	b.n	1c960 <strstr+0x8>

0001c98e <sulp>:
sulp():
   1c98e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c992:	460f      	mov	r7, r1
   1c994:	4690      	mov	r8, r2
   1c996:	f002 ff91 	bl	1f8bc <__ulp>
   1c99a:	4604      	mov	r4, r0
   1c99c:	460d      	mov	r5, r1
   1c99e:	f1b8 0f00 	cmp.w	r8, #0
   1c9a2:	d011      	beq.n	1c9c8 <sulp+0x3a>
   1c9a4:	f3c7 530a 	ubfx	r3, r7, #20, #11
   1c9a8:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1c9ac:	2b00      	cmp	r3, #0
   1c9ae:	dd0b      	ble.n	1c9c8 <sulp+0x3a>
   1c9b0:	2400      	movs	r4, #0
   1c9b2:	051b      	lsls	r3, r3, #20
   1c9b4:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
   1c9b8:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
   1c9bc:	4622      	mov	r2, r4
   1c9be:	462b      	mov	r3, r5
   1c9c0:	f7fc ff56 	bl	19870 <__aeabi_dmul>
   1c9c4:	4604      	mov	r4, r0
   1c9c6:	460d      	mov	r5, r1
   1c9c8:	4620      	mov	r0, r4
   1c9ca:	4629      	mov	r1, r5
   1c9cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001c9d0 <_strtod_l>:
_strtod_l():
   1c9d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c9d4:	4699      	mov	r9, r3
   1c9d6:	2300      	movs	r3, #0
   1c9d8:	b09f      	sub	sp, #124	; 0x7c
   1c9da:	4680      	mov	r8, r0
   1c9dc:	4648      	mov	r0, r9
   1c9de:	460c      	mov	r4, r1
   1c9e0:	9215      	str	r2, [sp, #84]	; 0x54
   1c9e2:	931a      	str	r3, [sp, #104]	; 0x68
   1c9e4:	f002 fc88 	bl	1f2f8 <__localeconv_l>
   1c9e8:	4607      	mov	r7, r0
   1c9ea:	6800      	ldr	r0, [r0, #0]
   1c9ec:	f7ff ff85 	bl	1c8fa <strlen>
   1c9f0:	f04f 0a00 	mov.w	sl, #0
   1c9f4:	4605      	mov	r5, r0
   1c9f6:	f04f 0b00 	mov.w	fp, #0
   1c9fa:	9419      	str	r4, [sp, #100]	; 0x64
   1c9fc:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1c9fe:	781a      	ldrb	r2, [r3, #0]
   1ca00:	2a0d      	cmp	r2, #13
   1ca02:	d833      	bhi.n	1ca6c <_strtod_l+0x9c>
   1ca04:	2a09      	cmp	r2, #9
   1ca06:	d237      	bcs.n	1ca78 <_strtod_l+0xa8>
   1ca08:	2a00      	cmp	r2, #0
   1ca0a:	d03f      	beq.n	1ca8c <_strtod_l+0xbc>
   1ca0c:	2300      	movs	r3, #0
   1ca0e:	9309      	str	r3, [sp, #36]	; 0x24
   1ca10:	9e19      	ldr	r6, [sp, #100]	; 0x64
   1ca12:	7833      	ldrb	r3, [r6, #0]
   1ca14:	2b30      	cmp	r3, #48	; 0x30
   1ca16:	f040 8101 	bne.w	1cc1c <_strtod_l+0x24c>
   1ca1a:	7873      	ldrb	r3, [r6, #1]
   1ca1c:	2b58      	cmp	r3, #88	; 0x58
   1ca1e:	d001      	beq.n	1ca24 <_strtod_l+0x54>
   1ca20:	2b78      	cmp	r3, #120	; 0x78
   1ca22:	d16b      	bne.n	1cafc <_strtod_l+0x12c>
   1ca24:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1ca26:	f8cd 9008 	str.w	r9, [sp, #8]
   1ca2a:	9301      	str	r3, [sp, #4]
   1ca2c:	ab1a      	add	r3, sp, #104	; 0x68
   1ca2e:	9300      	str	r3, [sp, #0]
   1ca30:	4aaa      	ldr	r2, [pc, #680]	; (1ccdc <_strtod_l+0x30c>)
   1ca32:	ab1b      	add	r3, sp, #108	; 0x6c
   1ca34:	a919      	add	r1, sp, #100	; 0x64
   1ca36:	4640      	mov	r0, r8
   1ca38:	f002 f91c 	bl	1ec74 <__gethex>
   1ca3c:	f010 0407 	ands.w	r4, r0, #7
   1ca40:	4605      	mov	r5, r0
   1ca42:	d005      	beq.n	1ca50 <_strtod_l+0x80>
   1ca44:	2c06      	cmp	r4, #6
   1ca46:	d12b      	bne.n	1caa0 <_strtod_l+0xd0>
   1ca48:	2300      	movs	r3, #0
   1ca4a:	3601      	adds	r6, #1
   1ca4c:	9619      	str	r6, [sp, #100]	; 0x64
   1ca4e:	9309      	str	r3, [sp, #36]	; 0x24
   1ca50:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1ca52:	2b00      	cmp	r3, #0
   1ca54:	f040 859d 	bne.w	1d592 <_strtod_l+0xbc2>
   1ca58:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1ca5a:	b1e3      	cbz	r3, 1ca96 <_strtod_l+0xc6>
   1ca5c:	4652      	mov	r2, sl
   1ca5e:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
   1ca62:	4610      	mov	r0, r2
   1ca64:	4619      	mov	r1, r3
   1ca66:	b01f      	add	sp, #124	; 0x7c
   1ca68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ca6c:	2a2b      	cmp	r2, #43	; 0x2b
   1ca6e:	d006      	beq.n	1ca7e <_strtod_l+0xae>
   1ca70:	2a2d      	cmp	r2, #45	; 0x2d
   1ca72:	d013      	beq.n	1ca9c <_strtod_l+0xcc>
   1ca74:	2a20      	cmp	r2, #32
   1ca76:	d1c9      	bne.n	1ca0c <_strtod_l+0x3c>
   1ca78:	3301      	adds	r3, #1
   1ca7a:	9319      	str	r3, [sp, #100]	; 0x64
   1ca7c:	e7be      	b.n	1c9fc <_strtod_l+0x2c>
   1ca7e:	2200      	movs	r2, #0
   1ca80:	9209      	str	r2, [sp, #36]	; 0x24
   1ca82:	1c5a      	adds	r2, r3, #1
   1ca84:	9219      	str	r2, [sp, #100]	; 0x64
   1ca86:	785b      	ldrb	r3, [r3, #1]
   1ca88:	2b00      	cmp	r3, #0
   1ca8a:	d1c1      	bne.n	1ca10 <_strtod_l+0x40>
   1ca8c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1ca8e:	9419      	str	r4, [sp, #100]	; 0x64
   1ca90:	2b00      	cmp	r3, #0
   1ca92:	f040 857c 	bne.w	1d58e <_strtod_l+0xbbe>
   1ca96:	4652      	mov	r2, sl
   1ca98:	465b      	mov	r3, fp
   1ca9a:	e7e2      	b.n	1ca62 <_strtod_l+0x92>
   1ca9c:	2201      	movs	r2, #1
   1ca9e:	e7ef      	b.n	1ca80 <_strtod_l+0xb0>
   1caa0:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   1caa2:	b13a      	cbz	r2, 1cab4 <_strtod_l+0xe4>
   1caa4:	2135      	movs	r1, #53	; 0x35
   1caa6:	a81c      	add	r0, sp, #112	; 0x70
   1caa8:	f002 fff5 	bl	1fa96 <__copybits>
   1caac:	991a      	ldr	r1, [sp, #104]	; 0x68
   1caae:	4640      	mov	r0, r8
   1cab0:	f002 fc78 	bl	1f3a4 <_Bfree>
   1cab4:	3c01      	subs	r4, #1
   1cab6:	2c04      	cmp	r4, #4
   1cab8:	d808      	bhi.n	1cacc <_strtod_l+0xfc>
   1caba:	e8df f004 	tbb	[pc, r4]
   1cabe:	030c      	.short	0x030c
   1cac0:	1a17      	.short	0x1a17
   1cac2:	0c          	.byte	0x0c
   1cac3:	00          	.byte	0x00
   1cac4:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1cac8:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
   1cacc:	0729      	lsls	r1, r5, #28
   1cace:	d5bf      	bpl.n	1ca50 <_strtod_l+0x80>
   1cad0:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
   1cad4:	e7bc      	b.n	1ca50 <_strtod_l+0x80>
   1cad6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   1cad8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   1cada:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
   1cade:	f202 4233 	addw	r2, r2, #1075	; 0x433
   1cae2:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1cae6:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
   1caea:	e7ef      	b.n	1cacc <_strtod_l+0xfc>
   1caec:	f8df b1f8 	ldr.w	fp, [pc, #504]	; 1cce8 <_strtod_l+0x318>
   1caf0:	e7ec      	b.n	1cacc <_strtod_l+0xfc>
   1caf2:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
   1caf6:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   1cafa:	e7e7      	b.n	1cacc <_strtod_l+0xfc>
   1cafc:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1cafe:	1c5a      	adds	r2, r3, #1
   1cb00:	9219      	str	r2, [sp, #100]	; 0x64
   1cb02:	785b      	ldrb	r3, [r3, #1]
   1cb04:	2b30      	cmp	r3, #48	; 0x30
   1cb06:	d0f9      	beq.n	1cafc <_strtod_l+0x12c>
   1cb08:	2b00      	cmp	r3, #0
   1cb0a:	d0a1      	beq.n	1ca50 <_strtod_l+0x80>
   1cb0c:	2301      	movs	r3, #1
   1cb0e:	9308      	str	r3, [sp, #32]
   1cb10:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1cb12:	220a      	movs	r2, #10
   1cb14:	930a      	str	r3, [sp, #40]	; 0x28
   1cb16:	2300      	movs	r3, #0
   1cb18:	9305      	str	r3, [sp, #20]
   1cb1a:	9306      	str	r3, [sp, #24]
   1cb1c:	9304      	str	r3, [sp, #16]
   1cb1e:	9819      	ldr	r0, [sp, #100]	; 0x64
   1cb20:	7806      	ldrb	r6, [r0, #0]
   1cb22:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   1cb26:	b2d9      	uxtb	r1, r3
   1cb28:	2909      	cmp	r1, #9
   1cb2a:	d979      	bls.n	1cc20 <_strtod_l+0x250>
   1cb2c:	462a      	mov	r2, r5
   1cb2e:	6839      	ldr	r1, [r7, #0]
   1cb30:	f7ff feeb 	bl	1c90a <strncmp>
   1cb34:	2800      	cmp	r0, #0
   1cb36:	f000 8085 	beq.w	1cc44 <_strtod_l+0x274>
   1cb3a:	2000      	movs	r0, #0
   1cb3c:	4633      	mov	r3, r6
   1cb3e:	4602      	mov	r2, r0
   1cb40:	4601      	mov	r1, r0
   1cb42:	9d04      	ldr	r5, [sp, #16]
   1cb44:	2b65      	cmp	r3, #101	; 0x65
   1cb46:	d002      	beq.n	1cb4e <_strtod_l+0x17e>
   1cb48:	2b45      	cmp	r3, #69	; 0x45
   1cb4a:	f040 80ef 	bne.w	1cd2c <_strtod_l+0x35c>
   1cb4e:	b925      	cbnz	r5, 1cb5a <_strtod_l+0x18a>
   1cb50:	b910      	cbnz	r0, 1cb58 <_strtod_l+0x188>
   1cb52:	9b08      	ldr	r3, [sp, #32]
   1cb54:	2b00      	cmp	r3, #0
   1cb56:	d099      	beq.n	1ca8c <_strtod_l+0xbc>
   1cb58:	2500      	movs	r5, #0
   1cb5a:	9c19      	ldr	r4, [sp, #100]	; 0x64
   1cb5c:	1c63      	adds	r3, r4, #1
   1cb5e:	9319      	str	r3, [sp, #100]	; 0x64
   1cb60:	7863      	ldrb	r3, [r4, #1]
   1cb62:	2b2b      	cmp	r3, #43	; 0x2b
   1cb64:	f000 80cf 	beq.w	1cd06 <_strtod_l+0x336>
   1cb68:	2b2d      	cmp	r3, #45	; 0x2d
   1cb6a:	f000 80d2 	beq.w	1cd12 <_strtod_l+0x342>
   1cb6e:	2600      	movs	r6, #0
   1cb70:	9607      	str	r6, [sp, #28]
   1cb72:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
   1cb76:	2e09      	cmp	r6, #9
   1cb78:	f200 80d7 	bhi.w	1cd2a <_strtod_l+0x35a>
   1cb7c:	2b30      	cmp	r3, #48	; 0x30
   1cb7e:	f000 80ca 	beq.w	1cd16 <_strtod_l+0x346>
   1cb82:	f1a3 0631 	sub.w	r6, r3, #49	; 0x31
   1cb86:	2e08      	cmp	r6, #8
   1cb88:	f200 80d0 	bhi.w	1cd2c <_strtod_l+0x35c>
   1cb8c:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
   1cb90:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1cb92:	f04f 0c0a 	mov.w	ip, #10
   1cb96:	461f      	mov	r7, r3
   1cb98:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1cb9a:	1c5e      	adds	r6, r3, #1
   1cb9c:	9619      	str	r6, [sp, #100]	; 0x64
   1cb9e:	785b      	ldrb	r3, [r3, #1]
   1cba0:	f1a3 0930 	sub.w	r9, r3, #48	; 0x30
   1cba4:	f1b9 0f09 	cmp.w	r9, #9
   1cba8:	f240 80ba 	bls.w	1cd20 <_strtod_l+0x350>
   1cbac:	1bf6      	subs	r6, r6, r7
   1cbae:	2e08      	cmp	r6, #8
   1cbb0:	f644 691f 	movw	r9, #19999	; 0x4e1f
   1cbb4:	dc02      	bgt.n	1cbbc <_strtod_l+0x1ec>
   1cbb6:	45f1      	cmp	r9, lr
   1cbb8:	bfa8      	it	ge
   1cbba:	46f1      	movge	r9, lr
   1cbbc:	9e07      	ldr	r6, [sp, #28]
   1cbbe:	b10e      	cbz	r6, 1cbc4 <_strtod_l+0x1f4>
   1cbc0:	f1c9 0900 	rsb	r9, r9, #0
   1cbc4:	2d00      	cmp	r5, #0
   1cbc6:	f040 80d7 	bne.w	1cd78 <_strtod_l+0x3a8>
   1cbca:	2800      	cmp	r0, #0
   1cbcc:	f47f af40 	bne.w	1ca50 <_strtod_l+0x80>
   1cbd0:	9a08      	ldr	r2, [sp, #32]
   1cbd2:	2a00      	cmp	r2, #0
   1cbd4:	f47f af3c 	bne.w	1ca50 <_strtod_l+0x80>
   1cbd8:	2900      	cmp	r1, #0
   1cbda:	f47f af57 	bne.w	1ca8c <_strtod_l+0xbc>
   1cbde:	2b4e      	cmp	r3, #78	; 0x4e
   1cbe0:	f000 80ad 	beq.w	1cd3e <_strtod_l+0x36e>
   1cbe4:	f300 80a5 	bgt.w	1cd32 <_strtod_l+0x362>
   1cbe8:	2b49      	cmp	r3, #73	; 0x49
   1cbea:	f47f af4f 	bne.w	1ca8c <_strtod_l+0xbc>
   1cbee:	493c      	ldr	r1, [pc, #240]	; (1cce0 <_strtod_l+0x310>)
   1cbf0:	a819      	add	r0, sp, #100	; 0x64
   1cbf2:	f002 fa70 	bl	1f0d6 <__match>
   1cbf6:	2800      	cmp	r0, #0
   1cbf8:	f43f af48 	beq.w	1ca8c <_strtod_l+0xbc>
   1cbfc:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1cbfe:	4939      	ldr	r1, [pc, #228]	; (1cce4 <_strtod_l+0x314>)
   1cc00:	3b01      	subs	r3, #1
   1cc02:	a819      	add	r0, sp, #100	; 0x64
   1cc04:	9319      	str	r3, [sp, #100]	; 0x64
   1cc06:	f002 fa66 	bl	1f0d6 <__match>
   1cc0a:	b910      	cbnz	r0, 1cc12 <_strtod_l+0x242>
   1cc0c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1cc0e:	3301      	adds	r3, #1
   1cc10:	9319      	str	r3, [sp, #100]	; 0x64
   1cc12:	f8df b0d4 	ldr.w	fp, [pc, #212]	; 1cce8 <_strtod_l+0x318>
   1cc16:	f04f 0a00 	mov.w	sl, #0
   1cc1a:	e719      	b.n	1ca50 <_strtod_l+0x80>
   1cc1c:	2300      	movs	r3, #0
   1cc1e:	e776      	b.n	1cb0e <_strtod_l+0x13e>
   1cc20:	9904      	ldr	r1, [sp, #16]
   1cc22:	3001      	adds	r0, #1
   1cc24:	2908      	cmp	r1, #8
   1cc26:	bfd5      	itete	le
   1cc28:	9906      	ldrle	r1, [sp, #24]
   1cc2a:	9905      	ldrgt	r1, [sp, #20]
   1cc2c:	fb02 3301 	mlale	r3, r2, r1, r3
   1cc30:	fb02 3301 	mlagt	r3, r2, r1, r3
   1cc34:	bfd4      	ite	le
   1cc36:	9306      	strle	r3, [sp, #24]
   1cc38:	9305      	strgt	r3, [sp, #20]
   1cc3a:	9b04      	ldr	r3, [sp, #16]
   1cc3c:	9019      	str	r0, [sp, #100]	; 0x64
   1cc3e:	3301      	adds	r3, #1
   1cc40:	9304      	str	r3, [sp, #16]
   1cc42:	e76c      	b.n	1cb1e <_strtod_l+0x14e>
   1cc44:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1cc46:	195a      	adds	r2, r3, r5
   1cc48:	9219      	str	r2, [sp, #100]	; 0x64
   1cc4a:	9a04      	ldr	r2, [sp, #16]
   1cc4c:	5d5b      	ldrb	r3, [r3, r5]
   1cc4e:	2a00      	cmp	r2, #0
   1cc50:	d154      	bne.n	1ccfc <_strtod_l+0x32c>
   1cc52:	4610      	mov	r0, r2
   1cc54:	2b30      	cmp	r3, #48	; 0x30
   1cc56:	d02a      	beq.n	1ccae <_strtod_l+0x2de>
   1cc58:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
   1cc5c:	2a08      	cmp	r2, #8
   1cc5e:	f200 849d 	bhi.w	1d59c <_strtod_l+0xbcc>
   1cc62:	9a19      	ldr	r2, [sp, #100]	; 0x64
   1cc64:	920a      	str	r2, [sp, #40]	; 0x28
   1cc66:	4602      	mov	r2, r0
   1cc68:	2000      	movs	r0, #0
   1cc6a:	4605      	mov	r5, r0
   1cc6c:	3b30      	subs	r3, #48	; 0x30
   1cc6e:	f100 0101 	add.w	r1, r0, #1
   1cc72:	d011      	beq.n	1cc98 <_strtod_l+0x2c8>
   1cc74:	440a      	add	r2, r1
   1cc76:	260a      	movs	r6, #10
   1cc78:	4629      	mov	r1, r5
   1cc7a:	eb00 0c05 	add.w	ip, r0, r5
   1cc7e:	4561      	cmp	r1, ip
   1cc80:	d11b      	bne.n	1ccba <_strtod_l+0x2ea>
   1cc82:	4428      	add	r0, r5
   1cc84:	2808      	cmp	r0, #8
   1cc86:	f100 0501 	add.w	r5, r0, #1
   1cc8a:	dc2f      	bgt.n	1ccec <_strtod_l+0x31c>
   1cc8c:	210a      	movs	r1, #10
   1cc8e:	9806      	ldr	r0, [sp, #24]
   1cc90:	fb01 3300 	mla	r3, r1, r0, r3
   1cc94:	9306      	str	r3, [sp, #24]
   1cc96:	2100      	movs	r1, #0
   1cc98:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1cc9a:	1c58      	adds	r0, r3, #1
   1cc9c:	9019      	str	r0, [sp, #100]	; 0x64
   1cc9e:	4608      	mov	r0, r1
   1cca0:	785b      	ldrb	r3, [r3, #1]
   1cca2:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
   1cca6:	2909      	cmp	r1, #9
   1cca8:	d9e0      	bls.n	1cc6c <_strtod_l+0x29c>
   1ccaa:	2101      	movs	r1, #1
   1ccac:	e74a      	b.n	1cb44 <_strtod_l+0x174>
   1ccae:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ccb0:	3001      	adds	r0, #1
   1ccb2:	1c5a      	adds	r2, r3, #1
   1ccb4:	9219      	str	r2, [sp, #100]	; 0x64
   1ccb6:	785b      	ldrb	r3, [r3, #1]
   1ccb8:	e7cc      	b.n	1cc54 <_strtod_l+0x284>
   1ccba:	3101      	adds	r1, #1
   1ccbc:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
   1ccc0:	f1be 0f08 	cmp.w	lr, #8
   1ccc4:	dc03      	bgt.n	1ccce <_strtod_l+0x2fe>
   1ccc6:	9f06      	ldr	r7, [sp, #24]
   1ccc8:	4377      	muls	r7, r6
   1ccca:	9706      	str	r7, [sp, #24]
   1cccc:	e7d7      	b.n	1cc7e <_strtod_l+0x2ae>
   1ccce:	2910      	cmp	r1, #16
   1ccd0:	bfde      	ittt	le
   1ccd2:	9f05      	ldrle	r7, [sp, #20]
   1ccd4:	4377      	mulle	r7, r6
   1ccd6:	9705      	strle	r7, [sp, #20]
   1ccd8:	e7d1      	b.n	1cc7e <_strtod_l+0x2ae>
   1ccda:	bf00      	nop
   1ccdc:	000224b0 	.word	0x000224b0
   1cce0:	0002247d 	.word	0x0002247d
   1cce4:	00022640 	.word	0x00022640
   1cce8:	7ff00000 	.word	0x7ff00000
   1ccec:	2d10      	cmp	r5, #16
   1ccee:	bfdf      	itttt	le
   1ccf0:	210a      	movle	r1, #10
   1ccf2:	9805      	ldrle	r0, [sp, #20]
   1ccf4:	fb01 3300 	mlale	r3, r1, r0, r3
   1ccf8:	9305      	strle	r3, [sp, #20]
   1ccfa:	e7cc      	b.n	1cc96 <_strtod_l+0x2c6>
   1ccfc:	4602      	mov	r2, r0
   1ccfe:	9d04      	ldr	r5, [sp, #16]
   1cd00:	e7cf      	b.n	1cca2 <_strtod_l+0x2d2>
   1cd02:	2101      	movs	r1, #1
   1cd04:	e724      	b.n	1cb50 <_strtod_l+0x180>
   1cd06:	2300      	movs	r3, #0
   1cd08:	9307      	str	r3, [sp, #28]
   1cd0a:	1ca3      	adds	r3, r4, #2
   1cd0c:	9319      	str	r3, [sp, #100]	; 0x64
   1cd0e:	78a3      	ldrb	r3, [r4, #2]
   1cd10:	e72f      	b.n	1cb72 <_strtod_l+0x1a2>
   1cd12:	2301      	movs	r3, #1
   1cd14:	e7f8      	b.n	1cd08 <_strtod_l+0x338>
   1cd16:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1cd18:	1c5e      	adds	r6, r3, #1
   1cd1a:	9619      	str	r6, [sp, #100]	; 0x64
   1cd1c:	785b      	ldrb	r3, [r3, #1]
   1cd1e:	e72d      	b.n	1cb7c <_strtod_l+0x1ac>
   1cd20:	fb0c 3e0e 	mla	lr, ip, lr, r3
   1cd24:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
   1cd28:	e736      	b.n	1cb98 <_strtod_l+0x1c8>
   1cd2a:	9419      	str	r4, [sp, #100]	; 0x64
   1cd2c:	f04f 0900 	mov.w	r9, #0
   1cd30:	e748      	b.n	1cbc4 <_strtod_l+0x1f4>
   1cd32:	2b69      	cmp	r3, #105	; 0x69
   1cd34:	f43f af5b 	beq.w	1cbee <_strtod_l+0x21e>
   1cd38:	2b6e      	cmp	r3, #110	; 0x6e
   1cd3a:	f47f aea7 	bne.w	1ca8c <_strtod_l+0xbc>
   1cd3e:	498c      	ldr	r1, [pc, #560]	; (1cf70 <_strtod_l+0x5a0>)
   1cd40:	a819      	add	r0, sp, #100	; 0x64
   1cd42:	f002 f9c8 	bl	1f0d6 <__match>
   1cd46:	2800      	cmp	r0, #0
   1cd48:	f43f aea0 	beq.w	1ca8c <_strtod_l+0xbc>
   1cd4c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1cd4e:	781b      	ldrb	r3, [r3, #0]
   1cd50:	2b28      	cmp	r3, #40	; 0x28
   1cd52:	d10e      	bne.n	1cd72 <_strtod_l+0x3a2>
   1cd54:	aa1c      	add	r2, sp, #112	; 0x70
   1cd56:	4987      	ldr	r1, [pc, #540]	; (1cf74 <_strtod_l+0x5a4>)
   1cd58:	a819      	add	r0, sp, #100	; 0x64
   1cd5a:	f002 f9cf 	bl	1f0fc <__hexnan>
   1cd5e:	2805      	cmp	r0, #5
   1cd60:	d107      	bne.n	1cd72 <_strtod_l+0x3a2>
   1cd62:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   1cd64:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1cd68:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
   1cd6c:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
   1cd70:	e66e      	b.n	1ca50 <_strtod_l+0x80>
   1cd72:	f8df b210 	ldr.w	fp, [pc, #528]	; 1cf84 <_strtod_l+0x5b4>
   1cd76:	e74e      	b.n	1cc16 <_strtod_l+0x246>
   1cd78:	9b04      	ldr	r3, [sp, #16]
   1cd7a:	462c      	mov	r4, r5
   1cd7c:	2b00      	cmp	r3, #0
   1cd7e:	bf08      	it	eq
   1cd80:	462b      	moveq	r3, r5
   1cd82:	2d10      	cmp	r5, #16
   1cd84:	bfa8      	it	ge
   1cd86:	2410      	movge	r4, #16
   1cd88:	9806      	ldr	r0, [sp, #24]
   1cd8a:	eba9 0902 	sub.w	r9, r9, r2
   1cd8e:	9304      	str	r3, [sp, #16]
   1cd90:	f7fc fcf8 	bl	19784 <__aeabi_ui2d>
   1cd94:	2c09      	cmp	r4, #9
   1cd96:	4682      	mov	sl, r0
   1cd98:	468b      	mov	fp, r1
   1cd9a:	dd13      	ble.n	1cdc4 <_strtod_l+0x3f4>
   1cd9c:	4b76      	ldr	r3, [pc, #472]	; (1cf78 <_strtod_l+0x5a8>)
   1cd9e:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
   1cda2:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
   1cda6:	f7fc fd63 	bl	19870 <__aeabi_dmul>
   1cdaa:	4606      	mov	r6, r0
   1cdac:	9805      	ldr	r0, [sp, #20]
   1cdae:	460f      	mov	r7, r1
   1cdb0:	f7fc fce8 	bl	19784 <__aeabi_ui2d>
   1cdb4:	4602      	mov	r2, r0
   1cdb6:	460b      	mov	r3, r1
   1cdb8:	4630      	mov	r0, r6
   1cdba:	4639      	mov	r1, r7
   1cdbc:	f7fc fba6 	bl	1950c <__adddf3>
   1cdc0:	4682      	mov	sl, r0
   1cdc2:	468b      	mov	fp, r1
   1cdc4:	2d0f      	cmp	r5, #15
   1cdc6:	dc36      	bgt.n	1ce36 <_strtod_l+0x466>
   1cdc8:	f1b9 0f00 	cmp.w	r9, #0
   1cdcc:	f43f ae40 	beq.w	1ca50 <_strtod_l+0x80>
   1cdd0:	dd24      	ble.n	1ce1c <_strtod_l+0x44c>
   1cdd2:	f1b9 0f16 	cmp.w	r9, #22
   1cdd6:	dc0b      	bgt.n	1cdf0 <_strtod_l+0x420>
   1cdd8:	4652      	mov	r2, sl
   1cdda:	465b      	mov	r3, fp
   1cddc:	4d66      	ldr	r5, [pc, #408]	; (1cf78 <_strtod_l+0x5a8>)
   1cdde:	eb05 09c9 	add.w	r9, r5, r9, lsl #3
   1cde2:	e9d9 0100 	ldrd	r0, r1, [r9]
   1cde6:	f7fc fd43 	bl	19870 <__aeabi_dmul>
   1cdea:	4682      	mov	sl, r0
   1cdec:	468b      	mov	fp, r1
   1cdee:	e62f      	b.n	1ca50 <_strtod_l+0x80>
   1cdf0:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
   1cdf4:	4599      	cmp	r9, r3
   1cdf6:	dc1e      	bgt.n	1ce36 <_strtod_l+0x466>
   1cdf8:	4c5f      	ldr	r4, [pc, #380]	; (1cf78 <_strtod_l+0x5a8>)
   1cdfa:	f1c5 050f 	rsb	r5, r5, #15
   1cdfe:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
   1ce02:	eba9 0505 	sub.w	r5, r9, r5
   1ce06:	4652      	mov	r2, sl
   1ce08:	e9d1 0100 	ldrd	r0, r1, [r1]
   1ce0c:	465b      	mov	r3, fp
   1ce0e:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   1ce12:	f7fc fd2d 	bl	19870 <__aeabi_dmul>
   1ce16:	e9d4 2300 	ldrd	r2, r3, [r4]
   1ce1a:	e7e4      	b.n	1cde6 <_strtod_l+0x416>
   1ce1c:	f119 0f16 	cmn.w	r9, #22
   1ce20:	db09      	blt.n	1ce36 <_strtod_l+0x466>
   1ce22:	4d55      	ldr	r5, [pc, #340]	; (1cf78 <_strtod_l+0x5a8>)
   1ce24:	4650      	mov	r0, sl
   1ce26:	eba5 09c9 	sub.w	r9, r5, r9, lsl #3
   1ce2a:	e9d9 2300 	ldrd	r2, r3, [r9]
   1ce2e:	4659      	mov	r1, fp
   1ce30:	f7fc fe48 	bl	19ac4 <__aeabi_ddiv>
   1ce34:	e7d9      	b.n	1cdea <_strtod_l+0x41a>
   1ce36:	1b2c      	subs	r4, r5, r4
   1ce38:	444c      	add	r4, r9
   1ce3a:	2c00      	cmp	r4, #0
   1ce3c:	dd73      	ble.n	1cf26 <_strtod_l+0x556>
   1ce3e:	f014 030f 	ands.w	r3, r4, #15
   1ce42:	d00a      	beq.n	1ce5a <_strtod_l+0x48a>
   1ce44:	494c      	ldr	r1, [pc, #304]	; (1cf78 <_strtod_l+0x5a8>)
   1ce46:	4652      	mov	r2, sl
   1ce48:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
   1ce4c:	e9d1 0100 	ldrd	r0, r1, [r1]
   1ce50:	465b      	mov	r3, fp
   1ce52:	f7fc fd0d 	bl	19870 <__aeabi_dmul>
   1ce56:	4682      	mov	sl, r0
   1ce58:	468b      	mov	fp, r1
   1ce5a:	f034 040f 	bics.w	r4, r4, #15
   1ce5e:	d054      	beq.n	1cf0a <_strtod_l+0x53a>
   1ce60:	f5b4 7f9a 	cmp.w	r4, #308	; 0x134
   1ce64:	dd27      	ble.n	1ceb6 <_strtod_l+0x4e6>
   1ce66:	f04f 0900 	mov.w	r9, #0
   1ce6a:	f8cd 9010 	str.w	r9, [sp, #16]
   1ce6e:	f8cd 901c 	str.w	r9, [sp, #28]
   1ce72:	f8cd 9018 	str.w	r9, [sp, #24]
   1ce76:	2322      	movs	r3, #34	; 0x22
   1ce78:	f04f 0a00 	mov.w	sl, #0
   1ce7c:	f8df b108 	ldr.w	fp, [pc, #264]	; 1cf88 <_strtod_l+0x5b8>
   1ce80:	f8c8 3000 	str.w	r3, [r8]
   1ce84:	9b07      	ldr	r3, [sp, #28]
   1ce86:	2b00      	cmp	r3, #0
   1ce88:	f43f ade2 	beq.w	1ca50 <_strtod_l+0x80>
   1ce8c:	991a      	ldr	r1, [sp, #104]	; 0x68
   1ce8e:	4640      	mov	r0, r8
   1ce90:	f002 fa88 	bl	1f3a4 <_Bfree>
   1ce94:	9906      	ldr	r1, [sp, #24]
   1ce96:	4640      	mov	r0, r8
   1ce98:	f002 fa84 	bl	1f3a4 <_Bfree>
   1ce9c:	9904      	ldr	r1, [sp, #16]
   1ce9e:	4640      	mov	r0, r8
   1cea0:	f002 fa80 	bl	1f3a4 <_Bfree>
   1cea4:	9907      	ldr	r1, [sp, #28]
   1cea6:	4640      	mov	r0, r8
   1cea8:	f002 fa7c 	bl	1f3a4 <_Bfree>
   1ceac:	4649      	mov	r1, r9
   1ceae:	4640      	mov	r0, r8
   1ceb0:	f002 fa78 	bl	1f3a4 <_Bfree>
   1ceb4:	e5cc      	b.n	1ca50 <_strtod_l+0x80>
   1ceb6:	2300      	movs	r3, #0
   1ceb8:	4650      	mov	r0, sl
   1ceba:	4659      	mov	r1, fp
   1cebc:	461f      	mov	r7, r3
   1cebe:	4e2f      	ldr	r6, [pc, #188]	; (1cf7c <_strtod_l+0x5ac>)
   1cec0:	1124      	asrs	r4, r4, #4
   1cec2:	2c01      	cmp	r4, #1
   1cec4:	dc24      	bgt.n	1cf10 <_strtod_l+0x540>
   1cec6:	b10b      	cbz	r3, 1cecc <_strtod_l+0x4fc>
   1cec8:	4682      	mov	sl, r0
   1ceca:	468b      	mov	fp, r1
   1cecc:	4b2b      	ldr	r3, [pc, #172]	; (1cf7c <_strtod_l+0x5ac>)
   1cece:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   1ced2:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
   1ced6:	4652      	mov	r2, sl
   1ced8:	e9d7 0100 	ldrd	r0, r1, [r7]
   1cedc:	465b      	mov	r3, fp
   1cede:	f7fc fcc7 	bl	19870 <__aeabi_dmul>
   1cee2:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   1cee6:	468b      	mov	fp, r1
   1cee8:	460a      	mov	r2, r1
   1ceea:	0d1b      	lsrs	r3, r3, #20
   1ceec:	4924      	ldr	r1, [pc, #144]	; (1cf80 <_strtod_l+0x5b0>)
   1ceee:	051b      	lsls	r3, r3, #20
   1cef0:	428b      	cmp	r3, r1
   1cef2:	4682      	mov	sl, r0
   1cef4:	d8b7      	bhi.n	1ce66 <_strtod_l+0x496>
   1cef6:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
   1cefa:	428b      	cmp	r3, r1
   1cefc:	bf86      	itte	hi
   1cefe:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
   1cf02:	f8df b088 	ldrhi.w	fp, [pc, #136]	; 1cf8c <_strtod_l+0x5bc>
   1cf06:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
   1cf0a:	2300      	movs	r3, #0
   1cf0c:	9305      	str	r3, [sp, #20]
   1cf0e:	e070      	b.n	1cff2 <_strtod_l+0x622>
   1cf10:	07e2      	lsls	r2, r4, #31
   1cf12:	d504      	bpl.n	1cf1e <_strtod_l+0x54e>
   1cf14:	e9d6 2300 	ldrd	r2, r3, [r6]
   1cf18:	f7fc fcaa 	bl	19870 <__aeabi_dmul>
   1cf1c:	2301      	movs	r3, #1
   1cf1e:	3701      	adds	r7, #1
   1cf20:	1064      	asrs	r4, r4, #1
   1cf22:	3608      	adds	r6, #8
   1cf24:	e7cd      	b.n	1cec2 <_strtod_l+0x4f2>
   1cf26:	d0f0      	beq.n	1cf0a <_strtod_l+0x53a>
   1cf28:	4264      	negs	r4, r4
   1cf2a:	f014 020f 	ands.w	r2, r4, #15
   1cf2e:	d00a      	beq.n	1cf46 <_strtod_l+0x576>
   1cf30:	4b11      	ldr	r3, [pc, #68]	; (1cf78 <_strtod_l+0x5a8>)
   1cf32:	4650      	mov	r0, sl
   1cf34:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   1cf38:	4659      	mov	r1, fp
   1cf3a:	e9d3 2300 	ldrd	r2, r3, [r3]
   1cf3e:	f7fc fdc1 	bl	19ac4 <__aeabi_ddiv>
   1cf42:	4682      	mov	sl, r0
   1cf44:	468b      	mov	fp, r1
   1cf46:	1124      	asrs	r4, r4, #4
   1cf48:	d0df      	beq.n	1cf0a <_strtod_l+0x53a>
   1cf4a:	2c1f      	cmp	r4, #31
   1cf4c:	dd20      	ble.n	1cf90 <_strtod_l+0x5c0>
   1cf4e:	f04f 0900 	mov.w	r9, #0
   1cf52:	f8cd 9010 	str.w	r9, [sp, #16]
   1cf56:	f8cd 901c 	str.w	r9, [sp, #28]
   1cf5a:	f8cd 9018 	str.w	r9, [sp, #24]
   1cf5e:	2322      	movs	r3, #34	; 0x22
   1cf60:	f04f 0a00 	mov.w	sl, #0
   1cf64:	f04f 0b00 	mov.w	fp, #0
   1cf68:	f8c8 3000 	str.w	r3, [r8]
   1cf6c:	e78a      	b.n	1ce84 <_strtod_l+0x4b4>
   1cf6e:	bf00      	nop
   1cf70:	00022485 	.word	0x00022485
   1cf74:	000224c4 	.word	0x000224c4
   1cf78:	00022678 	.word	0x00022678
   1cf7c:	00022650 	.word	0x00022650
   1cf80:	7ca00000 	.word	0x7ca00000
   1cf84:	fff80000 	.word	0xfff80000
   1cf88:	7ff00000 	.word	0x7ff00000
   1cf8c:	7fefffff 	.word	0x7fefffff
   1cf90:	f014 0310 	ands.w	r3, r4, #16
   1cf94:	bf18      	it	ne
   1cf96:	236a      	movne	r3, #106	; 0x6a
   1cf98:	4650      	mov	r0, sl
   1cf9a:	9305      	str	r3, [sp, #20]
   1cf9c:	4659      	mov	r1, fp
   1cf9e:	2300      	movs	r3, #0
   1cfa0:	4e9f      	ldr	r6, [pc, #636]	; (1d220 <_strtod_l+0x850>)
   1cfa2:	2c00      	cmp	r4, #0
   1cfa4:	f300 8109 	bgt.w	1d1ba <_strtod_l+0x7ea>
   1cfa8:	b10b      	cbz	r3, 1cfae <_strtod_l+0x5de>
   1cfaa:	4682      	mov	sl, r0
   1cfac:	468b      	mov	fp, r1
   1cfae:	9b05      	ldr	r3, [sp, #20]
   1cfb0:	b1bb      	cbz	r3, 1cfe2 <_strtod_l+0x612>
   1cfb2:	f3cb 530a 	ubfx	r3, fp, #20, #11
   1cfb6:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1cfba:	2b00      	cmp	r3, #0
   1cfbc:	4659      	mov	r1, fp
   1cfbe:	dd10      	ble.n	1cfe2 <_strtod_l+0x612>
   1cfc0:	2b1f      	cmp	r3, #31
   1cfc2:	f340 8104 	ble.w	1d1ce <_strtod_l+0x7fe>
   1cfc6:	2b34      	cmp	r3, #52	; 0x34
   1cfc8:	bfd8      	it	le
   1cfca:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
   1cfce:	f04f 0a00 	mov.w	sl, #0
   1cfd2:	bfcf      	iteee	gt
   1cfd4:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
   1cfd8:	3b20      	suble	r3, #32
   1cfda:	fa02 f303 	lslle.w	r3, r2, r3
   1cfde:	ea03 0b01 	andle.w	fp, r3, r1
   1cfe2:	2200      	movs	r2, #0
   1cfe4:	2300      	movs	r3, #0
   1cfe6:	4650      	mov	r0, sl
   1cfe8:	4659      	mov	r1, fp
   1cfea:	f003 febb 	bl	20d64 <__aeabi_dcmpeq>
   1cfee:	2800      	cmp	r0, #0
   1cff0:	d1ad      	bne.n	1cf4e <_strtod_l+0x57e>
   1cff2:	9b06      	ldr	r3, [sp, #24]
   1cff4:	9a04      	ldr	r2, [sp, #16]
   1cff6:	9300      	str	r3, [sp, #0]
   1cff8:	990a      	ldr	r1, [sp, #40]	; 0x28
   1cffa:	462b      	mov	r3, r5
   1cffc:	4640      	mov	r0, r8
   1cffe:	f002 fa23 	bl	1f448 <__s2b>
   1d002:	9007      	str	r0, [sp, #28]
   1d004:	2800      	cmp	r0, #0
   1d006:	f43f af2e 	beq.w	1ce66 <_strtod_l+0x496>
   1d00a:	f1b9 0f00 	cmp.w	r9, #0
   1d00e:	f1c9 0300 	rsb	r3, r9, #0
   1d012:	bfa8      	it	ge
   1d014:	2300      	movge	r3, #0
   1d016:	930e      	str	r3, [sp, #56]	; 0x38
   1d018:	ea29 73e9 	bic.w	r3, r9, r9, asr #31
   1d01c:	f04f 0900 	mov.w	r9, #0
   1d020:	930f      	str	r3, [sp, #60]	; 0x3c
   1d022:	f8cd 9010 	str.w	r9, [sp, #16]
   1d026:	9b07      	ldr	r3, [sp, #28]
   1d028:	4640      	mov	r0, r8
   1d02a:	6859      	ldr	r1, [r3, #4]
   1d02c:	f002 f986 	bl	1f33c <_Balloc>
   1d030:	9006      	str	r0, [sp, #24]
   1d032:	2800      	cmp	r0, #0
   1d034:	f43f af1f 	beq.w	1ce76 <_strtod_l+0x4a6>
   1d038:	9b07      	ldr	r3, [sp, #28]
   1d03a:	300c      	adds	r0, #12
   1d03c:	691a      	ldr	r2, [r3, #16]
   1d03e:	f103 010c 	add.w	r1, r3, #12
   1d042:	3202      	adds	r2, #2
   1d044:	0092      	lsls	r2, r2, #2
   1d046:	f7fd ff0e 	bl	1ae66 <memcpy>
   1d04a:	ab1c      	add	r3, sp, #112	; 0x70
   1d04c:	9301      	str	r3, [sp, #4]
   1d04e:	ab1b      	add	r3, sp, #108	; 0x6c
   1d050:	9300      	str	r3, [sp, #0]
   1d052:	4652      	mov	r2, sl
   1d054:	465b      	mov	r3, fp
   1d056:	4640      	mov	r0, r8
   1d058:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
   1d05c:	f002 fca4 	bl	1f9a8 <__d2b>
   1d060:	901a      	str	r0, [sp, #104]	; 0x68
   1d062:	2800      	cmp	r0, #0
   1d064:	f43f af07 	beq.w	1ce76 <_strtod_l+0x4a6>
   1d068:	2101      	movs	r1, #1
   1d06a:	4640      	mov	r0, r8
   1d06c:	f002 fa78 	bl	1f560 <__i2b>
   1d070:	9004      	str	r0, [sp, #16]
   1d072:	4603      	mov	r3, r0
   1d074:	2800      	cmp	r0, #0
   1d076:	f43f aefe 	beq.w	1ce76 <_strtod_l+0x4a6>
   1d07a:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   1d07c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
   1d07e:	2d00      	cmp	r5, #0
   1d080:	bfab      	itete	ge
   1d082:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
   1d084:	9b0f      	ldrlt	r3, [sp, #60]	; 0x3c
   1d086:	195e      	addge	r6, r3, r5
   1d088:	1b5c      	sublt	r4, r3, r5
   1d08a:	9b05      	ldr	r3, [sp, #20]
   1d08c:	bfa8      	it	ge
   1d08e:	9c0f      	ldrge	r4, [sp, #60]	; 0x3c
   1d090:	eba5 0503 	sub.w	r5, r5, r3
   1d094:	4415      	add	r5, r2
   1d096:	4b63      	ldr	r3, [pc, #396]	; (1d224 <_strtod_l+0x854>)
   1d098:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
   1d09c:	bfb8      	it	lt
   1d09e:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
   1d0a0:	429d      	cmp	r5, r3
   1d0a2:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
   1d0a6:	f280 80a4 	bge.w	1d1f2 <_strtod_l+0x822>
   1d0aa:	1b5b      	subs	r3, r3, r5
   1d0ac:	2b1f      	cmp	r3, #31
   1d0ae:	eba2 0203 	sub.w	r2, r2, r3
   1d0b2:	f04f 0701 	mov.w	r7, #1
   1d0b6:	f300 8091 	bgt.w	1d1dc <_strtod_l+0x80c>
   1d0ba:	2500      	movs	r5, #0
   1d0bc:	fa07 f303 	lsl.w	r3, r7, r3
   1d0c0:	9314      	str	r3, [sp, #80]	; 0x50
   1d0c2:	18b7      	adds	r7, r6, r2
   1d0c4:	9b05      	ldr	r3, [sp, #20]
   1d0c6:	42be      	cmp	r6, r7
   1d0c8:	4414      	add	r4, r2
   1d0ca:	441c      	add	r4, r3
   1d0cc:	4633      	mov	r3, r6
   1d0ce:	bfa8      	it	ge
   1d0d0:	463b      	movge	r3, r7
   1d0d2:	42a3      	cmp	r3, r4
   1d0d4:	bfa8      	it	ge
   1d0d6:	4623      	movge	r3, r4
   1d0d8:	2b00      	cmp	r3, #0
   1d0da:	bfc2      	ittt	gt
   1d0dc:	1aff      	subgt	r7, r7, r3
   1d0de:	1ae4      	subgt	r4, r4, r3
   1d0e0:	1af6      	subgt	r6, r6, r3
   1d0e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1d0e4:	b1bb      	cbz	r3, 1d116 <_strtod_l+0x746>
   1d0e6:	461a      	mov	r2, r3
   1d0e8:	9904      	ldr	r1, [sp, #16]
   1d0ea:	4640      	mov	r0, r8
   1d0ec:	f002 face 	bl	1f68c <__pow5mult>
   1d0f0:	9004      	str	r0, [sp, #16]
   1d0f2:	2800      	cmp	r0, #0
   1d0f4:	f43f aebf 	beq.w	1ce76 <_strtod_l+0x4a6>
   1d0f8:	4601      	mov	r1, r0
   1d0fa:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   1d0fc:	4640      	mov	r0, r8
   1d0fe:	f002 fa38 	bl	1f572 <__multiply>
   1d102:	9008      	str	r0, [sp, #32]
   1d104:	2800      	cmp	r0, #0
   1d106:	f43f aeb6 	beq.w	1ce76 <_strtod_l+0x4a6>
   1d10a:	991a      	ldr	r1, [sp, #104]	; 0x68
   1d10c:	4640      	mov	r0, r8
   1d10e:	f002 f949 	bl	1f3a4 <_Bfree>
   1d112:	9b08      	ldr	r3, [sp, #32]
   1d114:	931a      	str	r3, [sp, #104]	; 0x68
   1d116:	2f00      	cmp	r7, #0
   1d118:	dc6f      	bgt.n	1d1fa <_strtod_l+0x82a>
   1d11a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1d11c:	2b00      	cmp	r3, #0
   1d11e:	d175      	bne.n	1d20c <_strtod_l+0x83c>
   1d120:	2c00      	cmp	r4, #0
   1d122:	dd08      	ble.n	1d136 <_strtod_l+0x766>
   1d124:	4622      	mov	r2, r4
   1d126:	9906      	ldr	r1, [sp, #24]
   1d128:	4640      	mov	r0, r8
   1d12a:	f002 fafd 	bl	1f728 <__lshift>
   1d12e:	9006      	str	r0, [sp, #24]
   1d130:	2800      	cmp	r0, #0
   1d132:	f43f aea0 	beq.w	1ce76 <_strtod_l+0x4a6>
   1d136:	2e00      	cmp	r6, #0
   1d138:	dd08      	ble.n	1d14c <_strtod_l+0x77c>
   1d13a:	4632      	mov	r2, r6
   1d13c:	9904      	ldr	r1, [sp, #16]
   1d13e:	4640      	mov	r0, r8
   1d140:	f002 faf2 	bl	1f728 <__lshift>
   1d144:	9004      	str	r0, [sp, #16]
   1d146:	2800      	cmp	r0, #0
   1d148:	f43f ae95 	beq.w	1ce76 <_strtod_l+0x4a6>
   1d14c:	9a06      	ldr	r2, [sp, #24]
   1d14e:	991a      	ldr	r1, [sp, #104]	; 0x68
   1d150:	4640      	mov	r0, r8
   1d152:	f002 fb54 	bl	1f7fe <__mdiff>
   1d156:	4681      	mov	r9, r0
   1d158:	2800      	cmp	r0, #0
   1d15a:	f43f ae8c 	beq.w	1ce76 <_strtod_l+0x4a6>
   1d15e:	2400      	movs	r4, #0
   1d160:	68c3      	ldr	r3, [r0, #12]
   1d162:	9904      	ldr	r1, [sp, #16]
   1d164:	60c4      	str	r4, [r0, #12]
   1d166:	9308      	str	r3, [sp, #32]
   1d168:	f002 fb2f 	bl	1f7ca <__mcmp>
   1d16c:	42a0      	cmp	r0, r4
   1d16e:	da5b      	bge.n	1d228 <_strtod_l+0x858>
   1d170:	9b08      	ldr	r3, [sp, #32]
   1d172:	b9f3      	cbnz	r3, 1d1b2 <_strtod_l+0x7e2>
   1d174:	f1ba 0f00 	cmp.w	sl, #0
   1d178:	d11b      	bne.n	1d1b2 <_strtod_l+0x7e2>
   1d17a:	f3cb 0313 	ubfx	r3, fp, #0, #20
   1d17e:	b9c3      	cbnz	r3, 1d1b2 <_strtod_l+0x7e2>
   1d180:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   1d184:	0d1b      	lsrs	r3, r3, #20
   1d186:	051b      	lsls	r3, r3, #20
   1d188:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   1d18c:	d911      	bls.n	1d1b2 <_strtod_l+0x7e2>
   1d18e:	f8d9 3014 	ldr.w	r3, [r9, #20]
   1d192:	b91b      	cbnz	r3, 1d19c <_strtod_l+0x7cc>
   1d194:	f8d9 3010 	ldr.w	r3, [r9, #16]
   1d198:	2b01      	cmp	r3, #1
   1d19a:	dd0a      	ble.n	1d1b2 <_strtod_l+0x7e2>
   1d19c:	4649      	mov	r1, r9
   1d19e:	2201      	movs	r2, #1
   1d1a0:	4640      	mov	r0, r8
   1d1a2:	f002 fac1 	bl	1f728 <__lshift>
   1d1a6:	9904      	ldr	r1, [sp, #16]
   1d1a8:	4681      	mov	r9, r0
   1d1aa:	f002 fb0e 	bl	1f7ca <__mcmp>
   1d1ae:	2800      	cmp	r0, #0
   1d1b0:	dc6b      	bgt.n	1d28a <_strtod_l+0x8ba>
   1d1b2:	9b05      	ldr	r3, [sp, #20]
   1d1b4:	2b00      	cmp	r3, #0
   1d1b6:	d175      	bne.n	1d2a4 <_strtod_l+0x8d4>
   1d1b8:	e668      	b.n	1ce8c <_strtod_l+0x4bc>
   1d1ba:	07e2      	lsls	r2, r4, #31
   1d1bc:	d504      	bpl.n	1d1c8 <_strtod_l+0x7f8>
   1d1be:	e9d6 2300 	ldrd	r2, r3, [r6]
   1d1c2:	f7fc fb55 	bl	19870 <__aeabi_dmul>
   1d1c6:	2301      	movs	r3, #1
   1d1c8:	1064      	asrs	r4, r4, #1
   1d1ca:	3608      	adds	r6, #8
   1d1cc:	e6e9      	b.n	1cfa2 <_strtod_l+0x5d2>
   1d1ce:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1d1d2:	fa02 f303 	lsl.w	r3, r2, r3
   1d1d6:	ea03 0a0a 	and.w	sl, r3, sl
   1d1da:	e702      	b.n	1cfe2 <_strtod_l+0x612>
   1d1dc:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
   1d1e0:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
   1d1e4:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
   1d1e8:	35e2      	adds	r5, #226	; 0xe2
   1d1ea:	fa07 f505 	lsl.w	r5, r7, r5
   1d1ee:	9714      	str	r7, [sp, #80]	; 0x50
   1d1f0:	e767      	b.n	1d0c2 <_strtod_l+0x6f2>
   1d1f2:	2301      	movs	r3, #1
   1d1f4:	2500      	movs	r5, #0
   1d1f6:	9314      	str	r3, [sp, #80]	; 0x50
   1d1f8:	e763      	b.n	1d0c2 <_strtod_l+0x6f2>
   1d1fa:	463a      	mov	r2, r7
   1d1fc:	991a      	ldr	r1, [sp, #104]	; 0x68
   1d1fe:	4640      	mov	r0, r8
   1d200:	f002 fa92 	bl	1f728 <__lshift>
   1d204:	901a      	str	r0, [sp, #104]	; 0x68
   1d206:	2800      	cmp	r0, #0
   1d208:	d187      	bne.n	1d11a <_strtod_l+0x74a>
   1d20a:	e634      	b.n	1ce76 <_strtod_l+0x4a6>
   1d20c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   1d20e:	9906      	ldr	r1, [sp, #24]
   1d210:	4640      	mov	r0, r8
   1d212:	f002 fa3b 	bl	1f68c <__pow5mult>
   1d216:	9006      	str	r0, [sp, #24]
   1d218:	2800      	cmp	r0, #0
   1d21a:	d181      	bne.n	1d120 <_strtod_l+0x750>
   1d21c:	e62b      	b.n	1ce76 <_strtod_l+0x4a6>
   1d21e:	bf00      	nop
   1d220:	000224d8 	.word	0x000224d8
   1d224:	fffffc02 	.word	0xfffffc02
   1d228:	f040 8086 	bne.w	1d338 <_strtod_l+0x968>
   1d22c:	9a08      	ldr	r2, [sp, #32]
   1d22e:	f3cb 0313 	ubfx	r3, fp, #0, #20
   1d232:	b332      	cbz	r2, 1d282 <_strtod_l+0x8b2>
   1d234:	4aac      	ldr	r2, [pc, #688]	; (1d4e8 <_strtod_l+0xb18>)
   1d236:	4659      	mov	r1, fp
   1d238:	4293      	cmp	r3, r2
   1d23a:	d152      	bne.n	1d2e2 <_strtod_l+0x912>
   1d23c:	9b05      	ldr	r3, [sp, #20]
   1d23e:	4650      	mov	r0, sl
   1d240:	b1d3      	cbz	r3, 1d278 <_strtod_l+0x8a8>
   1d242:	4aaa      	ldr	r2, [pc, #680]	; (1d4ec <_strtod_l+0xb1c>)
   1d244:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   1d248:	400a      	ands	r2, r1
   1d24a:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
   1d24e:	d816      	bhi.n	1d27e <_strtod_l+0x8ae>
   1d250:	0d12      	lsrs	r2, r2, #20
   1d252:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
   1d256:	fa04 f303 	lsl.w	r3, r4, r3
   1d25a:	4283      	cmp	r3, r0
   1d25c:	d141      	bne.n	1d2e2 <_strtod_l+0x912>
   1d25e:	4aa4      	ldr	r2, [pc, #656]	; (1d4f0 <_strtod_l+0xb20>)
   1d260:	4291      	cmp	r1, r2
   1d262:	d102      	bne.n	1d26a <_strtod_l+0x89a>
   1d264:	3301      	adds	r3, #1
   1d266:	f43f ae06 	beq.w	1ce76 <_strtod_l+0x4a6>
   1d26a:	4ba0      	ldr	r3, [pc, #640]	; (1d4ec <_strtod_l+0xb1c>)
   1d26c:	f04f 0a00 	mov.w	sl, #0
   1d270:	400b      	ands	r3, r1
   1d272:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
   1d276:	e79c      	b.n	1d1b2 <_strtod_l+0x7e2>
   1d278:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1d27c:	e7ed      	b.n	1d25a <_strtod_l+0x88a>
   1d27e:	4623      	mov	r3, r4
   1d280:	e7eb      	b.n	1d25a <_strtod_l+0x88a>
   1d282:	bb73      	cbnz	r3, 1d2e2 <_strtod_l+0x912>
   1d284:	f1ba 0f00 	cmp.w	sl, #0
   1d288:	d12b      	bne.n	1d2e2 <_strtod_l+0x912>
   1d28a:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   1d28e:	9a05      	ldr	r2, [sp, #20]
   1d290:	0d1b      	lsrs	r3, r3, #20
   1d292:	051b      	lsls	r3, r3, #20
   1d294:	b1e2      	cbz	r2, 1d2d0 <_strtod_l+0x900>
   1d296:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   1d29a:	dc19      	bgt.n	1d2d0 <_strtod_l+0x900>
   1d29c:	f1b3 7f5c 	cmp.w	r3, #57671680	; 0x3700000
   1d2a0:	f77f ae5d 	ble.w	1cf5e <_strtod_l+0x58e>
   1d2a4:	4b93      	ldr	r3, [pc, #588]	; (1d4f4 <_strtod_l+0xb24>)
   1d2a6:	4650      	mov	r0, sl
   1d2a8:	930d      	str	r3, [sp, #52]	; 0x34
   1d2aa:	2300      	movs	r3, #0
   1d2ac:	930c      	str	r3, [sp, #48]	; 0x30
   1d2ae:	4659      	mov	r1, fp
   1d2b0:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   1d2b4:	f7fc fadc 	bl	19870 <__aeabi_dmul>
   1d2b8:	4682      	mov	sl, r0
   1d2ba:	468b      	mov	fp, r1
   1d2bc:	2900      	cmp	r1, #0
   1d2be:	f47f ade5 	bne.w	1ce8c <_strtod_l+0x4bc>
   1d2c2:	2800      	cmp	r0, #0
   1d2c4:	f47f ade2 	bne.w	1ce8c <_strtod_l+0x4bc>
   1d2c8:	2322      	movs	r3, #34	; 0x22
   1d2ca:	f8c8 3000 	str.w	r3, [r8]
   1d2ce:	e5dd      	b.n	1ce8c <_strtod_l+0x4bc>
   1d2d0:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
   1d2d4:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
   1d2d8:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   1d2dc:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
   1d2e0:	e767      	b.n	1d1b2 <_strtod_l+0x7e2>
   1d2e2:	b19d      	cbz	r5, 1d30c <_strtod_l+0x93c>
   1d2e4:	ea15 0f0b 	tst.w	r5, fp
   1d2e8:	f43f af63 	beq.w	1d1b2 <_strtod_l+0x7e2>
   1d2ec:	9b08      	ldr	r3, [sp, #32]
   1d2ee:	9a05      	ldr	r2, [sp, #20]
   1d2f0:	4650      	mov	r0, sl
   1d2f2:	4659      	mov	r1, fp
   1d2f4:	b173      	cbz	r3, 1d314 <_strtod_l+0x944>
   1d2f6:	f7ff fb4a 	bl	1c98e <sulp>
   1d2fa:	4602      	mov	r2, r0
   1d2fc:	460b      	mov	r3, r1
   1d2fe:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1d302:	f7fc f903 	bl	1950c <__adddf3>
   1d306:	4682      	mov	sl, r0
   1d308:	468b      	mov	fp, r1
   1d30a:	e752      	b.n	1d1b2 <_strtod_l+0x7e2>
   1d30c:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1d30e:	ea13 0f0a 	tst.w	r3, sl
   1d312:	e7e9      	b.n	1d2e8 <_strtod_l+0x918>
   1d314:	f7ff fb3b 	bl	1c98e <sulp>
   1d318:	4602      	mov	r2, r0
   1d31a:	460b      	mov	r3, r1
   1d31c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1d320:	f7fc f8f2 	bl	19508 <__aeabi_dsub>
   1d324:	2200      	movs	r2, #0
   1d326:	2300      	movs	r3, #0
   1d328:	4682      	mov	sl, r0
   1d32a:	468b      	mov	fp, r1
   1d32c:	f003 fd1a 	bl	20d64 <__aeabi_dcmpeq>
   1d330:	2800      	cmp	r0, #0
   1d332:	f47f ae14 	bne.w	1cf5e <_strtod_l+0x58e>
   1d336:	e73c      	b.n	1d1b2 <_strtod_l+0x7e2>
   1d338:	9904      	ldr	r1, [sp, #16]
   1d33a:	4648      	mov	r0, r9
   1d33c:	f002 fb83 	bl	1fa46 <__ratio>
   1d340:	2200      	movs	r2, #0
   1d342:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1d346:	4606      	mov	r6, r0
   1d348:	460f      	mov	r7, r1
   1d34a:	f003 fd1f 	bl	20d8c <__aeabi_dcmple>
   1d34e:	2800      	cmp	r0, #0
   1d350:	d070      	beq.n	1d434 <_strtod_l+0xa64>
   1d352:	9b08      	ldr	r3, [sp, #32]
   1d354:	2b00      	cmp	r3, #0
   1d356:	d043      	beq.n	1d3e0 <_strtod_l+0xa10>
   1d358:	2600      	movs	r6, #0
   1d35a:	4f67      	ldr	r7, [pc, #412]	; (1d4f8 <_strtod_l+0xb28>)
   1d35c:	4d66      	ldr	r5, [pc, #408]	; (1d4f8 <_strtod_l+0xb28>)
   1d35e:	4b63      	ldr	r3, [pc, #396]	; (1d4ec <_strtod_l+0xb1c>)
   1d360:	ea0b 0303 	and.w	r3, fp, r3
   1d364:	9314      	str	r3, [sp, #80]	; 0x50
   1d366:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1d368:	4b64      	ldr	r3, [pc, #400]	; (1d4fc <_strtod_l+0xb2c>)
   1d36a:	429a      	cmp	r2, r3
   1d36c:	f040 80ce 	bne.w	1d50c <_strtod_l+0xb3c>
   1d370:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1d374:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   1d378:	4650      	mov	r0, sl
   1d37a:	4659      	mov	r1, fp
   1d37c:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
   1d380:	f002 fa9c 	bl	1f8bc <__ulp>
   1d384:	4602      	mov	r2, r0
   1d386:	460b      	mov	r3, r1
   1d388:	4630      	mov	r0, r6
   1d38a:	4639      	mov	r1, r7
   1d38c:	f7fc fa70 	bl	19870 <__aeabi_dmul>
   1d390:	4652      	mov	r2, sl
   1d392:	465b      	mov	r3, fp
   1d394:	f7fc f8ba 	bl	1950c <__adddf3>
   1d398:	4a54      	ldr	r2, [pc, #336]	; (1d4ec <_strtod_l+0xb1c>)
   1d39a:	4b59      	ldr	r3, [pc, #356]	; (1d500 <_strtod_l+0xb30>)
   1d39c:	400a      	ands	r2, r1
   1d39e:	429a      	cmp	r2, r3
   1d3a0:	4682      	mov	sl, r0
   1d3a2:	d95d      	bls.n	1d460 <_strtod_l+0xa90>
   1d3a4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1d3a6:	f103 7354 	add.w	r3, r3, #55574528	; 0x3500000
   1d3aa:	429a      	cmp	r2, r3
   1d3ac:	d103      	bne.n	1d3b6 <_strtod_l+0x9e6>
   1d3ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1d3b0:	3301      	adds	r3, #1
   1d3b2:	f43f ad60 	beq.w	1ce76 <_strtod_l+0x4a6>
   1d3b6:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   1d3ba:	f8df b134 	ldr.w	fp, [pc, #308]	; 1d4f0 <_strtod_l+0xb20>
   1d3be:	991a      	ldr	r1, [sp, #104]	; 0x68
   1d3c0:	4640      	mov	r0, r8
   1d3c2:	f001 ffef 	bl	1f3a4 <_Bfree>
   1d3c6:	9906      	ldr	r1, [sp, #24]
   1d3c8:	4640      	mov	r0, r8
   1d3ca:	f001 ffeb 	bl	1f3a4 <_Bfree>
   1d3ce:	9904      	ldr	r1, [sp, #16]
   1d3d0:	4640      	mov	r0, r8
   1d3d2:	f001 ffe7 	bl	1f3a4 <_Bfree>
   1d3d6:	4649      	mov	r1, r9
   1d3d8:	4640      	mov	r0, r8
   1d3da:	f001 ffe3 	bl	1f3a4 <_Bfree>
   1d3de:	e622      	b.n	1d026 <_strtod_l+0x656>
   1d3e0:	f1ba 0f00 	cmp.w	sl, #0
   1d3e4:	d118      	bne.n	1d418 <_strtod_l+0xa48>
   1d3e6:	f3cb 0313 	ubfx	r3, fp, #0, #20
   1d3ea:	b9e3      	cbnz	r3, 1d426 <_strtod_l+0xa56>
   1d3ec:	2200      	movs	r2, #0
   1d3ee:	4b42      	ldr	r3, [pc, #264]	; (1d4f8 <_strtod_l+0xb28>)
   1d3f0:	4630      	mov	r0, r6
   1d3f2:	4639      	mov	r1, r7
   1d3f4:	f003 fcc0 	bl	20d78 <__aeabi_dcmplt>
   1d3f8:	b9c8      	cbnz	r0, 1d42e <_strtod_l+0xa5e>
   1d3fa:	2200      	movs	r2, #0
   1d3fc:	4b41      	ldr	r3, [pc, #260]	; (1d504 <_strtod_l+0xb34>)
   1d3fe:	4630      	mov	r0, r6
   1d400:	4639      	mov	r1, r7
   1d402:	f7fc fa35 	bl	19870 <__aeabi_dmul>
   1d406:	4604      	mov	r4, r0
   1d408:	460d      	mov	r5, r1
   1d40a:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   1d40e:	9416      	str	r4, [sp, #88]	; 0x58
   1d410:	9317      	str	r3, [sp, #92]	; 0x5c
   1d412:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
   1d416:	e7a2      	b.n	1d35e <_strtod_l+0x98e>
   1d418:	f1ba 0f01 	cmp.w	sl, #1
   1d41c:	d103      	bne.n	1d426 <_strtod_l+0xa56>
   1d41e:	f1bb 0f00 	cmp.w	fp, #0
   1d422:	f43f ad9c 	beq.w	1cf5e <_strtod_l+0x58e>
   1d426:	2600      	movs	r6, #0
   1d428:	4f37      	ldr	r7, [pc, #220]	; (1d508 <_strtod_l+0xb38>)
   1d42a:	2400      	movs	r4, #0
   1d42c:	e796      	b.n	1d35c <_strtod_l+0x98c>
   1d42e:	9c08      	ldr	r4, [sp, #32]
   1d430:	4d34      	ldr	r5, [pc, #208]	; (1d504 <_strtod_l+0xb34>)
   1d432:	e7ea      	b.n	1d40a <_strtod_l+0xa3a>
   1d434:	4b33      	ldr	r3, [pc, #204]	; (1d504 <_strtod_l+0xb34>)
   1d436:	2200      	movs	r2, #0
   1d438:	4630      	mov	r0, r6
   1d43a:	4639      	mov	r1, r7
   1d43c:	f7fc fa18 	bl	19870 <__aeabi_dmul>
   1d440:	9b08      	ldr	r3, [sp, #32]
   1d442:	4604      	mov	r4, r0
   1d444:	460d      	mov	r5, r1
   1d446:	b933      	cbnz	r3, 1d456 <_strtod_l+0xa86>
   1d448:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   1d44c:	9010      	str	r0, [sp, #64]	; 0x40
   1d44e:	9311      	str	r3, [sp, #68]	; 0x44
   1d450:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   1d454:	e783      	b.n	1d35e <_strtod_l+0x98e>
   1d456:	4602      	mov	r2, r0
   1d458:	460b      	mov	r3, r1
   1d45a:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   1d45e:	e7f7      	b.n	1d450 <_strtod_l+0xa80>
   1d460:	f101 7b54 	add.w	fp, r1, #55574528	; 0x3500000
   1d464:	9b05      	ldr	r3, [sp, #20]
   1d466:	2b00      	cmp	r3, #0
   1d468:	d1a9      	bne.n	1d3be <_strtod_l+0x9ee>
   1d46a:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   1d46e:	0d1b      	lsrs	r3, r3, #20
   1d470:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1d472:	051b      	lsls	r3, r3, #20
   1d474:	429a      	cmp	r2, r3
   1d476:	465e      	mov	r6, fp
   1d478:	d1a1      	bne.n	1d3be <_strtod_l+0x9ee>
   1d47a:	4629      	mov	r1, r5
   1d47c:	4620      	mov	r0, r4
   1d47e:	f003 fcb9 	bl	20df4 <__aeabi_d2iz>
   1d482:	f7fc f98f 	bl	197a4 <__aeabi_i2d>
   1d486:	460b      	mov	r3, r1
   1d488:	4602      	mov	r2, r0
   1d48a:	4629      	mov	r1, r5
   1d48c:	4620      	mov	r0, r4
   1d48e:	f7fc f83b 	bl	19508 <__aeabi_dsub>
   1d492:	9b08      	ldr	r3, [sp, #32]
   1d494:	4604      	mov	r4, r0
   1d496:	460d      	mov	r5, r1
   1d498:	b933      	cbnz	r3, 1d4a8 <_strtod_l+0xad8>
   1d49a:	f1ba 0f00 	cmp.w	sl, #0
   1d49e:	d103      	bne.n	1d4a8 <_strtod_l+0xad8>
   1d4a0:	f3cb 0613 	ubfx	r6, fp, #0, #20
   1d4a4:	2e00      	cmp	r6, #0
   1d4a6:	d06c      	beq.n	1d582 <_strtod_l+0xbb2>
   1d4a8:	a30b      	add	r3, pc, #44	; (adr r3, 1d4d8 <_strtod_l+0xb08>)
   1d4aa:	e9d3 2300 	ldrd	r2, r3, [r3]
   1d4ae:	4620      	mov	r0, r4
   1d4b0:	4629      	mov	r1, r5
   1d4b2:	f003 fc61 	bl	20d78 <__aeabi_dcmplt>
   1d4b6:	2800      	cmp	r0, #0
   1d4b8:	f47f ace8 	bne.w	1ce8c <_strtod_l+0x4bc>
   1d4bc:	a308      	add	r3, pc, #32	; (adr r3, 1d4e0 <_strtod_l+0xb10>)
   1d4be:	e9d3 2300 	ldrd	r2, r3, [r3]
   1d4c2:	4620      	mov	r0, r4
   1d4c4:	4629      	mov	r1, r5
   1d4c6:	f003 fc75 	bl	20db4 <__aeabi_dcmpgt>
   1d4ca:	2800      	cmp	r0, #0
   1d4cc:	f43f af77 	beq.w	1d3be <_strtod_l+0x9ee>
   1d4d0:	e4dc      	b.n	1ce8c <_strtod_l+0x4bc>
   1d4d2:	bf00      	nop
   1d4d4:	f3af 8000 	nop.w
   1d4d8:	94a03595 	.word	0x94a03595
   1d4dc:	3fdfffff 	.word	0x3fdfffff
   1d4e0:	35afe535 	.word	0x35afe535
   1d4e4:	3fe00000 	.word	0x3fe00000
   1d4e8:	000fffff 	.word	0x000fffff
   1d4ec:	7ff00000 	.word	0x7ff00000
   1d4f0:	7fefffff 	.word	0x7fefffff
   1d4f4:	39500000 	.word	0x39500000
   1d4f8:	3ff00000 	.word	0x3ff00000
   1d4fc:	7fe00000 	.word	0x7fe00000
   1d500:	7c9fffff 	.word	0x7c9fffff
   1d504:	3fe00000 	.word	0x3fe00000
   1d508:	bff00000 	.word	0xbff00000
   1d50c:	9b05      	ldr	r3, [sp, #20]
   1d50e:	b313      	cbz	r3, 1d556 <_strtod_l+0xb86>
   1d510:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1d512:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
   1d516:	d81e      	bhi.n	1d556 <_strtod_l+0xb86>
   1d518:	a325      	add	r3, pc, #148	; (adr r3, 1d5b0 <_strtod_l+0xbe0>)
   1d51a:	e9d3 2300 	ldrd	r2, r3, [r3]
   1d51e:	4620      	mov	r0, r4
   1d520:	4629      	mov	r1, r5
   1d522:	f003 fc33 	bl	20d8c <__aeabi_dcmple>
   1d526:	b190      	cbz	r0, 1d54e <_strtod_l+0xb7e>
   1d528:	4629      	mov	r1, r5
   1d52a:	4620      	mov	r0, r4
   1d52c:	f7fc fbb2 	bl	19c94 <__aeabi_d2uiz>
   1d530:	2800      	cmp	r0, #0
   1d532:	bf08      	it	eq
   1d534:	2001      	moveq	r0, #1
   1d536:	f7fc f925 	bl	19784 <__aeabi_ui2d>
   1d53a:	9b08      	ldr	r3, [sp, #32]
   1d53c:	4604      	mov	r4, r0
   1d53e:	460d      	mov	r5, r1
   1d540:	b9d3      	cbnz	r3, 1d578 <_strtod_l+0xba8>
   1d542:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   1d546:	9012      	str	r0, [sp, #72]	; 0x48
   1d548:	9313      	str	r3, [sp, #76]	; 0x4c
   1d54a:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
   1d54e:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1d550:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
   1d554:	1a9f      	subs	r7, r3, r2
   1d556:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1d55a:	f002 f9af 	bl	1f8bc <__ulp>
   1d55e:	4602      	mov	r2, r0
   1d560:	460b      	mov	r3, r1
   1d562:	4630      	mov	r0, r6
   1d564:	4639      	mov	r1, r7
   1d566:	f7fc f983 	bl	19870 <__aeabi_dmul>
   1d56a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1d56e:	f7fb ffcd 	bl	1950c <__adddf3>
   1d572:	4682      	mov	sl, r0
   1d574:	468b      	mov	fp, r1
   1d576:	e775      	b.n	1d464 <_strtod_l+0xa94>
   1d578:	4602      	mov	r2, r0
   1d57a:	460b      	mov	r3, r1
   1d57c:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   1d580:	e7e3      	b.n	1d54a <_strtod_l+0xb7a>
   1d582:	a30d      	add	r3, pc, #52	; (adr r3, 1d5b8 <_strtod_l+0xbe8>)
   1d584:	e9d3 2300 	ldrd	r2, r3, [r3]
   1d588:	f003 fbf6 	bl	20d78 <__aeabi_dcmplt>
   1d58c:	e79d      	b.n	1d4ca <_strtod_l+0xafa>
   1d58e:	2300      	movs	r3, #0
   1d590:	9309      	str	r3, [sp, #36]	; 0x24
   1d592:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1d594:	9a15      	ldr	r2, [sp, #84]	; 0x54
   1d596:	6013      	str	r3, [r2, #0]
   1d598:	f7ff ba5e 	b.w	1ca58 <_strtod_l+0x88>
   1d59c:	2b65      	cmp	r3, #101	; 0x65
   1d59e:	f04f 0200 	mov.w	r2, #0
   1d5a2:	f43f abae 	beq.w	1cd02 <_strtod_l+0x332>
   1d5a6:	4615      	mov	r5, r2
   1d5a8:	2101      	movs	r1, #1
   1d5aa:	f7ff bacd 	b.w	1cb48 <_strtod_l+0x178>
   1d5ae:	bf00      	nop
   1d5b0:	ffc00000 	.word	0xffc00000
   1d5b4:	41dfffff 	.word	0x41dfffff
   1d5b8:	94a03595 	.word	0x94a03595
   1d5bc:	3fcfffff 	.word	0x3fcfffff

0001d5c0 <_strtod_r>:
_strtod_r():
   1d5c0:	4b05      	ldr	r3, [pc, #20]	; (1d5d8 <_strtod_r+0x18>)
   1d5c2:	b410      	push	{r4}
   1d5c4:	681b      	ldr	r3, [r3, #0]
   1d5c6:	4c05      	ldr	r4, [pc, #20]	; (1d5dc <_strtod_r+0x1c>)
   1d5c8:	6a1b      	ldr	r3, [r3, #32]
   1d5ca:	2b00      	cmp	r3, #0
   1d5cc:	bf08      	it	eq
   1d5ce:	4623      	moveq	r3, r4
   1d5d0:	bc10      	pop	{r4}
   1d5d2:	f7ff b9fd 	b.w	1c9d0 <_strtod_l>
   1d5d6:	bf00      	nop
   1d5d8:	2007c0e4 	.word	0x2007c0e4
   1d5dc:	2007c148 	.word	0x2007c148

0001d5e0 <__strtok_r>:
__strtok_r():
   1d5e0:	b5f0      	push	{r4, r5, r6, r7, lr}
   1d5e2:	b918      	cbnz	r0, 1d5ec <__strtok_r+0xc>
   1d5e4:	6810      	ldr	r0, [r2, #0]
   1d5e6:	b908      	cbnz	r0, 1d5ec <__strtok_r+0xc>
   1d5e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1d5ea:	4620      	mov	r0, r4
   1d5ec:	4604      	mov	r4, r0
   1d5ee:	460f      	mov	r7, r1
   1d5f0:	f814 5b01 	ldrb.w	r5, [r4], #1
   1d5f4:	f817 6b01 	ldrb.w	r6, [r7], #1
   1d5f8:	b91e      	cbnz	r6, 1d602 <__strtok_r+0x22>
   1d5fa:	b965      	cbnz	r5, 1d616 <__strtok_r+0x36>
   1d5fc:	6015      	str	r5, [r2, #0]
   1d5fe:	4628      	mov	r0, r5
   1d600:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1d602:	42b5      	cmp	r5, r6
   1d604:	d1f6      	bne.n	1d5f4 <__strtok_r+0x14>
   1d606:	2b00      	cmp	r3, #0
   1d608:	d1ef      	bne.n	1d5ea <__strtok_r+0xa>
   1d60a:	6014      	str	r4, [r2, #0]
   1d60c:	7003      	strb	r3, [r0, #0]
   1d60e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1d610:	461c      	mov	r4, r3
   1d612:	e00c      	b.n	1d62e <__strtok_r+0x4e>
   1d614:	b915      	cbnz	r5, 1d61c <__strtok_r+0x3c>
   1d616:	460e      	mov	r6, r1
   1d618:	f814 3b01 	ldrb.w	r3, [r4], #1
   1d61c:	f816 5b01 	ldrb.w	r5, [r6], #1
   1d620:	42ab      	cmp	r3, r5
   1d622:	d1f7      	bne.n	1d614 <__strtok_r+0x34>
   1d624:	2b00      	cmp	r3, #0
   1d626:	d0f3      	beq.n	1d610 <__strtok_r+0x30>
   1d628:	2300      	movs	r3, #0
   1d62a:	f804 3c01 	strb.w	r3, [r4, #-1]
   1d62e:	6014      	str	r4, [r2, #0]
   1d630:	bdf0      	pop	{r4, r5, r6, r7, pc}

0001d632 <strtok_r>:
strtok_r():
   1d632:	2301      	movs	r3, #1
   1d634:	f7ff bfd4 	b.w	1d5e0 <__strtok_r>

0001d638 <_strtol_l.isra.0>:
_strtol_l.isra.0():
   1d638:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d63c:	4680      	mov	r8, r0
   1d63e:	4689      	mov	r9, r1
   1d640:	4692      	mov	sl, r2
   1d642:	461f      	mov	r7, r3
   1d644:	468b      	mov	fp, r1
   1d646:	465d      	mov	r5, fp
   1d648:	980a      	ldr	r0, [sp, #40]	; 0x28
   1d64a:	f815 4b01 	ldrb.w	r4, [r5], #1
   1d64e:	f7fd fb55 	bl	1acfc <__locale_ctype_ptr_l>
   1d652:	4420      	add	r0, r4
   1d654:	7846      	ldrb	r6, [r0, #1]
   1d656:	f016 0608 	ands.w	r6, r6, #8
   1d65a:	d10b      	bne.n	1d674 <_strtol_l.isra.0+0x3c>
   1d65c:	2c2d      	cmp	r4, #45	; 0x2d
   1d65e:	d10b      	bne.n	1d678 <_strtol_l.isra.0+0x40>
   1d660:	2601      	movs	r6, #1
   1d662:	782c      	ldrb	r4, [r5, #0]
   1d664:	f10b 0502 	add.w	r5, fp, #2
   1d668:	b167      	cbz	r7, 1d684 <_strtol_l.isra.0+0x4c>
   1d66a:	2f10      	cmp	r7, #16
   1d66c:	d114      	bne.n	1d698 <_strtol_l.isra.0+0x60>
   1d66e:	2c30      	cmp	r4, #48	; 0x30
   1d670:	d00a      	beq.n	1d688 <_strtol_l.isra.0+0x50>
   1d672:	e011      	b.n	1d698 <_strtol_l.isra.0+0x60>
   1d674:	46ab      	mov	fp, r5
   1d676:	e7e6      	b.n	1d646 <_strtol_l.isra.0+0xe>
   1d678:	2c2b      	cmp	r4, #43	; 0x2b
   1d67a:	bf04      	itt	eq
   1d67c:	782c      	ldrbeq	r4, [r5, #0]
   1d67e:	f10b 0502 	addeq.w	r5, fp, #2
   1d682:	e7f1      	b.n	1d668 <_strtol_l.isra.0+0x30>
   1d684:	2c30      	cmp	r4, #48	; 0x30
   1d686:	d127      	bne.n	1d6d8 <_strtol_l.isra.0+0xa0>
   1d688:	782b      	ldrb	r3, [r5, #0]
   1d68a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   1d68e:	2b58      	cmp	r3, #88	; 0x58
   1d690:	d14b      	bne.n	1d72a <_strtol_l.isra.0+0xf2>
   1d692:	2710      	movs	r7, #16
   1d694:	786c      	ldrb	r4, [r5, #1]
   1d696:	3502      	adds	r5, #2
   1d698:	2e00      	cmp	r6, #0
   1d69a:	bf0c      	ite	eq
   1d69c:	f06f 4100 	mvneq.w	r1, #2147483648	; 0x80000000
   1d6a0:	f04f 4100 	movne.w	r1, #2147483648	; 0x80000000
   1d6a4:	2200      	movs	r2, #0
   1d6a6:	fbb1 fef7 	udiv	lr, r1, r7
   1d6aa:	4610      	mov	r0, r2
   1d6ac:	fb07 1c1e 	mls	ip, r7, lr, r1
   1d6b0:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
   1d6b4:	2b09      	cmp	r3, #9
   1d6b6:	d811      	bhi.n	1d6dc <_strtol_l.isra.0+0xa4>
   1d6b8:	461c      	mov	r4, r3
   1d6ba:	42a7      	cmp	r7, r4
   1d6bc:	dd1d      	ble.n	1d6fa <_strtol_l.isra.0+0xc2>
   1d6be:	1c53      	adds	r3, r2, #1
   1d6c0:	d007      	beq.n	1d6d2 <_strtol_l.isra.0+0x9a>
   1d6c2:	4586      	cmp	lr, r0
   1d6c4:	d316      	bcc.n	1d6f4 <_strtol_l.isra.0+0xbc>
   1d6c6:	d101      	bne.n	1d6cc <_strtol_l.isra.0+0x94>
   1d6c8:	45a4      	cmp	ip, r4
   1d6ca:	db13      	blt.n	1d6f4 <_strtol_l.isra.0+0xbc>
   1d6cc:	2201      	movs	r2, #1
   1d6ce:	fb00 4007 	mla	r0, r0, r7, r4
   1d6d2:	f815 4b01 	ldrb.w	r4, [r5], #1
   1d6d6:	e7eb      	b.n	1d6b0 <_strtol_l.isra.0+0x78>
   1d6d8:	270a      	movs	r7, #10
   1d6da:	e7dd      	b.n	1d698 <_strtol_l.isra.0+0x60>
   1d6dc:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
   1d6e0:	2b19      	cmp	r3, #25
   1d6e2:	d801      	bhi.n	1d6e8 <_strtol_l.isra.0+0xb0>
   1d6e4:	3c37      	subs	r4, #55	; 0x37
   1d6e6:	e7e8      	b.n	1d6ba <_strtol_l.isra.0+0x82>
   1d6e8:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
   1d6ec:	2b19      	cmp	r3, #25
   1d6ee:	d804      	bhi.n	1d6fa <_strtol_l.isra.0+0xc2>
   1d6f0:	3c57      	subs	r4, #87	; 0x57
   1d6f2:	e7e2      	b.n	1d6ba <_strtol_l.isra.0+0x82>
   1d6f4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1d6f8:	e7eb      	b.n	1d6d2 <_strtol_l.isra.0+0x9a>
   1d6fa:	1c53      	adds	r3, r2, #1
   1d6fc:	d108      	bne.n	1d710 <_strtol_l.isra.0+0xd8>
   1d6fe:	2322      	movs	r3, #34	; 0x22
   1d700:	4608      	mov	r0, r1
   1d702:	f8c8 3000 	str.w	r3, [r8]
   1d706:	f1ba 0f00 	cmp.w	sl, #0
   1d70a:	d107      	bne.n	1d71c <_strtol_l.isra.0+0xe4>
   1d70c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d710:	b106      	cbz	r6, 1d714 <_strtol_l.isra.0+0xdc>
   1d712:	4240      	negs	r0, r0
   1d714:	f1ba 0f00 	cmp.w	sl, #0
   1d718:	d00c      	beq.n	1d734 <_strtol_l.isra.0+0xfc>
   1d71a:	b122      	cbz	r2, 1d726 <_strtol_l.isra.0+0xee>
   1d71c:	3d01      	subs	r5, #1
   1d71e:	f8ca 5000 	str.w	r5, [sl]
   1d722:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d726:	464d      	mov	r5, r9
   1d728:	e7f9      	b.n	1d71e <_strtol_l.isra.0+0xe6>
   1d72a:	2430      	movs	r4, #48	; 0x30
   1d72c:	2f00      	cmp	r7, #0
   1d72e:	d1b3      	bne.n	1d698 <_strtol_l.isra.0+0x60>
   1d730:	2708      	movs	r7, #8
   1d732:	e7b1      	b.n	1d698 <_strtol_l.isra.0+0x60>
   1d734:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d738 <_strtol_r>:
_strtol_r():
   1d738:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1d73a:	4c06      	ldr	r4, [pc, #24]	; (1d754 <_strtol_r+0x1c>)
   1d73c:	4d06      	ldr	r5, [pc, #24]	; (1d758 <_strtol_r+0x20>)
   1d73e:	6824      	ldr	r4, [r4, #0]
   1d740:	6a24      	ldr	r4, [r4, #32]
   1d742:	2c00      	cmp	r4, #0
   1d744:	bf08      	it	eq
   1d746:	462c      	moveq	r4, r5
   1d748:	9400      	str	r4, [sp, #0]
   1d74a:	f7ff ff75 	bl	1d638 <_strtol_l.isra.0>
   1d74e:	b003      	add	sp, #12
   1d750:	bd30      	pop	{r4, r5, pc}
   1d752:	bf00      	nop
   1d754:	2007c0e4 	.word	0x2007c0e4
   1d758:	2007c148 	.word	0x2007c148

0001d75c <strtol>:
strtol():
   1d75c:	4b08      	ldr	r3, [pc, #32]	; (1d780 <strtol+0x24>)
   1d75e:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1d760:	681c      	ldr	r4, [r3, #0]
   1d762:	4d08      	ldr	r5, [pc, #32]	; (1d784 <strtol+0x28>)
   1d764:	6a23      	ldr	r3, [r4, #32]
   1d766:	2b00      	cmp	r3, #0
   1d768:	bf08      	it	eq
   1d76a:	462b      	moveq	r3, r5
   1d76c:	9300      	str	r3, [sp, #0]
   1d76e:	4613      	mov	r3, r2
   1d770:	460a      	mov	r2, r1
   1d772:	4601      	mov	r1, r0
   1d774:	4620      	mov	r0, r4
   1d776:	f7ff ff5f 	bl	1d638 <_strtol_l.isra.0>
   1d77a:	b003      	add	sp, #12
   1d77c:	bd30      	pop	{r4, r5, pc}
   1d77e:	bf00      	nop
   1d780:	2007c0e4 	.word	0x2007c0e4
   1d784:	2007c148 	.word	0x2007c148

0001d788 <time>:
time():
   1d788:	b513      	push	{r0, r1, r4, lr}
   1d78a:	4b08      	ldr	r3, [pc, #32]	; (1d7ac <time+0x24>)
   1d78c:	4604      	mov	r4, r0
   1d78e:	2200      	movs	r2, #0
   1d790:	6818      	ldr	r0, [r3, #0]
   1d792:	4669      	mov	r1, sp
   1d794:	f001 fd8a 	bl	1f2ac <_gettimeofday_r>
   1d798:	2800      	cmp	r0, #0
   1d79a:	bfbc      	itt	lt
   1d79c:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   1d7a0:	9300      	strlt	r3, [sp, #0]
   1d7a2:	9800      	ldr	r0, [sp, #0]
   1d7a4:	b104      	cbz	r4, 1d7a8 <time+0x20>
   1d7a6:	6020      	str	r0, [r4, #0]
   1d7a8:	b002      	add	sp, #8
   1d7aa:	bd10      	pop	{r4, pc}
   1d7ac:	2007c0e4 	.word	0x2007c0e4

0001d7b0 <__tzcalc_limits>:
__tzcalc_limits():
   1d7b0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7b4:	4604      	mov	r4, r0
   1d7b6:	f001 fd8b 	bl	1f2d0 <__gettzinfo>
   1d7ba:	f240 73b1 	movw	r3, #1969	; 0x7b1
   1d7be:	429c      	cmp	r4, r3
   1d7c0:	f340 8098 	ble.w	1d8f4 <__tzcalc_limits+0x144>
   1d7c4:	f46f 63f6 	mvn.w	r3, #1968	; 0x7b0
   1d7c8:	f240 126d 	movw	r2, #365	; 0x16d
   1d7cc:	18e3      	adds	r3, r4, r3
   1d7ce:	109b      	asrs	r3, r3, #2
   1d7d0:	f2a4 75b2 	subw	r5, r4, #1970	; 0x7b2
   1d7d4:	fb02 3505 	mla	r5, r2, r5, r3
   1d7d8:	f06f 0263 	mvn.w	r2, #99	; 0x63
   1d7dc:	f2a4 736d 	subw	r3, r4, #1901	; 0x76d
   1d7e0:	fb93 f3f2 	sdiv	r3, r3, r2
   1d7e4:	f46f 62c8 	mvn.w	r2, #1600	; 0x640
   1d7e8:	441d      	add	r5, r3
   1d7ea:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1d7ee:	18a2      	adds	r2, r4, r2
   1d7f0:	fb92 f2f3 	sdiv	r2, r2, r3
   1d7f4:	fb94 f7f3 	sdiv	r7, r4, r3
   1d7f8:	4415      	add	r5, r2
   1d7fa:	2264      	movs	r2, #100	; 0x64
   1d7fc:	fb03 4717 	mls	r7, r3, r7, r4
   1d800:	fb94 f6f2 	sdiv	r6, r4, r2
   1d804:	fab7 fe87 	clz	lr, r7
   1d808:	4601      	mov	r1, r0
   1d80a:	f06f 4c40 	mvn.w	ip, #3221225472	; 0xc0000000
   1d80e:	fb02 4616 	mls	r6, r2, r6, r4
   1d812:	f100 0338 	add.w	r3, r0, #56	; 0x38
   1d816:	9301      	str	r3, [sp, #4]
   1d818:	f004 0303 	and.w	r3, r4, #3
   1d81c:	6044      	str	r4, [r0, #4]
   1d81e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
   1d822:	9300      	str	r3, [sp, #0]
   1d824:	7a0b      	ldrb	r3, [r1, #8]
   1d826:	2b4a      	cmp	r3, #74	; 0x4a
   1d828:	d123      	bne.n	1d872 <__tzcalc_limits+0xc2>
   1d82a:	694c      	ldr	r4, [r1, #20]
   1d82c:	9a00      	ldr	r2, [sp, #0]
   1d82e:	192b      	adds	r3, r5, r4
   1d830:	b902      	cbnz	r2, 1d834 <__tzcalc_limits+0x84>
   1d832:	b906      	cbnz	r6, 1d836 <__tzcalc_limits+0x86>
   1d834:	b9df      	cbnz	r7, 1d86e <__tzcalc_limits+0xbe>
   1d836:	2c3b      	cmp	r4, #59	; 0x3b
   1d838:	bfd4      	ite	le
   1d83a:	2400      	movle	r4, #0
   1d83c:	2401      	movgt	r4, #1
   1d83e:	441c      	add	r4, r3
   1d840:	3c01      	subs	r4, #1
   1d842:	4b2d      	ldr	r3, [pc, #180]	; (1d8f8 <__tzcalc_limits+0x148>)
   1d844:	698a      	ldr	r2, [r1, #24]
   1d846:	fb03 2404 	mla	r4, r3, r4, r2
   1d84a:	6a0b      	ldr	r3, [r1, #32]
   1d84c:	441c      	add	r4, r3
   1d84e:	9b01      	ldr	r3, [sp, #4]
   1d850:	f841 4f1c 	str.w	r4, [r1, #28]!
   1d854:	428b      	cmp	r3, r1
   1d856:	d1e5      	bne.n	1d824 <__tzcalc_limits+0x74>
   1d858:	69c3      	ldr	r3, [r0, #28]
   1d85a:	6b82      	ldr	r2, [r0, #56]	; 0x38
   1d85c:	4293      	cmp	r3, r2
   1d85e:	bfac      	ite	ge
   1d860:	2300      	movge	r3, #0
   1d862:	2301      	movlt	r3, #1
   1d864:	6003      	str	r3, [r0, #0]
   1d866:	2001      	movs	r0, #1
   1d868:	b003      	add	sp, #12
   1d86a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d86e:	2400      	movs	r4, #0
   1d870:	e7e5      	b.n	1d83e <__tzcalc_limits+0x8e>
   1d872:	2b44      	cmp	r3, #68	; 0x44
   1d874:	d102      	bne.n	1d87c <__tzcalc_limits+0xcc>
   1d876:	694b      	ldr	r3, [r1, #20]
   1d878:	18ec      	adds	r4, r5, r3
   1d87a:	e7e2      	b.n	1d842 <__tzcalc_limits+0x92>
   1d87c:	9b00      	ldr	r3, [sp, #0]
   1d87e:	bb7b      	cbnz	r3, 1d8e0 <__tzcalc_limits+0x130>
   1d880:	2e00      	cmp	r6, #0
   1d882:	bf0c      	ite	eq
   1d884:	46f0      	moveq	r8, lr
   1d886:	f04f 0801 	movne.w	r8, #1
   1d88a:	2230      	movs	r2, #48	; 0x30
   1d88c:	4b1b      	ldr	r3, [pc, #108]	; (1d8fc <__tzcalc_limits+0x14c>)
   1d88e:	f04f 0901 	mov.w	r9, #1
   1d892:	fb02 3808 	mla	r8, r2, r8, r3
   1d896:	462b      	mov	r3, r5
   1d898:	68cc      	ldr	r4, [r1, #12]
   1d89a:	f1a8 0a04 	sub.w	sl, r8, #4
   1d89e:	45a1      	cmp	r9, r4
   1d8a0:	db20      	blt.n	1d8e4 <__tzcalc_limits+0x134>
   1d8a2:	2207      	movs	r2, #7
   1d8a4:	2c01      	cmp	r4, #1
   1d8a6:	bfb8      	it	lt
   1d8a8:	2401      	movlt	r4, #1
   1d8aa:	f103 0b04 	add.w	fp, r3, #4
   1d8ae:	fb9b faf2 	sdiv	sl, fp, r2
   1d8b2:	46a1      	mov	r9, r4
   1d8b4:	ebca 0aca 	rsb	sl, sl, sl, lsl #3
   1d8b8:	694c      	ldr	r4, [r1, #20]
   1d8ba:	ebab 0a0a 	sub.w	sl, fp, sl
   1d8be:	ebb4 0a0a 	subs.w	sl, r4, sl
   1d8c2:	690c      	ldr	r4, [r1, #16]
   1d8c4:	44e1      	add	r9, ip
   1d8c6:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
   1d8ca:	bf48      	it	mi
   1d8cc:	4492      	addmi	sl, r2
   1d8ce:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
   1d8d2:	f858 8029 	ldr.w	r8, [r8, r9, lsl #2]
   1d8d6:	4454      	add	r4, sl
   1d8d8:	4544      	cmp	r4, r8
   1d8da:	da09      	bge.n	1d8f0 <__tzcalc_limits+0x140>
   1d8dc:	441c      	add	r4, r3
   1d8de:	e7b0      	b.n	1d842 <__tzcalc_limits+0x92>
   1d8e0:	46f0      	mov	r8, lr
   1d8e2:	e7d2      	b.n	1d88a <__tzcalc_limits+0xda>
   1d8e4:	f85a bf04 	ldr.w	fp, [sl, #4]!
   1d8e8:	f109 0901 	add.w	r9, r9, #1
   1d8ec:	445b      	add	r3, fp
   1d8ee:	e7d6      	b.n	1d89e <__tzcalc_limits+0xee>
   1d8f0:	3c07      	subs	r4, #7
   1d8f2:	e7f1      	b.n	1d8d8 <__tzcalc_limits+0x128>
   1d8f4:	2000      	movs	r0, #0
   1d8f6:	e7b7      	b.n	1d868 <__tzcalc_limits+0xb8>
   1d8f8:	00015180 	.word	0x00015180
   1d8fc:	00022418 	.word	0x00022418

0001d900 <__tz_lock>:
__tz_lock():
   1d900:	4770      	bx	lr

0001d902 <__tz_unlock>:
__tz_unlock():
   1d902:	4770      	bx	lr

0001d904 <_tzset_unlocked>:
_tzset_unlocked():
   1d904:	4b01      	ldr	r3, [pc, #4]	; (1d90c <_tzset_unlocked+0x8>)
   1d906:	6818      	ldr	r0, [r3, #0]
   1d908:	f000 b802 	b.w	1d910 <_tzset_unlocked_r>
   1d90c:	2007c0e4 	.word	0x2007c0e4

0001d910 <_tzset_unlocked_r>:
_tzset_unlocked_r():
   1d910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d914:	b08d      	sub	sp, #52	; 0x34
   1d916:	4607      	mov	r7, r0
   1d918:	f001 fcda 	bl	1f2d0 <__gettzinfo>
   1d91c:	49b1      	ldr	r1, [pc, #708]	; (1dbe4 <_tzset_unlocked_r+0x2d4>)
   1d91e:	4605      	mov	r5, r0
   1d920:	4638      	mov	r0, r7
   1d922:	f001 fcbb 	bl	1f29c <_getenv_r>
   1d926:	4eb0      	ldr	r6, [pc, #704]	; (1dbe8 <_tzset_unlocked_r+0x2d8>)
   1d928:	4604      	mov	r4, r0
   1d92a:	b970      	cbnz	r0, 1d94a <_tzset_unlocked_r+0x3a>
   1d92c:	4baf      	ldr	r3, [pc, #700]	; (1dbec <_tzset_unlocked_r+0x2dc>)
   1d92e:	4ab0      	ldr	r2, [pc, #704]	; (1dbf0 <_tzset_unlocked_r+0x2e0>)
   1d930:	6018      	str	r0, [r3, #0]
   1d932:	4bb0      	ldr	r3, [pc, #704]	; (1dbf4 <_tzset_unlocked_r+0x2e4>)
   1d934:	6018      	str	r0, [r3, #0]
   1d936:	4bb0      	ldr	r3, [pc, #704]	; (1dbf8 <_tzset_unlocked_r+0x2e8>)
   1d938:	6830      	ldr	r0, [r6, #0]
   1d93a:	601a      	str	r2, [r3, #0]
   1d93c:	605a      	str	r2, [r3, #4]
   1d93e:	f7fd fa5b 	bl	1adf8 <free>
   1d942:	6034      	str	r4, [r6, #0]
   1d944:	b00d      	add	sp, #52	; 0x34
   1d946:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d94a:	6831      	ldr	r1, [r6, #0]
   1d94c:	2900      	cmp	r1, #0
   1d94e:	d160      	bne.n	1da12 <_tzset_unlocked_r+0x102>
   1d950:	6830      	ldr	r0, [r6, #0]
   1d952:	f7fd fa51 	bl	1adf8 <free>
   1d956:	4620      	mov	r0, r4
   1d958:	f7fe ffcf 	bl	1c8fa <strlen>
   1d95c:	1c41      	adds	r1, r0, #1
   1d95e:	4638      	mov	r0, r7
   1d960:	f7fd fda0 	bl	1b4a4 <_malloc_r>
   1d964:	6030      	str	r0, [r6, #0]
   1d966:	2800      	cmp	r0, #0
   1d968:	d158      	bne.n	1da1c <_tzset_unlocked_r+0x10c>
   1d96a:	7823      	ldrb	r3, [r4, #0]
   1d96c:	ae0a      	add	r6, sp, #40	; 0x28
   1d96e:	2b3a      	cmp	r3, #58	; 0x3a
   1d970:	bf08      	it	eq
   1d972:	3401      	addeq	r4, #1
   1d974:	4633      	mov	r3, r6
   1d976:	4aa1      	ldr	r2, [pc, #644]	; (1dbfc <_tzset_unlocked_r+0x2ec>)
   1d978:	49a1      	ldr	r1, [pc, #644]	; (1dc00 <_tzset_unlocked_r+0x2f0>)
   1d97a:	4620      	mov	r0, r4
   1d97c:	f7fe ff2e 	bl	1c7dc <siscanf>
   1d980:	2800      	cmp	r0, #0
   1d982:	dddf      	ble.n	1d944 <_tzset_unlocked_r+0x34>
   1d984:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1d986:	18e7      	adds	r7, r4, r3
   1d988:	5ce3      	ldrb	r3, [r4, r3]
   1d98a:	2b2d      	cmp	r3, #45	; 0x2d
   1d98c:	d14a      	bne.n	1da24 <_tzset_unlocked_r+0x114>
   1d98e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   1d992:	3701      	adds	r7, #1
   1d994:	f04f 0800 	mov.w	r8, #0
   1d998:	f10d 0a20 	add.w	sl, sp, #32
   1d99c:	f10d 0b1e 	add.w	fp, sp, #30
   1d9a0:	9603      	str	r6, [sp, #12]
   1d9a2:	f8cd a008 	str.w	sl, [sp, #8]
   1d9a6:	9601      	str	r6, [sp, #4]
   1d9a8:	f8cd b000 	str.w	fp, [sp]
   1d9ac:	4633      	mov	r3, r6
   1d9ae:	aa07      	add	r2, sp, #28
   1d9b0:	4994      	ldr	r1, [pc, #592]	; (1dc04 <_tzset_unlocked_r+0x2f4>)
   1d9b2:	4638      	mov	r0, r7
   1d9b4:	f8ad 801e 	strh.w	r8, [sp, #30]
   1d9b8:	f8ad 8020 	strh.w	r8, [sp, #32]
   1d9bc:	f7fe ff0e 	bl	1c7dc <siscanf>
   1d9c0:	4540      	cmp	r0, r8
   1d9c2:	ddbf      	ble.n	1d944 <_tzset_unlocked_r+0x34>
   1d9c4:	213c      	movs	r1, #60	; 0x3c
   1d9c6:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   1d9ca:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   1d9ce:	f8df 9240 	ldr.w	r9, [pc, #576]	; 1dc10 <_tzset_unlocked_r+0x300>
   1d9d2:	fb01 2203 	mla	r2, r1, r3, r2
   1d9d6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   1d9da:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   1d9de:	fb01 2303 	mla	r3, r1, r3, r2
   1d9e2:	435c      	muls	r4, r3
   1d9e4:	4b85      	ldr	r3, [pc, #532]	; (1dbfc <_tzset_unlocked_r+0x2ec>)
   1d9e6:	622c      	str	r4, [r5, #32]
   1d9e8:	4c83      	ldr	r4, [pc, #524]	; (1dbf8 <_tzset_unlocked_r+0x2e8>)
   1d9ea:	464a      	mov	r2, r9
   1d9ec:	6023      	str	r3, [r4, #0]
   1d9ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1d9f0:	4983      	ldr	r1, [pc, #524]	; (1dc00 <_tzset_unlocked_r+0x2f0>)
   1d9f2:	441f      	add	r7, r3
   1d9f4:	4638      	mov	r0, r7
   1d9f6:	4633      	mov	r3, r6
   1d9f8:	f7fe fef0 	bl	1c7dc <siscanf>
   1d9fc:	4540      	cmp	r0, r8
   1d9fe:	dc16      	bgt.n	1da2e <_tzset_unlocked_r+0x11e>
   1da00:	6823      	ldr	r3, [r4, #0]
   1da02:	6a2a      	ldr	r2, [r5, #32]
   1da04:	6063      	str	r3, [r4, #4]
   1da06:	4b79      	ldr	r3, [pc, #484]	; (1dbec <_tzset_unlocked_r+0x2dc>)
   1da08:	601a      	str	r2, [r3, #0]
   1da0a:	4b7a      	ldr	r3, [pc, #488]	; (1dbf4 <_tzset_unlocked_r+0x2e4>)
   1da0c:	f8c3 8000 	str.w	r8, [r3]
   1da10:	e798      	b.n	1d944 <_tzset_unlocked_r+0x34>
   1da12:	f7fe ff60 	bl	1c8d6 <strcmp>
   1da16:	2800      	cmp	r0, #0
   1da18:	d094      	beq.n	1d944 <_tzset_unlocked_r+0x34>
   1da1a:	e799      	b.n	1d950 <_tzset_unlocked_r+0x40>
   1da1c:	4621      	mov	r1, r4
   1da1e:	f7fe ff64 	bl	1c8ea <strcpy>
   1da22:	e7a2      	b.n	1d96a <_tzset_unlocked_r+0x5a>
   1da24:	2b2b      	cmp	r3, #43	; 0x2b
   1da26:	bf08      	it	eq
   1da28:	3701      	addeq	r7, #1
   1da2a:	2401      	movs	r4, #1
   1da2c:	e7b2      	b.n	1d994 <_tzset_unlocked_r+0x84>
   1da2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1da30:	f8c4 9004 	str.w	r9, [r4, #4]
   1da34:	18fc      	adds	r4, r7, r3
   1da36:	5cfb      	ldrb	r3, [r7, r3]
   1da38:	2b2d      	cmp	r3, #45	; 0x2d
   1da3a:	f040 8092 	bne.w	1db62 <_tzset_unlocked_r+0x252>
   1da3e:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1da42:	3401      	adds	r4, #1
   1da44:	2300      	movs	r3, #0
   1da46:	9603      	str	r6, [sp, #12]
   1da48:	f8ad 301c 	strh.w	r3, [sp, #28]
   1da4c:	f8ad 301e 	strh.w	r3, [sp, #30]
   1da50:	f8ad 3020 	strh.w	r3, [sp, #32]
   1da54:	930a      	str	r3, [sp, #40]	; 0x28
   1da56:	f8cd a008 	str.w	sl, [sp, #8]
   1da5a:	9601      	str	r6, [sp, #4]
   1da5c:	f8cd b000 	str.w	fp, [sp]
   1da60:	4633      	mov	r3, r6
   1da62:	aa07      	add	r2, sp, #28
   1da64:	4967      	ldr	r1, [pc, #412]	; (1dc04 <_tzset_unlocked_r+0x2f4>)
   1da66:	4620      	mov	r0, r4
   1da68:	f7fe feb8 	bl	1c7dc <siscanf>
   1da6c:	2800      	cmp	r0, #0
   1da6e:	dc7d      	bgt.n	1db6c <_tzset_unlocked_r+0x25c>
   1da70:	6a2b      	ldr	r3, [r5, #32]
   1da72:	f5a3 6361 	sub.w	r3, r3, #3600	; 0xe10
   1da76:	63eb      	str	r3, [r5, #60]	; 0x3c
   1da78:	462f      	mov	r7, r5
   1da7a:	f04f 0900 	mov.w	r9, #0
   1da7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1da80:	441c      	add	r4, r3
   1da82:	7823      	ldrb	r3, [r4, #0]
   1da84:	2b2c      	cmp	r3, #44	; 0x2c
   1da86:	bf08      	it	eq
   1da88:	3401      	addeq	r4, #1
   1da8a:	f894 8000 	ldrb.w	r8, [r4]
   1da8e:	f1b8 0f4d 	cmp.w	r8, #77	; 0x4d
   1da92:	d17b      	bne.n	1db8c <_tzset_unlocked_r+0x27c>
   1da94:	f10d 0326 	add.w	r3, sp, #38	; 0x26
   1da98:	9302      	str	r3, [sp, #8]
   1da9a:	ab09      	add	r3, sp, #36	; 0x24
   1da9c:	9300      	str	r3, [sp, #0]
   1da9e:	9603      	str	r6, [sp, #12]
   1daa0:	9601      	str	r6, [sp, #4]
   1daa2:	4633      	mov	r3, r6
   1daa4:	f10d 0222 	add.w	r2, sp, #34	; 0x22
   1daa8:	4957      	ldr	r1, [pc, #348]	; (1dc08 <_tzset_unlocked_r+0x2f8>)
   1daaa:	4620      	mov	r0, r4
   1daac:	f7fe fe96 	bl	1c7dc <siscanf>
   1dab0:	2803      	cmp	r0, #3
   1dab2:	f47f af47 	bne.w	1d944 <_tzset_unlocked_r+0x34>
   1dab6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
   1daba:	1e4b      	subs	r3, r1, #1
   1dabc:	2b0b      	cmp	r3, #11
   1dabe:	f63f af41 	bhi.w	1d944 <_tzset_unlocked_r+0x34>
   1dac2:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   1dac6:	1e53      	subs	r3, r2, #1
   1dac8:	2b04      	cmp	r3, #4
   1daca:	f63f af3b 	bhi.w	1d944 <_tzset_unlocked_r+0x34>
   1dace:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
   1dad2:	2b06      	cmp	r3, #6
   1dad4:	f63f af36 	bhi.w	1d944 <_tzset_unlocked_r+0x34>
   1dad8:	f887 8008 	strb.w	r8, [r7, #8]
   1dadc:	60f9      	str	r1, [r7, #12]
   1dade:	613a      	str	r2, [r7, #16]
   1dae0:	617b      	str	r3, [r7, #20]
   1dae2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1dae4:	eb04 0803 	add.w	r8, r4, r3
   1dae8:	2302      	movs	r3, #2
   1daea:	f8ad 301c 	strh.w	r3, [sp, #28]
   1daee:	2300      	movs	r3, #0
   1daf0:	f8ad 301e 	strh.w	r3, [sp, #30]
   1daf4:	f8ad 3020 	strh.w	r3, [sp, #32]
   1daf8:	930a      	str	r3, [sp, #40]	; 0x28
   1dafa:	f898 3000 	ldrb.w	r3, [r8]
   1dafe:	2b2f      	cmp	r3, #47	; 0x2f
   1db00:	d10b      	bne.n	1db1a <_tzset_unlocked_r+0x20a>
   1db02:	9603      	str	r6, [sp, #12]
   1db04:	f8cd a008 	str.w	sl, [sp, #8]
   1db08:	9601      	str	r6, [sp, #4]
   1db0a:	f8cd b000 	str.w	fp, [sp]
   1db0e:	4633      	mov	r3, r6
   1db10:	aa07      	add	r2, sp, #28
   1db12:	493e      	ldr	r1, [pc, #248]	; (1dc0c <_tzset_unlocked_r+0x2fc>)
   1db14:	4640      	mov	r0, r8
   1db16:	f7fe fe61 	bl	1c7dc <siscanf>
   1db1a:	213c      	movs	r1, #60	; 0x3c
   1db1c:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   1db20:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   1db24:	f109 0901 	add.w	r9, r9, #1
   1db28:	fb01 2203 	mla	r2, r1, r3, r2
   1db2c:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   1db30:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   1db34:	f1b9 0f02 	cmp.w	r9, #2
   1db38:	fb01 2303 	mla	r3, r1, r3, r2
   1db3c:	61bb      	str	r3, [r7, #24]
   1db3e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   1db40:	f107 071c 	add.w	r7, r7, #28
   1db44:	4444      	add	r4, r8
   1db46:	d19c      	bne.n	1da82 <_tzset_unlocked_r+0x172>
   1db48:	6868      	ldr	r0, [r5, #4]
   1db4a:	f7ff fe31 	bl	1d7b0 <__tzcalc_limits>
   1db4e:	6a2a      	ldr	r2, [r5, #32]
   1db50:	4b26      	ldr	r3, [pc, #152]	; (1dbec <_tzset_unlocked_r+0x2dc>)
   1db52:	601a      	str	r2, [r3, #0]
   1db54:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   1db56:	1a9b      	subs	r3, r3, r2
   1db58:	bf18      	it	ne
   1db5a:	2301      	movne	r3, #1
   1db5c:	4a25      	ldr	r2, [pc, #148]	; (1dbf4 <_tzset_unlocked_r+0x2e4>)
   1db5e:	6013      	str	r3, [r2, #0]
   1db60:	e6f0      	b.n	1d944 <_tzset_unlocked_r+0x34>
   1db62:	2b2b      	cmp	r3, #43	; 0x2b
   1db64:	bf08      	it	eq
   1db66:	3401      	addeq	r4, #1
   1db68:	2701      	movs	r7, #1
   1db6a:	e76b      	b.n	1da44 <_tzset_unlocked_r+0x134>
   1db6c:	213c      	movs	r1, #60	; 0x3c
   1db6e:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   1db72:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   1db76:	fb01 2203 	mla	r2, r1, r3, r2
   1db7a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   1db7e:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   1db82:	fb01 2303 	mla	r3, r1, r3, r2
   1db86:	435f      	muls	r7, r3
   1db88:	63ef      	str	r7, [r5, #60]	; 0x3c
   1db8a:	e775      	b.n	1da78 <_tzset_unlocked_r+0x168>
   1db8c:	f1b8 0f4a 	cmp.w	r8, #74	; 0x4a
   1db90:	bf0a      	itet	eq
   1db92:	4643      	moveq	r3, r8
   1db94:	2344      	movne	r3, #68	; 0x44
   1db96:	3401      	addeq	r4, #1
   1db98:	220a      	movs	r2, #10
   1db9a:	a90b      	add	r1, sp, #44	; 0x2c
   1db9c:	4620      	mov	r0, r4
   1db9e:	9305      	str	r3, [sp, #20]
   1dba0:	f002 ffbc 	bl	20b1c <strtoul>
   1dba4:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   1dba8:	f8ad 0026 	strh.w	r0, [sp, #38]	; 0x26
   1dbac:	4544      	cmp	r4, r8
   1dbae:	9b05      	ldr	r3, [sp, #20]
   1dbb0:	d114      	bne.n	1dbdc <_tzset_unlocked_r+0x2cc>
   1dbb2:	234d      	movs	r3, #77	; 0x4d
   1dbb4:	f1b9 0f00 	cmp.w	r9, #0
   1dbb8:	d107      	bne.n	1dbca <_tzset_unlocked_r+0x2ba>
   1dbba:	722b      	strb	r3, [r5, #8]
   1dbbc:	2303      	movs	r3, #3
   1dbbe:	60eb      	str	r3, [r5, #12]
   1dbc0:	2302      	movs	r3, #2
   1dbc2:	f8c5 9014 	str.w	r9, [r5, #20]
   1dbc6:	612b      	str	r3, [r5, #16]
   1dbc8:	e78e      	b.n	1dae8 <_tzset_unlocked_r+0x1d8>
   1dbca:	f885 3024 	strb.w	r3, [r5, #36]	; 0x24
   1dbce:	230b      	movs	r3, #11
   1dbd0:	62ab      	str	r3, [r5, #40]	; 0x28
   1dbd2:	2301      	movs	r3, #1
   1dbd4:	62eb      	str	r3, [r5, #44]	; 0x2c
   1dbd6:	2300      	movs	r3, #0
   1dbd8:	632b      	str	r3, [r5, #48]	; 0x30
   1dbda:	e785      	b.n	1dae8 <_tzset_unlocked_r+0x1d8>
   1dbdc:	b280      	uxth	r0, r0
   1dbde:	723b      	strb	r3, [r7, #8]
   1dbe0:	6178      	str	r0, [r7, #20]
   1dbe2:	e781      	b.n	1dae8 <_tzset_unlocked_r+0x1d8>
   1dbe4:	00022500 	.word	0x00022500
   1dbe8:	2007d054 	.word	0x2007d054
   1dbec:	2007d05c 	.word	0x2007d05c
   1dbf0:	00022503 	.word	0x00022503
   1dbf4:	2007d058 	.word	0x2007d058
   1dbf8:	2007c2b4 	.word	0x2007c2b4
   1dbfc:	2007d047 	.word	0x2007d047
   1dc00:	00022507 	.word	0x00022507
   1dc04:	0002252a 	.word	0x0002252a
   1dc08:	00022516 	.word	0x00022516
   1dc0c:	00022529 	.word	0x00022529
   1dc10:	2007d03c 	.word	0x2007d03c

0001dc14 <_vsniprintf_r>:
_vsniprintf_r():
   1dc14:	b530      	push	{r4, r5, lr}
   1dc16:	1e14      	subs	r4, r2, #0
   1dc18:	4605      	mov	r5, r0
   1dc1a:	b09b      	sub	sp, #108	; 0x6c
   1dc1c:	4618      	mov	r0, r3
   1dc1e:	da05      	bge.n	1dc2c <_vsniprintf_r+0x18>
   1dc20:	238b      	movs	r3, #139	; 0x8b
   1dc22:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1dc26:	602b      	str	r3, [r5, #0]
   1dc28:	b01b      	add	sp, #108	; 0x6c
   1dc2a:	bd30      	pop	{r4, r5, pc}
   1dc2c:	f44f 7302 	mov.w	r3, #520	; 0x208
   1dc30:	f8ad 300c 	strh.w	r3, [sp, #12]
   1dc34:	bf0c      	ite	eq
   1dc36:	4623      	moveq	r3, r4
   1dc38:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
   1dc3c:	9302      	str	r3, [sp, #8]
   1dc3e:	9305      	str	r3, [sp, #20]
   1dc40:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1dc44:	9100      	str	r1, [sp, #0]
   1dc46:	9104      	str	r1, [sp, #16]
   1dc48:	f8ad 300e 	strh.w	r3, [sp, #14]
   1dc4c:	4602      	mov	r2, r0
   1dc4e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1dc50:	4669      	mov	r1, sp
   1dc52:	4628      	mov	r0, r5
   1dc54:	f001 ffdc 	bl	1fc10 <_svfiprintf_r>
   1dc58:	1c43      	adds	r3, r0, #1
   1dc5a:	bfbc      	itt	lt
   1dc5c:	238b      	movlt	r3, #139	; 0x8b
   1dc5e:	602b      	strlt	r3, [r5, #0]
   1dc60:	2c00      	cmp	r4, #0
   1dc62:	d0e1      	beq.n	1dc28 <_vsniprintf_r+0x14>
   1dc64:	2200      	movs	r2, #0
   1dc66:	9b00      	ldr	r3, [sp, #0]
   1dc68:	701a      	strb	r2, [r3, #0]
   1dc6a:	e7dd      	b.n	1dc28 <_vsniprintf_r+0x14>

0001dc6c <vsniprintf>:
vsniprintf():
   1dc6c:	b507      	push	{r0, r1, r2, lr}
   1dc6e:	9300      	str	r3, [sp, #0]
   1dc70:	4613      	mov	r3, r2
   1dc72:	460a      	mov	r2, r1
   1dc74:	4601      	mov	r1, r0
   1dc76:	4803      	ldr	r0, [pc, #12]	; (1dc84 <vsniprintf+0x18>)
   1dc78:	6800      	ldr	r0, [r0, #0]
   1dc7a:	f7ff ffcb 	bl	1dc14 <_vsniprintf_r>
   1dc7e:	b003      	add	sp, #12
   1dc80:	f85d fb04 	ldr.w	pc, [sp], #4
   1dc84:	2007c0e4 	.word	0x2007c0e4

0001dc88 <__swbuf_r>:
__swbuf_r():
   1dc88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1dc8a:	460e      	mov	r6, r1
   1dc8c:	4614      	mov	r4, r2
   1dc8e:	4605      	mov	r5, r0
   1dc90:	b118      	cbz	r0, 1dc9a <__swbuf_r+0x12>
   1dc92:	6983      	ldr	r3, [r0, #24]
   1dc94:	b90b      	cbnz	r3, 1dc9a <__swbuf_r+0x12>
   1dc96:	f7fc fe8b 	bl	1a9b0 <__sinit>
   1dc9a:	4b21      	ldr	r3, [pc, #132]	; (1dd20 <__swbuf_r+0x98>)
   1dc9c:	429c      	cmp	r4, r3
   1dc9e:	d12a      	bne.n	1dcf6 <__swbuf_r+0x6e>
   1dca0:	686c      	ldr	r4, [r5, #4]
   1dca2:	69a3      	ldr	r3, [r4, #24]
   1dca4:	60a3      	str	r3, [r4, #8]
   1dca6:	89a3      	ldrh	r3, [r4, #12]
   1dca8:	071a      	lsls	r2, r3, #28
   1dcaa:	d52e      	bpl.n	1dd0a <__swbuf_r+0x82>
   1dcac:	6923      	ldr	r3, [r4, #16]
   1dcae:	b363      	cbz	r3, 1dd0a <__swbuf_r+0x82>
   1dcb0:	6923      	ldr	r3, [r4, #16]
   1dcb2:	6820      	ldr	r0, [r4, #0]
   1dcb4:	b2f6      	uxtb	r6, r6
   1dcb6:	1ac0      	subs	r0, r0, r3
   1dcb8:	6963      	ldr	r3, [r4, #20]
   1dcba:	4637      	mov	r7, r6
   1dcbc:	4298      	cmp	r0, r3
   1dcbe:	db04      	blt.n	1dcca <__swbuf_r+0x42>
   1dcc0:	4621      	mov	r1, r4
   1dcc2:	4628      	mov	r0, r5
   1dcc4:	f7fc fd58 	bl	1a778 <_fflush_r>
   1dcc8:	bb28      	cbnz	r0, 1dd16 <__swbuf_r+0x8e>
   1dcca:	68a3      	ldr	r3, [r4, #8]
   1dccc:	3001      	adds	r0, #1
   1dcce:	3b01      	subs	r3, #1
   1dcd0:	60a3      	str	r3, [r4, #8]
   1dcd2:	6823      	ldr	r3, [r4, #0]
   1dcd4:	1c5a      	adds	r2, r3, #1
   1dcd6:	6022      	str	r2, [r4, #0]
   1dcd8:	701e      	strb	r6, [r3, #0]
   1dcda:	6963      	ldr	r3, [r4, #20]
   1dcdc:	4298      	cmp	r0, r3
   1dcde:	d004      	beq.n	1dcea <__swbuf_r+0x62>
   1dce0:	89a3      	ldrh	r3, [r4, #12]
   1dce2:	07db      	lsls	r3, r3, #31
   1dce4:	d519      	bpl.n	1dd1a <__swbuf_r+0x92>
   1dce6:	2e0a      	cmp	r6, #10
   1dce8:	d117      	bne.n	1dd1a <__swbuf_r+0x92>
   1dcea:	4621      	mov	r1, r4
   1dcec:	4628      	mov	r0, r5
   1dcee:	f7fc fd43 	bl	1a778 <_fflush_r>
   1dcf2:	b190      	cbz	r0, 1dd1a <__swbuf_r+0x92>
   1dcf4:	e00f      	b.n	1dd16 <__swbuf_r+0x8e>
   1dcf6:	4b0b      	ldr	r3, [pc, #44]	; (1dd24 <__swbuf_r+0x9c>)
   1dcf8:	429c      	cmp	r4, r3
   1dcfa:	d101      	bne.n	1dd00 <__swbuf_r+0x78>
   1dcfc:	68ac      	ldr	r4, [r5, #8]
   1dcfe:	e7d0      	b.n	1dca2 <__swbuf_r+0x1a>
   1dd00:	4b09      	ldr	r3, [pc, #36]	; (1dd28 <__swbuf_r+0xa0>)
   1dd02:	429c      	cmp	r4, r3
   1dd04:	bf08      	it	eq
   1dd06:	68ec      	ldreq	r4, [r5, #12]
   1dd08:	e7cb      	b.n	1dca2 <__swbuf_r+0x1a>
   1dd0a:	4621      	mov	r1, r4
   1dd0c:	4628      	mov	r0, r5
   1dd0e:	f000 f82d 	bl	1dd6c <__swsetup_r>
   1dd12:	2800      	cmp	r0, #0
   1dd14:	d0cc      	beq.n	1dcb0 <__swbuf_r+0x28>
   1dd16:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1dd1a:	4638      	mov	r0, r7
   1dd1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1dd1e:	bf00      	nop
   1dd20:	0002236c 	.word	0x0002236c
   1dd24:	0002238c 	.word	0x0002238c
   1dd28:	0002234c 	.word	0x0002234c

0001dd2c <__ascii_wctomb>:
__ascii_wctomb():
   1dd2c:	b149      	cbz	r1, 1dd42 <__ascii_wctomb+0x16>
   1dd2e:	2aff      	cmp	r2, #255	; 0xff
   1dd30:	bf8b      	itete	hi
   1dd32:	238a      	movhi	r3, #138	; 0x8a
   1dd34:	700a      	strbls	r2, [r1, #0]
   1dd36:	6003      	strhi	r3, [r0, #0]
   1dd38:	2001      	movls	r0, #1
   1dd3a:	bf88      	it	hi
   1dd3c:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
   1dd40:	4770      	bx	lr
   1dd42:	4608      	mov	r0, r1
   1dd44:	4770      	bx	lr
   1dd46:	Address 0x000000000001dd46 is out of bounds.


0001dd48 <_write_r>:
_write_r():
   1dd48:	b538      	push	{r3, r4, r5, lr}
   1dd4a:	4605      	mov	r5, r0
   1dd4c:	4608      	mov	r0, r1
   1dd4e:	4611      	mov	r1, r2
   1dd50:	2200      	movs	r2, #0
   1dd52:	4c05      	ldr	r4, [pc, #20]	; (1dd68 <_write_r+0x20>)
   1dd54:	6022      	str	r2, [r4, #0]
   1dd56:	461a      	mov	r2, r3
   1dd58:	f7fa fa34 	bl	181c4 <_write>
   1dd5c:	1c43      	adds	r3, r0, #1
   1dd5e:	d102      	bne.n	1dd66 <_write_r+0x1e>
   1dd60:	6823      	ldr	r3, [r4, #0]
   1dd62:	b103      	cbz	r3, 1dd66 <_write_r+0x1e>
   1dd64:	602b      	str	r3, [r5, #0]
   1dd66:	bd38      	pop	{r3, r4, r5, pc}
   1dd68:	2007d064 	.word	0x2007d064

0001dd6c <__swsetup_r>:
__swsetup_r():
   1dd6c:	4b32      	ldr	r3, [pc, #200]	; (1de38 <__swsetup_r+0xcc>)
   1dd6e:	b570      	push	{r4, r5, r6, lr}
   1dd70:	681d      	ldr	r5, [r3, #0]
   1dd72:	4606      	mov	r6, r0
   1dd74:	460c      	mov	r4, r1
   1dd76:	b125      	cbz	r5, 1dd82 <__swsetup_r+0x16>
   1dd78:	69ab      	ldr	r3, [r5, #24]
   1dd7a:	b913      	cbnz	r3, 1dd82 <__swsetup_r+0x16>
   1dd7c:	4628      	mov	r0, r5
   1dd7e:	f7fc fe17 	bl	1a9b0 <__sinit>
   1dd82:	4b2e      	ldr	r3, [pc, #184]	; (1de3c <__swsetup_r+0xd0>)
   1dd84:	429c      	cmp	r4, r3
   1dd86:	d10f      	bne.n	1dda8 <__swsetup_r+0x3c>
   1dd88:	686c      	ldr	r4, [r5, #4]
   1dd8a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1dd8e:	b29a      	uxth	r2, r3
   1dd90:	0715      	lsls	r5, r2, #28
   1dd92:	d42c      	bmi.n	1ddee <__swsetup_r+0x82>
   1dd94:	06d0      	lsls	r0, r2, #27
   1dd96:	d411      	bmi.n	1ddbc <__swsetup_r+0x50>
   1dd98:	2209      	movs	r2, #9
   1dd9a:	6032      	str	r2, [r6, #0]
   1dd9c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1dda0:	81a3      	strh	r3, [r4, #12]
   1dda2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1dda6:	bd70      	pop	{r4, r5, r6, pc}
   1dda8:	4b25      	ldr	r3, [pc, #148]	; (1de40 <__swsetup_r+0xd4>)
   1ddaa:	429c      	cmp	r4, r3
   1ddac:	d101      	bne.n	1ddb2 <__swsetup_r+0x46>
   1ddae:	68ac      	ldr	r4, [r5, #8]
   1ddb0:	e7eb      	b.n	1dd8a <__swsetup_r+0x1e>
   1ddb2:	4b24      	ldr	r3, [pc, #144]	; (1de44 <__swsetup_r+0xd8>)
   1ddb4:	429c      	cmp	r4, r3
   1ddb6:	bf08      	it	eq
   1ddb8:	68ec      	ldreq	r4, [r5, #12]
   1ddba:	e7e6      	b.n	1dd8a <__swsetup_r+0x1e>
   1ddbc:	0751      	lsls	r1, r2, #29
   1ddbe:	d512      	bpl.n	1dde6 <__swsetup_r+0x7a>
   1ddc0:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1ddc2:	b141      	cbz	r1, 1ddd6 <__swsetup_r+0x6a>
   1ddc4:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1ddc8:	4299      	cmp	r1, r3
   1ddca:	d002      	beq.n	1ddd2 <__swsetup_r+0x66>
   1ddcc:	4630      	mov	r0, r6
   1ddce:	f7fd faeb 	bl	1b3a8 <_free_r>
   1ddd2:	2300      	movs	r3, #0
   1ddd4:	6363      	str	r3, [r4, #52]	; 0x34
   1ddd6:	89a3      	ldrh	r3, [r4, #12]
   1ddd8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   1dddc:	81a3      	strh	r3, [r4, #12]
   1ddde:	2300      	movs	r3, #0
   1dde0:	6063      	str	r3, [r4, #4]
   1dde2:	6923      	ldr	r3, [r4, #16]
   1dde4:	6023      	str	r3, [r4, #0]
   1dde6:	89a3      	ldrh	r3, [r4, #12]
   1dde8:	f043 0308 	orr.w	r3, r3, #8
   1ddec:	81a3      	strh	r3, [r4, #12]
   1ddee:	6923      	ldr	r3, [r4, #16]
   1ddf0:	b94b      	cbnz	r3, 1de06 <__swsetup_r+0x9a>
   1ddf2:	89a3      	ldrh	r3, [r4, #12]
   1ddf4:	f403 7320 	and.w	r3, r3, #640	; 0x280
   1ddf8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   1ddfc:	d003      	beq.n	1de06 <__swsetup_r+0x9a>
   1ddfe:	4621      	mov	r1, r4
   1de00:	4630      	mov	r0, r6
   1de02:	f7fc ffb1 	bl	1ad68 <__smakebuf_r>
   1de06:	89a2      	ldrh	r2, [r4, #12]
   1de08:	f012 0301 	ands.w	r3, r2, #1
   1de0c:	d00c      	beq.n	1de28 <__swsetup_r+0xbc>
   1de0e:	2300      	movs	r3, #0
   1de10:	60a3      	str	r3, [r4, #8]
   1de12:	6963      	ldr	r3, [r4, #20]
   1de14:	425b      	negs	r3, r3
   1de16:	61a3      	str	r3, [r4, #24]
   1de18:	6923      	ldr	r3, [r4, #16]
   1de1a:	b953      	cbnz	r3, 1de32 <__swsetup_r+0xc6>
   1de1c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1de20:	f013 0080 	ands.w	r0, r3, #128	; 0x80
   1de24:	d1ba      	bne.n	1dd9c <__swsetup_r+0x30>
   1de26:	bd70      	pop	{r4, r5, r6, pc}
   1de28:	0792      	lsls	r2, r2, #30
   1de2a:	bf58      	it	pl
   1de2c:	6963      	ldrpl	r3, [r4, #20]
   1de2e:	60a3      	str	r3, [r4, #8]
   1de30:	e7f2      	b.n	1de18 <__swsetup_r+0xac>
   1de32:	2000      	movs	r0, #0
   1de34:	e7f7      	b.n	1de26 <__swsetup_r+0xba>
   1de36:	bf00      	nop
   1de38:	2007c0e4 	.word	0x2007c0e4
   1de3c:	0002236c 	.word	0x0002236c
   1de40:	0002238c 	.word	0x0002238c
   1de44:	0002234c 	.word	0x0002234c

0001de48 <_close_r>:
_close_r():
   1de48:	b538      	push	{r3, r4, r5, lr}
   1de4a:	2300      	movs	r3, #0
   1de4c:	4c05      	ldr	r4, [pc, #20]	; (1de64 <_close_r+0x1c>)
   1de4e:	4605      	mov	r5, r0
   1de50:	4608      	mov	r0, r1
   1de52:	6023      	str	r3, [r4, #0]
   1de54:	f7fa faae 	bl	183b4 <_close>
   1de58:	1c43      	adds	r3, r0, #1
   1de5a:	d102      	bne.n	1de62 <_close_r+0x1a>
   1de5c:	6823      	ldr	r3, [r4, #0]
   1de5e:	b103      	cbz	r3, 1de62 <_close_r+0x1a>
   1de60:	602b      	str	r3, [r5, #0]
   1de62:	bd38      	pop	{r3, r4, r5, pc}
   1de64:	2007d064 	.word	0x2007d064

0001de68 <div>:
div():
   1de68:	b510      	push	{r4, lr}
   1de6a:	fb91 f4f2 	sdiv	r4, r1, r2
   1de6e:	2900      	cmp	r1, #0
   1de70:	fb02 1314 	mls	r3, r2, r4, r1
   1de74:	db06      	blt.n	1de84 <div+0x1c>
   1de76:	2b00      	cmp	r3, #0
   1de78:	da01      	bge.n	1de7e <div+0x16>
   1de7a:	3401      	adds	r4, #1
   1de7c:	1a9b      	subs	r3, r3, r2
   1de7e:	6004      	str	r4, [r0, #0]
   1de80:	6043      	str	r3, [r0, #4]
   1de82:	bd10      	pop	{r4, pc}
   1de84:	2b00      	cmp	r3, #0
   1de86:	bfc4      	itt	gt
   1de88:	f104 34ff 	addgt.w	r4, r4, #4294967295	; 0xffffffff
   1de8c:	189b      	addgt	r3, r3, r2
   1de8e:	e7f6      	b.n	1de7e <div+0x16>

0001de90 <quorem>:
quorem():
   1de90:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de94:	6903      	ldr	r3, [r0, #16]
   1de96:	690c      	ldr	r4, [r1, #16]
   1de98:	4680      	mov	r8, r0
   1de9a:	429c      	cmp	r4, r3
   1de9c:	f300 8082 	bgt.w	1dfa4 <quorem+0x114>
   1dea0:	3c01      	subs	r4, #1
   1dea2:	f101 0714 	add.w	r7, r1, #20
   1dea6:	f100 0614 	add.w	r6, r0, #20
   1deaa:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
   1deae:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
   1deb2:	3501      	adds	r5, #1
   1deb4:	fbb0 f5f5 	udiv	r5, r0, r5
   1deb8:	ea4f 0e84 	mov.w	lr, r4, lsl #2
   1debc:	eb06 030e 	add.w	r3, r6, lr
   1dec0:	eb07 090e 	add.w	r9, r7, lr
   1dec4:	9301      	str	r3, [sp, #4]
   1dec6:	b38d      	cbz	r5, 1df2c <quorem+0x9c>
   1dec8:	f04f 0a00 	mov.w	sl, #0
   1decc:	4638      	mov	r0, r7
   1dece:	46b4      	mov	ip, r6
   1ded0:	46d3      	mov	fp, sl
   1ded2:	f850 2b04 	ldr.w	r2, [r0], #4
   1ded6:	b293      	uxth	r3, r2
   1ded8:	fb05 a303 	mla	r3, r5, r3, sl
   1dedc:	0c12      	lsrs	r2, r2, #16
   1dede:	ea4f 4a13 	mov.w	sl, r3, lsr #16
   1dee2:	fb05 a202 	mla	r2, r5, r2, sl
   1dee6:	b29b      	uxth	r3, r3
   1dee8:	ebab 0303 	sub.w	r3, fp, r3
   1deec:	f8bc b000 	ldrh.w	fp, [ip]
   1def0:	ea4f 4a12 	mov.w	sl, r2, lsr #16
   1def4:	445b      	add	r3, fp
   1def6:	fa1f fb82 	uxth.w	fp, r2
   1defa:	f8dc 2000 	ldr.w	r2, [ip]
   1defe:	4581      	cmp	r9, r0
   1df00:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
   1df04:	eb02 4223 	add.w	r2, r2, r3, asr #16
   1df08:	b29b      	uxth	r3, r3
   1df0a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   1df0e:	ea4f 4b22 	mov.w	fp, r2, asr #16
   1df12:	f84c 3b04 	str.w	r3, [ip], #4
   1df16:	d2dc      	bcs.n	1ded2 <quorem+0x42>
   1df18:	f856 300e 	ldr.w	r3, [r6, lr]
   1df1c:	b933      	cbnz	r3, 1df2c <quorem+0x9c>
   1df1e:	9b01      	ldr	r3, [sp, #4]
   1df20:	3b04      	subs	r3, #4
   1df22:	429e      	cmp	r6, r3
   1df24:	461a      	mov	r2, r3
   1df26:	d331      	bcc.n	1df8c <quorem+0xfc>
   1df28:	f8c8 4010 	str.w	r4, [r8, #16]
   1df2c:	4640      	mov	r0, r8
   1df2e:	f001 fc4c 	bl	1f7ca <__mcmp>
   1df32:	2800      	cmp	r0, #0
   1df34:	db26      	blt.n	1df84 <quorem+0xf4>
   1df36:	4630      	mov	r0, r6
   1df38:	f04f 0e00 	mov.w	lr, #0
   1df3c:	3501      	adds	r5, #1
   1df3e:	f857 1b04 	ldr.w	r1, [r7], #4
   1df42:	f8d0 c000 	ldr.w	ip, [r0]
   1df46:	b28b      	uxth	r3, r1
   1df48:	ebae 0303 	sub.w	r3, lr, r3
   1df4c:	fa1f f28c 	uxth.w	r2, ip
   1df50:	4413      	add	r3, r2
   1df52:	0c0a      	lsrs	r2, r1, #16
   1df54:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
   1df58:	eb02 4223 	add.w	r2, r2, r3, asr #16
   1df5c:	b29b      	uxth	r3, r3
   1df5e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   1df62:	45b9      	cmp	r9, r7
   1df64:	ea4f 4e22 	mov.w	lr, r2, asr #16
   1df68:	f840 3b04 	str.w	r3, [r0], #4
   1df6c:	d2e7      	bcs.n	1df3e <quorem+0xae>
   1df6e:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   1df72:	eb06 0384 	add.w	r3, r6, r4, lsl #2
   1df76:	b92a      	cbnz	r2, 1df84 <quorem+0xf4>
   1df78:	3b04      	subs	r3, #4
   1df7a:	429e      	cmp	r6, r3
   1df7c:	461a      	mov	r2, r3
   1df7e:	d30b      	bcc.n	1df98 <quorem+0x108>
   1df80:	f8c8 4010 	str.w	r4, [r8, #16]
   1df84:	4628      	mov	r0, r5
   1df86:	b003      	add	sp, #12
   1df88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1df8c:	6812      	ldr	r2, [r2, #0]
   1df8e:	3b04      	subs	r3, #4
   1df90:	2a00      	cmp	r2, #0
   1df92:	d1c9      	bne.n	1df28 <quorem+0x98>
   1df94:	3c01      	subs	r4, #1
   1df96:	e7c4      	b.n	1df22 <quorem+0x92>
   1df98:	6812      	ldr	r2, [r2, #0]
   1df9a:	3b04      	subs	r3, #4
   1df9c:	2a00      	cmp	r2, #0
   1df9e:	d1ef      	bne.n	1df80 <quorem+0xf0>
   1dfa0:	3c01      	subs	r4, #1
   1dfa2:	e7ea      	b.n	1df7a <quorem+0xea>
   1dfa4:	2000      	movs	r0, #0
   1dfa6:	e7ee      	b.n	1df86 <quorem+0xf6>

0001dfa8 <_dtoa_r>:
_dtoa_r():
   1dfa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dfac:	6a46      	ldr	r6, [r0, #36]	; 0x24
   1dfae:	b095      	sub	sp, #84	; 0x54
   1dfb0:	4604      	mov	r4, r0
   1dfb2:	9d21      	ldr	r5, [sp, #132]	; 0x84
   1dfb4:	e9cd 2302 	strd	r2, r3, [sp, #8]
   1dfb8:	b93e      	cbnz	r6, 1dfca <_dtoa_r+0x22>
   1dfba:	2010      	movs	r0, #16
   1dfbc:	f7fc ff14 	bl	1ade8 <malloc>
   1dfc0:	6260      	str	r0, [r4, #36]	; 0x24
   1dfc2:	6046      	str	r6, [r0, #4]
   1dfc4:	6086      	str	r6, [r0, #8]
   1dfc6:	6006      	str	r6, [r0, #0]
   1dfc8:	60c6      	str	r6, [r0, #12]
   1dfca:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1dfcc:	6819      	ldr	r1, [r3, #0]
   1dfce:	b151      	cbz	r1, 1dfe6 <_dtoa_r+0x3e>
   1dfd0:	685a      	ldr	r2, [r3, #4]
   1dfd2:	2301      	movs	r3, #1
   1dfd4:	4093      	lsls	r3, r2
   1dfd6:	604a      	str	r2, [r1, #4]
   1dfd8:	608b      	str	r3, [r1, #8]
   1dfda:	4620      	mov	r0, r4
   1dfdc:	f001 f9e2 	bl	1f3a4 <_Bfree>
   1dfe0:	2200      	movs	r2, #0
   1dfe2:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1dfe4:	601a      	str	r2, [r3, #0]
   1dfe6:	9b03      	ldr	r3, [sp, #12]
   1dfe8:	2b00      	cmp	r3, #0
   1dfea:	bfb7      	itett	lt
   1dfec:	2301      	movlt	r3, #1
   1dfee:	2300      	movge	r3, #0
   1dff0:	602b      	strlt	r3, [r5, #0]
   1dff2:	9b03      	ldrlt	r3, [sp, #12]
   1dff4:	bfae      	itee	ge
   1dff6:	602b      	strge	r3, [r5, #0]
   1dff8:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
   1dffc:	9303      	strlt	r3, [sp, #12]
   1dffe:	f8dd 900c 	ldr.w	r9, [sp, #12]
   1e002:	4bab      	ldr	r3, [pc, #684]	; (1e2b0 <_dtoa_r+0x308>)
   1e004:	ea33 0309 	bics.w	r3, r3, r9
   1e008:	d11b      	bne.n	1e042 <_dtoa_r+0x9a>
   1e00a:	f242 730f 	movw	r3, #9999	; 0x270f
   1e00e:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1e010:	6013      	str	r3, [r2, #0]
   1e012:	9b02      	ldr	r3, [sp, #8]
   1e014:	b923      	cbnz	r3, 1e020 <_dtoa_r+0x78>
   1e016:	f3c9 0013 	ubfx	r0, r9, #0, #20
   1e01a:	2800      	cmp	r0, #0
   1e01c:	f000 8583 	beq.w	1eb26 <_dtoa_r+0xb7e>
   1e020:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1e022:	b953      	cbnz	r3, 1e03a <_dtoa_r+0x92>
   1e024:	4ba3      	ldr	r3, [pc, #652]	; (1e2b4 <_dtoa_r+0x30c>)
   1e026:	e021      	b.n	1e06c <_dtoa_r+0xc4>
   1e028:	4ba3      	ldr	r3, [pc, #652]	; (1e2b8 <_dtoa_r+0x310>)
   1e02a:	9306      	str	r3, [sp, #24]
   1e02c:	3308      	adds	r3, #8
   1e02e:	9a22      	ldr	r2, [sp, #136]	; 0x88
   1e030:	6013      	str	r3, [r2, #0]
   1e032:	9806      	ldr	r0, [sp, #24]
   1e034:	b015      	add	sp, #84	; 0x54
   1e036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e03a:	4b9e      	ldr	r3, [pc, #632]	; (1e2b4 <_dtoa_r+0x30c>)
   1e03c:	9306      	str	r3, [sp, #24]
   1e03e:	3303      	adds	r3, #3
   1e040:	e7f5      	b.n	1e02e <_dtoa_r+0x86>
   1e042:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   1e046:	2200      	movs	r2, #0
   1e048:	2300      	movs	r3, #0
   1e04a:	4630      	mov	r0, r6
   1e04c:	4639      	mov	r1, r7
   1e04e:	f002 fe89 	bl	20d64 <__aeabi_dcmpeq>
   1e052:	4680      	mov	r8, r0
   1e054:	b160      	cbz	r0, 1e070 <_dtoa_r+0xc8>
   1e056:	2301      	movs	r3, #1
   1e058:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1e05a:	6013      	str	r3, [r2, #0]
   1e05c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1e05e:	2b00      	cmp	r3, #0
   1e060:	f000 855e 	beq.w	1eb20 <_dtoa_r+0xb78>
   1e064:	4b95      	ldr	r3, [pc, #596]	; (1e2bc <_dtoa_r+0x314>)
   1e066:	9a22      	ldr	r2, [sp, #136]	; 0x88
   1e068:	6013      	str	r3, [r2, #0]
   1e06a:	3b01      	subs	r3, #1
   1e06c:	9306      	str	r3, [sp, #24]
   1e06e:	e7e0      	b.n	1e032 <_dtoa_r+0x8a>
   1e070:	ab12      	add	r3, sp, #72	; 0x48
   1e072:	9301      	str	r3, [sp, #4]
   1e074:	ab13      	add	r3, sp, #76	; 0x4c
   1e076:	9300      	str	r3, [sp, #0]
   1e078:	4632      	mov	r2, r6
   1e07a:	463b      	mov	r3, r7
   1e07c:	4620      	mov	r0, r4
   1e07e:	f001 fc93 	bl	1f9a8 <__d2b>
   1e082:	f3c9 550a 	ubfx	r5, r9, #20, #11
   1e086:	4682      	mov	sl, r0
   1e088:	2d00      	cmp	r5, #0
   1e08a:	d07d      	beq.n	1e188 <_dtoa_r+0x1e0>
   1e08c:	4630      	mov	r0, r6
   1e08e:	f3c7 0313 	ubfx	r3, r7, #0, #20
   1e092:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   1e096:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   1e09a:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   1e09e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
   1e0a2:	2200      	movs	r2, #0
   1e0a4:	4b86      	ldr	r3, [pc, #536]	; (1e2c0 <_dtoa_r+0x318>)
   1e0a6:	f7fb fa2f 	bl	19508 <__aeabi_dsub>
   1e0aa:	a37b      	add	r3, pc, #492	; (adr r3, 1e298 <_dtoa_r+0x2f0>)
   1e0ac:	e9d3 2300 	ldrd	r2, r3, [r3]
   1e0b0:	f7fb fbde 	bl	19870 <__aeabi_dmul>
   1e0b4:	a37a      	add	r3, pc, #488	; (adr r3, 1e2a0 <_dtoa_r+0x2f8>)
   1e0b6:	e9d3 2300 	ldrd	r2, r3, [r3]
   1e0ba:	f7fb fa27 	bl	1950c <__adddf3>
   1e0be:	4606      	mov	r6, r0
   1e0c0:	4628      	mov	r0, r5
   1e0c2:	460f      	mov	r7, r1
   1e0c4:	f7fb fb6e 	bl	197a4 <__aeabi_i2d>
   1e0c8:	a377      	add	r3, pc, #476	; (adr r3, 1e2a8 <_dtoa_r+0x300>)
   1e0ca:	e9d3 2300 	ldrd	r2, r3, [r3]
   1e0ce:	f7fb fbcf 	bl	19870 <__aeabi_dmul>
   1e0d2:	4602      	mov	r2, r0
   1e0d4:	460b      	mov	r3, r1
   1e0d6:	4630      	mov	r0, r6
   1e0d8:	4639      	mov	r1, r7
   1e0da:	f7fb fa17 	bl	1950c <__adddf3>
   1e0de:	4606      	mov	r6, r0
   1e0e0:	460f      	mov	r7, r1
   1e0e2:	f002 fe87 	bl	20df4 <__aeabi_d2iz>
   1e0e6:	2200      	movs	r2, #0
   1e0e8:	4683      	mov	fp, r0
   1e0ea:	2300      	movs	r3, #0
   1e0ec:	4630      	mov	r0, r6
   1e0ee:	4639      	mov	r1, r7
   1e0f0:	f002 fe42 	bl	20d78 <__aeabi_dcmplt>
   1e0f4:	b158      	cbz	r0, 1e10e <_dtoa_r+0x166>
   1e0f6:	4658      	mov	r0, fp
   1e0f8:	f7fb fb54 	bl	197a4 <__aeabi_i2d>
   1e0fc:	4602      	mov	r2, r0
   1e0fe:	460b      	mov	r3, r1
   1e100:	4630      	mov	r0, r6
   1e102:	4639      	mov	r1, r7
   1e104:	f002 fe2e 	bl	20d64 <__aeabi_dcmpeq>
   1e108:	b908      	cbnz	r0, 1e10e <_dtoa_r+0x166>
   1e10a:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   1e10e:	f1bb 0f16 	cmp.w	fp, #22
   1e112:	d858      	bhi.n	1e1c6 <_dtoa_r+0x21e>
   1e114:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1e118:	496a      	ldr	r1, [pc, #424]	; (1e2c4 <_dtoa_r+0x31c>)
   1e11a:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
   1e11e:	e9d1 0100 	ldrd	r0, r1, [r1]
   1e122:	f002 fe47 	bl	20db4 <__aeabi_dcmpgt>
   1e126:	2800      	cmp	r0, #0
   1e128:	d04f      	beq.n	1e1ca <_dtoa_r+0x222>
   1e12a:	2300      	movs	r3, #0
   1e12c:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   1e130:	930d      	str	r3, [sp, #52]	; 0x34
   1e132:	9b12      	ldr	r3, [sp, #72]	; 0x48
   1e134:	1b5d      	subs	r5, r3, r5
   1e136:	1e6b      	subs	r3, r5, #1
   1e138:	9307      	str	r3, [sp, #28]
   1e13a:	bf43      	ittte	mi
   1e13c:	2300      	movmi	r3, #0
   1e13e:	f1c5 0801 	rsbmi	r8, r5, #1
   1e142:	9307      	strmi	r3, [sp, #28]
   1e144:	f04f 0800 	movpl.w	r8, #0
   1e148:	f1bb 0f00 	cmp.w	fp, #0
   1e14c:	db3f      	blt.n	1e1ce <_dtoa_r+0x226>
   1e14e:	9b07      	ldr	r3, [sp, #28]
   1e150:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
   1e154:	445b      	add	r3, fp
   1e156:	9307      	str	r3, [sp, #28]
   1e158:	2300      	movs	r3, #0
   1e15a:	9308      	str	r3, [sp, #32]
   1e15c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1e15e:	2b09      	cmp	r3, #9
   1e160:	f200 80b4 	bhi.w	1e2cc <_dtoa_r+0x324>
   1e164:	2b05      	cmp	r3, #5
   1e166:	bfc4      	itt	gt
   1e168:	3b04      	subgt	r3, #4
   1e16a:	931e      	strgt	r3, [sp, #120]	; 0x78
   1e16c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1e16e:	bfc8      	it	gt
   1e170:	2600      	movgt	r6, #0
   1e172:	f1a3 0302 	sub.w	r3, r3, #2
   1e176:	bfd8      	it	le
   1e178:	2601      	movle	r6, #1
   1e17a:	2b03      	cmp	r3, #3
   1e17c:	f200 80b2 	bhi.w	1e2e4 <_dtoa_r+0x33c>
   1e180:	e8df f003 	tbb	[pc, r3]
   1e184:	782d8684 	.word	0x782d8684
   1e188:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   1e18a:	9d12      	ldr	r5, [sp, #72]	; 0x48
   1e18c:	441d      	add	r5, r3
   1e18e:	f205 4332 	addw	r3, r5, #1074	; 0x432
   1e192:	2b20      	cmp	r3, #32
   1e194:	dd11      	ble.n	1e1ba <_dtoa_r+0x212>
   1e196:	9a02      	ldr	r2, [sp, #8]
   1e198:	f205 4012 	addw	r0, r5, #1042	; 0x412
   1e19c:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   1e1a0:	fa22 f000 	lsr.w	r0, r2, r0
   1e1a4:	fa09 f303 	lsl.w	r3, r9, r3
   1e1a8:	4318      	orrs	r0, r3
   1e1aa:	f7fb faeb 	bl	19784 <__aeabi_ui2d>
   1e1ae:	2301      	movs	r3, #1
   1e1b0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   1e1b4:	3d01      	subs	r5, #1
   1e1b6:	9310      	str	r3, [sp, #64]	; 0x40
   1e1b8:	e773      	b.n	1e0a2 <_dtoa_r+0xfa>
   1e1ba:	f1c3 0020 	rsb	r0, r3, #32
   1e1be:	9b02      	ldr	r3, [sp, #8]
   1e1c0:	fa03 f000 	lsl.w	r0, r3, r0
   1e1c4:	e7f1      	b.n	1e1aa <_dtoa_r+0x202>
   1e1c6:	2301      	movs	r3, #1
   1e1c8:	e7b2      	b.n	1e130 <_dtoa_r+0x188>
   1e1ca:	900d      	str	r0, [sp, #52]	; 0x34
   1e1cc:	e7b1      	b.n	1e132 <_dtoa_r+0x18a>
   1e1ce:	f1cb 0300 	rsb	r3, fp, #0
   1e1d2:	9308      	str	r3, [sp, #32]
   1e1d4:	2300      	movs	r3, #0
   1e1d6:	eba8 080b 	sub.w	r8, r8, fp
   1e1da:	930c      	str	r3, [sp, #48]	; 0x30
   1e1dc:	e7be      	b.n	1e15c <_dtoa_r+0x1b4>
   1e1de:	2301      	movs	r3, #1
   1e1e0:	9309      	str	r3, [sp, #36]	; 0x24
   1e1e2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1e1e4:	2b00      	cmp	r3, #0
   1e1e6:	f340 8080 	ble.w	1e2ea <_dtoa_r+0x342>
   1e1ea:	4699      	mov	r9, r3
   1e1ec:	9304      	str	r3, [sp, #16]
   1e1ee:	2200      	movs	r2, #0
   1e1f0:	2104      	movs	r1, #4
   1e1f2:	6a65      	ldr	r5, [r4, #36]	; 0x24
   1e1f4:	606a      	str	r2, [r5, #4]
   1e1f6:	f101 0214 	add.w	r2, r1, #20
   1e1fa:	429a      	cmp	r2, r3
   1e1fc:	d97a      	bls.n	1e2f4 <_dtoa_r+0x34c>
   1e1fe:	6869      	ldr	r1, [r5, #4]
   1e200:	4620      	mov	r0, r4
   1e202:	f001 f89b 	bl	1f33c <_Balloc>
   1e206:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1e208:	6028      	str	r0, [r5, #0]
   1e20a:	681b      	ldr	r3, [r3, #0]
   1e20c:	f1b9 0f0e 	cmp.w	r9, #14
   1e210:	9306      	str	r3, [sp, #24]
   1e212:	f200 80f0 	bhi.w	1e3f6 <_dtoa_r+0x44e>
   1e216:	2e00      	cmp	r6, #0
   1e218:	f000 80ed 	beq.w	1e3f6 <_dtoa_r+0x44e>
   1e21c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1e220:	f1bb 0f00 	cmp.w	fp, #0
   1e224:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   1e228:	dd79      	ble.n	1e31e <_dtoa_r+0x376>
   1e22a:	4a26      	ldr	r2, [pc, #152]	; (1e2c4 <_dtoa_r+0x31c>)
   1e22c:	f00b 030f 	and.w	r3, fp, #15
   1e230:	ea4f 162b 	mov.w	r6, fp, asr #4
   1e234:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   1e238:	06f0      	lsls	r0, r6, #27
   1e23a:	e9d3 2300 	ldrd	r2, r3, [r3]
   1e23e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
   1e242:	d55c      	bpl.n	1e2fe <_dtoa_r+0x356>
   1e244:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   1e248:	4b1f      	ldr	r3, [pc, #124]	; (1e2c8 <_dtoa_r+0x320>)
   1e24a:	2503      	movs	r5, #3
   1e24c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   1e250:	f7fb fc38 	bl	19ac4 <__aeabi_ddiv>
   1e254:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1e258:	f006 060f 	and.w	r6, r6, #15
   1e25c:	4f1a      	ldr	r7, [pc, #104]	; (1e2c8 <_dtoa_r+0x320>)
   1e25e:	2e00      	cmp	r6, #0
   1e260:	d14f      	bne.n	1e302 <_dtoa_r+0x35a>
   1e262:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1e266:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1e26a:	f7fb fc2b 	bl	19ac4 <__aeabi_ddiv>
   1e26e:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1e272:	e06e      	b.n	1e352 <_dtoa_r+0x3aa>
   1e274:	2301      	movs	r3, #1
   1e276:	9309      	str	r3, [sp, #36]	; 0x24
   1e278:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1e27a:	445b      	add	r3, fp
   1e27c:	f103 0901 	add.w	r9, r3, #1
   1e280:	9304      	str	r3, [sp, #16]
   1e282:	464b      	mov	r3, r9
   1e284:	2b01      	cmp	r3, #1
   1e286:	bfb8      	it	lt
   1e288:	2301      	movlt	r3, #1
   1e28a:	e7b0      	b.n	1e1ee <_dtoa_r+0x246>
   1e28c:	2300      	movs	r3, #0
   1e28e:	e7a7      	b.n	1e1e0 <_dtoa_r+0x238>
   1e290:	2300      	movs	r3, #0
   1e292:	e7f0      	b.n	1e276 <_dtoa_r+0x2ce>
   1e294:	f3af 8000 	nop.w
   1e298:	636f4361 	.word	0x636f4361
   1e29c:	3fd287a7 	.word	0x3fd287a7
   1e2a0:	8b60c8b3 	.word	0x8b60c8b3
   1e2a4:	3fc68a28 	.word	0x3fc68a28
   1e2a8:	509f79fb 	.word	0x509f79fb
   1e2ac:	3fd34413 	.word	0x3fd34413
   1e2b0:	7ff00000 	.word	0x7ff00000
   1e2b4:	00022646 	.word	0x00022646
   1e2b8:	0002263d 	.word	0x0002263d
   1e2bc:	000210e5 	.word	0x000210e5
   1e2c0:	3ff80000 	.word	0x3ff80000
   1e2c4:	00022678 	.word	0x00022678
   1e2c8:	00022650 	.word	0x00022650
   1e2cc:	2601      	movs	r6, #1
   1e2ce:	2300      	movs	r3, #0
   1e2d0:	9609      	str	r6, [sp, #36]	; 0x24
   1e2d2:	931e      	str	r3, [sp, #120]	; 0x78
   1e2d4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1e2d8:	2200      	movs	r2, #0
   1e2da:	9304      	str	r3, [sp, #16]
   1e2dc:	4699      	mov	r9, r3
   1e2de:	2312      	movs	r3, #18
   1e2e0:	921f      	str	r2, [sp, #124]	; 0x7c
   1e2e2:	e784      	b.n	1e1ee <_dtoa_r+0x246>
   1e2e4:	2301      	movs	r3, #1
   1e2e6:	9309      	str	r3, [sp, #36]	; 0x24
   1e2e8:	e7f4      	b.n	1e2d4 <_dtoa_r+0x32c>
   1e2ea:	2301      	movs	r3, #1
   1e2ec:	9304      	str	r3, [sp, #16]
   1e2ee:	4699      	mov	r9, r3
   1e2f0:	461a      	mov	r2, r3
   1e2f2:	e7f5      	b.n	1e2e0 <_dtoa_r+0x338>
   1e2f4:	686a      	ldr	r2, [r5, #4]
   1e2f6:	0049      	lsls	r1, r1, #1
   1e2f8:	3201      	adds	r2, #1
   1e2fa:	606a      	str	r2, [r5, #4]
   1e2fc:	e77b      	b.n	1e1f6 <_dtoa_r+0x24e>
   1e2fe:	2502      	movs	r5, #2
   1e300:	e7ac      	b.n	1e25c <_dtoa_r+0x2b4>
   1e302:	07f1      	lsls	r1, r6, #31
   1e304:	d508      	bpl.n	1e318 <_dtoa_r+0x370>
   1e306:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1e30a:	e9d7 2300 	ldrd	r2, r3, [r7]
   1e30e:	f7fb faaf 	bl	19870 <__aeabi_dmul>
   1e312:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1e316:	3501      	adds	r5, #1
   1e318:	1076      	asrs	r6, r6, #1
   1e31a:	3708      	adds	r7, #8
   1e31c:	e79f      	b.n	1e25e <_dtoa_r+0x2b6>
   1e31e:	f000 80a5 	beq.w	1e46c <_dtoa_r+0x4c4>
   1e322:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   1e326:	f1cb 0600 	rsb	r6, fp, #0
   1e32a:	4ba2      	ldr	r3, [pc, #648]	; (1e5b4 <_dtoa_r+0x60c>)
   1e32c:	f006 020f 	and.w	r2, r6, #15
   1e330:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   1e334:	e9d3 2300 	ldrd	r2, r3, [r3]
   1e338:	f7fb fa9a 	bl	19870 <__aeabi_dmul>
   1e33c:	2502      	movs	r5, #2
   1e33e:	2300      	movs	r3, #0
   1e340:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1e344:	4f9c      	ldr	r7, [pc, #624]	; (1e5b8 <_dtoa_r+0x610>)
   1e346:	1136      	asrs	r6, r6, #4
   1e348:	2e00      	cmp	r6, #0
   1e34a:	f040 8084 	bne.w	1e456 <_dtoa_r+0x4ae>
   1e34e:	2b00      	cmp	r3, #0
   1e350:	d18d      	bne.n	1e26e <_dtoa_r+0x2c6>
   1e352:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1e354:	2b00      	cmp	r3, #0
   1e356:	f000 808b 	beq.w	1e470 <_dtoa_r+0x4c8>
   1e35a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1e35e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
   1e362:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1e366:	2200      	movs	r2, #0
   1e368:	4b94      	ldr	r3, [pc, #592]	; (1e5bc <_dtoa_r+0x614>)
   1e36a:	f002 fd05 	bl	20d78 <__aeabi_dcmplt>
   1e36e:	2800      	cmp	r0, #0
   1e370:	d07e      	beq.n	1e470 <_dtoa_r+0x4c8>
   1e372:	f1b9 0f00 	cmp.w	r9, #0
   1e376:	d07b      	beq.n	1e470 <_dtoa_r+0x4c8>
   1e378:	9b04      	ldr	r3, [sp, #16]
   1e37a:	2b00      	cmp	r3, #0
   1e37c:	dd37      	ble.n	1e3ee <_dtoa_r+0x446>
   1e37e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1e382:	2200      	movs	r2, #0
   1e384:	4b8e      	ldr	r3, [pc, #568]	; (1e5c0 <_dtoa_r+0x618>)
   1e386:	f7fb fa73 	bl	19870 <__aeabi_dmul>
   1e38a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1e38e:	9e04      	ldr	r6, [sp, #16]
   1e390:	f10b 37ff 	add.w	r7, fp, #4294967295	; 0xffffffff
   1e394:	3501      	adds	r5, #1
   1e396:	4628      	mov	r0, r5
   1e398:	f7fb fa04 	bl	197a4 <__aeabi_i2d>
   1e39c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1e3a0:	f7fb fa66 	bl	19870 <__aeabi_dmul>
   1e3a4:	4b87      	ldr	r3, [pc, #540]	; (1e5c4 <_dtoa_r+0x61c>)
   1e3a6:	2200      	movs	r2, #0
   1e3a8:	f7fb f8b0 	bl	1950c <__adddf3>
   1e3ac:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1e3b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1e3b2:	f1a3 7550 	sub.w	r5, r3, #54525952	; 0x3400000
   1e3b6:	950b      	str	r5, [sp, #44]	; 0x2c
   1e3b8:	2e00      	cmp	r6, #0
   1e3ba:	d15c      	bne.n	1e476 <_dtoa_r+0x4ce>
   1e3bc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1e3c0:	2200      	movs	r2, #0
   1e3c2:	4b81      	ldr	r3, [pc, #516]	; (1e5c8 <_dtoa_r+0x620>)
   1e3c4:	f7fb f8a0 	bl	19508 <__aeabi_dsub>
   1e3c8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1e3ca:	462b      	mov	r3, r5
   1e3cc:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1e3d0:	f002 fcf0 	bl	20db4 <__aeabi_dcmpgt>
   1e3d4:	2800      	cmp	r0, #0
   1e3d6:	f040 82f7 	bne.w	1e9c8 <_dtoa_r+0xa20>
   1e3da:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1e3de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1e3e0:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   1e3e4:	f002 fcc8 	bl	20d78 <__aeabi_dcmplt>
   1e3e8:	2800      	cmp	r0, #0
   1e3ea:	f040 82eb 	bne.w	1e9c4 <_dtoa_r+0xa1c>
   1e3ee:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   1e3f2:	e9cd 2302 	strd	r2, r3, [sp, #8]
   1e3f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   1e3f8:	2b00      	cmp	r3, #0
   1e3fa:	f2c0 8150 	blt.w	1e69e <_dtoa_r+0x6f6>
   1e3fe:	f1bb 0f0e 	cmp.w	fp, #14
   1e402:	f300 814c 	bgt.w	1e69e <_dtoa_r+0x6f6>
   1e406:	4b6b      	ldr	r3, [pc, #428]	; (1e5b4 <_dtoa_r+0x60c>)
   1e408:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
   1e40c:	e9d3 2300 	ldrd	r2, r3, [r3]
   1e410:	e9cd 2304 	strd	r2, r3, [sp, #16]
   1e414:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1e416:	2b00      	cmp	r3, #0
   1e418:	f280 80da 	bge.w	1e5d0 <_dtoa_r+0x628>
   1e41c:	f1b9 0f00 	cmp.w	r9, #0
   1e420:	f300 80d6 	bgt.w	1e5d0 <_dtoa_r+0x628>
   1e424:	f040 82cd 	bne.w	1e9c2 <_dtoa_r+0xa1a>
   1e428:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   1e42c:	2200      	movs	r2, #0
   1e42e:	4b66      	ldr	r3, [pc, #408]	; (1e5c8 <_dtoa_r+0x620>)
   1e430:	f7fb fa1e 	bl	19870 <__aeabi_dmul>
   1e434:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1e438:	f002 fcb2 	bl	20da0 <__aeabi_dcmpge>
   1e43c:	464e      	mov	r6, r9
   1e43e:	464f      	mov	r7, r9
   1e440:	2800      	cmp	r0, #0
   1e442:	f040 82a4 	bne.w	1e98e <_dtoa_r+0x9e6>
   1e446:	9b06      	ldr	r3, [sp, #24]
   1e448:	9a06      	ldr	r2, [sp, #24]
   1e44a:	1c5d      	adds	r5, r3, #1
   1e44c:	2331      	movs	r3, #49	; 0x31
   1e44e:	f10b 0b01 	add.w	fp, fp, #1
   1e452:	7013      	strb	r3, [r2, #0]
   1e454:	e29f      	b.n	1e996 <_dtoa_r+0x9ee>
   1e456:	07f2      	lsls	r2, r6, #31
   1e458:	d505      	bpl.n	1e466 <_dtoa_r+0x4be>
   1e45a:	e9d7 2300 	ldrd	r2, r3, [r7]
   1e45e:	f7fb fa07 	bl	19870 <__aeabi_dmul>
   1e462:	2301      	movs	r3, #1
   1e464:	3501      	adds	r5, #1
   1e466:	1076      	asrs	r6, r6, #1
   1e468:	3708      	adds	r7, #8
   1e46a:	e76d      	b.n	1e348 <_dtoa_r+0x3a0>
   1e46c:	2502      	movs	r5, #2
   1e46e:	e770      	b.n	1e352 <_dtoa_r+0x3aa>
   1e470:	465f      	mov	r7, fp
   1e472:	464e      	mov	r6, r9
   1e474:	e78f      	b.n	1e396 <_dtoa_r+0x3ee>
   1e476:	9a06      	ldr	r2, [sp, #24]
   1e478:	4b4e      	ldr	r3, [pc, #312]	; (1e5b4 <_dtoa_r+0x60c>)
   1e47a:	4432      	add	r2, r6
   1e47c:	9211      	str	r2, [sp, #68]	; 0x44
   1e47e:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1e480:	1e71      	subs	r1, r6, #1
   1e482:	2a00      	cmp	r2, #0
   1e484:	d048      	beq.n	1e518 <_dtoa_r+0x570>
   1e486:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
   1e48a:	e9d3 2300 	ldrd	r2, r3, [r3]
   1e48e:	2000      	movs	r0, #0
   1e490:	494e      	ldr	r1, [pc, #312]	; (1e5cc <_dtoa_r+0x624>)
   1e492:	f7fb fb17 	bl	19ac4 <__aeabi_ddiv>
   1e496:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1e49a:	f7fb f835 	bl	19508 <__aeabi_dsub>
   1e49e:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1e4a2:	9d06      	ldr	r5, [sp, #24]
   1e4a4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1e4a8:	f002 fca4 	bl	20df4 <__aeabi_d2iz>
   1e4ac:	4606      	mov	r6, r0
   1e4ae:	f7fb f979 	bl	197a4 <__aeabi_i2d>
   1e4b2:	4602      	mov	r2, r0
   1e4b4:	460b      	mov	r3, r1
   1e4b6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1e4ba:	f7fb f825 	bl	19508 <__aeabi_dsub>
   1e4be:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1e4c2:	3630      	adds	r6, #48	; 0x30
   1e4c4:	f805 6b01 	strb.w	r6, [r5], #1
   1e4c8:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1e4cc:	f002 fc54 	bl	20d78 <__aeabi_dcmplt>
   1e4d0:	2800      	cmp	r0, #0
   1e4d2:	d164      	bne.n	1e59e <_dtoa_r+0x5f6>
   1e4d4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1e4d8:	2000      	movs	r0, #0
   1e4da:	4938      	ldr	r1, [pc, #224]	; (1e5bc <_dtoa_r+0x614>)
   1e4dc:	f7fb f814 	bl	19508 <__aeabi_dsub>
   1e4e0:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1e4e4:	f002 fc48 	bl	20d78 <__aeabi_dcmplt>
   1e4e8:	2800      	cmp	r0, #0
   1e4ea:	f040 80b9 	bne.w	1e660 <_dtoa_r+0x6b8>
   1e4ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1e4f0:	429d      	cmp	r5, r3
   1e4f2:	f43f af7c 	beq.w	1e3ee <_dtoa_r+0x446>
   1e4f6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1e4fa:	2200      	movs	r2, #0
   1e4fc:	4b30      	ldr	r3, [pc, #192]	; (1e5c0 <_dtoa_r+0x618>)
   1e4fe:	f7fb f9b7 	bl	19870 <__aeabi_dmul>
   1e502:	2200      	movs	r2, #0
   1e504:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1e508:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1e50c:	4b2c      	ldr	r3, [pc, #176]	; (1e5c0 <_dtoa_r+0x618>)
   1e50e:	f7fb f9af 	bl	19870 <__aeabi_dmul>
   1e512:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1e516:	e7c5      	b.n	1e4a4 <_dtoa_r+0x4fc>
   1e518:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   1e51c:	e9d1 0100 	ldrd	r0, r1, [r1]
   1e520:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1e524:	f7fb f9a4 	bl	19870 <__aeabi_dmul>
   1e528:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1e52c:	9d06      	ldr	r5, [sp, #24]
   1e52e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1e532:	f002 fc5f 	bl	20df4 <__aeabi_d2iz>
   1e536:	4606      	mov	r6, r0
   1e538:	f7fb f934 	bl	197a4 <__aeabi_i2d>
   1e53c:	4602      	mov	r2, r0
   1e53e:	460b      	mov	r3, r1
   1e540:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1e544:	f7fa ffe0 	bl	19508 <__aeabi_dsub>
   1e548:	3630      	adds	r6, #48	; 0x30
   1e54a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1e54c:	f805 6b01 	strb.w	r6, [r5], #1
   1e550:	42ab      	cmp	r3, r5
   1e552:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1e556:	f04f 0200 	mov.w	r2, #0
   1e55a:	d124      	bne.n	1e5a6 <_dtoa_r+0x5fe>
   1e55c:	4b1b      	ldr	r3, [pc, #108]	; (1e5cc <_dtoa_r+0x624>)
   1e55e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1e562:	f7fa ffd3 	bl	1950c <__adddf3>
   1e566:	4602      	mov	r2, r0
   1e568:	460b      	mov	r3, r1
   1e56a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1e56e:	f002 fc21 	bl	20db4 <__aeabi_dcmpgt>
   1e572:	2800      	cmp	r0, #0
   1e574:	d174      	bne.n	1e660 <_dtoa_r+0x6b8>
   1e576:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1e57a:	2000      	movs	r0, #0
   1e57c:	4913      	ldr	r1, [pc, #76]	; (1e5cc <_dtoa_r+0x624>)
   1e57e:	f7fa ffc3 	bl	19508 <__aeabi_dsub>
   1e582:	4602      	mov	r2, r0
   1e584:	460b      	mov	r3, r1
   1e586:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1e58a:	f002 fbf5 	bl	20d78 <__aeabi_dcmplt>
   1e58e:	2800      	cmp	r0, #0
   1e590:	f43f af2d 	beq.w	1e3ee <_dtoa_r+0x446>
   1e594:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   1e598:	1e6a      	subs	r2, r5, #1
   1e59a:	2b30      	cmp	r3, #48	; 0x30
   1e59c:	d001      	beq.n	1e5a2 <_dtoa_r+0x5fa>
   1e59e:	46bb      	mov	fp, r7
   1e5a0:	e04d      	b.n	1e63e <_dtoa_r+0x696>
   1e5a2:	4615      	mov	r5, r2
   1e5a4:	e7f6      	b.n	1e594 <_dtoa_r+0x5ec>
   1e5a6:	4b06      	ldr	r3, [pc, #24]	; (1e5c0 <_dtoa_r+0x618>)
   1e5a8:	f7fb f962 	bl	19870 <__aeabi_dmul>
   1e5ac:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1e5b0:	e7bd      	b.n	1e52e <_dtoa_r+0x586>
   1e5b2:	bf00      	nop
   1e5b4:	00022678 	.word	0x00022678
   1e5b8:	00022650 	.word	0x00022650
   1e5bc:	3ff00000 	.word	0x3ff00000
   1e5c0:	40240000 	.word	0x40240000
   1e5c4:	401c0000 	.word	0x401c0000
   1e5c8:	40140000 	.word	0x40140000
   1e5cc:	3fe00000 	.word	0x3fe00000
   1e5d0:	9d06      	ldr	r5, [sp, #24]
   1e5d2:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   1e5d6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   1e5da:	4630      	mov	r0, r6
   1e5dc:	4639      	mov	r1, r7
   1e5de:	f7fb fa71 	bl	19ac4 <__aeabi_ddiv>
   1e5e2:	f002 fc07 	bl	20df4 <__aeabi_d2iz>
   1e5e6:	4680      	mov	r8, r0
   1e5e8:	f7fb f8dc 	bl	197a4 <__aeabi_i2d>
   1e5ec:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   1e5f0:	f7fb f93e 	bl	19870 <__aeabi_dmul>
   1e5f4:	4602      	mov	r2, r0
   1e5f6:	460b      	mov	r3, r1
   1e5f8:	4630      	mov	r0, r6
   1e5fa:	4639      	mov	r1, r7
   1e5fc:	f7fa ff84 	bl	19508 <__aeabi_dsub>
   1e600:	f108 0630 	add.w	r6, r8, #48	; 0x30
   1e604:	f805 6b01 	strb.w	r6, [r5], #1
   1e608:	9e06      	ldr	r6, [sp, #24]
   1e60a:	4602      	mov	r2, r0
   1e60c:	1bae      	subs	r6, r5, r6
   1e60e:	45b1      	cmp	r9, r6
   1e610:	460b      	mov	r3, r1
   1e612:	d137      	bne.n	1e684 <_dtoa_r+0x6dc>
   1e614:	f7fa ff7a 	bl	1950c <__adddf3>
   1e618:	4606      	mov	r6, r0
   1e61a:	460f      	mov	r7, r1
   1e61c:	4602      	mov	r2, r0
   1e61e:	460b      	mov	r3, r1
   1e620:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   1e624:	f002 fba8 	bl	20d78 <__aeabi_dcmplt>
   1e628:	b9c8      	cbnz	r0, 1e65e <_dtoa_r+0x6b6>
   1e62a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   1e62e:	4632      	mov	r2, r6
   1e630:	463b      	mov	r3, r7
   1e632:	f002 fb97 	bl	20d64 <__aeabi_dcmpeq>
   1e636:	b110      	cbz	r0, 1e63e <_dtoa_r+0x696>
   1e638:	f018 0f01 	tst.w	r8, #1
   1e63c:	d10f      	bne.n	1e65e <_dtoa_r+0x6b6>
   1e63e:	4651      	mov	r1, sl
   1e640:	4620      	mov	r0, r4
   1e642:	f000 feaf 	bl	1f3a4 <_Bfree>
   1e646:	2300      	movs	r3, #0
   1e648:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1e64a:	702b      	strb	r3, [r5, #0]
   1e64c:	f10b 0301 	add.w	r3, fp, #1
   1e650:	6013      	str	r3, [r2, #0]
   1e652:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1e654:	2b00      	cmp	r3, #0
   1e656:	f43f acec 	beq.w	1e032 <_dtoa_r+0x8a>
   1e65a:	601d      	str	r5, [r3, #0]
   1e65c:	e4e9      	b.n	1e032 <_dtoa_r+0x8a>
   1e65e:	465f      	mov	r7, fp
   1e660:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   1e664:	1e6b      	subs	r3, r5, #1
   1e666:	2a39      	cmp	r2, #57	; 0x39
   1e668:	d106      	bne.n	1e678 <_dtoa_r+0x6d0>
   1e66a:	9a06      	ldr	r2, [sp, #24]
   1e66c:	429a      	cmp	r2, r3
   1e66e:	d107      	bne.n	1e680 <_dtoa_r+0x6d8>
   1e670:	2330      	movs	r3, #48	; 0x30
   1e672:	7013      	strb	r3, [r2, #0]
   1e674:	4613      	mov	r3, r2
   1e676:	3701      	adds	r7, #1
   1e678:	781a      	ldrb	r2, [r3, #0]
   1e67a:	3201      	adds	r2, #1
   1e67c:	701a      	strb	r2, [r3, #0]
   1e67e:	e78e      	b.n	1e59e <_dtoa_r+0x5f6>
   1e680:	461d      	mov	r5, r3
   1e682:	e7ed      	b.n	1e660 <_dtoa_r+0x6b8>
   1e684:	2200      	movs	r2, #0
   1e686:	4bb5      	ldr	r3, [pc, #724]	; (1e95c <_dtoa_r+0x9b4>)
   1e688:	f7fb f8f2 	bl	19870 <__aeabi_dmul>
   1e68c:	2200      	movs	r2, #0
   1e68e:	2300      	movs	r3, #0
   1e690:	4606      	mov	r6, r0
   1e692:	460f      	mov	r7, r1
   1e694:	f002 fb66 	bl	20d64 <__aeabi_dcmpeq>
   1e698:	2800      	cmp	r0, #0
   1e69a:	d09c      	beq.n	1e5d6 <_dtoa_r+0x62e>
   1e69c:	e7cf      	b.n	1e63e <_dtoa_r+0x696>
   1e69e:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1e6a0:	2a00      	cmp	r2, #0
   1e6a2:	f000 8129 	beq.w	1e8f8 <_dtoa_r+0x950>
   1e6a6:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   1e6a8:	2a01      	cmp	r2, #1
   1e6aa:	f300 810e 	bgt.w	1e8ca <_dtoa_r+0x922>
   1e6ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
   1e6b0:	2a00      	cmp	r2, #0
   1e6b2:	f000 8106 	beq.w	1e8c2 <_dtoa_r+0x91a>
   1e6b6:	f203 4333 	addw	r3, r3, #1075	; 0x433
   1e6ba:	4645      	mov	r5, r8
   1e6bc:	9e08      	ldr	r6, [sp, #32]
   1e6be:	9a07      	ldr	r2, [sp, #28]
   1e6c0:	2101      	movs	r1, #1
   1e6c2:	441a      	add	r2, r3
   1e6c4:	4620      	mov	r0, r4
   1e6c6:	4498      	add	r8, r3
   1e6c8:	9207      	str	r2, [sp, #28]
   1e6ca:	f000 ff49 	bl	1f560 <__i2b>
   1e6ce:	4607      	mov	r7, r0
   1e6d0:	2d00      	cmp	r5, #0
   1e6d2:	dd0b      	ble.n	1e6ec <_dtoa_r+0x744>
   1e6d4:	9b07      	ldr	r3, [sp, #28]
   1e6d6:	2b00      	cmp	r3, #0
   1e6d8:	dd08      	ble.n	1e6ec <_dtoa_r+0x744>
   1e6da:	42ab      	cmp	r3, r5
   1e6dc:	bfa8      	it	ge
   1e6de:	462b      	movge	r3, r5
   1e6e0:	9a07      	ldr	r2, [sp, #28]
   1e6e2:	eba8 0803 	sub.w	r8, r8, r3
   1e6e6:	1aed      	subs	r5, r5, r3
   1e6e8:	1ad3      	subs	r3, r2, r3
   1e6ea:	9307      	str	r3, [sp, #28]
   1e6ec:	9b08      	ldr	r3, [sp, #32]
   1e6ee:	b1fb      	cbz	r3, 1e730 <_dtoa_r+0x788>
   1e6f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1e6f2:	2b00      	cmp	r3, #0
   1e6f4:	f000 8104 	beq.w	1e900 <_dtoa_r+0x958>
   1e6f8:	2e00      	cmp	r6, #0
   1e6fa:	dd11      	ble.n	1e720 <_dtoa_r+0x778>
   1e6fc:	4639      	mov	r1, r7
   1e6fe:	4632      	mov	r2, r6
   1e700:	4620      	mov	r0, r4
   1e702:	f000 ffc3 	bl	1f68c <__pow5mult>
   1e706:	4652      	mov	r2, sl
   1e708:	4601      	mov	r1, r0
   1e70a:	4607      	mov	r7, r0
   1e70c:	4620      	mov	r0, r4
   1e70e:	f000 ff30 	bl	1f572 <__multiply>
   1e712:	4651      	mov	r1, sl
   1e714:	900a      	str	r0, [sp, #40]	; 0x28
   1e716:	4620      	mov	r0, r4
   1e718:	f000 fe44 	bl	1f3a4 <_Bfree>
   1e71c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1e71e:	469a      	mov	sl, r3
   1e720:	9b08      	ldr	r3, [sp, #32]
   1e722:	1b9a      	subs	r2, r3, r6
   1e724:	d004      	beq.n	1e730 <_dtoa_r+0x788>
   1e726:	4651      	mov	r1, sl
   1e728:	4620      	mov	r0, r4
   1e72a:	f000 ffaf 	bl	1f68c <__pow5mult>
   1e72e:	4682      	mov	sl, r0
   1e730:	2101      	movs	r1, #1
   1e732:	4620      	mov	r0, r4
   1e734:	f000 ff14 	bl	1f560 <__i2b>
   1e738:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1e73a:	4606      	mov	r6, r0
   1e73c:	2b00      	cmp	r3, #0
   1e73e:	f340 80e1 	ble.w	1e904 <_dtoa_r+0x95c>
   1e742:	461a      	mov	r2, r3
   1e744:	4601      	mov	r1, r0
   1e746:	4620      	mov	r0, r4
   1e748:	f000 ffa0 	bl	1f68c <__pow5mult>
   1e74c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1e74e:	4606      	mov	r6, r0
   1e750:	2b01      	cmp	r3, #1
   1e752:	f340 80da 	ble.w	1e90a <_dtoa_r+0x962>
   1e756:	2300      	movs	r3, #0
   1e758:	9308      	str	r3, [sp, #32]
   1e75a:	6933      	ldr	r3, [r6, #16]
   1e75c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
   1e760:	6918      	ldr	r0, [r3, #16]
   1e762:	f000 feaf 	bl	1f4c4 <__hi0bits>
   1e766:	f1c0 0020 	rsb	r0, r0, #32
   1e76a:	9b07      	ldr	r3, [sp, #28]
   1e76c:	4418      	add	r0, r3
   1e76e:	f010 001f 	ands.w	r0, r0, #31
   1e772:	f000 80f0 	beq.w	1e956 <_dtoa_r+0x9ae>
   1e776:	f1c0 0320 	rsb	r3, r0, #32
   1e77a:	2b04      	cmp	r3, #4
   1e77c:	f340 80e2 	ble.w	1e944 <_dtoa_r+0x99c>
   1e780:	9b07      	ldr	r3, [sp, #28]
   1e782:	f1c0 001c 	rsb	r0, r0, #28
   1e786:	4480      	add	r8, r0
   1e788:	4405      	add	r5, r0
   1e78a:	4403      	add	r3, r0
   1e78c:	9307      	str	r3, [sp, #28]
   1e78e:	f1b8 0f00 	cmp.w	r8, #0
   1e792:	dd05      	ble.n	1e7a0 <_dtoa_r+0x7f8>
   1e794:	4651      	mov	r1, sl
   1e796:	4642      	mov	r2, r8
   1e798:	4620      	mov	r0, r4
   1e79a:	f000 ffc5 	bl	1f728 <__lshift>
   1e79e:	4682      	mov	sl, r0
   1e7a0:	9b07      	ldr	r3, [sp, #28]
   1e7a2:	2b00      	cmp	r3, #0
   1e7a4:	dd05      	ble.n	1e7b2 <_dtoa_r+0x80a>
   1e7a6:	4631      	mov	r1, r6
   1e7a8:	461a      	mov	r2, r3
   1e7aa:	4620      	mov	r0, r4
   1e7ac:	f000 ffbc 	bl	1f728 <__lshift>
   1e7b0:	4606      	mov	r6, r0
   1e7b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1e7b4:	2b00      	cmp	r3, #0
   1e7b6:	f000 80d3 	beq.w	1e960 <_dtoa_r+0x9b8>
   1e7ba:	4631      	mov	r1, r6
   1e7bc:	4650      	mov	r0, sl
   1e7be:	f001 f804 	bl	1f7ca <__mcmp>
   1e7c2:	2800      	cmp	r0, #0
   1e7c4:	f280 80cc 	bge.w	1e960 <_dtoa_r+0x9b8>
   1e7c8:	2300      	movs	r3, #0
   1e7ca:	4651      	mov	r1, sl
   1e7cc:	220a      	movs	r2, #10
   1e7ce:	4620      	mov	r0, r4
   1e7d0:	f000 fdff 	bl	1f3d2 <__multadd>
   1e7d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1e7d6:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   1e7da:	4682      	mov	sl, r0
   1e7dc:	2b00      	cmp	r3, #0
   1e7de:	f000 81a9 	beq.w	1eb34 <_dtoa_r+0xb8c>
   1e7e2:	2300      	movs	r3, #0
   1e7e4:	4639      	mov	r1, r7
   1e7e6:	220a      	movs	r2, #10
   1e7e8:	4620      	mov	r0, r4
   1e7ea:	f000 fdf2 	bl	1f3d2 <__multadd>
   1e7ee:	9b04      	ldr	r3, [sp, #16]
   1e7f0:	4607      	mov	r7, r0
   1e7f2:	2b00      	cmp	r3, #0
   1e7f4:	dc03      	bgt.n	1e7fe <_dtoa_r+0x856>
   1e7f6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1e7f8:	2b02      	cmp	r3, #2
   1e7fa:	f300 80b9 	bgt.w	1e970 <_dtoa_r+0x9c8>
   1e7fe:	2d00      	cmp	r5, #0
   1e800:	dd05      	ble.n	1e80e <_dtoa_r+0x866>
   1e802:	4639      	mov	r1, r7
   1e804:	462a      	mov	r2, r5
   1e806:	4620      	mov	r0, r4
   1e808:	f000 ff8e 	bl	1f728 <__lshift>
   1e80c:	4607      	mov	r7, r0
   1e80e:	9b08      	ldr	r3, [sp, #32]
   1e810:	2b00      	cmp	r3, #0
   1e812:	f000 8110 	beq.w	1ea36 <_dtoa_r+0xa8e>
   1e816:	6879      	ldr	r1, [r7, #4]
   1e818:	4620      	mov	r0, r4
   1e81a:	f000 fd8f 	bl	1f33c <_Balloc>
   1e81e:	4605      	mov	r5, r0
   1e820:	693a      	ldr	r2, [r7, #16]
   1e822:	f107 010c 	add.w	r1, r7, #12
   1e826:	3202      	adds	r2, #2
   1e828:	0092      	lsls	r2, r2, #2
   1e82a:	300c      	adds	r0, #12
   1e82c:	f7fc fb1b 	bl	1ae66 <memcpy>
   1e830:	2201      	movs	r2, #1
   1e832:	4629      	mov	r1, r5
   1e834:	4620      	mov	r0, r4
   1e836:	f000 ff77 	bl	1f728 <__lshift>
   1e83a:	9707      	str	r7, [sp, #28]
   1e83c:	4607      	mov	r7, r0
   1e83e:	9b02      	ldr	r3, [sp, #8]
   1e840:	f8dd 8018 	ldr.w	r8, [sp, #24]
   1e844:	f003 0301 	and.w	r3, r3, #1
   1e848:	9308      	str	r3, [sp, #32]
   1e84a:	4631      	mov	r1, r6
   1e84c:	4650      	mov	r0, sl
   1e84e:	f7ff fb1f 	bl	1de90 <quorem>
   1e852:	9907      	ldr	r1, [sp, #28]
   1e854:	4605      	mov	r5, r0
   1e856:	f100 0930 	add.w	r9, r0, #48	; 0x30
   1e85a:	4650      	mov	r0, sl
   1e85c:	f000 ffb5 	bl	1f7ca <__mcmp>
   1e860:	463a      	mov	r2, r7
   1e862:	9002      	str	r0, [sp, #8]
   1e864:	4631      	mov	r1, r6
   1e866:	4620      	mov	r0, r4
   1e868:	f000 ffc9 	bl	1f7fe <__mdiff>
   1e86c:	68c3      	ldr	r3, [r0, #12]
   1e86e:	4602      	mov	r2, r0
   1e870:	2b00      	cmp	r3, #0
   1e872:	f040 80e2 	bne.w	1ea3a <_dtoa_r+0xa92>
   1e876:	4601      	mov	r1, r0
   1e878:	9009      	str	r0, [sp, #36]	; 0x24
   1e87a:	4650      	mov	r0, sl
   1e87c:	f000 ffa5 	bl	1f7ca <__mcmp>
   1e880:	4603      	mov	r3, r0
   1e882:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1e884:	4611      	mov	r1, r2
   1e886:	4620      	mov	r0, r4
   1e888:	9309      	str	r3, [sp, #36]	; 0x24
   1e88a:	f000 fd8b 	bl	1f3a4 <_Bfree>
   1e88e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1e890:	2b00      	cmp	r3, #0
   1e892:	f040 80d4 	bne.w	1ea3e <_dtoa_r+0xa96>
   1e896:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   1e898:	2a00      	cmp	r2, #0
   1e89a:	f040 80d0 	bne.w	1ea3e <_dtoa_r+0xa96>
   1e89e:	9a08      	ldr	r2, [sp, #32]
   1e8a0:	2a00      	cmp	r2, #0
   1e8a2:	f040 80cc 	bne.w	1ea3e <_dtoa_r+0xa96>
   1e8a6:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   1e8aa:	f000 80e8 	beq.w	1ea7e <_dtoa_r+0xad6>
   1e8ae:	9b02      	ldr	r3, [sp, #8]
   1e8b0:	2b00      	cmp	r3, #0
   1e8b2:	dd01      	ble.n	1e8b8 <_dtoa_r+0x910>
   1e8b4:	f105 0931 	add.w	r9, r5, #49	; 0x31
   1e8b8:	f108 0501 	add.w	r5, r8, #1
   1e8bc:	f888 9000 	strb.w	r9, [r8]
   1e8c0:	e06b      	b.n	1e99a <_dtoa_r+0x9f2>
   1e8c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
   1e8c4:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   1e8c8:	e6f7      	b.n	1e6ba <_dtoa_r+0x712>
   1e8ca:	9b08      	ldr	r3, [sp, #32]
   1e8cc:	f109 36ff 	add.w	r6, r9, #4294967295	; 0xffffffff
   1e8d0:	42b3      	cmp	r3, r6
   1e8d2:	bfb7      	itett	lt
   1e8d4:	9b08      	ldrlt	r3, [sp, #32]
   1e8d6:	1b9e      	subge	r6, r3, r6
   1e8d8:	1af2      	sublt	r2, r6, r3
   1e8da:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
   1e8dc:	bfbf      	itttt	lt
   1e8de:	9608      	strlt	r6, [sp, #32]
   1e8e0:	189b      	addlt	r3, r3, r2
   1e8e2:	930c      	strlt	r3, [sp, #48]	; 0x30
   1e8e4:	2600      	movlt	r6, #0
   1e8e6:	f1b9 0f00 	cmp.w	r9, #0
   1e8ea:	bfb9      	ittee	lt
   1e8ec:	eba8 0509 	sublt.w	r5, r8, r9
   1e8f0:	2300      	movlt	r3, #0
   1e8f2:	4645      	movge	r5, r8
   1e8f4:	464b      	movge	r3, r9
   1e8f6:	e6e2      	b.n	1e6be <_dtoa_r+0x716>
   1e8f8:	9e08      	ldr	r6, [sp, #32]
   1e8fa:	4645      	mov	r5, r8
   1e8fc:	9f09      	ldr	r7, [sp, #36]	; 0x24
   1e8fe:	e6e7      	b.n	1e6d0 <_dtoa_r+0x728>
   1e900:	9a08      	ldr	r2, [sp, #32]
   1e902:	e710      	b.n	1e726 <_dtoa_r+0x77e>
   1e904:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1e906:	2b01      	cmp	r3, #1
   1e908:	dc18      	bgt.n	1e93c <_dtoa_r+0x994>
   1e90a:	9b02      	ldr	r3, [sp, #8]
   1e90c:	b9b3      	cbnz	r3, 1e93c <_dtoa_r+0x994>
   1e90e:	9b03      	ldr	r3, [sp, #12]
   1e910:	f3c3 0313 	ubfx	r3, r3, #0, #20
   1e914:	b9a3      	cbnz	r3, 1e940 <_dtoa_r+0x998>
   1e916:	9b03      	ldr	r3, [sp, #12]
   1e918:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
   1e91c:	0d1b      	lsrs	r3, r3, #20
   1e91e:	051b      	lsls	r3, r3, #20
   1e920:	b12b      	cbz	r3, 1e92e <_dtoa_r+0x986>
   1e922:	9b07      	ldr	r3, [sp, #28]
   1e924:	f108 0801 	add.w	r8, r8, #1
   1e928:	3301      	adds	r3, #1
   1e92a:	9307      	str	r3, [sp, #28]
   1e92c:	2301      	movs	r3, #1
   1e92e:	9308      	str	r3, [sp, #32]
   1e930:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1e932:	2b00      	cmp	r3, #0
   1e934:	f47f af11 	bne.w	1e75a <_dtoa_r+0x7b2>
   1e938:	2001      	movs	r0, #1
   1e93a:	e716      	b.n	1e76a <_dtoa_r+0x7c2>
   1e93c:	2300      	movs	r3, #0
   1e93e:	e7f6      	b.n	1e92e <_dtoa_r+0x986>
   1e940:	9b02      	ldr	r3, [sp, #8]
   1e942:	e7f4      	b.n	1e92e <_dtoa_r+0x986>
   1e944:	f43f af23 	beq.w	1e78e <_dtoa_r+0x7e6>
   1e948:	9a07      	ldr	r2, [sp, #28]
   1e94a:	331c      	adds	r3, #28
   1e94c:	441a      	add	r2, r3
   1e94e:	4498      	add	r8, r3
   1e950:	441d      	add	r5, r3
   1e952:	4613      	mov	r3, r2
   1e954:	e71a      	b.n	1e78c <_dtoa_r+0x7e4>
   1e956:	4603      	mov	r3, r0
   1e958:	e7f6      	b.n	1e948 <_dtoa_r+0x9a0>
   1e95a:	bf00      	nop
   1e95c:	40240000 	.word	0x40240000
   1e960:	f1b9 0f00 	cmp.w	r9, #0
   1e964:	dc33      	bgt.n	1e9ce <_dtoa_r+0xa26>
   1e966:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1e968:	2b02      	cmp	r3, #2
   1e96a:	dd30      	ble.n	1e9ce <_dtoa_r+0xa26>
   1e96c:	f8cd 9010 	str.w	r9, [sp, #16]
   1e970:	9b04      	ldr	r3, [sp, #16]
   1e972:	b963      	cbnz	r3, 1e98e <_dtoa_r+0x9e6>
   1e974:	4631      	mov	r1, r6
   1e976:	2205      	movs	r2, #5
   1e978:	4620      	mov	r0, r4
   1e97a:	f000 fd2a 	bl	1f3d2 <__multadd>
   1e97e:	4601      	mov	r1, r0
   1e980:	4606      	mov	r6, r0
   1e982:	4650      	mov	r0, sl
   1e984:	f000 ff21 	bl	1f7ca <__mcmp>
   1e988:	2800      	cmp	r0, #0
   1e98a:	f73f ad5c 	bgt.w	1e446 <_dtoa_r+0x49e>
   1e98e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1e990:	9d06      	ldr	r5, [sp, #24]
   1e992:	ea6f 0b03 	mvn.w	fp, r3
   1e996:	2300      	movs	r3, #0
   1e998:	9307      	str	r3, [sp, #28]
   1e99a:	4631      	mov	r1, r6
   1e99c:	4620      	mov	r0, r4
   1e99e:	f000 fd01 	bl	1f3a4 <_Bfree>
   1e9a2:	2f00      	cmp	r7, #0
   1e9a4:	f43f ae4b 	beq.w	1e63e <_dtoa_r+0x696>
   1e9a8:	9b07      	ldr	r3, [sp, #28]
   1e9aa:	b12b      	cbz	r3, 1e9b8 <_dtoa_r+0xa10>
   1e9ac:	42bb      	cmp	r3, r7
   1e9ae:	d003      	beq.n	1e9b8 <_dtoa_r+0xa10>
   1e9b0:	4619      	mov	r1, r3
   1e9b2:	4620      	mov	r0, r4
   1e9b4:	f000 fcf6 	bl	1f3a4 <_Bfree>
   1e9b8:	4639      	mov	r1, r7
   1e9ba:	4620      	mov	r0, r4
   1e9bc:	f000 fcf2 	bl	1f3a4 <_Bfree>
   1e9c0:	e63d      	b.n	1e63e <_dtoa_r+0x696>
   1e9c2:	2600      	movs	r6, #0
   1e9c4:	4637      	mov	r7, r6
   1e9c6:	e7e2      	b.n	1e98e <_dtoa_r+0x9e6>
   1e9c8:	46bb      	mov	fp, r7
   1e9ca:	4637      	mov	r7, r6
   1e9cc:	e53b      	b.n	1e446 <_dtoa_r+0x49e>
   1e9ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1e9d0:	f8cd 9010 	str.w	r9, [sp, #16]
   1e9d4:	2b00      	cmp	r3, #0
   1e9d6:	f47f af12 	bne.w	1e7fe <_dtoa_r+0x856>
   1e9da:	9d06      	ldr	r5, [sp, #24]
   1e9dc:	4631      	mov	r1, r6
   1e9de:	4650      	mov	r0, sl
   1e9e0:	f7ff fa56 	bl	1de90 <quorem>
   1e9e4:	9b06      	ldr	r3, [sp, #24]
   1e9e6:	f100 0930 	add.w	r9, r0, #48	; 0x30
   1e9ea:	f805 9b01 	strb.w	r9, [r5], #1
   1e9ee:	9a04      	ldr	r2, [sp, #16]
   1e9f0:	1aeb      	subs	r3, r5, r3
   1e9f2:	429a      	cmp	r2, r3
   1e9f4:	f300 8081 	bgt.w	1eafa <_dtoa_r+0xb52>
   1e9f8:	9b06      	ldr	r3, [sp, #24]
   1e9fa:	2a01      	cmp	r2, #1
   1e9fc:	bfac      	ite	ge
   1e9fe:	189b      	addge	r3, r3, r2
   1ea00:	3301      	addlt	r3, #1
   1ea02:	4698      	mov	r8, r3
   1ea04:	2300      	movs	r3, #0
   1ea06:	9307      	str	r3, [sp, #28]
   1ea08:	4651      	mov	r1, sl
   1ea0a:	2201      	movs	r2, #1
   1ea0c:	4620      	mov	r0, r4
   1ea0e:	f000 fe8b 	bl	1f728 <__lshift>
   1ea12:	4631      	mov	r1, r6
   1ea14:	4682      	mov	sl, r0
   1ea16:	f000 fed8 	bl	1f7ca <__mcmp>
   1ea1a:	2800      	cmp	r0, #0
   1ea1c:	dc34      	bgt.n	1ea88 <_dtoa_r+0xae0>
   1ea1e:	d102      	bne.n	1ea26 <_dtoa_r+0xa7e>
   1ea20:	f019 0f01 	tst.w	r9, #1
   1ea24:	d130      	bne.n	1ea88 <_dtoa_r+0xae0>
   1ea26:	4645      	mov	r5, r8
   1ea28:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   1ea2c:	1e6a      	subs	r2, r5, #1
   1ea2e:	2b30      	cmp	r3, #48	; 0x30
   1ea30:	d1b3      	bne.n	1e99a <_dtoa_r+0x9f2>
   1ea32:	4615      	mov	r5, r2
   1ea34:	e7f8      	b.n	1ea28 <_dtoa_r+0xa80>
   1ea36:	4638      	mov	r0, r7
   1ea38:	e6ff      	b.n	1e83a <_dtoa_r+0x892>
   1ea3a:	2301      	movs	r3, #1
   1ea3c:	e722      	b.n	1e884 <_dtoa_r+0x8dc>
   1ea3e:	9a02      	ldr	r2, [sp, #8]
   1ea40:	2a00      	cmp	r2, #0
   1ea42:	db04      	blt.n	1ea4e <_dtoa_r+0xaa6>
   1ea44:	d128      	bne.n	1ea98 <_dtoa_r+0xaf0>
   1ea46:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   1ea48:	bb32      	cbnz	r2, 1ea98 <_dtoa_r+0xaf0>
   1ea4a:	9a08      	ldr	r2, [sp, #32]
   1ea4c:	bb22      	cbnz	r2, 1ea98 <_dtoa_r+0xaf0>
   1ea4e:	2b00      	cmp	r3, #0
   1ea50:	f77f af32 	ble.w	1e8b8 <_dtoa_r+0x910>
   1ea54:	4651      	mov	r1, sl
   1ea56:	2201      	movs	r2, #1
   1ea58:	4620      	mov	r0, r4
   1ea5a:	f000 fe65 	bl	1f728 <__lshift>
   1ea5e:	4631      	mov	r1, r6
   1ea60:	4682      	mov	sl, r0
   1ea62:	f000 feb2 	bl	1f7ca <__mcmp>
   1ea66:	2800      	cmp	r0, #0
   1ea68:	dc05      	bgt.n	1ea76 <_dtoa_r+0xace>
   1ea6a:	f47f af25 	bne.w	1e8b8 <_dtoa_r+0x910>
   1ea6e:	f019 0f01 	tst.w	r9, #1
   1ea72:	f43f af21 	beq.w	1e8b8 <_dtoa_r+0x910>
   1ea76:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   1ea7a:	f47f af1b 	bne.w	1e8b4 <_dtoa_r+0x90c>
   1ea7e:	2339      	movs	r3, #57	; 0x39
   1ea80:	f108 0801 	add.w	r8, r8, #1
   1ea84:	f808 3c01 	strb.w	r3, [r8, #-1]
   1ea88:	4645      	mov	r5, r8
   1ea8a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   1ea8e:	1e6a      	subs	r2, r5, #1
   1ea90:	2b39      	cmp	r3, #57	; 0x39
   1ea92:	d03a      	beq.n	1eb0a <_dtoa_r+0xb62>
   1ea94:	3301      	adds	r3, #1
   1ea96:	e03f      	b.n	1eb18 <_dtoa_r+0xb70>
   1ea98:	2b00      	cmp	r3, #0
   1ea9a:	f108 0501 	add.w	r5, r8, #1
   1ea9e:	dd05      	ble.n	1eaac <_dtoa_r+0xb04>
   1eaa0:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   1eaa4:	d0eb      	beq.n	1ea7e <_dtoa_r+0xad6>
   1eaa6:	f109 0901 	add.w	r9, r9, #1
   1eaaa:	e707      	b.n	1e8bc <_dtoa_r+0x914>
   1eaac:	9b06      	ldr	r3, [sp, #24]
   1eaae:	9a04      	ldr	r2, [sp, #16]
   1eab0:	1aeb      	subs	r3, r5, r3
   1eab2:	4293      	cmp	r3, r2
   1eab4:	46a8      	mov	r8, r5
   1eab6:	f805 9c01 	strb.w	r9, [r5, #-1]
   1eaba:	d0a5      	beq.n	1ea08 <_dtoa_r+0xa60>
   1eabc:	4651      	mov	r1, sl
   1eabe:	2300      	movs	r3, #0
   1eac0:	220a      	movs	r2, #10
   1eac2:	4620      	mov	r0, r4
   1eac4:	f000 fc85 	bl	1f3d2 <__multadd>
   1eac8:	9b07      	ldr	r3, [sp, #28]
   1eaca:	4682      	mov	sl, r0
   1eacc:	42bb      	cmp	r3, r7
   1eace:	f04f 020a 	mov.w	r2, #10
   1ead2:	f04f 0300 	mov.w	r3, #0
   1ead6:	9907      	ldr	r1, [sp, #28]
   1ead8:	4620      	mov	r0, r4
   1eada:	d104      	bne.n	1eae6 <_dtoa_r+0xb3e>
   1eadc:	f000 fc79 	bl	1f3d2 <__multadd>
   1eae0:	9007      	str	r0, [sp, #28]
   1eae2:	4607      	mov	r7, r0
   1eae4:	e6b1      	b.n	1e84a <_dtoa_r+0x8a2>
   1eae6:	f000 fc74 	bl	1f3d2 <__multadd>
   1eaea:	2300      	movs	r3, #0
   1eaec:	9007      	str	r0, [sp, #28]
   1eaee:	220a      	movs	r2, #10
   1eaf0:	4639      	mov	r1, r7
   1eaf2:	4620      	mov	r0, r4
   1eaf4:	f000 fc6d 	bl	1f3d2 <__multadd>
   1eaf8:	e7f3      	b.n	1eae2 <_dtoa_r+0xb3a>
   1eafa:	4651      	mov	r1, sl
   1eafc:	2300      	movs	r3, #0
   1eafe:	220a      	movs	r2, #10
   1eb00:	4620      	mov	r0, r4
   1eb02:	f000 fc66 	bl	1f3d2 <__multadd>
   1eb06:	4682      	mov	sl, r0
   1eb08:	e768      	b.n	1e9dc <_dtoa_r+0xa34>
   1eb0a:	9b06      	ldr	r3, [sp, #24]
   1eb0c:	4293      	cmp	r3, r2
   1eb0e:	d105      	bne.n	1eb1c <_dtoa_r+0xb74>
   1eb10:	2331      	movs	r3, #49	; 0x31
   1eb12:	9a06      	ldr	r2, [sp, #24]
   1eb14:	f10b 0b01 	add.w	fp, fp, #1
   1eb18:	7013      	strb	r3, [r2, #0]
   1eb1a:	e73e      	b.n	1e99a <_dtoa_r+0x9f2>
   1eb1c:	4615      	mov	r5, r2
   1eb1e:	e7b4      	b.n	1ea8a <_dtoa_r+0xae2>
   1eb20:	4b09      	ldr	r3, [pc, #36]	; (1eb48 <_dtoa_r+0xba0>)
   1eb22:	f7ff baa3 	b.w	1e06c <_dtoa_r+0xc4>
   1eb26:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1eb28:	2b00      	cmp	r3, #0
   1eb2a:	f47f aa7d 	bne.w	1e028 <_dtoa_r+0x80>
   1eb2e:	4b07      	ldr	r3, [pc, #28]	; (1eb4c <_dtoa_r+0xba4>)
   1eb30:	f7ff ba9c 	b.w	1e06c <_dtoa_r+0xc4>
   1eb34:	9b04      	ldr	r3, [sp, #16]
   1eb36:	2b00      	cmp	r3, #0
   1eb38:	f73f af4f 	bgt.w	1e9da <_dtoa_r+0xa32>
   1eb3c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1eb3e:	2b02      	cmp	r3, #2
   1eb40:	f77f af4b 	ble.w	1e9da <_dtoa_r+0xa32>
   1eb44:	e714      	b.n	1e970 <_dtoa_r+0x9c8>
   1eb46:	bf00      	nop
   1eb48:	000210e4 	.word	0x000210e4
   1eb4c:	0002263d 	.word	0x0002263d

0001eb50 <__sflags>:
__sflags():
   1eb50:	780b      	ldrb	r3, [r1, #0]
   1eb52:	b530      	push	{r4, r5, lr}
   1eb54:	2b72      	cmp	r3, #114	; 0x72
   1eb56:	d013      	beq.n	1eb80 <__sflags+0x30>
   1eb58:	2b77      	cmp	r3, #119	; 0x77
   1eb5a:	d007      	beq.n	1eb6c <__sflags+0x1c>
   1eb5c:	2b61      	cmp	r3, #97	; 0x61
   1eb5e:	d113      	bne.n	1eb88 <__sflags+0x38>
   1eb60:	f44f 7402 	mov.w	r4, #520	; 0x208
   1eb64:	2301      	movs	r3, #1
   1eb66:	f44f 7084 	mov.w	r0, #264	; 0x108
   1eb6a:	e003      	b.n	1eb74 <__sflags+0x24>
   1eb6c:	f44f 64c0 	mov.w	r4, #1536	; 0x600
   1eb70:	2301      	movs	r3, #1
   1eb72:	2008      	movs	r0, #8
   1eb74:	f811 5f01 	ldrb.w	r5, [r1, #1]!
   1eb78:	b955      	cbnz	r5, 1eb90 <__sflags+0x40>
   1eb7a:	4323      	orrs	r3, r4
   1eb7c:	6013      	str	r3, [r2, #0]
   1eb7e:	bd30      	pop	{r4, r5, pc}
   1eb80:	2400      	movs	r4, #0
   1eb82:	2004      	movs	r0, #4
   1eb84:	4623      	mov	r3, r4
   1eb86:	e7f5      	b.n	1eb74 <__sflags+0x24>
   1eb88:	2316      	movs	r3, #22
   1eb8a:	6003      	str	r3, [r0, #0]
   1eb8c:	2000      	movs	r0, #0
   1eb8e:	bd30      	pop	{r4, r5, pc}
   1eb90:	2d62      	cmp	r5, #98	; 0x62
   1eb92:	d00c      	beq.n	1ebae <__sflags+0x5e>
   1eb94:	2d78      	cmp	r5, #120	; 0x78
   1eb96:	d00d      	beq.n	1ebb4 <__sflags+0x64>
   1eb98:	2d2b      	cmp	r5, #43	; 0x2b
   1eb9a:	d1eb      	bne.n	1eb74 <__sflags+0x24>
   1eb9c:	f020 001c 	bic.w	r0, r0, #28
   1eba0:	f023 0303 	bic.w	r3, r3, #3
   1eba4:	f040 0010 	orr.w	r0, r0, #16
   1eba8:	f043 0302 	orr.w	r3, r3, #2
   1ebac:	e7e2      	b.n	1eb74 <__sflags+0x24>
   1ebae:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   1ebb2:	e7df      	b.n	1eb74 <__sflags+0x24>
   1ebb4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   1ebb8:	e7dc      	b.n	1eb74 <__sflags+0x24>
   1ebba:	Address 0x000000000001ebba is out of bounds.


0001ebbc <_fstat_r>:
_fstat_r():
   1ebbc:	b538      	push	{r3, r4, r5, lr}
   1ebbe:	2300      	movs	r3, #0
   1ebc0:	4c06      	ldr	r4, [pc, #24]	; (1ebdc <_fstat_r+0x20>)
   1ebc2:	4605      	mov	r5, r0
   1ebc4:	4608      	mov	r0, r1
   1ebc6:	4611      	mov	r1, r2
   1ebc8:	6023      	str	r3, [r4, #0]
   1ebca:	f7f9 fc1d 	bl	18408 <_fstat>
   1ebce:	1c43      	adds	r3, r0, #1
   1ebd0:	d102      	bne.n	1ebd8 <_fstat_r+0x1c>
   1ebd2:	6823      	ldr	r3, [r4, #0]
   1ebd4:	b103      	cbz	r3, 1ebd8 <_fstat_r+0x1c>
   1ebd6:	602b      	str	r3, [r5, #0]
   1ebd8:	bd38      	pop	{r3, r4, r5, pc}
   1ebda:	bf00      	nop
   1ebdc:	2007d064 	.word	0x2007d064

0001ebe0 <rshift>:
rshift():
   1ebe0:	b5f0      	push	{r4, r5, r6, r7, lr}
   1ebe2:	6906      	ldr	r6, [r0, #16]
   1ebe4:	114b      	asrs	r3, r1, #5
   1ebe6:	42b3      	cmp	r3, r6
   1ebe8:	f100 0514 	add.w	r5, r0, #20
   1ebec:	da2b      	bge.n	1ec46 <rshift+0x66>
   1ebee:	f011 011f 	ands.w	r1, r1, #31
   1ebf2:	eb05 0686 	add.w	r6, r5, r6, lsl #2
   1ebf6:	eb05 0283 	add.w	r2, r5, r3, lsl #2
   1ebfa:	d108      	bne.n	1ec0e <rshift+0x2e>
   1ebfc:	4629      	mov	r1, r5
   1ebfe:	42b2      	cmp	r2, r6
   1ec00:	460b      	mov	r3, r1
   1ec02:	d210      	bcs.n	1ec26 <rshift+0x46>
   1ec04:	f852 3b04 	ldr.w	r3, [r2], #4
   1ec08:	f841 3b04 	str.w	r3, [r1], #4
   1ec0c:	e7f7      	b.n	1ebfe <rshift+0x1e>
   1ec0e:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
   1ec12:	462b      	mov	r3, r5
   1ec14:	f1c1 0e20 	rsb	lr, r1, #32
   1ec18:	3204      	adds	r2, #4
   1ec1a:	40cc      	lsrs	r4, r1
   1ec1c:	42b2      	cmp	r2, r6
   1ec1e:	d308      	bcc.n	1ec32 <rshift+0x52>
   1ec20:	601c      	str	r4, [r3, #0]
   1ec22:	b104      	cbz	r4, 1ec26 <rshift+0x46>
   1ec24:	3304      	adds	r3, #4
   1ec26:	1b5b      	subs	r3, r3, r5
   1ec28:	109b      	asrs	r3, r3, #2
   1ec2a:	6103      	str	r3, [r0, #16]
   1ec2c:	b903      	cbnz	r3, 1ec30 <rshift+0x50>
   1ec2e:	6143      	str	r3, [r0, #20]
   1ec30:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1ec32:	6817      	ldr	r7, [r2, #0]
   1ec34:	fa07 f70e 	lsl.w	r7, r7, lr
   1ec38:	433c      	orrs	r4, r7
   1ec3a:	f843 4b04 	str.w	r4, [r3], #4
   1ec3e:	f852 4b04 	ldr.w	r4, [r2], #4
   1ec42:	40cc      	lsrs	r4, r1
   1ec44:	e7ea      	b.n	1ec1c <rshift+0x3c>
   1ec46:	462b      	mov	r3, r5
   1ec48:	e7ed      	b.n	1ec26 <rshift+0x46>

0001ec4a <__hexdig_fun>:
__hexdig_fun():
   1ec4a:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
   1ec4e:	2b09      	cmp	r3, #9
   1ec50:	d802      	bhi.n	1ec58 <__hexdig_fun+0xe>
   1ec52:	3820      	subs	r0, #32
   1ec54:	b2c0      	uxtb	r0, r0
   1ec56:	4770      	bx	lr
   1ec58:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
   1ec5c:	2b05      	cmp	r3, #5
   1ec5e:	d801      	bhi.n	1ec64 <__hexdig_fun+0x1a>
   1ec60:	3847      	subs	r0, #71	; 0x47
   1ec62:	e7f7      	b.n	1ec54 <__hexdig_fun+0xa>
   1ec64:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
   1ec68:	2b05      	cmp	r3, #5
   1ec6a:	d801      	bhi.n	1ec70 <__hexdig_fun+0x26>
   1ec6c:	3827      	subs	r0, #39	; 0x27
   1ec6e:	e7f1      	b.n	1ec54 <__hexdig_fun+0xa>
   1ec70:	2000      	movs	r0, #0
   1ec72:	4770      	bx	lr

0001ec74 <__gethex>:
__gethex():
   1ec74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec78:	b08b      	sub	sp, #44	; 0x2c
   1ec7a:	9002      	str	r0, [sp, #8]
   1ec7c:	9816      	ldr	r0, [sp, #88]	; 0x58
   1ec7e:	468a      	mov	sl, r1
   1ec80:	4690      	mov	r8, r2
   1ec82:	9306      	str	r3, [sp, #24]
   1ec84:	f000 fb38 	bl	1f2f8 <__localeconv_l>
   1ec88:	6803      	ldr	r3, [r0, #0]
   1ec8a:	f04f 0b00 	mov.w	fp, #0
   1ec8e:	4618      	mov	r0, r3
   1ec90:	9303      	str	r3, [sp, #12]
   1ec92:	f7fd fe32 	bl	1c8fa <strlen>
   1ec96:	9b03      	ldr	r3, [sp, #12]
   1ec98:	9001      	str	r0, [sp, #4]
   1ec9a:	4403      	add	r3, r0
   1ec9c:	f813 3c01 	ldrb.w	r3, [r3, #-1]
   1eca0:	9307      	str	r3, [sp, #28]
   1eca2:	f8da 3000 	ldr.w	r3, [sl]
   1eca6:	3302      	adds	r3, #2
   1eca8:	461f      	mov	r7, r3
   1ecaa:	f813 0b01 	ldrb.w	r0, [r3], #1
   1ecae:	2830      	cmp	r0, #48	; 0x30
   1ecb0:	d06c      	beq.n	1ed8c <__gethex+0x118>
   1ecb2:	f7ff ffca 	bl	1ec4a <__hexdig_fun>
   1ecb6:	4604      	mov	r4, r0
   1ecb8:	2800      	cmp	r0, #0
   1ecba:	d16a      	bne.n	1ed92 <__gethex+0x11e>
   1ecbc:	9a01      	ldr	r2, [sp, #4]
   1ecbe:	9903      	ldr	r1, [sp, #12]
   1ecc0:	4638      	mov	r0, r7
   1ecc2:	f7fd fe22 	bl	1c90a <strncmp>
   1ecc6:	2800      	cmp	r0, #0
   1ecc8:	d166      	bne.n	1ed98 <__gethex+0x124>
   1ecca:	9b01      	ldr	r3, [sp, #4]
   1eccc:	5cf8      	ldrb	r0, [r7, r3]
   1ecce:	18fe      	adds	r6, r7, r3
   1ecd0:	f7ff ffbb 	bl	1ec4a <__hexdig_fun>
   1ecd4:	2800      	cmp	r0, #0
   1ecd6:	d062      	beq.n	1ed9e <__gethex+0x12a>
   1ecd8:	4633      	mov	r3, r6
   1ecda:	7818      	ldrb	r0, [r3, #0]
   1ecdc:	461f      	mov	r7, r3
   1ecde:	2830      	cmp	r0, #48	; 0x30
   1ece0:	f103 0301 	add.w	r3, r3, #1
   1ece4:	d0f9      	beq.n	1ecda <__gethex+0x66>
   1ece6:	f7ff ffb0 	bl	1ec4a <__hexdig_fun>
   1ecea:	fab0 f580 	clz	r5, r0
   1ecee:	4634      	mov	r4, r6
   1ecf0:	f04f 0b01 	mov.w	fp, #1
   1ecf4:	096d      	lsrs	r5, r5, #5
   1ecf6:	463a      	mov	r2, r7
   1ecf8:	4616      	mov	r6, r2
   1ecfa:	7830      	ldrb	r0, [r6, #0]
   1ecfc:	3201      	adds	r2, #1
   1ecfe:	f7ff ffa4 	bl	1ec4a <__hexdig_fun>
   1ed02:	2800      	cmp	r0, #0
   1ed04:	d1f8      	bne.n	1ecf8 <__gethex+0x84>
   1ed06:	9a01      	ldr	r2, [sp, #4]
   1ed08:	9903      	ldr	r1, [sp, #12]
   1ed0a:	4630      	mov	r0, r6
   1ed0c:	f7fd fdfd 	bl	1c90a <strncmp>
   1ed10:	b950      	cbnz	r0, 1ed28 <__gethex+0xb4>
   1ed12:	b954      	cbnz	r4, 1ed2a <__gethex+0xb6>
   1ed14:	9b01      	ldr	r3, [sp, #4]
   1ed16:	18f4      	adds	r4, r6, r3
   1ed18:	4622      	mov	r2, r4
   1ed1a:	4616      	mov	r6, r2
   1ed1c:	7830      	ldrb	r0, [r6, #0]
   1ed1e:	3201      	adds	r2, #1
   1ed20:	f7ff ff93 	bl	1ec4a <__hexdig_fun>
   1ed24:	2800      	cmp	r0, #0
   1ed26:	d1f8      	bne.n	1ed1a <__gethex+0xa6>
   1ed28:	b10c      	cbz	r4, 1ed2e <__gethex+0xba>
   1ed2a:	1ba4      	subs	r4, r4, r6
   1ed2c:	00a4      	lsls	r4, r4, #2
   1ed2e:	7833      	ldrb	r3, [r6, #0]
   1ed30:	2b50      	cmp	r3, #80	; 0x50
   1ed32:	d001      	beq.n	1ed38 <__gethex+0xc4>
   1ed34:	2b70      	cmp	r3, #112	; 0x70
   1ed36:	d140      	bne.n	1edba <__gethex+0x146>
   1ed38:	7873      	ldrb	r3, [r6, #1]
   1ed3a:	2b2b      	cmp	r3, #43	; 0x2b
   1ed3c:	d035      	beq.n	1edaa <__gethex+0x136>
   1ed3e:	2b2d      	cmp	r3, #45	; 0x2d
   1ed40:	d02f      	beq.n	1eda2 <__gethex+0x12e>
   1ed42:	f04f 0900 	mov.w	r9, #0
   1ed46:	1c71      	adds	r1, r6, #1
   1ed48:	7808      	ldrb	r0, [r1, #0]
   1ed4a:	f7ff ff7e 	bl	1ec4a <__hexdig_fun>
   1ed4e:	1e43      	subs	r3, r0, #1
   1ed50:	b2db      	uxtb	r3, r3
   1ed52:	2b18      	cmp	r3, #24
   1ed54:	d831      	bhi.n	1edba <__gethex+0x146>
   1ed56:	f1a0 0210 	sub.w	r2, r0, #16
   1ed5a:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   1ed5e:	f7ff ff74 	bl	1ec4a <__hexdig_fun>
   1ed62:	1e43      	subs	r3, r0, #1
   1ed64:	b2db      	uxtb	r3, r3
   1ed66:	2b18      	cmp	r3, #24
   1ed68:	d922      	bls.n	1edb0 <__gethex+0x13c>
   1ed6a:	f1b9 0f00 	cmp.w	r9, #0
   1ed6e:	d000      	beq.n	1ed72 <__gethex+0xfe>
   1ed70:	4252      	negs	r2, r2
   1ed72:	4414      	add	r4, r2
   1ed74:	f8ca 1000 	str.w	r1, [sl]
   1ed78:	b30d      	cbz	r5, 1edbe <__gethex+0x14a>
   1ed7a:	f1bb 0f00 	cmp.w	fp, #0
   1ed7e:	bf14      	ite	ne
   1ed80:	2700      	movne	r7, #0
   1ed82:	2706      	moveq	r7, #6
   1ed84:	4638      	mov	r0, r7
   1ed86:	b00b      	add	sp, #44	; 0x2c
   1ed88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed8c:	f10b 0b01 	add.w	fp, fp, #1
   1ed90:	e78a      	b.n	1eca8 <__gethex+0x34>
   1ed92:	2500      	movs	r5, #0
   1ed94:	462c      	mov	r4, r5
   1ed96:	e7ae      	b.n	1ecf6 <__gethex+0x82>
   1ed98:	463e      	mov	r6, r7
   1ed9a:	2501      	movs	r5, #1
   1ed9c:	e7c7      	b.n	1ed2e <__gethex+0xba>
   1ed9e:	4604      	mov	r4, r0
   1eda0:	e7fb      	b.n	1ed9a <__gethex+0x126>
   1eda2:	f04f 0901 	mov.w	r9, #1
   1eda6:	1cb1      	adds	r1, r6, #2
   1eda8:	e7ce      	b.n	1ed48 <__gethex+0xd4>
   1edaa:	f04f 0900 	mov.w	r9, #0
   1edae:	e7fa      	b.n	1eda6 <__gethex+0x132>
   1edb0:	230a      	movs	r3, #10
   1edb2:	fb03 0202 	mla	r2, r3, r2, r0
   1edb6:	3a10      	subs	r2, #16
   1edb8:	e7cf      	b.n	1ed5a <__gethex+0xe6>
   1edba:	4631      	mov	r1, r6
   1edbc:	e7da      	b.n	1ed74 <__gethex+0x100>
   1edbe:	4629      	mov	r1, r5
   1edc0:	1bf3      	subs	r3, r6, r7
   1edc2:	3b01      	subs	r3, #1
   1edc4:	2b07      	cmp	r3, #7
   1edc6:	dc49      	bgt.n	1ee5c <__gethex+0x1e8>
   1edc8:	9802      	ldr	r0, [sp, #8]
   1edca:	f000 fab7 	bl	1f33c <_Balloc>
   1edce:	f04f 0b00 	mov.w	fp, #0
   1edd2:	4605      	mov	r5, r0
   1edd4:	46da      	mov	sl, fp
   1edd6:	9b01      	ldr	r3, [sp, #4]
   1edd8:	f100 0914 	add.w	r9, r0, #20
   1eddc:	f1c3 0301 	rsb	r3, r3, #1
   1ede0:	f8cd 9010 	str.w	r9, [sp, #16]
   1ede4:	9308      	str	r3, [sp, #32]
   1ede6:	42b7      	cmp	r7, r6
   1ede8:	d33b      	bcc.n	1ee62 <__gethex+0x1ee>
   1edea:	9804      	ldr	r0, [sp, #16]
   1edec:	f840 ab04 	str.w	sl, [r0], #4
   1edf0:	eba0 0009 	sub.w	r0, r0, r9
   1edf4:	1080      	asrs	r0, r0, #2
   1edf6:	6128      	str	r0, [r5, #16]
   1edf8:	0147      	lsls	r7, r0, #5
   1edfa:	4650      	mov	r0, sl
   1edfc:	f000 fb62 	bl	1f4c4 <__hi0bits>
   1ee00:	f8d8 6000 	ldr.w	r6, [r8]
   1ee04:	1a3f      	subs	r7, r7, r0
   1ee06:	42b7      	cmp	r7, r6
   1ee08:	dd64      	ble.n	1eed4 <__gethex+0x260>
   1ee0a:	1bbf      	subs	r7, r7, r6
   1ee0c:	4639      	mov	r1, r7
   1ee0e:	4628      	mov	r0, r5
   1ee10:	f000 fe5b 	bl	1faca <__any_on>
   1ee14:	4682      	mov	sl, r0
   1ee16:	b178      	cbz	r0, 1ee38 <__gethex+0x1c4>
   1ee18:	f04f 0a01 	mov.w	sl, #1
   1ee1c:	1e7b      	subs	r3, r7, #1
   1ee1e:	1159      	asrs	r1, r3, #5
   1ee20:	f003 021f 	and.w	r2, r3, #31
   1ee24:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
   1ee28:	fa0a f202 	lsl.w	r2, sl, r2
   1ee2c:	420a      	tst	r2, r1
   1ee2e:	d003      	beq.n	1ee38 <__gethex+0x1c4>
   1ee30:	4553      	cmp	r3, sl
   1ee32:	dc46      	bgt.n	1eec2 <__gethex+0x24e>
   1ee34:	f04f 0a02 	mov.w	sl, #2
   1ee38:	4639      	mov	r1, r7
   1ee3a:	4628      	mov	r0, r5
   1ee3c:	f7ff fed0 	bl	1ebe0 <rshift>
   1ee40:	443c      	add	r4, r7
   1ee42:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1ee46:	429c      	cmp	r4, r3
   1ee48:	dd52      	ble.n	1eef0 <__gethex+0x27c>
   1ee4a:	4629      	mov	r1, r5
   1ee4c:	9802      	ldr	r0, [sp, #8]
   1ee4e:	f000 faa9 	bl	1f3a4 <_Bfree>
   1ee52:	2300      	movs	r3, #0
   1ee54:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1ee56:	27a3      	movs	r7, #163	; 0xa3
   1ee58:	6013      	str	r3, [r2, #0]
   1ee5a:	e793      	b.n	1ed84 <__gethex+0x110>
   1ee5c:	3101      	adds	r1, #1
   1ee5e:	105b      	asrs	r3, r3, #1
   1ee60:	e7b0      	b.n	1edc4 <__gethex+0x150>
   1ee62:	1e73      	subs	r3, r6, #1
   1ee64:	9305      	str	r3, [sp, #20]
   1ee66:	9a07      	ldr	r2, [sp, #28]
   1ee68:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   1ee6c:	4293      	cmp	r3, r2
   1ee6e:	d018      	beq.n	1eea2 <__gethex+0x22e>
   1ee70:	f1bb 0f20 	cmp.w	fp, #32
   1ee74:	d107      	bne.n	1ee86 <__gethex+0x212>
   1ee76:	9b04      	ldr	r3, [sp, #16]
   1ee78:	f8c3 a000 	str.w	sl, [r3]
   1ee7c:	f04f 0a00 	mov.w	sl, #0
   1ee80:	46d3      	mov	fp, sl
   1ee82:	3304      	adds	r3, #4
   1ee84:	9304      	str	r3, [sp, #16]
   1ee86:	f816 0c01 	ldrb.w	r0, [r6, #-1]
   1ee8a:	f7ff fede 	bl	1ec4a <__hexdig_fun>
   1ee8e:	f000 000f 	and.w	r0, r0, #15
   1ee92:	fa00 f00b 	lsl.w	r0, r0, fp
   1ee96:	ea4a 0a00 	orr.w	sl, sl, r0
   1ee9a:	f10b 0b04 	add.w	fp, fp, #4
   1ee9e:	9b05      	ldr	r3, [sp, #20]
   1eea0:	e00d      	b.n	1eebe <__gethex+0x24a>
   1eea2:	9b05      	ldr	r3, [sp, #20]
   1eea4:	9a08      	ldr	r2, [sp, #32]
   1eea6:	4413      	add	r3, r2
   1eea8:	429f      	cmp	r7, r3
   1eeaa:	d8e1      	bhi.n	1ee70 <__gethex+0x1fc>
   1eeac:	4618      	mov	r0, r3
   1eeae:	9a01      	ldr	r2, [sp, #4]
   1eeb0:	9903      	ldr	r1, [sp, #12]
   1eeb2:	9309      	str	r3, [sp, #36]	; 0x24
   1eeb4:	f7fd fd29 	bl	1c90a <strncmp>
   1eeb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1eeba:	2800      	cmp	r0, #0
   1eebc:	d1d8      	bne.n	1ee70 <__gethex+0x1fc>
   1eebe:	461e      	mov	r6, r3
   1eec0:	e791      	b.n	1ede6 <__gethex+0x172>
   1eec2:	1eb9      	subs	r1, r7, #2
   1eec4:	4628      	mov	r0, r5
   1eec6:	f000 fe00 	bl	1faca <__any_on>
   1eeca:	2800      	cmp	r0, #0
   1eecc:	d0b2      	beq.n	1ee34 <__gethex+0x1c0>
   1eece:	f04f 0a03 	mov.w	sl, #3
   1eed2:	e7b1      	b.n	1ee38 <__gethex+0x1c4>
   1eed4:	da09      	bge.n	1eeea <__gethex+0x276>
   1eed6:	1bf7      	subs	r7, r6, r7
   1eed8:	4629      	mov	r1, r5
   1eeda:	463a      	mov	r2, r7
   1eedc:	9802      	ldr	r0, [sp, #8]
   1eede:	f000 fc23 	bl	1f728 <__lshift>
   1eee2:	4605      	mov	r5, r0
   1eee4:	1be4      	subs	r4, r4, r7
   1eee6:	f100 0914 	add.w	r9, r0, #20
   1eeea:	f04f 0a00 	mov.w	sl, #0
   1eeee:	e7a8      	b.n	1ee42 <__gethex+0x1ce>
   1eef0:	f8d8 0004 	ldr.w	r0, [r8, #4]
   1eef4:	4284      	cmp	r4, r0
   1eef6:	da6b      	bge.n	1efd0 <__gethex+0x35c>
   1eef8:	1b04      	subs	r4, r0, r4
   1eefa:	42a6      	cmp	r6, r4
   1eefc:	dc2e      	bgt.n	1ef5c <__gethex+0x2e8>
   1eefe:	f8d8 300c 	ldr.w	r3, [r8, #12]
   1ef02:	2b02      	cmp	r3, #2
   1ef04:	d022      	beq.n	1ef4c <__gethex+0x2d8>
   1ef06:	2b03      	cmp	r3, #3
   1ef08:	d024      	beq.n	1ef54 <__gethex+0x2e0>
   1ef0a:	2b01      	cmp	r3, #1
   1ef0c:	d115      	bne.n	1ef3a <__gethex+0x2c6>
   1ef0e:	42a6      	cmp	r6, r4
   1ef10:	d113      	bne.n	1ef3a <__gethex+0x2c6>
   1ef12:	2e01      	cmp	r6, #1
   1ef14:	dc0b      	bgt.n	1ef2e <__gethex+0x2ba>
   1ef16:	f8d8 3004 	ldr.w	r3, [r8, #4]
   1ef1a:	9a06      	ldr	r2, [sp, #24]
   1ef1c:	2762      	movs	r7, #98	; 0x62
   1ef1e:	6013      	str	r3, [r2, #0]
   1ef20:	2301      	movs	r3, #1
   1ef22:	612b      	str	r3, [r5, #16]
   1ef24:	f8c9 3000 	str.w	r3, [r9]
   1ef28:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1ef2a:	601d      	str	r5, [r3, #0]
   1ef2c:	e72a      	b.n	1ed84 <__gethex+0x110>
   1ef2e:	1e71      	subs	r1, r6, #1
   1ef30:	4628      	mov	r0, r5
   1ef32:	f000 fdca 	bl	1faca <__any_on>
   1ef36:	2800      	cmp	r0, #0
   1ef38:	d1ed      	bne.n	1ef16 <__gethex+0x2a2>
   1ef3a:	4629      	mov	r1, r5
   1ef3c:	9802      	ldr	r0, [sp, #8]
   1ef3e:	f000 fa31 	bl	1f3a4 <_Bfree>
   1ef42:	2300      	movs	r3, #0
   1ef44:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1ef46:	2750      	movs	r7, #80	; 0x50
   1ef48:	6013      	str	r3, [r2, #0]
   1ef4a:	e71b      	b.n	1ed84 <__gethex+0x110>
   1ef4c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1ef4e:	2b00      	cmp	r3, #0
   1ef50:	d0e1      	beq.n	1ef16 <__gethex+0x2a2>
   1ef52:	e7f2      	b.n	1ef3a <__gethex+0x2c6>
   1ef54:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1ef56:	2b00      	cmp	r3, #0
   1ef58:	d1dd      	bne.n	1ef16 <__gethex+0x2a2>
   1ef5a:	e7ee      	b.n	1ef3a <__gethex+0x2c6>
   1ef5c:	1e67      	subs	r7, r4, #1
   1ef5e:	f1ba 0f00 	cmp.w	sl, #0
   1ef62:	d132      	bne.n	1efca <__gethex+0x356>
   1ef64:	b127      	cbz	r7, 1ef70 <__gethex+0x2fc>
   1ef66:	4639      	mov	r1, r7
   1ef68:	4628      	mov	r0, r5
   1ef6a:	f000 fdae 	bl	1faca <__any_on>
   1ef6e:	4682      	mov	sl, r0
   1ef70:	2301      	movs	r3, #1
   1ef72:	117a      	asrs	r2, r7, #5
   1ef74:	f007 071f 	and.w	r7, r7, #31
   1ef78:	fa03 f707 	lsl.w	r7, r3, r7
   1ef7c:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
   1ef80:	4621      	mov	r1, r4
   1ef82:	421f      	tst	r7, r3
   1ef84:	f04f 0702 	mov.w	r7, #2
   1ef88:	4628      	mov	r0, r5
   1ef8a:	bf18      	it	ne
   1ef8c:	f04a 0a02 	orrne.w	sl, sl, #2
   1ef90:	1b36      	subs	r6, r6, r4
   1ef92:	f7ff fe25 	bl	1ebe0 <rshift>
   1ef96:	f8d8 4004 	ldr.w	r4, [r8, #4]
   1ef9a:	f1ba 0f00 	cmp.w	sl, #0
   1ef9e:	d045      	beq.n	1f02c <__gethex+0x3b8>
   1efa0:	f8d8 300c 	ldr.w	r3, [r8, #12]
   1efa4:	2b02      	cmp	r3, #2
   1efa6:	d015      	beq.n	1efd4 <__gethex+0x360>
   1efa8:	2b03      	cmp	r3, #3
   1efaa:	d017      	beq.n	1efdc <__gethex+0x368>
   1efac:	2b01      	cmp	r3, #1
   1efae:	d109      	bne.n	1efc4 <__gethex+0x350>
   1efb0:	f01a 0f02 	tst.w	sl, #2
   1efb4:	d006      	beq.n	1efc4 <__gethex+0x350>
   1efb6:	f8d9 3000 	ldr.w	r3, [r9]
   1efba:	ea4a 0a03 	orr.w	sl, sl, r3
   1efbe:	f01a 0f01 	tst.w	sl, #1
   1efc2:	d10e      	bne.n	1efe2 <__gethex+0x36e>
   1efc4:	f047 0710 	orr.w	r7, r7, #16
   1efc8:	e030      	b.n	1f02c <__gethex+0x3b8>
   1efca:	f04f 0a01 	mov.w	sl, #1
   1efce:	e7cf      	b.n	1ef70 <__gethex+0x2fc>
   1efd0:	2701      	movs	r7, #1
   1efd2:	e7e2      	b.n	1ef9a <__gethex+0x326>
   1efd4:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1efd6:	f1c3 0301 	rsb	r3, r3, #1
   1efda:	9315      	str	r3, [sp, #84]	; 0x54
   1efdc:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1efde:	2b00      	cmp	r3, #0
   1efe0:	d0f0      	beq.n	1efc4 <__gethex+0x350>
   1efe2:	2000      	movs	r0, #0
   1efe4:	f8d5 9010 	ldr.w	r9, [r5, #16]
   1efe8:	f105 0314 	add.w	r3, r5, #20
   1efec:	ea4f 0a89 	mov.w	sl, r9, lsl #2
   1eff0:	eb03 010a 	add.w	r1, r3, sl
   1eff4:	681a      	ldr	r2, [r3, #0]
   1eff6:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
   1effa:	d01c      	beq.n	1f036 <__gethex+0x3c2>
   1effc:	3201      	adds	r2, #1
   1effe:	601a      	str	r2, [r3, #0]
   1f000:	2f02      	cmp	r7, #2
   1f002:	f105 0314 	add.w	r3, r5, #20
   1f006:	d138      	bne.n	1f07a <__gethex+0x406>
   1f008:	f8d8 2000 	ldr.w	r2, [r8]
   1f00c:	3a01      	subs	r2, #1
   1f00e:	4296      	cmp	r6, r2
   1f010:	d10a      	bne.n	1f028 <__gethex+0x3b4>
   1f012:	2201      	movs	r2, #1
   1f014:	1171      	asrs	r1, r6, #5
   1f016:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
   1f01a:	f006 061f 	and.w	r6, r6, #31
   1f01e:	fa02 f606 	lsl.w	r6, r2, r6
   1f022:	421e      	tst	r6, r3
   1f024:	bf18      	it	ne
   1f026:	4617      	movne	r7, r2
   1f028:	f047 0720 	orr.w	r7, r7, #32
   1f02c:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1f02e:	601d      	str	r5, [r3, #0]
   1f030:	9b06      	ldr	r3, [sp, #24]
   1f032:	601c      	str	r4, [r3, #0]
   1f034:	e6a6      	b.n	1ed84 <__gethex+0x110>
   1f036:	f843 0b04 	str.w	r0, [r3], #4
   1f03a:	4299      	cmp	r1, r3
   1f03c:	d8da      	bhi.n	1eff4 <__gethex+0x380>
   1f03e:	68ab      	ldr	r3, [r5, #8]
   1f040:	4599      	cmp	r9, r3
   1f042:	db12      	blt.n	1f06a <__gethex+0x3f6>
   1f044:	6869      	ldr	r1, [r5, #4]
   1f046:	9802      	ldr	r0, [sp, #8]
   1f048:	3101      	adds	r1, #1
   1f04a:	f000 f977 	bl	1f33c <_Balloc>
   1f04e:	4683      	mov	fp, r0
   1f050:	692a      	ldr	r2, [r5, #16]
   1f052:	f105 010c 	add.w	r1, r5, #12
   1f056:	3202      	adds	r2, #2
   1f058:	0092      	lsls	r2, r2, #2
   1f05a:	300c      	adds	r0, #12
   1f05c:	f7fb ff03 	bl	1ae66 <memcpy>
   1f060:	4629      	mov	r1, r5
   1f062:	9802      	ldr	r0, [sp, #8]
   1f064:	f000 f99e 	bl	1f3a4 <_Bfree>
   1f068:	465d      	mov	r5, fp
   1f06a:	692b      	ldr	r3, [r5, #16]
   1f06c:	1c5a      	adds	r2, r3, #1
   1f06e:	612a      	str	r2, [r5, #16]
   1f070:	2201      	movs	r2, #1
   1f072:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   1f076:	615a      	str	r2, [r3, #20]
   1f078:	e7c2      	b.n	1f000 <__gethex+0x38c>
   1f07a:	692a      	ldr	r2, [r5, #16]
   1f07c:	4591      	cmp	r9, r2
   1f07e:	da0b      	bge.n	1f098 <__gethex+0x424>
   1f080:	2101      	movs	r1, #1
   1f082:	4628      	mov	r0, r5
   1f084:	f7ff fdac 	bl	1ebe0 <rshift>
   1f088:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1f08c:	3401      	adds	r4, #1
   1f08e:	429c      	cmp	r4, r3
   1f090:	f73f aedb 	bgt.w	1ee4a <__gethex+0x1d6>
   1f094:	2701      	movs	r7, #1
   1f096:	e7c7      	b.n	1f028 <__gethex+0x3b4>
   1f098:	f016 061f 	ands.w	r6, r6, #31
   1f09c:	d0fa      	beq.n	1f094 <__gethex+0x420>
   1f09e:	449a      	add	sl, r3
   1f0a0:	f85a 0c04 	ldr.w	r0, [sl, #-4]
   1f0a4:	f000 fa0e 	bl	1f4c4 <__hi0bits>
   1f0a8:	f1c6 0620 	rsb	r6, r6, #32
   1f0ac:	42b0      	cmp	r0, r6
   1f0ae:	dbe7      	blt.n	1f080 <__gethex+0x40c>
   1f0b0:	e7f0      	b.n	1f094 <__gethex+0x420>

0001f0b2 <L_shift>:
L_shift():
   1f0b2:	f1c2 0208 	rsb	r2, r2, #8
   1f0b6:	0092      	lsls	r2, r2, #2
   1f0b8:	b570      	push	{r4, r5, r6, lr}
   1f0ba:	f1c2 0620 	rsb	r6, r2, #32
   1f0be:	6843      	ldr	r3, [r0, #4]
   1f0c0:	6804      	ldr	r4, [r0, #0]
   1f0c2:	fa03 f506 	lsl.w	r5, r3, r6
   1f0c6:	432c      	orrs	r4, r5
   1f0c8:	40d3      	lsrs	r3, r2
   1f0ca:	6004      	str	r4, [r0, #0]
   1f0cc:	f840 3f04 	str.w	r3, [r0, #4]!
   1f0d0:	4288      	cmp	r0, r1
   1f0d2:	d3f4      	bcc.n	1f0be <L_shift+0xc>
   1f0d4:	bd70      	pop	{r4, r5, r6, pc}

0001f0d6 <__match>:
__match():
   1f0d6:	b530      	push	{r4, r5, lr}
   1f0d8:	6803      	ldr	r3, [r0, #0]
   1f0da:	f811 4b01 	ldrb.w	r4, [r1], #1
   1f0de:	3301      	adds	r3, #1
   1f0e0:	b914      	cbnz	r4, 1f0e8 <__match+0x12>
   1f0e2:	6003      	str	r3, [r0, #0]
   1f0e4:	2001      	movs	r0, #1
   1f0e6:	bd30      	pop	{r4, r5, pc}
   1f0e8:	781a      	ldrb	r2, [r3, #0]
   1f0ea:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
   1f0ee:	2d19      	cmp	r5, #25
   1f0f0:	bf98      	it	ls
   1f0f2:	3220      	addls	r2, #32
   1f0f4:	42a2      	cmp	r2, r4
   1f0f6:	d0f0      	beq.n	1f0da <__match+0x4>
   1f0f8:	2000      	movs	r0, #0
   1f0fa:	bd30      	pop	{r4, r5, pc}

0001f0fc <__hexnan>:
__hexnan():
   1f0fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f100:	2500      	movs	r5, #0
   1f102:	680b      	ldr	r3, [r1, #0]
   1f104:	4682      	mov	sl, r0
   1f106:	115f      	asrs	r7, r3, #5
   1f108:	eb02 0787 	add.w	r7, r2, r7, lsl #2
   1f10c:	f013 031f 	ands.w	r3, r3, #31
   1f110:	bf18      	it	ne
   1f112:	3704      	addne	r7, #4
   1f114:	1f3e      	subs	r6, r7, #4
   1f116:	4690      	mov	r8, r2
   1f118:	46b1      	mov	r9, r6
   1f11a:	4634      	mov	r4, r6
   1f11c:	46ab      	mov	fp, r5
   1f11e:	b087      	sub	sp, #28
   1f120:	6801      	ldr	r1, [r0, #0]
   1f122:	9302      	str	r3, [sp, #8]
   1f124:	f847 5c04 	str.w	r5, [r7, #-4]
   1f128:	9501      	str	r5, [sp, #4]
   1f12a:	784a      	ldrb	r2, [r1, #1]
   1f12c:	1c4b      	adds	r3, r1, #1
   1f12e:	9303      	str	r3, [sp, #12]
   1f130:	b342      	cbz	r2, 1f184 <__hexnan+0x88>
   1f132:	4610      	mov	r0, r2
   1f134:	9105      	str	r1, [sp, #20]
   1f136:	9204      	str	r2, [sp, #16]
   1f138:	f7ff fd87 	bl	1ec4a <__hexdig_fun>
   1f13c:	2800      	cmp	r0, #0
   1f13e:	d143      	bne.n	1f1c8 <__hexnan+0xcc>
   1f140:	9a04      	ldr	r2, [sp, #16]
   1f142:	9905      	ldr	r1, [sp, #20]
   1f144:	2a20      	cmp	r2, #32
   1f146:	d818      	bhi.n	1f17a <__hexnan+0x7e>
   1f148:	9b01      	ldr	r3, [sp, #4]
   1f14a:	459b      	cmp	fp, r3
   1f14c:	dd13      	ble.n	1f176 <__hexnan+0x7a>
   1f14e:	454c      	cmp	r4, r9
   1f150:	d206      	bcs.n	1f160 <__hexnan+0x64>
   1f152:	2d07      	cmp	r5, #7
   1f154:	dc04      	bgt.n	1f160 <__hexnan+0x64>
   1f156:	462a      	mov	r2, r5
   1f158:	4649      	mov	r1, r9
   1f15a:	4620      	mov	r0, r4
   1f15c:	f7ff ffa9 	bl	1f0b2 <L_shift>
   1f160:	4544      	cmp	r4, r8
   1f162:	d944      	bls.n	1f1ee <__hexnan+0xf2>
   1f164:	2300      	movs	r3, #0
   1f166:	f1a4 0904 	sub.w	r9, r4, #4
   1f16a:	f844 3c04 	str.w	r3, [r4, #-4]
   1f16e:	461d      	mov	r5, r3
   1f170:	464c      	mov	r4, r9
   1f172:	f8cd b004 	str.w	fp, [sp, #4]
   1f176:	9903      	ldr	r1, [sp, #12]
   1f178:	e7d7      	b.n	1f12a <__hexnan+0x2e>
   1f17a:	2a29      	cmp	r2, #41	; 0x29
   1f17c:	d14a      	bne.n	1f214 <__hexnan+0x118>
   1f17e:	3102      	adds	r1, #2
   1f180:	f8ca 1000 	str.w	r1, [sl]
   1f184:	f1bb 0f00 	cmp.w	fp, #0
   1f188:	d044      	beq.n	1f214 <__hexnan+0x118>
   1f18a:	454c      	cmp	r4, r9
   1f18c:	d206      	bcs.n	1f19c <__hexnan+0xa0>
   1f18e:	2d07      	cmp	r5, #7
   1f190:	dc04      	bgt.n	1f19c <__hexnan+0xa0>
   1f192:	462a      	mov	r2, r5
   1f194:	4649      	mov	r1, r9
   1f196:	4620      	mov	r0, r4
   1f198:	f7ff ff8b 	bl	1f0b2 <L_shift>
   1f19c:	4544      	cmp	r4, r8
   1f19e:	d928      	bls.n	1f1f2 <__hexnan+0xf6>
   1f1a0:	4643      	mov	r3, r8
   1f1a2:	f854 2b04 	ldr.w	r2, [r4], #4
   1f1a6:	42a6      	cmp	r6, r4
   1f1a8:	f843 2b04 	str.w	r2, [r3], #4
   1f1ac:	d2f9      	bcs.n	1f1a2 <__hexnan+0xa6>
   1f1ae:	2200      	movs	r2, #0
   1f1b0:	f843 2b04 	str.w	r2, [r3], #4
   1f1b4:	429e      	cmp	r6, r3
   1f1b6:	d2fb      	bcs.n	1f1b0 <__hexnan+0xb4>
   1f1b8:	6833      	ldr	r3, [r6, #0]
   1f1ba:	b91b      	cbnz	r3, 1f1c4 <__hexnan+0xc8>
   1f1bc:	4546      	cmp	r6, r8
   1f1be:	d127      	bne.n	1f210 <__hexnan+0x114>
   1f1c0:	2301      	movs	r3, #1
   1f1c2:	6033      	str	r3, [r6, #0]
   1f1c4:	2005      	movs	r0, #5
   1f1c6:	e026      	b.n	1f216 <__hexnan+0x11a>
   1f1c8:	3501      	adds	r5, #1
   1f1ca:	2d08      	cmp	r5, #8
   1f1cc:	f10b 0b01 	add.w	fp, fp, #1
   1f1d0:	dd06      	ble.n	1f1e0 <__hexnan+0xe4>
   1f1d2:	4544      	cmp	r4, r8
   1f1d4:	d9cf      	bls.n	1f176 <__hexnan+0x7a>
   1f1d6:	2300      	movs	r3, #0
   1f1d8:	2501      	movs	r5, #1
   1f1da:	f844 3c04 	str.w	r3, [r4, #-4]
   1f1de:	3c04      	subs	r4, #4
   1f1e0:	6822      	ldr	r2, [r4, #0]
   1f1e2:	f000 000f 	and.w	r0, r0, #15
   1f1e6:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
   1f1ea:	6020      	str	r0, [r4, #0]
   1f1ec:	e7c3      	b.n	1f176 <__hexnan+0x7a>
   1f1ee:	2508      	movs	r5, #8
   1f1f0:	e7c1      	b.n	1f176 <__hexnan+0x7a>
   1f1f2:	9b02      	ldr	r3, [sp, #8]
   1f1f4:	2b00      	cmp	r3, #0
   1f1f6:	d0df      	beq.n	1f1b8 <__hexnan+0xbc>
   1f1f8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1f1fc:	f1c3 0320 	rsb	r3, r3, #32
   1f200:	fa22 f303 	lsr.w	r3, r2, r3
   1f204:	f857 2c04 	ldr.w	r2, [r7, #-4]
   1f208:	401a      	ands	r2, r3
   1f20a:	f847 2c04 	str.w	r2, [r7, #-4]
   1f20e:	e7d3      	b.n	1f1b8 <__hexnan+0xbc>
   1f210:	3e04      	subs	r6, #4
   1f212:	e7d1      	b.n	1f1b8 <__hexnan+0xbc>
   1f214:	2004      	movs	r0, #4
   1f216:	b007      	add	sp, #28
   1f218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001f21c <_findenv_r>:
_findenv_r():
   1f21c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1f220:	4606      	mov	r6, r0
   1f222:	468a      	mov	sl, r1
   1f224:	4617      	mov	r7, r2
   1f226:	f001 fd3b 	bl	20ca0 <__env_lock>
   1f22a:	4b1b      	ldr	r3, [pc, #108]	; (1f298 <_findenv_r+0x7c>)
   1f22c:	f8d3 8000 	ldr.w	r8, [r3]
   1f230:	4699      	mov	r9, r3
   1f232:	f1b8 0f00 	cmp.w	r8, #0
   1f236:	d007      	beq.n	1f248 <_findenv_r+0x2c>
   1f238:	4654      	mov	r4, sl
   1f23a:	4623      	mov	r3, r4
   1f23c:	f813 2b01 	ldrb.w	r2, [r3], #1
   1f240:	b332      	cbz	r2, 1f290 <_findenv_r+0x74>
   1f242:	2a3d      	cmp	r2, #61	; 0x3d
   1f244:	461c      	mov	r4, r3
   1f246:	d1f8      	bne.n	1f23a <_findenv_r+0x1e>
   1f248:	4630      	mov	r0, r6
   1f24a:	f001 fd2a 	bl	20ca2 <__env_unlock>
   1f24e:	2000      	movs	r0, #0
   1f250:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1f254:	f108 0804 	add.w	r8, r8, #4
   1f258:	f8d8 0000 	ldr.w	r0, [r8]
   1f25c:	2800      	cmp	r0, #0
   1f25e:	d0f3      	beq.n	1f248 <_findenv_r+0x2c>
   1f260:	4622      	mov	r2, r4
   1f262:	4651      	mov	r1, sl
   1f264:	f7fd fb51 	bl	1c90a <strncmp>
   1f268:	2800      	cmp	r0, #0
   1f26a:	d1f3      	bne.n	1f254 <_findenv_r+0x38>
   1f26c:	f8d8 3000 	ldr.w	r3, [r8]
   1f270:	191d      	adds	r5, r3, r4
   1f272:	5d1b      	ldrb	r3, [r3, r4]
   1f274:	2b3d      	cmp	r3, #61	; 0x3d
   1f276:	d1ed      	bne.n	1f254 <_findenv_r+0x38>
   1f278:	f8d9 3000 	ldr.w	r3, [r9]
   1f27c:	4630      	mov	r0, r6
   1f27e:	eba8 0303 	sub.w	r3, r8, r3
   1f282:	109b      	asrs	r3, r3, #2
   1f284:	603b      	str	r3, [r7, #0]
   1f286:	f001 fd0c 	bl	20ca2 <__env_unlock>
   1f28a:	1c68      	adds	r0, r5, #1
   1f28c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1f290:	eba4 040a 	sub.w	r4, r4, sl
   1f294:	e7e0      	b.n	1f258 <_findenv_r+0x3c>
   1f296:	bf00      	nop
   1f298:	2007c2fc 	.word	0x2007c2fc

0001f29c <_getenv_r>:
_getenv_r():
   1f29c:	b507      	push	{r0, r1, r2, lr}
   1f29e:	aa01      	add	r2, sp, #4
   1f2a0:	f7ff ffbc 	bl	1f21c <_findenv_r>
   1f2a4:	b003      	add	sp, #12
   1f2a6:	f85d fb04 	ldr.w	pc, [sp], #4
   1f2aa:	Address 0x000000000001f2aa is out of bounds.


0001f2ac <_gettimeofday_r>:
_gettimeofday_r():
   1f2ac:	b538      	push	{r3, r4, r5, lr}
   1f2ae:	2300      	movs	r3, #0
   1f2b0:	4c06      	ldr	r4, [pc, #24]	; (1f2cc <_gettimeofday_r+0x20>)
   1f2b2:	4605      	mov	r5, r0
   1f2b4:	4608      	mov	r0, r1
   1f2b6:	4611      	mov	r1, r2
   1f2b8:	6023      	str	r3, [r4, #0]
   1f2ba:	f7f8 fe25 	bl	17f08 <_gettimeofday>
   1f2be:	1c43      	adds	r3, r0, #1
   1f2c0:	d102      	bne.n	1f2c8 <_gettimeofday_r+0x1c>
   1f2c2:	6823      	ldr	r3, [r4, #0]
   1f2c4:	b103      	cbz	r3, 1f2c8 <_gettimeofday_r+0x1c>
   1f2c6:	602b      	str	r3, [r5, #0]
   1f2c8:	bd38      	pop	{r3, r4, r5, pc}
   1f2ca:	bf00      	nop
   1f2cc:	2007d064 	.word	0x2007d064

0001f2d0 <__gettzinfo>:
__gettzinfo():
   1f2d0:	4800      	ldr	r0, [pc, #0]	; (1f2d4 <__gettzinfo+0x4>)
   1f2d2:	4770      	bx	lr
   1f2d4:	2007c2bc 	.word	0x2007c2bc

0001f2d8 <_isatty_r>:
_isatty_r():
   1f2d8:	b538      	push	{r3, r4, r5, lr}
   1f2da:	2300      	movs	r3, #0
   1f2dc:	4c05      	ldr	r4, [pc, #20]	; (1f2f4 <_isatty_r+0x1c>)
   1f2de:	4605      	mov	r5, r0
   1f2e0:	4608      	mov	r0, r1
   1f2e2:	6023      	str	r3, [r4, #0]
   1f2e4:	f7f9 f898 	bl	18418 <_isatty>
   1f2e8:	1c43      	adds	r3, r0, #1
   1f2ea:	d102      	bne.n	1f2f2 <_isatty_r+0x1a>
   1f2ec:	6823      	ldr	r3, [r4, #0]
   1f2ee:	b103      	cbz	r3, 1f2f2 <_isatty_r+0x1a>
   1f2f0:	602b      	str	r3, [r5, #0]
   1f2f2:	bd38      	pop	{r3, r4, r5, pc}
   1f2f4:	2007d064 	.word	0x2007d064

0001f2f8 <__localeconv_l>:
__localeconv_l():
   1f2f8:	30f0      	adds	r0, #240	; 0xf0
   1f2fa:	4770      	bx	lr

0001f2fc <_localeconv_r>:
_localeconv_r():
   1f2fc:	4b04      	ldr	r3, [pc, #16]	; (1f310 <_localeconv_r+0x14>)
   1f2fe:	681b      	ldr	r3, [r3, #0]
   1f300:	6a18      	ldr	r0, [r3, #32]
   1f302:	4b04      	ldr	r3, [pc, #16]	; (1f314 <_localeconv_r+0x18>)
   1f304:	2800      	cmp	r0, #0
   1f306:	bf08      	it	eq
   1f308:	4618      	moveq	r0, r3
   1f30a:	30f0      	adds	r0, #240	; 0xf0
   1f30c:	4770      	bx	lr
   1f30e:	bf00      	nop
   1f310:	2007c0e4 	.word	0x2007c0e4
   1f314:	2007c148 	.word	0x2007c148

0001f318 <_lseek_r>:
_lseek_r():
   1f318:	b538      	push	{r3, r4, r5, lr}
   1f31a:	4605      	mov	r5, r0
   1f31c:	4608      	mov	r0, r1
   1f31e:	4611      	mov	r1, r2
   1f320:	2200      	movs	r2, #0
   1f322:	4c05      	ldr	r4, [pc, #20]	; (1f338 <_lseek_r+0x20>)
   1f324:	6022      	str	r2, [r4, #0]
   1f326:	461a      	mov	r2, r3
   1f328:	f7f8 ff1c 	bl	18164 <_lseek>
   1f32c:	1c43      	adds	r3, r0, #1
   1f32e:	d102      	bne.n	1f336 <_lseek_r+0x1e>
   1f330:	6823      	ldr	r3, [r4, #0]
   1f332:	b103      	cbz	r3, 1f336 <_lseek_r+0x1e>
   1f334:	602b      	str	r3, [r5, #0]
   1f336:	bd38      	pop	{r3, r4, r5, pc}
   1f338:	2007d064 	.word	0x2007d064

0001f33c <_Balloc>:
_Balloc():
   1f33c:	b570      	push	{r4, r5, r6, lr}
   1f33e:	6a45      	ldr	r5, [r0, #36]	; 0x24
   1f340:	4604      	mov	r4, r0
   1f342:	460e      	mov	r6, r1
   1f344:	b93d      	cbnz	r5, 1f356 <_Balloc+0x1a>
   1f346:	2010      	movs	r0, #16
   1f348:	f7fb fd4e 	bl	1ade8 <malloc>
   1f34c:	6260      	str	r0, [r4, #36]	; 0x24
   1f34e:	6045      	str	r5, [r0, #4]
   1f350:	6085      	str	r5, [r0, #8]
   1f352:	6005      	str	r5, [r0, #0]
   1f354:	60c5      	str	r5, [r0, #12]
   1f356:	6a65      	ldr	r5, [r4, #36]	; 0x24
   1f358:	68eb      	ldr	r3, [r5, #12]
   1f35a:	b183      	cbz	r3, 1f37e <_Balloc+0x42>
   1f35c:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1f35e:	68db      	ldr	r3, [r3, #12]
   1f360:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
   1f364:	b9b8      	cbnz	r0, 1f396 <_Balloc+0x5a>
   1f366:	2101      	movs	r1, #1
   1f368:	fa01 f506 	lsl.w	r5, r1, r6
   1f36c:	1d6a      	adds	r2, r5, #5
   1f36e:	0092      	lsls	r2, r2, #2
   1f370:	4620      	mov	r0, r4
   1f372:	f7fc f80b 	bl	1b38c <_calloc_r>
   1f376:	b160      	cbz	r0, 1f392 <_Balloc+0x56>
   1f378:	6046      	str	r6, [r0, #4]
   1f37a:	6085      	str	r5, [r0, #8]
   1f37c:	e00e      	b.n	1f39c <_Balloc+0x60>
   1f37e:	2221      	movs	r2, #33	; 0x21
   1f380:	2104      	movs	r1, #4
   1f382:	4620      	mov	r0, r4
   1f384:	f7fc f802 	bl	1b38c <_calloc_r>
   1f388:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1f38a:	60e8      	str	r0, [r5, #12]
   1f38c:	68db      	ldr	r3, [r3, #12]
   1f38e:	2b00      	cmp	r3, #0
   1f390:	d1e4      	bne.n	1f35c <_Balloc+0x20>
   1f392:	2000      	movs	r0, #0
   1f394:	bd70      	pop	{r4, r5, r6, pc}
   1f396:	6802      	ldr	r2, [r0, #0]
   1f398:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
   1f39c:	2300      	movs	r3, #0
   1f39e:	6103      	str	r3, [r0, #16]
   1f3a0:	60c3      	str	r3, [r0, #12]
   1f3a2:	bd70      	pop	{r4, r5, r6, pc}

0001f3a4 <_Bfree>:
_Bfree():
   1f3a4:	b570      	push	{r4, r5, r6, lr}
   1f3a6:	6a44      	ldr	r4, [r0, #36]	; 0x24
   1f3a8:	4606      	mov	r6, r0
   1f3aa:	460d      	mov	r5, r1
   1f3ac:	b93c      	cbnz	r4, 1f3be <_Bfree+0x1a>
   1f3ae:	2010      	movs	r0, #16
   1f3b0:	f7fb fd1a 	bl	1ade8 <malloc>
   1f3b4:	6270      	str	r0, [r6, #36]	; 0x24
   1f3b6:	6044      	str	r4, [r0, #4]
   1f3b8:	6084      	str	r4, [r0, #8]
   1f3ba:	6004      	str	r4, [r0, #0]
   1f3bc:	60c4      	str	r4, [r0, #12]
   1f3be:	b13d      	cbz	r5, 1f3d0 <_Bfree+0x2c>
   1f3c0:	6a73      	ldr	r3, [r6, #36]	; 0x24
   1f3c2:	686a      	ldr	r2, [r5, #4]
   1f3c4:	68db      	ldr	r3, [r3, #12]
   1f3c6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   1f3ca:	6029      	str	r1, [r5, #0]
   1f3cc:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   1f3d0:	bd70      	pop	{r4, r5, r6, pc}

0001f3d2 <__multadd>:
__multadd():
   1f3d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1f3d6:	461f      	mov	r7, r3
   1f3d8:	4606      	mov	r6, r0
   1f3da:	460c      	mov	r4, r1
   1f3dc:	2300      	movs	r3, #0
   1f3de:	690d      	ldr	r5, [r1, #16]
   1f3e0:	f101 0e14 	add.w	lr, r1, #20
   1f3e4:	f8de 0000 	ldr.w	r0, [lr]
   1f3e8:	3301      	adds	r3, #1
   1f3ea:	b281      	uxth	r1, r0
   1f3ec:	fb02 7101 	mla	r1, r2, r1, r7
   1f3f0:	0c00      	lsrs	r0, r0, #16
   1f3f2:	0c0f      	lsrs	r7, r1, #16
   1f3f4:	fb02 7000 	mla	r0, r2, r0, r7
   1f3f8:	b289      	uxth	r1, r1
   1f3fa:	eb01 4100 	add.w	r1, r1, r0, lsl #16
   1f3fe:	429d      	cmp	r5, r3
   1f400:	ea4f 4710 	mov.w	r7, r0, lsr #16
   1f404:	f84e 1b04 	str.w	r1, [lr], #4
   1f408:	dcec      	bgt.n	1f3e4 <__multadd+0x12>
   1f40a:	b1d7      	cbz	r7, 1f442 <__multadd+0x70>
   1f40c:	68a3      	ldr	r3, [r4, #8]
   1f40e:	429d      	cmp	r5, r3
   1f410:	db12      	blt.n	1f438 <__multadd+0x66>
   1f412:	6861      	ldr	r1, [r4, #4]
   1f414:	4630      	mov	r0, r6
   1f416:	3101      	adds	r1, #1
   1f418:	f7ff ff90 	bl	1f33c <_Balloc>
   1f41c:	4680      	mov	r8, r0
   1f41e:	6922      	ldr	r2, [r4, #16]
   1f420:	f104 010c 	add.w	r1, r4, #12
   1f424:	3202      	adds	r2, #2
   1f426:	0092      	lsls	r2, r2, #2
   1f428:	300c      	adds	r0, #12
   1f42a:	f7fb fd1c 	bl	1ae66 <memcpy>
   1f42e:	4621      	mov	r1, r4
   1f430:	4630      	mov	r0, r6
   1f432:	f7ff ffb7 	bl	1f3a4 <_Bfree>
   1f436:	4644      	mov	r4, r8
   1f438:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   1f43c:	3501      	adds	r5, #1
   1f43e:	615f      	str	r7, [r3, #20]
   1f440:	6125      	str	r5, [r4, #16]
   1f442:	4620      	mov	r0, r4
   1f444:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001f448 <__s2b>:
__s2b():
   1f448:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1f44c:	4615      	mov	r5, r2
   1f44e:	2209      	movs	r2, #9
   1f450:	461f      	mov	r7, r3
   1f452:	3308      	adds	r3, #8
   1f454:	460c      	mov	r4, r1
   1f456:	fb93 f3f2 	sdiv	r3, r3, r2
   1f45a:	4606      	mov	r6, r0
   1f45c:	2201      	movs	r2, #1
   1f45e:	2100      	movs	r1, #0
   1f460:	429a      	cmp	r2, r3
   1f462:	db20      	blt.n	1f4a6 <__s2b+0x5e>
   1f464:	4630      	mov	r0, r6
   1f466:	f7ff ff69 	bl	1f33c <_Balloc>
   1f46a:	9b08      	ldr	r3, [sp, #32]
   1f46c:	2d09      	cmp	r5, #9
   1f46e:	6143      	str	r3, [r0, #20]
   1f470:	f04f 0301 	mov.w	r3, #1
   1f474:	6103      	str	r3, [r0, #16]
   1f476:	dd19      	ble.n	1f4ac <__s2b+0x64>
   1f478:	f104 0909 	add.w	r9, r4, #9
   1f47c:	46c8      	mov	r8, r9
   1f47e:	442c      	add	r4, r5
   1f480:	f818 3b01 	ldrb.w	r3, [r8], #1
   1f484:	4601      	mov	r1, r0
   1f486:	3b30      	subs	r3, #48	; 0x30
   1f488:	220a      	movs	r2, #10
   1f48a:	4630      	mov	r0, r6
   1f48c:	f7ff ffa1 	bl	1f3d2 <__multadd>
   1f490:	45a0      	cmp	r8, r4
   1f492:	d1f5      	bne.n	1f480 <__s2b+0x38>
   1f494:	f1a5 0408 	sub.w	r4, r5, #8
   1f498:	444c      	add	r4, r9
   1f49a:	1b2d      	subs	r5, r5, r4
   1f49c:	1963      	adds	r3, r4, r5
   1f49e:	42bb      	cmp	r3, r7
   1f4a0:	db07      	blt.n	1f4b2 <__s2b+0x6a>
   1f4a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1f4a6:	0052      	lsls	r2, r2, #1
   1f4a8:	3101      	adds	r1, #1
   1f4aa:	e7d9      	b.n	1f460 <__s2b+0x18>
   1f4ac:	340a      	adds	r4, #10
   1f4ae:	2509      	movs	r5, #9
   1f4b0:	e7f3      	b.n	1f49a <__s2b+0x52>
   1f4b2:	f814 3b01 	ldrb.w	r3, [r4], #1
   1f4b6:	4601      	mov	r1, r0
   1f4b8:	3b30      	subs	r3, #48	; 0x30
   1f4ba:	220a      	movs	r2, #10
   1f4bc:	4630      	mov	r0, r6
   1f4be:	f7ff ff88 	bl	1f3d2 <__multadd>
   1f4c2:	e7eb      	b.n	1f49c <__s2b+0x54>

0001f4c4 <__hi0bits>:
__hi0bits():
   1f4c4:	0c02      	lsrs	r2, r0, #16
   1f4c6:	0412      	lsls	r2, r2, #16
   1f4c8:	4603      	mov	r3, r0
   1f4ca:	b9b2      	cbnz	r2, 1f4fa <__hi0bits+0x36>
   1f4cc:	0403      	lsls	r3, r0, #16
   1f4ce:	2010      	movs	r0, #16
   1f4d0:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   1f4d4:	bf04      	itt	eq
   1f4d6:	021b      	lsleq	r3, r3, #8
   1f4d8:	3008      	addeq	r0, #8
   1f4da:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   1f4de:	bf04      	itt	eq
   1f4e0:	011b      	lsleq	r3, r3, #4
   1f4e2:	3004      	addeq	r0, #4
   1f4e4:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   1f4e8:	bf04      	itt	eq
   1f4ea:	009b      	lsleq	r3, r3, #2
   1f4ec:	3002      	addeq	r0, #2
   1f4ee:	2b00      	cmp	r3, #0
   1f4f0:	db06      	blt.n	1f500 <__hi0bits+0x3c>
   1f4f2:	005b      	lsls	r3, r3, #1
   1f4f4:	d503      	bpl.n	1f4fe <__hi0bits+0x3a>
   1f4f6:	3001      	adds	r0, #1
   1f4f8:	4770      	bx	lr
   1f4fa:	2000      	movs	r0, #0
   1f4fc:	e7e8      	b.n	1f4d0 <__hi0bits+0xc>
   1f4fe:	2020      	movs	r0, #32
   1f500:	4770      	bx	lr

0001f502 <__lo0bits>:
__lo0bits():
   1f502:	6803      	ldr	r3, [r0, #0]
   1f504:	4601      	mov	r1, r0
   1f506:	f013 0207 	ands.w	r2, r3, #7
   1f50a:	d00b      	beq.n	1f524 <__lo0bits+0x22>
   1f50c:	07da      	lsls	r2, r3, #31
   1f50e:	d423      	bmi.n	1f558 <__lo0bits+0x56>
   1f510:	0798      	lsls	r0, r3, #30
   1f512:	bf49      	itett	mi
   1f514:	085b      	lsrmi	r3, r3, #1
   1f516:	089b      	lsrpl	r3, r3, #2
   1f518:	2001      	movmi	r0, #1
   1f51a:	600b      	strmi	r3, [r1, #0]
   1f51c:	bf5c      	itt	pl
   1f51e:	600b      	strpl	r3, [r1, #0]
   1f520:	2002      	movpl	r0, #2
   1f522:	4770      	bx	lr
   1f524:	b298      	uxth	r0, r3
   1f526:	b9a8      	cbnz	r0, 1f554 <__lo0bits+0x52>
   1f528:	2010      	movs	r0, #16
   1f52a:	0c1b      	lsrs	r3, r3, #16
   1f52c:	f013 0fff 	tst.w	r3, #255	; 0xff
   1f530:	bf04      	itt	eq
   1f532:	0a1b      	lsreq	r3, r3, #8
   1f534:	3008      	addeq	r0, #8
   1f536:	071a      	lsls	r2, r3, #28
   1f538:	bf04      	itt	eq
   1f53a:	091b      	lsreq	r3, r3, #4
   1f53c:	3004      	addeq	r0, #4
   1f53e:	079a      	lsls	r2, r3, #30
   1f540:	bf04      	itt	eq
   1f542:	089b      	lsreq	r3, r3, #2
   1f544:	3002      	addeq	r0, #2
   1f546:	07da      	lsls	r2, r3, #31
   1f548:	d402      	bmi.n	1f550 <__lo0bits+0x4e>
   1f54a:	085b      	lsrs	r3, r3, #1
   1f54c:	d006      	beq.n	1f55c <__lo0bits+0x5a>
   1f54e:	3001      	adds	r0, #1
   1f550:	600b      	str	r3, [r1, #0]
   1f552:	4770      	bx	lr
   1f554:	4610      	mov	r0, r2
   1f556:	e7e9      	b.n	1f52c <__lo0bits+0x2a>
   1f558:	2000      	movs	r0, #0
   1f55a:	4770      	bx	lr
   1f55c:	2020      	movs	r0, #32
   1f55e:	4770      	bx	lr

0001f560 <__i2b>:
__i2b():
   1f560:	b510      	push	{r4, lr}
   1f562:	460c      	mov	r4, r1
   1f564:	2101      	movs	r1, #1
   1f566:	f7ff fee9 	bl	1f33c <_Balloc>
   1f56a:	2201      	movs	r2, #1
   1f56c:	6144      	str	r4, [r0, #20]
   1f56e:	6102      	str	r2, [r0, #16]
   1f570:	bd10      	pop	{r4, pc}

0001f572 <__multiply>:
__multiply():
   1f572:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f576:	4614      	mov	r4, r2
   1f578:	690a      	ldr	r2, [r1, #16]
   1f57a:	6923      	ldr	r3, [r4, #16]
   1f57c:	4689      	mov	r9, r1
   1f57e:	429a      	cmp	r2, r3
   1f580:	bfbe      	ittt	lt
   1f582:	460b      	movlt	r3, r1
   1f584:	46a1      	movlt	r9, r4
   1f586:	461c      	movlt	r4, r3
   1f588:	f8d9 7010 	ldr.w	r7, [r9, #16]
   1f58c:	f8d4 a010 	ldr.w	sl, [r4, #16]
   1f590:	f8d9 3008 	ldr.w	r3, [r9, #8]
   1f594:	f8d9 1004 	ldr.w	r1, [r9, #4]
   1f598:	eb07 060a 	add.w	r6, r7, sl
   1f59c:	429e      	cmp	r6, r3
   1f59e:	bfc8      	it	gt
   1f5a0:	3101      	addgt	r1, #1
   1f5a2:	f7ff fecb 	bl	1f33c <_Balloc>
   1f5a6:	f100 0514 	add.w	r5, r0, #20
   1f5aa:	462b      	mov	r3, r5
   1f5ac:	2200      	movs	r2, #0
   1f5ae:	eb05 0886 	add.w	r8, r5, r6, lsl #2
   1f5b2:	4543      	cmp	r3, r8
   1f5b4:	d316      	bcc.n	1f5e4 <__multiply+0x72>
   1f5b6:	f104 0214 	add.w	r2, r4, #20
   1f5ba:	f109 0114 	add.w	r1, r9, #20
   1f5be:	eb02 038a 	add.w	r3, r2, sl, lsl #2
   1f5c2:	eb01 0787 	add.w	r7, r1, r7, lsl #2
   1f5c6:	9301      	str	r3, [sp, #4]
   1f5c8:	9c01      	ldr	r4, [sp, #4]
   1f5ca:	4613      	mov	r3, r2
   1f5cc:	4294      	cmp	r4, r2
   1f5ce:	d80c      	bhi.n	1f5ea <__multiply+0x78>
   1f5d0:	2e00      	cmp	r6, #0
   1f5d2:	dd03      	ble.n	1f5dc <__multiply+0x6a>
   1f5d4:	f858 3d04 	ldr.w	r3, [r8, #-4]!
   1f5d8:	2b00      	cmp	r3, #0
   1f5da:	d054      	beq.n	1f686 <__multiply+0x114>
   1f5dc:	6106      	str	r6, [r0, #16]
   1f5de:	b003      	add	sp, #12
   1f5e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f5e4:	f843 2b04 	str.w	r2, [r3], #4
   1f5e8:	e7e3      	b.n	1f5b2 <__multiply+0x40>
   1f5ea:	f8b3 a000 	ldrh.w	sl, [r3]
   1f5ee:	3204      	adds	r2, #4
   1f5f0:	f1ba 0f00 	cmp.w	sl, #0
   1f5f4:	d020      	beq.n	1f638 <__multiply+0xc6>
   1f5f6:	46ae      	mov	lr, r5
   1f5f8:	4689      	mov	r9, r1
   1f5fa:	f04f 0c00 	mov.w	ip, #0
   1f5fe:	f859 4b04 	ldr.w	r4, [r9], #4
   1f602:	f8be b000 	ldrh.w	fp, [lr]
   1f606:	b2a3      	uxth	r3, r4
   1f608:	fb0a b303 	mla	r3, sl, r3, fp
   1f60c:	ea4f 4b14 	mov.w	fp, r4, lsr #16
   1f610:	f8de 4000 	ldr.w	r4, [lr]
   1f614:	4463      	add	r3, ip
   1f616:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   1f61a:	fb0a c40b 	mla	r4, sl, fp, ip
   1f61e:	eb04 4413 	add.w	r4, r4, r3, lsr #16
   1f622:	b29b      	uxth	r3, r3
   1f624:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   1f628:	454f      	cmp	r7, r9
   1f62a:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   1f62e:	f84e 3b04 	str.w	r3, [lr], #4
   1f632:	d8e4      	bhi.n	1f5fe <__multiply+0x8c>
   1f634:	f8ce c000 	str.w	ip, [lr]
   1f638:	f832 9c02 	ldrh.w	r9, [r2, #-2]
   1f63c:	f1b9 0f00 	cmp.w	r9, #0
   1f640:	d01f      	beq.n	1f682 <__multiply+0x110>
   1f642:	46ae      	mov	lr, r5
   1f644:	468c      	mov	ip, r1
   1f646:	f04f 0a00 	mov.w	sl, #0
   1f64a:	682b      	ldr	r3, [r5, #0]
   1f64c:	f8bc 4000 	ldrh.w	r4, [ip]
   1f650:	f8be b002 	ldrh.w	fp, [lr, #2]
   1f654:	b29b      	uxth	r3, r3
   1f656:	fb09 b404 	mla	r4, r9, r4, fp
   1f65a:	44a2      	add	sl, r4
   1f65c:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
   1f660:	f84e 3b04 	str.w	r3, [lr], #4
   1f664:	f85c 3b04 	ldr.w	r3, [ip], #4
   1f668:	f8be 4000 	ldrh.w	r4, [lr]
   1f66c:	0c1b      	lsrs	r3, r3, #16
   1f66e:	fb09 4303 	mla	r3, r9, r3, r4
   1f672:	4567      	cmp	r7, ip
   1f674:	eb03 431a 	add.w	r3, r3, sl, lsr #16
   1f678:	ea4f 4a13 	mov.w	sl, r3, lsr #16
   1f67c:	d8e6      	bhi.n	1f64c <__multiply+0xda>
   1f67e:	f8ce 3000 	str.w	r3, [lr]
   1f682:	3504      	adds	r5, #4
   1f684:	e7a0      	b.n	1f5c8 <__multiply+0x56>
   1f686:	3e01      	subs	r6, #1
   1f688:	e7a2      	b.n	1f5d0 <__multiply+0x5e>
   1f68a:	Address 0x000000000001f68a is out of bounds.


0001f68c <__pow5mult>:
__pow5mult():
   1f68c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1f690:	4615      	mov	r5, r2
   1f692:	f012 0203 	ands.w	r2, r2, #3
   1f696:	4606      	mov	r6, r0
   1f698:	460f      	mov	r7, r1
   1f69a:	d007      	beq.n	1f6ac <__pow5mult+0x20>
   1f69c:	4c21      	ldr	r4, [pc, #132]	; (1f724 <__pow5mult+0x98>)
   1f69e:	3a01      	subs	r2, #1
   1f6a0:	2300      	movs	r3, #0
   1f6a2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
   1f6a6:	f7ff fe94 	bl	1f3d2 <__multadd>
   1f6aa:	4607      	mov	r7, r0
   1f6ac:	10ad      	asrs	r5, r5, #2
   1f6ae:	d035      	beq.n	1f71c <__pow5mult+0x90>
   1f6b0:	6a74      	ldr	r4, [r6, #36]	; 0x24
   1f6b2:	b93c      	cbnz	r4, 1f6c4 <__pow5mult+0x38>
   1f6b4:	2010      	movs	r0, #16
   1f6b6:	f7fb fb97 	bl	1ade8 <malloc>
   1f6ba:	6270      	str	r0, [r6, #36]	; 0x24
   1f6bc:	6044      	str	r4, [r0, #4]
   1f6be:	6084      	str	r4, [r0, #8]
   1f6c0:	6004      	str	r4, [r0, #0]
   1f6c2:	60c4      	str	r4, [r0, #12]
   1f6c4:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
   1f6c8:	f8d8 4008 	ldr.w	r4, [r8, #8]
   1f6cc:	b94c      	cbnz	r4, 1f6e2 <__pow5mult+0x56>
   1f6ce:	f240 2171 	movw	r1, #625	; 0x271
   1f6d2:	4630      	mov	r0, r6
   1f6d4:	f7ff ff44 	bl	1f560 <__i2b>
   1f6d8:	2300      	movs	r3, #0
   1f6da:	4604      	mov	r4, r0
   1f6dc:	f8c8 0008 	str.w	r0, [r8, #8]
   1f6e0:	6003      	str	r3, [r0, #0]
   1f6e2:	f04f 0800 	mov.w	r8, #0
   1f6e6:	07eb      	lsls	r3, r5, #31
   1f6e8:	d50a      	bpl.n	1f700 <__pow5mult+0x74>
   1f6ea:	4639      	mov	r1, r7
   1f6ec:	4622      	mov	r2, r4
   1f6ee:	4630      	mov	r0, r6
   1f6f0:	f7ff ff3f 	bl	1f572 <__multiply>
   1f6f4:	4681      	mov	r9, r0
   1f6f6:	4639      	mov	r1, r7
   1f6f8:	4630      	mov	r0, r6
   1f6fa:	f7ff fe53 	bl	1f3a4 <_Bfree>
   1f6fe:	464f      	mov	r7, r9
   1f700:	106d      	asrs	r5, r5, #1
   1f702:	d00b      	beq.n	1f71c <__pow5mult+0x90>
   1f704:	6820      	ldr	r0, [r4, #0]
   1f706:	b938      	cbnz	r0, 1f718 <__pow5mult+0x8c>
   1f708:	4622      	mov	r2, r4
   1f70a:	4621      	mov	r1, r4
   1f70c:	4630      	mov	r0, r6
   1f70e:	f7ff ff30 	bl	1f572 <__multiply>
   1f712:	6020      	str	r0, [r4, #0]
   1f714:	f8c0 8000 	str.w	r8, [r0]
   1f718:	4604      	mov	r4, r0
   1f71a:	e7e4      	b.n	1f6e6 <__pow5mult+0x5a>
   1f71c:	4638      	mov	r0, r7
   1f71e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1f722:	bf00      	nop
   1f724:	00022740 	.word	0x00022740

0001f728 <__lshift>:
__lshift():
   1f728:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1f72c:	460c      	mov	r4, r1
   1f72e:	4607      	mov	r7, r0
   1f730:	4616      	mov	r6, r2
   1f732:	6923      	ldr	r3, [r4, #16]
   1f734:	ea4f 1a62 	mov.w	sl, r2, asr #5
   1f738:	eb0a 0903 	add.w	r9, sl, r3
   1f73c:	6849      	ldr	r1, [r1, #4]
   1f73e:	68a3      	ldr	r3, [r4, #8]
   1f740:	f109 0501 	add.w	r5, r9, #1
   1f744:	42ab      	cmp	r3, r5
   1f746:	db31      	blt.n	1f7ac <__lshift+0x84>
   1f748:	4638      	mov	r0, r7
   1f74a:	f7ff fdf7 	bl	1f33c <_Balloc>
   1f74e:	2200      	movs	r2, #0
   1f750:	4680      	mov	r8, r0
   1f752:	4611      	mov	r1, r2
   1f754:	f100 0314 	add.w	r3, r0, #20
   1f758:	4552      	cmp	r2, sl
   1f75a:	db2a      	blt.n	1f7b2 <__lshift+0x8a>
   1f75c:	6920      	ldr	r0, [r4, #16]
   1f75e:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
   1f762:	f104 0114 	add.w	r1, r4, #20
   1f766:	f016 021f 	ands.w	r2, r6, #31
   1f76a:	eb03 038a 	add.w	r3, r3, sl, lsl #2
   1f76e:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
   1f772:	d022      	beq.n	1f7ba <__lshift+0x92>
   1f774:	2000      	movs	r0, #0
   1f776:	f1c2 0c20 	rsb	ip, r2, #32
   1f77a:	680e      	ldr	r6, [r1, #0]
   1f77c:	4096      	lsls	r6, r2
   1f77e:	4330      	orrs	r0, r6
   1f780:	f843 0b04 	str.w	r0, [r3], #4
   1f784:	f851 0b04 	ldr.w	r0, [r1], #4
   1f788:	458e      	cmp	lr, r1
   1f78a:	fa20 f00c 	lsr.w	r0, r0, ip
   1f78e:	d8f4      	bhi.n	1f77a <__lshift+0x52>
   1f790:	6018      	str	r0, [r3, #0]
   1f792:	b108      	cbz	r0, 1f798 <__lshift+0x70>
   1f794:	f109 0502 	add.w	r5, r9, #2
   1f798:	3d01      	subs	r5, #1
   1f79a:	4638      	mov	r0, r7
   1f79c:	f8c8 5010 	str.w	r5, [r8, #16]
   1f7a0:	4621      	mov	r1, r4
   1f7a2:	f7ff fdff 	bl	1f3a4 <_Bfree>
   1f7a6:	4640      	mov	r0, r8
   1f7a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1f7ac:	3101      	adds	r1, #1
   1f7ae:	005b      	lsls	r3, r3, #1
   1f7b0:	e7c8      	b.n	1f744 <__lshift+0x1c>
   1f7b2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   1f7b6:	3201      	adds	r2, #1
   1f7b8:	e7ce      	b.n	1f758 <__lshift+0x30>
   1f7ba:	3b04      	subs	r3, #4
   1f7bc:	f851 2b04 	ldr.w	r2, [r1], #4
   1f7c0:	458e      	cmp	lr, r1
   1f7c2:	f843 2f04 	str.w	r2, [r3, #4]!
   1f7c6:	d8f9      	bhi.n	1f7bc <__lshift+0x94>
   1f7c8:	e7e6      	b.n	1f798 <__lshift+0x70>

0001f7ca <__mcmp>:
__mcmp():
   1f7ca:	6903      	ldr	r3, [r0, #16]
   1f7cc:	690a      	ldr	r2, [r1, #16]
   1f7ce:	b530      	push	{r4, r5, lr}
   1f7d0:	1a9b      	subs	r3, r3, r2
   1f7d2:	d10c      	bne.n	1f7ee <__mcmp+0x24>
   1f7d4:	0092      	lsls	r2, r2, #2
   1f7d6:	3014      	adds	r0, #20
   1f7d8:	3114      	adds	r1, #20
   1f7da:	1884      	adds	r4, r0, r2
   1f7dc:	4411      	add	r1, r2
   1f7de:	f854 5d04 	ldr.w	r5, [r4, #-4]!
   1f7e2:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   1f7e6:	4295      	cmp	r5, r2
   1f7e8:	d003      	beq.n	1f7f2 <__mcmp+0x28>
   1f7ea:	d305      	bcc.n	1f7f8 <__mcmp+0x2e>
   1f7ec:	2301      	movs	r3, #1
   1f7ee:	4618      	mov	r0, r3
   1f7f0:	bd30      	pop	{r4, r5, pc}
   1f7f2:	42a0      	cmp	r0, r4
   1f7f4:	d3f3      	bcc.n	1f7de <__mcmp+0x14>
   1f7f6:	e7fa      	b.n	1f7ee <__mcmp+0x24>
   1f7f8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1f7fc:	e7f7      	b.n	1f7ee <__mcmp+0x24>

0001f7fe <__mdiff>:
__mdiff():
   1f7fe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1f802:	460d      	mov	r5, r1
   1f804:	4607      	mov	r7, r0
   1f806:	4611      	mov	r1, r2
   1f808:	4628      	mov	r0, r5
   1f80a:	4614      	mov	r4, r2
   1f80c:	f7ff ffdd 	bl	1f7ca <__mcmp>
   1f810:	1e06      	subs	r6, r0, #0
   1f812:	d108      	bne.n	1f826 <__mdiff+0x28>
   1f814:	4631      	mov	r1, r6
   1f816:	4638      	mov	r0, r7
   1f818:	f7ff fd90 	bl	1f33c <_Balloc>
   1f81c:	2301      	movs	r3, #1
   1f81e:	6146      	str	r6, [r0, #20]
   1f820:	6103      	str	r3, [r0, #16]
   1f822:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1f826:	bfa4      	itt	ge
   1f828:	4623      	movge	r3, r4
   1f82a:	462c      	movge	r4, r5
   1f82c:	4638      	mov	r0, r7
   1f82e:	6861      	ldr	r1, [r4, #4]
   1f830:	bfa6      	itte	ge
   1f832:	461d      	movge	r5, r3
   1f834:	2600      	movge	r6, #0
   1f836:	2601      	movlt	r6, #1
   1f838:	f7ff fd80 	bl	1f33c <_Balloc>
   1f83c:	f04f 0c00 	mov.w	ip, #0
   1f840:	60c6      	str	r6, [r0, #12]
   1f842:	692b      	ldr	r3, [r5, #16]
   1f844:	6926      	ldr	r6, [r4, #16]
   1f846:	f104 0214 	add.w	r2, r4, #20
   1f84a:	f105 0914 	add.w	r9, r5, #20
   1f84e:	eb02 0786 	add.w	r7, r2, r6, lsl #2
   1f852:	eb09 0883 	add.w	r8, r9, r3, lsl #2
   1f856:	f100 0114 	add.w	r1, r0, #20
   1f85a:	f852 ab04 	ldr.w	sl, [r2], #4
   1f85e:	f859 5b04 	ldr.w	r5, [r9], #4
   1f862:	fa1f f38a 	uxth.w	r3, sl
   1f866:	4463      	add	r3, ip
   1f868:	b2ac      	uxth	r4, r5
   1f86a:	1b1b      	subs	r3, r3, r4
   1f86c:	0c2c      	lsrs	r4, r5, #16
   1f86e:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
   1f872:	eb04 4423 	add.w	r4, r4, r3, asr #16
   1f876:	b29b      	uxth	r3, r3
   1f878:	ea4f 4c24 	mov.w	ip, r4, asr #16
   1f87c:	45c8      	cmp	r8, r9
   1f87e:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
   1f882:	4696      	mov	lr, r2
   1f884:	f841 4b04 	str.w	r4, [r1], #4
   1f888:	d8e7      	bhi.n	1f85a <__mdiff+0x5c>
   1f88a:	45be      	cmp	lr, r7
   1f88c:	d305      	bcc.n	1f89a <__mdiff+0x9c>
   1f88e:	f851 3d04 	ldr.w	r3, [r1, #-4]!
   1f892:	b18b      	cbz	r3, 1f8b8 <__mdiff+0xba>
   1f894:	6106      	str	r6, [r0, #16]
   1f896:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1f89a:	f85e 4b04 	ldr.w	r4, [lr], #4
   1f89e:	b2a2      	uxth	r2, r4
   1f8a0:	4462      	add	r2, ip
   1f8a2:	1413      	asrs	r3, r2, #16
   1f8a4:	eb03 4314 	add.w	r3, r3, r4, lsr #16
   1f8a8:	b292      	uxth	r2, r2
   1f8aa:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   1f8ae:	ea4f 4c23 	mov.w	ip, r3, asr #16
   1f8b2:	f841 2b04 	str.w	r2, [r1], #4
   1f8b6:	e7e8      	b.n	1f88a <__mdiff+0x8c>
   1f8b8:	3e01      	subs	r6, #1
   1f8ba:	e7e8      	b.n	1f88e <__mdiff+0x90>

0001f8bc <__ulp>:
__ulp():
   1f8bc:	4b10      	ldr	r3, [pc, #64]	; (1f900 <__ulp+0x44>)
   1f8be:	400b      	ands	r3, r1
   1f8c0:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   1f8c4:	2b00      	cmp	r3, #0
   1f8c6:	dd02      	ble.n	1f8ce <__ulp+0x12>
   1f8c8:	2000      	movs	r0, #0
   1f8ca:	4619      	mov	r1, r3
   1f8cc:	4770      	bx	lr
   1f8ce:	425b      	negs	r3, r3
   1f8d0:	151b      	asrs	r3, r3, #20
   1f8d2:	2b13      	cmp	r3, #19
   1f8d4:	f04f 0000 	mov.w	r0, #0
   1f8d8:	f04f 0100 	mov.w	r1, #0
   1f8dc:	dc04      	bgt.n	1f8e8 <__ulp+0x2c>
   1f8de:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   1f8e2:	fa42 f103 	asr.w	r1, r2, r3
   1f8e6:	4770      	bx	lr
   1f8e8:	2201      	movs	r2, #1
   1f8ea:	3b14      	subs	r3, #20
   1f8ec:	2b1e      	cmp	r3, #30
   1f8ee:	bfce      	itee	gt
   1f8f0:	4613      	movgt	r3, r2
   1f8f2:	f1c3 031f 	rsble	r3, r3, #31
   1f8f6:	fa02 f303 	lslle.w	r3, r2, r3
   1f8fa:	4618      	mov	r0, r3
   1f8fc:	4770      	bx	lr
   1f8fe:	bf00      	nop
   1f900:	7ff00000 	.word	0x7ff00000

0001f904 <__b2d>:
__b2d():
   1f904:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1f908:	6907      	ldr	r7, [r0, #16]
   1f90a:	f100 0914 	add.w	r9, r0, #20
   1f90e:	eb09 0787 	add.w	r7, r9, r7, lsl #2
   1f912:	f857 6c04 	ldr.w	r6, [r7, #-4]
   1f916:	f1a7 0804 	sub.w	r8, r7, #4
   1f91a:	4630      	mov	r0, r6
   1f91c:	f7ff fdd2 	bl	1f4c4 <__hi0bits>
   1f920:	f1c0 0320 	rsb	r3, r0, #32
   1f924:	280a      	cmp	r0, #10
   1f926:	600b      	str	r3, [r1, #0]
   1f928:	491e      	ldr	r1, [pc, #120]	; (1f9a4 <__b2d+0xa0>)
   1f92a:	dc17      	bgt.n	1f95c <__b2d+0x58>
   1f92c:	45c1      	cmp	r9, r8
   1f92e:	bf28      	it	cs
   1f930:	2200      	movcs	r2, #0
   1f932:	f1c0 0e0b 	rsb	lr, r0, #11
   1f936:	fa26 f30e 	lsr.w	r3, r6, lr
   1f93a:	bf38      	it	cc
   1f93c:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   1f940:	ea43 0501 	orr.w	r5, r3, r1
   1f944:	f100 0315 	add.w	r3, r0, #21
   1f948:	fa06 f303 	lsl.w	r3, r6, r3
   1f94c:	fa22 f20e 	lsr.w	r2, r2, lr
   1f950:	ea43 0402 	orr.w	r4, r3, r2
   1f954:	4620      	mov	r0, r4
   1f956:	4629      	mov	r1, r5
   1f958:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1f95c:	45c1      	cmp	r9, r8
   1f95e:	bf3a      	itte	cc
   1f960:	f1a7 0808 	subcc.w	r8, r7, #8
   1f964:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   1f968:	2200      	movcs	r2, #0
   1f96a:	f1b0 030b 	subs.w	r3, r0, #11
   1f96e:	d015      	beq.n	1f99c <__b2d+0x98>
   1f970:	409e      	lsls	r6, r3
   1f972:	f1c3 0720 	rsb	r7, r3, #32
   1f976:	f046 567f 	orr.w	r6, r6, #1069547520	; 0x3fc00000
   1f97a:	fa22 f107 	lsr.w	r1, r2, r7
   1f97e:	45c8      	cmp	r8, r9
   1f980:	f446 1640 	orr.w	r6, r6, #3145728	; 0x300000
   1f984:	ea46 0501 	orr.w	r5, r6, r1
   1f988:	bf94      	ite	ls
   1f98a:	2100      	movls	r1, #0
   1f98c:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
   1f990:	fa02 f003 	lsl.w	r0, r2, r3
   1f994:	40f9      	lsrs	r1, r7
   1f996:	ea40 0401 	orr.w	r4, r0, r1
   1f99a:	e7db      	b.n	1f954 <__b2d+0x50>
   1f99c:	ea46 0501 	orr.w	r5, r6, r1
   1f9a0:	4614      	mov	r4, r2
   1f9a2:	e7d7      	b.n	1f954 <__b2d+0x50>
   1f9a4:	3ff00000 	.word	0x3ff00000

0001f9a8 <__d2b>:
__d2b():
   1f9a8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1f9ac:	461c      	mov	r4, r3
   1f9ae:	2101      	movs	r1, #1
   1f9b0:	4690      	mov	r8, r2
   1f9b2:	9e08      	ldr	r6, [sp, #32]
   1f9b4:	9d09      	ldr	r5, [sp, #36]	; 0x24
   1f9b6:	f7ff fcc1 	bl	1f33c <_Balloc>
   1f9ba:	f3c4 0213 	ubfx	r2, r4, #0, #20
   1f9be:	f3c4 540a 	ubfx	r4, r4, #20, #11
   1f9c2:	4607      	mov	r7, r0
   1f9c4:	bb34      	cbnz	r4, 1fa14 <__d2b+0x6c>
   1f9c6:	9201      	str	r2, [sp, #4]
   1f9c8:	f1b8 0f00 	cmp.w	r8, #0
   1f9cc:	d027      	beq.n	1fa1e <__d2b+0x76>
   1f9ce:	a802      	add	r0, sp, #8
   1f9d0:	f840 8d08 	str.w	r8, [r0, #-8]!
   1f9d4:	f7ff fd95 	bl	1f502 <__lo0bits>
   1f9d8:	9900      	ldr	r1, [sp, #0]
   1f9da:	b1f0      	cbz	r0, 1fa1a <__d2b+0x72>
   1f9dc:	9a01      	ldr	r2, [sp, #4]
   1f9de:	f1c0 0320 	rsb	r3, r0, #32
   1f9e2:	fa02 f303 	lsl.w	r3, r2, r3
   1f9e6:	430b      	orrs	r3, r1
   1f9e8:	40c2      	lsrs	r2, r0
   1f9ea:	617b      	str	r3, [r7, #20]
   1f9ec:	9201      	str	r2, [sp, #4]
   1f9ee:	9b01      	ldr	r3, [sp, #4]
   1f9f0:	2b00      	cmp	r3, #0
   1f9f2:	bf14      	ite	ne
   1f9f4:	2102      	movne	r1, #2
   1f9f6:	2101      	moveq	r1, #1
   1f9f8:	61bb      	str	r3, [r7, #24]
   1f9fa:	6139      	str	r1, [r7, #16]
   1f9fc:	b1c4      	cbz	r4, 1fa30 <__d2b+0x88>
   1f9fe:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
   1fa02:	4404      	add	r4, r0
   1fa04:	6034      	str	r4, [r6, #0]
   1fa06:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   1fa0a:	6028      	str	r0, [r5, #0]
   1fa0c:	4638      	mov	r0, r7
   1fa0e:	b002      	add	sp, #8
   1fa10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1fa14:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
   1fa18:	e7d5      	b.n	1f9c6 <__d2b+0x1e>
   1fa1a:	6179      	str	r1, [r7, #20]
   1fa1c:	e7e7      	b.n	1f9ee <__d2b+0x46>
   1fa1e:	a801      	add	r0, sp, #4
   1fa20:	f7ff fd6f 	bl	1f502 <__lo0bits>
   1fa24:	2101      	movs	r1, #1
   1fa26:	9b01      	ldr	r3, [sp, #4]
   1fa28:	6139      	str	r1, [r7, #16]
   1fa2a:	617b      	str	r3, [r7, #20]
   1fa2c:	3020      	adds	r0, #32
   1fa2e:	e7e5      	b.n	1f9fc <__d2b+0x54>
   1fa30:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   1fa34:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   1fa38:	6030      	str	r0, [r6, #0]
   1fa3a:	6918      	ldr	r0, [r3, #16]
   1fa3c:	f7ff fd42 	bl	1f4c4 <__hi0bits>
   1fa40:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   1fa44:	e7e1      	b.n	1fa0a <__d2b+0x62>

0001fa46 <__ratio>:
__ratio():
   1fa46:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
   1fa4a:	4688      	mov	r8, r1
   1fa4c:	4669      	mov	r1, sp
   1fa4e:	4681      	mov	r9, r0
   1fa50:	f7ff ff58 	bl	1f904 <__b2d>
   1fa54:	460d      	mov	r5, r1
   1fa56:	4604      	mov	r4, r0
   1fa58:	a901      	add	r1, sp, #4
   1fa5a:	4640      	mov	r0, r8
   1fa5c:	f7ff ff52 	bl	1f904 <__b2d>
   1fa60:	f8d9 3010 	ldr.w	r3, [r9, #16]
   1fa64:	f8d8 2010 	ldr.w	r2, [r8, #16]
   1fa68:	9e00      	ldr	r6, [sp, #0]
   1fa6a:	1a9a      	subs	r2, r3, r2
   1fa6c:	9b01      	ldr	r3, [sp, #4]
   1fa6e:	1af3      	subs	r3, r6, r3
   1fa70:	eb03 1342 	add.w	r3, r3, r2, lsl #5
   1fa74:	2b00      	cmp	r3, #0
   1fa76:	bfd6      	itet	le
   1fa78:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
   1fa7c:	eb05 5503 	addgt.w	r5, r5, r3, lsl #20
   1fa80:	eb01 5103 	addle.w	r1, r1, r3, lsl #20
   1fa84:	4602      	mov	r2, r0
   1fa86:	460b      	mov	r3, r1
   1fa88:	4620      	mov	r0, r4
   1fa8a:	4629      	mov	r1, r5
   1fa8c:	f7fa f81a 	bl	19ac4 <__aeabi_ddiv>
   1fa90:	b002      	add	sp, #8
   1fa92:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}

0001fa96 <__copybits>:
__copybits():
   1fa96:	3901      	subs	r1, #1
   1fa98:	b510      	push	{r4, lr}
   1fa9a:	1149      	asrs	r1, r1, #5
   1fa9c:	6914      	ldr	r4, [r2, #16]
   1fa9e:	3101      	adds	r1, #1
   1faa0:	f102 0314 	add.w	r3, r2, #20
   1faa4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   1faa8:	eb03 0484 	add.w	r4, r3, r4, lsl #2
   1faac:	42a3      	cmp	r3, r4
   1faae:	4602      	mov	r2, r0
   1fab0:	d303      	bcc.n	1faba <__copybits+0x24>
   1fab2:	2300      	movs	r3, #0
   1fab4:	428a      	cmp	r2, r1
   1fab6:	d305      	bcc.n	1fac4 <__copybits+0x2e>
   1fab8:	bd10      	pop	{r4, pc}
   1faba:	f853 2b04 	ldr.w	r2, [r3], #4
   1fabe:	f840 2b04 	str.w	r2, [r0], #4
   1fac2:	e7f3      	b.n	1faac <__copybits+0x16>
   1fac4:	f842 3b04 	str.w	r3, [r2], #4
   1fac8:	e7f4      	b.n	1fab4 <__copybits+0x1e>

0001faca <__any_on>:
__any_on():
   1faca:	f100 0214 	add.w	r2, r0, #20
   1face:	6900      	ldr	r0, [r0, #16]
   1fad0:	114b      	asrs	r3, r1, #5
   1fad2:	4298      	cmp	r0, r3
   1fad4:	b510      	push	{r4, lr}
   1fad6:	db11      	blt.n	1fafc <__any_on+0x32>
   1fad8:	dd0a      	ble.n	1faf0 <__any_on+0x26>
   1fada:	f011 011f 	ands.w	r1, r1, #31
   1fade:	d007      	beq.n	1faf0 <__any_on+0x26>
   1fae0:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
   1fae4:	fa24 f001 	lsr.w	r0, r4, r1
   1fae8:	fa00 f101 	lsl.w	r1, r0, r1
   1faec:	428c      	cmp	r4, r1
   1faee:	d10b      	bne.n	1fb08 <__any_on+0x3e>
   1faf0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   1faf4:	4293      	cmp	r3, r2
   1faf6:	d803      	bhi.n	1fb00 <__any_on+0x36>
   1faf8:	2000      	movs	r0, #0
   1fafa:	bd10      	pop	{r4, pc}
   1fafc:	4603      	mov	r3, r0
   1fafe:	e7f7      	b.n	1faf0 <__any_on+0x26>
   1fb00:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   1fb04:	2900      	cmp	r1, #0
   1fb06:	d0f5      	beq.n	1faf4 <__any_on+0x2a>
   1fb08:	2001      	movs	r0, #1
   1fb0a:	bd10      	pop	{r4, pc}

0001fb0c <_realloc_r>:
_realloc_r():
   1fb0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1fb0e:	4607      	mov	r7, r0
   1fb10:	4614      	mov	r4, r2
   1fb12:	460e      	mov	r6, r1
   1fb14:	b921      	cbnz	r1, 1fb20 <_realloc_r+0x14>
   1fb16:	4611      	mov	r1, r2
   1fb18:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   1fb1c:	f7fb bcc2 	b.w	1b4a4 <_malloc_r>
   1fb20:	b922      	cbnz	r2, 1fb2c <_realloc_r+0x20>
   1fb22:	f7fb fc41 	bl	1b3a8 <_free_r>
   1fb26:	4625      	mov	r5, r4
   1fb28:	4628      	mov	r0, r5
   1fb2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1fb2c:	f001 f8ba 	bl	20ca4 <_malloc_usable_size_r>
   1fb30:	4284      	cmp	r4, r0
   1fb32:	d90f      	bls.n	1fb54 <_realloc_r+0x48>
   1fb34:	4621      	mov	r1, r4
   1fb36:	4638      	mov	r0, r7
   1fb38:	f7fb fcb4 	bl	1b4a4 <_malloc_r>
   1fb3c:	4605      	mov	r5, r0
   1fb3e:	2800      	cmp	r0, #0
   1fb40:	d0f2      	beq.n	1fb28 <_realloc_r+0x1c>
   1fb42:	4631      	mov	r1, r6
   1fb44:	4622      	mov	r2, r4
   1fb46:	f7fb f98e 	bl	1ae66 <memcpy>
   1fb4a:	4631      	mov	r1, r6
   1fb4c:	4638      	mov	r0, r7
   1fb4e:	f7fb fc2b 	bl	1b3a8 <_free_r>
   1fb52:	e7e9      	b.n	1fb28 <_realloc_r+0x1c>
   1fb54:	4635      	mov	r5, r6
   1fb56:	e7e7      	b.n	1fb28 <_realloc_r+0x1c>

0001fb58 <__ssputs_r>:
__ssputs_r():
   1fb58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1fb5c:	688e      	ldr	r6, [r1, #8]
   1fb5e:	4682      	mov	sl, r0
   1fb60:	429e      	cmp	r6, r3
   1fb62:	460c      	mov	r4, r1
   1fb64:	4691      	mov	r9, r2
   1fb66:	4698      	mov	r8, r3
   1fb68:	d835      	bhi.n	1fbd6 <__ssputs_r+0x7e>
   1fb6a:	898a      	ldrh	r2, [r1, #12]
   1fb6c:	f412 6f90 	tst.w	r2, #1152	; 0x480
   1fb70:	d031      	beq.n	1fbd6 <__ssputs_r+0x7e>
   1fb72:	2302      	movs	r3, #2
   1fb74:	6825      	ldr	r5, [r4, #0]
   1fb76:	6909      	ldr	r1, [r1, #16]
   1fb78:	1a6f      	subs	r7, r5, r1
   1fb7a:	6965      	ldr	r5, [r4, #20]
   1fb7c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   1fb80:	fb95 f5f3 	sdiv	r5, r5, r3
   1fb84:	f108 0301 	add.w	r3, r8, #1
   1fb88:	443b      	add	r3, r7
   1fb8a:	429d      	cmp	r5, r3
   1fb8c:	bf38      	it	cc
   1fb8e:	461d      	movcc	r5, r3
   1fb90:	0553      	lsls	r3, r2, #21
   1fb92:	d531      	bpl.n	1fbf8 <__ssputs_r+0xa0>
   1fb94:	4629      	mov	r1, r5
   1fb96:	f7fb fc85 	bl	1b4a4 <_malloc_r>
   1fb9a:	4606      	mov	r6, r0
   1fb9c:	b950      	cbnz	r0, 1fbb4 <__ssputs_r+0x5c>
   1fb9e:	230c      	movs	r3, #12
   1fba0:	f8ca 3000 	str.w	r3, [sl]
   1fba4:	89a3      	ldrh	r3, [r4, #12]
   1fba6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1fbaa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1fbae:	81a3      	strh	r3, [r4, #12]
   1fbb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1fbb4:	463a      	mov	r2, r7
   1fbb6:	6921      	ldr	r1, [r4, #16]
   1fbb8:	f7fb f955 	bl	1ae66 <memcpy>
   1fbbc:	89a3      	ldrh	r3, [r4, #12]
   1fbbe:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   1fbc2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1fbc6:	81a3      	strh	r3, [r4, #12]
   1fbc8:	6126      	str	r6, [r4, #16]
   1fbca:	443e      	add	r6, r7
   1fbcc:	6026      	str	r6, [r4, #0]
   1fbce:	4646      	mov	r6, r8
   1fbd0:	6165      	str	r5, [r4, #20]
   1fbd2:	1bed      	subs	r5, r5, r7
   1fbd4:	60a5      	str	r5, [r4, #8]
   1fbd6:	4546      	cmp	r6, r8
   1fbd8:	bf28      	it	cs
   1fbda:	4646      	movcs	r6, r8
   1fbdc:	4649      	mov	r1, r9
   1fbde:	4632      	mov	r2, r6
   1fbe0:	6820      	ldr	r0, [r4, #0]
   1fbe2:	f7fb f94b 	bl	1ae7c <memmove>
   1fbe6:	68a3      	ldr	r3, [r4, #8]
   1fbe8:	2000      	movs	r0, #0
   1fbea:	1b9b      	subs	r3, r3, r6
   1fbec:	60a3      	str	r3, [r4, #8]
   1fbee:	6823      	ldr	r3, [r4, #0]
   1fbf0:	441e      	add	r6, r3
   1fbf2:	6026      	str	r6, [r4, #0]
   1fbf4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1fbf8:	462a      	mov	r2, r5
   1fbfa:	f7ff ff87 	bl	1fb0c <_realloc_r>
   1fbfe:	4606      	mov	r6, r0
   1fc00:	2800      	cmp	r0, #0
   1fc02:	d1e1      	bne.n	1fbc8 <__ssputs_r+0x70>
   1fc04:	6921      	ldr	r1, [r4, #16]
   1fc06:	4650      	mov	r0, sl
   1fc08:	f7fb fbce 	bl	1b3a8 <_free_r>
   1fc0c:	e7c7      	b.n	1fb9e <__ssputs_r+0x46>
   1fc0e:	Address 0x000000000001fc0e is out of bounds.


0001fc10 <_svfiprintf_r>:
_svfiprintf_r():
   1fc10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fc14:	b09d      	sub	sp, #116	; 0x74
   1fc16:	9303      	str	r3, [sp, #12]
   1fc18:	898b      	ldrh	r3, [r1, #12]
   1fc1a:	4680      	mov	r8, r0
   1fc1c:	061c      	lsls	r4, r3, #24
   1fc1e:	460d      	mov	r5, r1
   1fc20:	4616      	mov	r6, r2
   1fc22:	d50f      	bpl.n	1fc44 <_svfiprintf_r+0x34>
   1fc24:	690b      	ldr	r3, [r1, #16]
   1fc26:	b96b      	cbnz	r3, 1fc44 <_svfiprintf_r+0x34>
   1fc28:	2140      	movs	r1, #64	; 0x40
   1fc2a:	f7fb fc3b 	bl	1b4a4 <_malloc_r>
   1fc2e:	6028      	str	r0, [r5, #0]
   1fc30:	6128      	str	r0, [r5, #16]
   1fc32:	b928      	cbnz	r0, 1fc40 <_svfiprintf_r+0x30>
   1fc34:	230c      	movs	r3, #12
   1fc36:	f8c8 3000 	str.w	r3, [r8]
   1fc3a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1fc3e:	e0c4      	b.n	1fdca <_svfiprintf_r+0x1ba>
   1fc40:	2340      	movs	r3, #64	; 0x40
   1fc42:	616b      	str	r3, [r5, #20]
   1fc44:	2300      	movs	r3, #0
   1fc46:	9309      	str	r3, [sp, #36]	; 0x24
   1fc48:	2320      	movs	r3, #32
   1fc4a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   1fc4e:	2330      	movs	r3, #48	; 0x30
   1fc50:	f04f 0b01 	mov.w	fp, #1
   1fc54:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   1fc58:	4637      	mov	r7, r6
   1fc5a:	463c      	mov	r4, r7
   1fc5c:	f814 3b01 	ldrb.w	r3, [r4], #1
   1fc60:	2b00      	cmp	r3, #0
   1fc62:	d13c      	bne.n	1fcde <_svfiprintf_r+0xce>
   1fc64:	ebb7 0a06 	subs.w	sl, r7, r6
   1fc68:	d00b      	beq.n	1fc82 <_svfiprintf_r+0x72>
   1fc6a:	4653      	mov	r3, sl
   1fc6c:	4632      	mov	r2, r6
   1fc6e:	4629      	mov	r1, r5
   1fc70:	4640      	mov	r0, r8
   1fc72:	f7ff ff71 	bl	1fb58 <__ssputs_r>
   1fc76:	3001      	adds	r0, #1
   1fc78:	f000 80a2 	beq.w	1fdc0 <_svfiprintf_r+0x1b0>
   1fc7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1fc7e:	4453      	add	r3, sl
   1fc80:	9309      	str	r3, [sp, #36]	; 0x24
   1fc82:	783b      	ldrb	r3, [r7, #0]
   1fc84:	2b00      	cmp	r3, #0
   1fc86:	f000 809b 	beq.w	1fdc0 <_svfiprintf_r+0x1b0>
   1fc8a:	2300      	movs	r3, #0
   1fc8c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1fc90:	9304      	str	r3, [sp, #16]
   1fc92:	9307      	str	r3, [sp, #28]
   1fc94:	9205      	str	r2, [sp, #20]
   1fc96:	9306      	str	r3, [sp, #24]
   1fc98:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   1fc9c:	931a      	str	r3, [sp, #104]	; 0x68
   1fc9e:	2205      	movs	r2, #5
   1fca0:	7821      	ldrb	r1, [r4, #0]
   1fca2:	4850      	ldr	r0, [pc, #320]	; (1fde4 <_svfiprintf_r+0x1d4>)
   1fca4:	f7fb f8c2 	bl	1ae2c <memchr>
   1fca8:	1c67      	adds	r7, r4, #1
   1fcaa:	9b04      	ldr	r3, [sp, #16]
   1fcac:	b9d8      	cbnz	r0, 1fce6 <_svfiprintf_r+0xd6>
   1fcae:	06d9      	lsls	r1, r3, #27
   1fcb0:	bf44      	itt	mi
   1fcb2:	2220      	movmi	r2, #32
   1fcb4:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1fcb8:	071a      	lsls	r2, r3, #28
   1fcba:	bf44      	itt	mi
   1fcbc:	222b      	movmi	r2, #43	; 0x2b
   1fcbe:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1fcc2:	7822      	ldrb	r2, [r4, #0]
   1fcc4:	2a2a      	cmp	r2, #42	; 0x2a
   1fcc6:	d016      	beq.n	1fcf6 <_svfiprintf_r+0xe6>
   1fcc8:	2100      	movs	r1, #0
   1fcca:	200a      	movs	r0, #10
   1fccc:	9a07      	ldr	r2, [sp, #28]
   1fcce:	4627      	mov	r7, r4
   1fcd0:	783b      	ldrb	r3, [r7, #0]
   1fcd2:	3401      	adds	r4, #1
   1fcd4:	3b30      	subs	r3, #48	; 0x30
   1fcd6:	2b09      	cmp	r3, #9
   1fcd8:	d950      	bls.n	1fd7c <_svfiprintf_r+0x16c>
   1fcda:	b1c9      	cbz	r1, 1fd10 <_svfiprintf_r+0x100>
   1fcdc:	e011      	b.n	1fd02 <_svfiprintf_r+0xf2>
   1fcde:	2b25      	cmp	r3, #37	; 0x25
   1fce0:	d0c0      	beq.n	1fc64 <_svfiprintf_r+0x54>
   1fce2:	4627      	mov	r7, r4
   1fce4:	e7b9      	b.n	1fc5a <_svfiprintf_r+0x4a>
   1fce6:	4a3f      	ldr	r2, [pc, #252]	; (1fde4 <_svfiprintf_r+0x1d4>)
   1fce8:	463c      	mov	r4, r7
   1fcea:	1a80      	subs	r0, r0, r2
   1fcec:	fa0b f000 	lsl.w	r0, fp, r0
   1fcf0:	4318      	orrs	r0, r3
   1fcf2:	9004      	str	r0, [sp, #16]
   1fcf4:	e7d3      	b.n	1fc9e <_svfiprintf_r+0x8e>
   1fcf6:	9a03      	ldr	r2, [sp, #12]
   1fcf8:	1d11      	adds	r1, r2, #4
   1fcfa:	6812      	ldr	r2, [r2, #0]
   1fcfc:	9103      	str	r1, [sp, #12]
   1fcfe:	2a00      	cmp	r2, #0
   1fd00:	db01      	blt.n	1fd06 <_svfiprintf_r+0xf6>
   1fd02:	9207      	str	r2, [sp, #28]
   1fd04:	e004      	b.n	1fd10 <_svfiprintf_r+0x100>
   1fd06:	4252      	negs	r2, r2
   1fd08:	f043 0302 	orr.w	r3, r3, #2
   1fd0c:	9207      	str	r2, [sp, #28]
   1fd0e:	9304      	str	r3, [sp, #16]
   1fd10:	783b      	ldrb	r3, [r7, #0]
   1fd12:	2b2e      	cmp	r3, #46	; 0x2e
   1fd14:	d10d      	bne.n	1fd32 <_svfiprintf_r+0x122>
   1fd16:	787b      	ldrb	r3, [r7, #1]
   1fd18:	1c79      	adds	r1, r7, #1
   1fd1a:	2b2a      	cmp	r3, #42	; 0x2a
   1fd1c:	d132      	bne.n	1fd84 <_svfiprintf_r+0x174>
   1fd1e:	9b03      	ldr	r3, [sp, #12]
   1fd20:	3702      	adds	r7, #2
   1fd22:	1d1a      	adds	r2, r3, #4
   1fd24:	681b      	ldr	r3, [r3, #0]
   1fd26:	9203      	str	r2, [sp, #12]
   1fd28:	2b00      	cmp	r3, #0
   1fd2a:	bfb8      	it	lt
   1fd2c:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   1fd30:	9305      	str	r3, [sp, #20]
   1fd32:	4c2d      	ldr	r4, [pc, #180]	; (1fde8 <_svfiprintf_r+0x1d8>)
   1fd34:	2203      	movs	r2, #3
   1fd36:	7839      	ldrb	r1, [r7, #0]
   1fd38:	4620      	mov	r0, r4
   1fd3a:	f7fb f877 	bl	1ae2c <memchr>
   1fd3e:	b138      	cbz	r0, 1fd50 <_svfiprintf_r+0x140>
   1fd40:	2340      	movs	r3, #64	; 0x40
   1fd42:	1b00      	subs	r0, r0, r4
   1fd44:	fa03 f000 	lsl.w	r0, r3, r0
   1fd48:	9b04      	ldr	r3, [sp, #16]
   1fd4a:	3701      	adds	r7, #1
   1fd4c:	4303      	orrs	r3, r0
   1fd4e:	9304      	str	r3, [sp, #16]
   1fd50:	7839      	ldrb	r1, [r7, #0]
   1fd52:	2206      	movs	r2, #6
   1fd54:	4825      	ldr	r0, [pc, #148]	; (1fdec <_svfiprintf_r+0x1dc>)
   1fd56:	1c7e      	adds	r6, r7, #1
   1fd58:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   1fd5c:	f7fb f866 	bl	1ae2c <memchr>
   1fd60:	2800      	cmp	r0, #0
   1fd62:	d035      	beq.n	1fdd0 <_svfiprintf_r+0x1c0>
   1fd64:	4b22      	ldr	r3, [pc, #136]	; (1fdf0 <_svfiprintf_r+0x1e0>)
   1fd66:	b9fb      	cbnz	r3, 1fda8 <_svfiprintf_r+0x198>
   1fd68:	9b03      	ldr	r3, [sp, #12]
   1fd6a:	3307      	adds	r3, #7
   1fd6c:	f023 0307 	bic.w	r3, r3, #7
   1fd70:	3308      	adds	r3, #8
   1fd72:	9303      	str	r3, [sp, #12]
   1fd74:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1fd76:	444b      	add	r3, r9
   1fd78:	9309      	str	r3, [sp, #36]	; 0x24
   1fd7a:	e76d      	b.n	1fc58 <_svfiprintf_r+0x48>
   1fd7c:	fb00 3202 	mla	r2, r0, r2, r3
   1fd80:	2101      	movs	r1, #1
   1fd82:	e7a4      	b.n	1fcce <_svfiprintf_r+0xbe>
   1fd84:	2300      	movs	r3, #0
   1fd86:	240a      	movs	r4, #10
   1fd88:	4618      	mov	r0, r3
   1fd8a:	9305      	str	r3, [sp, #20]
   1fd8c:	460f      	mov	r7, r1
   1fd8e:	783a      	ldrb	r2, [r7, #0]
   1fd90:	3101      	adds	r1, #1
   1fd92:	3a30      	subs	r2, #48	; 0x30
   1fd94:	2a09      	cmp	r2, #9
   1fd96:	d903      	bls.n	1fda0 <_svfiprintf_r+0x190>
   1fd98:	2b00      	cmp	r3, #0
   1fd9a:	d0ca      	beq.n	1fd32 <_svfiprintf_r+0x122>
   1fd9c:	9005      	str	r0, [sp, #20]
   1fd9e:	e7c8      	b.n	1fd32 <_svfiprintf_r+0x122>
   1fda0:	fb04 2000 	mla	r0, r4, r0, r2
   1fda4:	2301      	movs	r3, #1
   1fda6:	e7f1      	b.n	1fd8c <_svfiprintf_r+0x17c>
   1fda8:	ab03      	add	r3, sp, #12
   1fdaa:	9300      	str	r3, [sp, #0]
   1fdac:	462a      	mov	r2, r5
   1fdae:	4b11      	ldr	r3, [pc, #68]	; (1fdf4 <_svfiprintf_r+0x1e4>)
   1fdb0:	a904      	add	r1, sp, #16
   1fdb2:	4640      	mov	r0, r8
   1fdb4:	f7fb fc66 	bl	1b684 <_printf_float>
   1fdb8:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   1fdbc:	4681      	mov	r9, r0
   1fdbe:	d1d9      	bne.n	1fd74 <_svfiprintf_r+0x164>
   1fdc0:	89ab      	ldrh	r3, [r5, #12]
   1fdc2:	065b      	lsls	r3, r3, #25
   1fdc4:	f53f af39 	bmi.w	1fc3a <_svfiprintf_r+0x2a>
   1fdc8:	9809      	ldr	r0, [sp, #36]	; 0x24
   1fdca:	b01d      	add	sp, #116	; 0x74
   1fdcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fdd0:	ab03      	add	r3, sp, #12
   1fdd2:	9300      	str	r3, [sp, #0]
   1fdd4:	462a      	mov	r2, r5
   1fdd6:	4b07      	ldr	r3, [pc, #28]	; (1fdf4 <_svfiprintf_r+0x1e4>)
   1fdd8:	a904      	add	r1, sp, #16
   1fdda:	4640      	mov	r0, r8
   1fddc:	f7fb ff02 	bl	1bbe4 <_printf_i>
   1fde0:	e7ea      	b.n	1fdb8 <_svfiprintf_r+0x1a8>
   1fde2:	bf00      	nop
   1fde4:	0002274c 	.word	0x0002274c
   1fde8:	00022752 	.word	0x00022752
   1fdec:	00022756 	.word	0x00022756
   1fdf0:	0001b685 	.word	0x0001b685
   1fdf4:	0001fb59 	.word	0x0001fb59

0001fdf8 <_sungetc_r>:
_sungetc_r():
   1fdf8:	b538      	push	{r3, r4, r5, lr}
   1fdfa:	1c4b      	adds	r3, r1, #1
   1fdfc:	4614      	mov	r4, r2
   1fdfe:	d103      	bne.n	1fe08 <_sungetc_r+0x10>
   1fe00:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   1fe04:	4628      	mov	r0, r5
   1fe06:	bd38      	pop	{r3, r4, r5, pc}
   1fe08:	8993      	ldrh	r3, [r2, #12]
   1fe0a:	b2cd      	uxtb	r5, r1
   1fe0c:	f023 0320 	bic.w	r3, r3, #32
   1fe10:	8193      	strh	r3, [r2, #12]
   1fe12:	6b53      	ldr	r3, [r2, #52]	; 0x34
   1fe14:	6852      	ldr	r2, [r2, #4]
   1fe16:	b18b      	cbz	r3, 1fe3c <_sungetc_r+0x44>
   1fe18:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1fe1a:	429a      	cmp	r2, r3
   1fe1c:	da08      	bge.n	1fe30 <_sungetc_r+0x38>
   1fe1e:	6823      	ldr	r3, [r4, #0]
   1fe20:	1e5a      	subs	r2, r3, #1
   1fe22:	6022      	str	r2, [r4, #0]
   1fe24:	f803 5c01 	strb.w	r5, [r3, #-1]
   1fe28:	6863      	ldr	r3, [r4, #4]
   1fe2a:	3301      	adds	r3, #1
   1fe2c:	6063      	str	r3, [r4, #4]
   1fe2e:	e7e9      	b.n	1fe04 <_sungetc_r+0xc>
   1fe30:	4621      	mov	r1, r4
   1fe32:	f000 fe89 	bl	20b48 <__submore>
   1fe36:	2800      	cmp	r0, #0
   1fe38:	d0f1      	beq.n	1fe1e <_sungetc_r+0x26>
   1fe3a:	e7e1      	b.n	1fe00 <_sungetc_r+0x8>
   1fe3c:	6921      	ldr	r1, [r4, #16]
   1fe3e:	6823      	ldr	r3, [r4, #0]
   1fe40:	b151      	cbz	r1, 1fe58 <_sungetc_r+0x60>
   1fe42:	4299      	cmp	r1, r3
   1fe44:	d208      	bcs.n	1fe58 <_sungetc_r+0x60>
   1fe46:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   1fe4a:	428d      	cmp	r5, r1
   1fe4c:	d104      	bne.n	1fe58 <_sungetc_r+0x60>
   1fe4e:	3b01      	subs	r3, #1
   1fe50:	3201      	adds	r2, #1
   1fe52:	6023      	str	r3, [r4, #0]
   1fe54:	6062      	str	r2, [r4, #4]
   1fe56:	e7d5      	b.n	1fe04 <_sungetc_r+0xc>
   1fe58:	63e3      	str	r3, [r4, #60]	; 0x3c
   1fe5a:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1fe5e:	6363      	str	r3, [r4, #52]	; 0x34
   1fe60:	2303      	movs	r3, #3
   1fe62:	63a3      	str	r3, [r4, #56]	; 0x38
   1fe64:	4623      	mov	r3, r4
   1fe66:	6422      	str	r2, [r4, #64]	; 0x40
   1fe68:	f803 5f46 	strb.w	r5, [r3, #70]!
   1fe6c:	6023      	str	r3, [r4, #0]
   1fe6e:	2301      	movs	r3, #1
   1fe70:	e7dc      	b.n	1fe2c <_sungetc_r+0x34>

0001fe72 <__ssrefill_r>:
__ssrefill_r():
   1fe72:	b510      	push	{r4, lr}
   1fe74:	460c      	mov	r4, r1
   1fe76:	6b49      	ldr	r1, [r1, #52]	; 0x34
   1fe78:	b169      	cbz	r1, 1fe96 <__ssrefill_r+0x24>
   1fe7a:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1fe7e:	4299      	cmp	r1, r3
   1fe80:	d001      	beq.n	1fe86 <__ssrefill_r+0x14>
   1fe82:	f7fb fa91 	bl	1b3a8 <_free_r>
   1fe86:	2000      	movs	r0, #0
   1fe88:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1fe8a:	6360      	str	r0, [r4, #52]	; 0x34
   1fe8c:	6063      	str	r3, [r4, #4]
   1fe8e:	b113      	cbz	r3, 1fe96 <__ssrefill_r+0x24>
   1fe90:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1fe92:	6023      	str	r3, [r4, #0]
   1fe94:	bd10      	pop	{r4, pc}
   1fe96:	6923      	ldr	r3, [r4, #16]
   1fe98:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1fe9c:	6023      	str	r3, [r4, #0]
   1fe9e:	2300      	movs	r3, #0
   1fea0:	6063      	str	r3, [r4, #4]
   1fea2:	89a3      	ldrh	r3, [r4, #12]
   1fea4:	f043 0320 	orr.w	r3, r3, #32
   1fea8:	81a3      	strh	r3, [r4, #12]
   1feaa:	bd10      	pop	{r4, pc}

0001feac <__ssvfiscanf_r>:
__ssvfiscanf_r():
   1feac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1feb0:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   1feb4:	9301      	str	r3, [sp, #4]
   1feb6:	2300      	movs	r3, #0
   1feb8:	4606      	mov	r6, r0
   1feba:	460c      	mov	r4, r1
   1febc:	4692      	mov	sl, r2
   1febe:	270a      	movs	r7, #10
   1fec0:	9346      	str	r3, [sp, #280]	; 0x118
   1fec2:	9347      	str	r3, [sp, #284]	; 0x11c
   1fec4:	4b9f      	ldr	r3, [pc, #636]	; (20144 <__ssvfiscanf_r+0x298>)
   1fec6:	f10d 080c 	add.w	r8, sp, #12
   1feca:	93a2      	str	r3, [sp, #648]	; 0x288
   1fecc:	4b9e      	ldr	r3, [pc, #632]	; (20148 <__ssvfiscanf_r+0x29c>)
   1fece:	f8df 927c 	ldr.w	r9, [pc, #636]	; 2014c <__ssvfiscanf_r+0x2a0>
   1fed2:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   1fed6:	93a3      	str	r3, [sp, #652]	; 0x28c
   1fed8:	f89a 3000 	ldrb.w	r3, [sl]
   1fedc:	2b00      	cmp	r3, #0
   1fede:	f000 812f 	beq.w	20140 <__ssvfiscanf_r+0x294>
   1fee2:	f7fa ff0f 	bl	1ad04 <__locale_ctype_ptr>
   1fee6:	f89a b000 	ldrb.w	fp, [sl]
   1feea:	4458      	add	r0, fp
   1feec:	7843      	ldrb	r3, [r0, #1]
   1feee:	f013 0308 	ands.w	r3, r3, #8
   1fef2:	d143      	bne.n	1ff7c <__ssvfiscanf_r+0xd0>
   1fef4:	f1bb 0f25 	cmp.w	fp, #37	; 0x25
   1fef8:	f10a 0501 	add.w	r5, sl, #1
   1fefc:	f040 8099 	bne.w	20032 <__ssvfiscanf_r+0x186>
   1ff00:	9345      	str	r3, [sp, #276]	; 0x114
   1ff02:	9343      	str	r3, [sp, #268]	; 0x10c
   1ff04:	f89a 3001 	ldrb.w	r3, [sl, #1]
   1ff08:	2b2a      	cmp	r3, #42	; 0x2a
   1ff0a:	d103      	bne.n	1ff14 <__ssvfiscanf_r+0x68>
   1ff0c:	2310      	movs	r3, #16
   1ff0e:	f10a 0502 	add.w	r5, sl, #2
   1ff12:	9343      	str	r3, [sp, #268]	; 0x10c
   1ff14:	7829      	ldrb	r1, [r5, #0]
   1ff16:	46aa      	mov	sl, r5
   1ff18:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   1ff1c:	2a09      	cmp	r2, #9
   1ff1e:	f105 0501 	add.w	r5, r5, #1
   1ff22:	d941      	bls.n	1ffa8 <__ssvfiscanf_r+0xfc>
   1ff24:	2203      	movs	r2, #3
   1ff26:	4889      	ldr	r0, [pc, #548]	; (2014c <__ssvfiscanf_r+0x2a0>)
   1ff28:	f7fa ff80 	bl	1ae2c <memchr>
   1ff2c:	b138      	cbz	r0, 1ff3e <__ssvfiscanf_r+0x92>
   1ff2e:	eba0 0309 	sub.w	r3, r0, r9
   1ff32:	2001      	movs	r0, #1
   1ff34:	46aa      	mov	sl, r5
   1ff36:	4098      	lsls	r0, r3
   1ff38:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1ff3a:	4318      	orrs	r0, r3
   1ff3c:	9043      	str	r0, [sp, #268]	; 0x10c
   1ff3e:	f89a 3000 	ldrb.w	r3, [sl]
   1ff42:	f10a 0501 	add.w	r5, sl, #1
   1ff46:	2b67      	cmp	r3, #103	; 0x67
   1ff48:	d84a      	bhi.n	1ffe0 <__ssvfiscanf_r+0x134>
   1ff4a:	2b65      	cmp	r3, #101	; 0x65
   1ff4c:	f080 80b7 	bcs.w	200be <__ssvfiscanf_r+0x212>
   1ff50:	2b47      	cmp	r3, #71	; 0x47
   1ff52:	d82f      	bhi.n	1ffb4 <__ssvfiscanf_r+0x108>
   1ff54:	2b45      	cmp	r3, #69	; 0x45
   1ff56:	f080 80b2 	bcs.w	200be <__ssvfiscanf_r+0x212>
   1ff5a:	2b00      	cmp	r3, #0
   1ff5c:	f000 8082 	beq.w	20064 <__ssvfiscanf_r+0x1b8>
   1ff60:	2b25      	cmp	r3, #37	; 0x25
   1ff62:	d066      	beq.n	20032 <__ssvfiscanf_r+0x186>
   1ff64:	2303      	movs	r3, #3
   1ff66:	9744      	str	r7, [sp, #272]	; 0x110
   1ff68:	9349      	str	r3, [sp, #292]	; 0x124
   1ff6a:	e045      	b.n	1fff8 <__ssvfiscanf_r+0x14c>
   1ff6c:	9947      	ldr	r1, [sp, #284]	; 0x11c
   1ff6e:	3301      	adds	r3, #1
   1ff70:	3101      	adds	r1, #1
   1ff72:	9147      	str	r1, [sp, #284]	; 0x11c
   1ff74:	6861      	ldr	r1, [r4, #4]
   1ff76:	6023      	str	r3, [r4, #0]
   1ff78:	3901      	subs	r1, #1
   1ff7a:	6061      	str	r1, [r4, #4]
   1ff7c:	6863      	ldr	r3, [r4, #4]
   1ff7e:	2b00      	cmp	r3, #0
   1ff80:	dd0b      	ble.n	1ff9a <__ssvfiscanf_r+0xee>
   1ff82:	f7fa febf 	bl	1ad04 <__locale_ctype_ptr>
   1ff86:	6823      	ldr	r3, [r4, #0]
   1ff88:	7819      	ldrb	r1, [r3, #0]
   1ff8a:	4408      	add	r0, r1
   1ff8c:	7841      	ldrb	r1, [r0, #1]
   1ff8e:	070d      	lsls	r5, r1, #28
   1ff90:	d4ec      	bmi.n	1ff6c <__ssvfiscanf_r+0xc0>
   1ff92:	f10a 0501 	add.w	r5, sl, #1
   1ff96:	46aa      	mov	sl, r5
   1ff98:	e79e      	b.n	1fed8 <__ssvfiscanf_r+0x2c>
   1ff9a:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1ff9c:	4621      	mov	r1, r4
   1ff9e:	4630      	mov	r0, r6
   1ffa0:	4798      	blx	r3
   1ffa2:	2800      	cmp	r0, #0
   1ffa4:	d0ed      	beq.n	1ff82 <__ssvfiscanf_r+0xd6>
   1ffa6:	e7f4      	b.n	1ff92 <__ssvfiscanf_r+0xe6>
   1ffa8:	9b45      	ldr	r3, [sp, #276]	; 0x114
   1ffaa:	fb07 1303 	mla	r3, r7, r3, r1
   1ffae:	3b30      	subs	r3, #48	; 0x30
   1ffb0:	9345      	str	r3, [sp, #276]	; 0x114
   1ffb2:	e7af      	b.n	1ff14 <__ssvfiscanf_r+0x68>
   1ffb4:	2b5b      	cmp	r3, #91	; 0x5b
   1ffb6:	d061      	beq.n	2007c <__ssvfiscanf_r+0x1d0>
   1ffb8:	d80c      	bhi.n	1ffd4 <__ssvfiscanf_r+0x128>
   1ffba:	2b58      	cmp	r3, #88	; 0x58
   1ffbc:	d1d2      	bne.n	1ff64 <__ssvfiscanf_r+0xb8>
   1ffbe:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1ffc0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   1ffc4:	9243      	str	r2, [sp, #268]	; 0x10c
   1ffc6:	2210      	movs	r2, #16
   1ffc8:	9244      	str	r2, [sp, #272]	; 0x110
   1ffca:	2b6f      	cmp	r3, #111	; 0x6f
   1ffcc:	bfb4      	ite	lt
   1ffce:	2303      	movlt	r3, #3
   1ffd0:	2304      	movge	r3, #4
   1ffd2:	e010      	b.n	1fff6 <__ssvfiscanf_r+0x14a>
   1ffd4:	2b63      	cmp	r3, #99	; 0x63
   1ffd6:	d05c      	beq.n	20092 <__ssvfiscanf_r+0x1e6>
   1ffd8:	2b64      	cmp	r3, #100	; 0x64
   1ffda:	d1c3      	bne.n	1ff64 <__ssvfiscanf_r+0xb8>
   1ffdc:	9744      	str	r7, [sp, #272]	; 0x110
   1ffde:	e7f4      	b.n	1ffca <__ssvfiscanf_r+0x11e>
   1ffe0:	2b70      	cmp	r3, #112	; 0x70
   1ffe2:	d042      	beq.n	2006a <__ssvfiscanf_r+0x1be>
   1ffe4:	d81d      	bhi.n	20022 <__ssvfiscanf_r+0x176>
   1ffe6:	2b6e      	cmp	r3, #110	; 0x6e
   1ffe8:	d059      	beq.n	2009e <__ssvfiscanf_r+0x1f2>
   1ffea:	d843      	bhi.n	20074 <__ssvfiscanf_r+0x1c8>
   1ffec:	2b69      	cmp	r3, #105	; 0x69
   1ffee:	d1b9      	bne.n	1ff64 <__ssvfiscanf_r+0xb8>
   1fff0:	2300      	movs	r3, #0
   1fff2:	9344      	str	r3, [sp, #272]	; 0x110
   1fff4:	2303      	movs	r3, #3
   1fff6:	9349      	str	r3, [sp, #292]	; 0x124
   1fff8:	6863      	ldr	r3, [r4, #4]
   1fffa:	2b00      	cmp	r3, #0
   1fffc:	dd61      	ble.n	200c2 <__ssvfiscanf_r+0x216>
   1fffe:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   20000:	0659      	lsls	r1, r3, #25
   20002:	d56f      	bpl.n	200e4 <__ssvfiscanf_r+0x238>
   20004:	9b49      	ldr	r3, [sp, #292]	; 0x124
   20006:	2b02      	cmp	r3, #2
   20008:	dc7c      	bgt.n	20104 <__ssvfiscanf_r+0x258>
   2000a:	ab01      	add	r3, sp, #4
   2000c:	4622      	mov	r2, r4
   2000e:	a943      	add	r1, sp, #268	; 0x10c
   20010:	4630      	mov	r0, r6
   20012:	f000 fb59 	bl	206c8 <_scanf_chars>
   20016:	2801      	cmp	r0, #1
   20018:	f000 8092 	beq.w	20140 <__ssvfiscanf_r+0x294>
   2001c:	2802      	cmp	r0, #2
   2001e:	d1ba      	bne.n	1ff96 <__ssvfiscanf_r+0xea>
   20020:	e01d      	b.n	2005e <__ssvfiscanf_r+0x1b2>
   20022:	2b75      	cmp	r3, #117	; 0x75
   20024:	d0da      	beq.n	1ffdc <__ssvfiscanf_r+0x130>
   20026:	2b78      	cmp	r3, #120	; 0x78
   20028:	d0c9      	beq.n	1ffbe <__ssvfiscanf_r+0x112>
   2002a:	2b73      	cmp	r3, #115	; 0x73
   2002c:	d19a      	bne.n	1ff64 <__ssvfiscanf_r+0xb8>
   2002e:	2302      	movs	r3, #2
   20030:	e7e1      	b.n	1fff6 <__ssvfiscanf_r+0x14a>
   20032:	6863      	ldr	r3, [r4, #4]
   20034:	2b00      	cmp	r3, #0
   20036:	dd0c      	ble.n	20052 <__ssvfiscanf_r+0x1a6>
   20038:	6823      	ldr	r3, [r4, #0]
   2003a:	781a      	ldrb	r2, [r3, #0]
   2003c:	4593      	cmp	fp, r2
   2003e:	d17f      	bne.n	20140 <__ssvfiscanf_r+0x294>
   20040:	3301      	adds	r3, #1
   20042:	6862      	ldr	r2, [r4, #4]
   20044:	6023      	str	r3, [r4, #0]
   20046:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   20048:	3a01      	subs	r2, #1
   2004a:	3301      	adds	r3, #1
   2004c:	6062      	str	r2, [r4, #4]
   2004e:	9347      	str	r3, [sp, #284]	; 0x11c
   20050:	e7a1      	b.n	1ff96 <__ssvfiscanf_r+0xea>
   20052:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   20054:	4621      	mov	r1, r4
   20056:	4630      	mov	r0, r6
   20058:	4798      	blx	r3
   2005a:	2800      	cmp	r0, #0
   2005c:	d0ec      	beq.n	20038 <__ssvfiscanf_r+0x18c>
   2005e:	9846      	ldr	r0, [sp, #280]	; 0x118
   20060:	2800      	cmp	r0, #0
   20062:	d163      	bne.n	2012c <__ssvfiscanf_r+0x280>
   20064:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   20068:	e066      	b.n	20138 <__ssvfiscanf_r+0x28c>
   2006a:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   2006c:	f042 0220 	orr.w	r2, r2, #32
   20070:	9243      	str	r2, [sp, #268]	; 0x10c
   20072:	e7a4      	b.n	1ffbe <__ssvfiscanf_r+0x112>
   20074:	2308      	movs	r3, #8
   20076:	9344      	str	r3, [sp, #272]	; 0x110
   20078:	2304      	movs	r3, #4
   2007a:	e7bc      	b.n	1fff6 <__ssvfiscanf_r+0x14a>
   2007c:	4629      	mov	r1, r5
   2007e:	4640      	mov	r0, r8
   20080:	f000 fc8e 	bl	209a0 <__sccl>
   20084:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   20086:	4605      	mov	r5, r0
   20088:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   2008c:	9343      	str	r3, [sp, #268]	; 0x10c
   2008e:	2301      	movs	r3, #1
   20090:	e7b1      	b.n	1fff6 <__ssvfiscanf_r+0x14a>
   20092:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   20094:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   20098:	9343      	str	r3, [sp, #268]	; 0x10c
   2009a:	2300      	movs	r3, #0
   2009c:	e7ab      	b.n	1fff6 <__ssvfiscanf_r+0x14a>
   2009e:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   200a0:	06d0      	lsls	r0, r2, #27
   200a2:	f53f af78 	bmi.w	1ff96 <__ssvfiscanf_r+0xea>
   200a6:	f012 0f01 	tst.w	r2, #1
   200aa:	9a01      	ldr	r2, [sp, #4]
   200ac:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   200ae:	f102 0104 	add.w	r1, r2, #4
   200b2:	9101      	str	r1, [sp, #4]
   200b4:	6812      	ldr	r2, [r2, #0]
   200b6:	bf14      	ite	ne
   200b8:	8013      	strhne	r3, [r2, #0]
   200ba:	6013      	streq	r3, [r2, #0]
   200bc:	e76b      	b.n	1ff96 <__ssvfiscanf_r+0xea>
   200be:	2305      	movs	r3, #5
   200c0:	e799      	b.n	1fff6 <__ssvfiscanf_r+0x14a>
   200c2:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   200c4:	4621      	mov	r1, r4
   200c6:	4630      	mov	r0, r6
   200c8:	4798      	blx	r3
   200ca:	2800      	cmp	r0, #0
   200cc:	d097      	beq.n	1fffe <__ssvfiscanf_r+0x152>
   200ce:	e7c6      	b.n	2005e <__ssvfiscanf_r+0x1b2>
   200d0:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   200d2:	3201      	adds	r2, #1
   200d4:	9247      	str	r2, [sp, #284]	; 0x11c
   200d6:	6862      	ldr	r2, [r4, #4]
   200d8:	3a01      	subs	r2, #1
   200da:	2a00      	cmp	r2, #0
   200dc:	6062      	str	r2, [r4, #4]
   200de:	dd0a      	ble.n	200f6 <__ssvfiscanf_r+0x24a>
   200e0:	3301      	adds	r3, #1
   200e2:	6023      	str	r3, [r4, #0]
   200e4:	f7fa fe0e 	bl	1ad04 <__locale_ctype_ptr>
   200e8:	6823      	ldr	r3, [r4, #0]
   200ea:	781a      	ldrb	r2, [r3, #0]
   200ec:	4410      	add	r0, r2
   200ee:	7842      	ldrb	r2, [r0, #1]
   200f0:	0712      	lsls	r2, r2, #28
   200f2:	d4ed      	bmi.n	200d0 <__ssvfiscanf_r+0x224>
   200f4:	e786      	b.n	20004 <__ssvfiscanf_r+0x158>
   200f6:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   200f8:	4621      	mov	r1, r4
   200fa:	4630      	mov	r0, r6
   200fc:	4798      	blx	r3
   200fe:	2800      	cmp	r0, #0
   20100:	d0f0      	beq.n	200e4 <__ssvfiscanf_r+0x238>
   20102:	e7ac      	b.n	2005e <__ssvfiscanf_r+0x1b2>
   20104:	2b04      	cmp	r3, #4
   20106:	dc06      	bgt.n	20116 <__ssvfiscanf_r+0x26a>
   20108:	ab01      	add	r3, sp, #4
   2010a:	4622      	mov	r2, r4
   2010c:	a943      	add	r1, sp, #268	; 0x10c
   2010e:	4630      	mov	r0, r6
   20110:	f000 fb3e 	bl	20790 <_scanf_i>
   20114:	e77f      	b.n	20016 <__ssvfiscanf_r+0x16a>
   20116:	4b0e      	ldr	r3, [pc, #56]	; (20150 <__ssvfiscanf_r+0x2a4>)
   20118:	2b00      	cmp	r3, #0
   2011a:	f43f af3c 	beq.w	1ff96 <__ssvfiscanf_r+0xea>
   2011e:	ab01      	add	r3, sp, #4
   20120:	4622      	mov	r2, r4
   20122:	a943      	add	r1, sp, #268	; 0x10c
   20124:	4630      	mov	r0, r6
   20126:	f7fb fe7d 	bl	1be24 <_scanf_float>
   2012a:	e774      	b.n	20016 <__ssvfiscanf_r+0x16a>
   2012c:	89a3      	ldrh	r3, [r4, #12]
   2012e:	f013 0f40 	tst.w	r3, #64	; 0x40
   20132:	bf18      	it	ne
   20134:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   20138:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   2013c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20140:	9846      	ldr	r0, [sp, #280]	; 0x118
   20142:	e7f9      	b.n	20138 <__ssvfiscanf_r+0x28c>
   20144:	0001fdf9 	.word	0x0001fdf9
   20148:	0001fe73 	.word	0x0001fe73
   2014c:	00022752 	.word	0x00022752
   20150:	0001be25 	.word	0x0001be25

00020154 <__sfputc_r>:
__sfputc_r():
   20154:	6893      	ldr	r3, [r2, #8]
   20156:	b410      	push	{r4}
   20158:	3b01      	subs	r3, #1
   2015a:	2b00      	cmp	r3, #0
   2015c:	6093      	str	r3, [r2, #8]
   2015e:	da08      	bge.n	20172 <__sfputc_r+0x1e>
   20160:	6994      	ldr	r4, [r2, #24]
   20162:	42a3      	cmp	r3, r4
   20164:	db02      	blt.n	2016c <__sfputc_r+0x18>
   20166:	b2cb      	uxtb	r3, r1
   20168:	2b0a      	cmp	r3, #10
   2016a:	d102      	bne.n	20172 <__sfputc_r+0x1e>
   2016c:	bc10      	pop	{r4}
   2016e:	f7fd bd8b 	b.w	1dc88 <__swbuf_r>
   20172:	6813      	ldr	r3, [r2, #0]
   20174:	1c58      	adds	r0, r3, #1
   20176:	6010      	str	r0, [r2, #0]
   20178:	7019      	strb	r1, [r3, #0]
   2017a:	b2c8      	uxtb	r0, r1
   2017c:	bc10      	pop	{r4}
   2017e:	4770      	bx	lr

00020180 <__sfputs_r>:
__sfputs_r():
   20180:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   20182:	4606      	mov	r6, r0
   20184:	460f      	mov	r7, r1
   20186:	4614      	mov	r4, r2
   20188:	18d5      	adds	r5, r2, r3
   2018a:	42ac      	cmp	r4, r5
   2018c:	d101      	bne.n	20192 <__sfputs_r+0x12>
   2018e:	2000      	movs	r0, #0
   20190:	e007      	b.n	201a2 <__sfputs_r+0x22>
   20192:	463a      	mov	r2, r7
   20194:	f814 1b01 	ldrb.w	r1, [r4], #1
   20198:	4630      	mov	r0, r6
   2019a:	f7ff ffdb 	bl	20154 <__sfputc_r>
   2019e:	1c43      	adds	r3, r0, #1
   201a0:	d1f3      	bne.n	2018a <__sfputs_r+0xa>
   201a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000201a4 <_vfiprintf_r>:
_vfprintf_r():
   201a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   201a8:	b09d      	sub	sp, #116	; 0x74
   201aa:	460c      	mov	r4, r1
   201ac:	4617      	mov	r7, r2
   201ae:	9303      	str	r3, [sp, #12]
   201b0:	4606      	mov	r6, r0
   201b2:	b118      	cbz	r0, 201bc <_vfiprintf_r+0x18>
   201b4:	6983      	ldr	r3, [r0, #24]
   201b6:	b90b      	cbnz	r3, 201bc <_vfiprintf_r+0x18>
   201b8:	f7fa fbfa 	bl	1a9b0 <__sinit>
   201bc:	4b7c      	ldr	r3, [pc, #496]	; (203b0 <_vfiprintf_r+0x20c>)
   201be:	429c      	cmp	r4, r3
   201c0:	d157      	bne.n	20272 <_vfiprintf_r+0xce>
   201c2:	6874      	ldr	r4, [r6, #4]
   201c4:	89a3      	ldrh	r3, [r4, #12]
   201c6:	0718      	lsls	r0, r3, #28
   201c8:	d55d      	bpl.n	20286 <_vfiprintf_r+0xe2>
   201ca:	6923      	ldr	r3, [r4, #16]
   201cc:	2b00      	cmp	r3, #0
   201ce:	d05a      	beq.n	20286 <_vfiprintf_r+0xe2>
   201d0:	2300      	movs	r3, #0
   201d2:	9309      	str	r3, [sp, #36]	; 0x24
   201d4:	2320      	movs	r3, #32
   201d6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   201da:	2330      	movs	r3, #48	; 0x30
   201dc:	f04f 0b01 	mov.w	fp, #1
   201e0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   201e4:	46b8      	mov	r8, r7
   201e6:	4645      	mov	r5, r8
   201e8:	f815 3b01 	ldrb.w	r3, [r5], #1
   201ec:	2b00      	cmp	r3, #0
   201ee:	d155      	bne.n	2029c <_vfiprintf_r+0xf8>
   201f0:	ebb8 0a07 	subs.w	sl, r8, r7
   201f4:	d00b      	beq.n	2020e <_vfiprintf_r+0x6a>
   201f6:	4653      	mov	r3, sl
   201f8:	463a      	mov	r2, r7
   201fa:	4621      	mov	r1, r4
   201fc:	4630      	mov	r0, r6
   201fe:	f7ff ffbf 	bl	20180 <__sfputs_r>
   20202:	3001      	adds	r0, #1
   20204:	f000 80c4 	beq.w	20390 <_vfiprintf_r+0x1ec>
   20208:	9b09      	ldr	r3, [sp, #36]	; 0x24
   2020a:	4453      	add	r3, sl
   2020c:	9309      	str	r3, [sp, #36]	; 0x24
   2020e:	f898 3000 	ldrb.w	r3, [r8]
   20212:	2b00      	cmp	r3, #0
   20214:	f000 80bc 	beq.w	20390 <_vfiprintf_r+0x1ec>
   20218:	2300      	movs	r3, #0
   2021a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   2021e:	9304      	str	r3, [sp, #16]
   20220:	9307      	str	r3, [sp, #28]
   20222:	9205      	str	r2, [sp, #20]
   20224:	9306      	str	r3, [sp, #24]
   20226:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   2022a:	931a      	str	r3, [sp, #104]	; 0x68
   2022c:	2205      	movs	r2, #5
   2022e:	7829      	ldrb	r1, [r5, #0]
   20230:	4860      	ldr	r0, [pc, #384]	; (203b4 <_vfiprintf_r+0x210>)
   20232:	f7fa fdfb 	bl	1ae2c <memchr>
   20236:	f105 0801 	add.w	r8, r5, #1
   2023a:	9b04      	ldr	r3, [sp, #16]
   2023c:	2800      	cmp	r0, #0
   2023e:	d131      	bne.n	202a4 <_vfiprintf_r+0x100>
   20240:	06d9      	lsls	r1, r3, #27
   20242:	bf44      	itt	mi
   20244:	2220      	movmi	r2, #32
   20246:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   2024a:	071a      	lsls	r2, r3, #28
   2024c:	bf44      	itt	mi
   2024e:	222b      	movmi	r2, #43	; 0x2b
   20250:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   20254:	782a      	ldrb	r2, [r5, #0]
   20256:	2a2a      	cmp	r2, #42	; 0x2a
   20258:	d02c      	beq.n	202b4 <_vfiprintf_r+0x110>
   2025a:	2100      	movs	r1, #0
   2025c:	200a      	movs	r0, #10
   2025e:	9a07      	ldr	r2, [sp, #28]
   20260:	46a8      	mov	r8, r5
   20262:	f898 3000 	ldrb.w	r3, [r8]
   20266:	3501      	adds	r5, #1
   20268:	3b30      	subs	r3, #48	; 0x30
   2026a:	2b09      	cmp	r3, #9
   2026c:	d96d      	bls.n	2034a <_vfiprintf_r+0x1a6>
   2026e:	b371      	cbz	r1, 202ce <_vfiprintf_r+0x12a>
   20270:	e026      	b.n	202c0 <_vfiprintf_r+0x11c>
   20272:	4b51      	ldr	r3, [pc, #324]	; (203b8 <_vfiprintf_r+0x214>)
   20274:	429c      	cmp	r4, r3
   20276:	d101      	bne.n	2027c <_vfiprintf_r+0xd8>
   20278:	68b4      	ldr	r4, [r6, #8]
   2027a:	e7a3      	b.n	201c4 <_vfiprintf_r+0x20>
   2027c:	4b4f      	ldr	r3, [pc, #316]	; (203bc <_vfiprintf_r+0x218>)
   2027e:	429c      	cmp	r4, r3
   20280:	bf08      	it	eq
   20282:	68f4      	ldreq	r4, [r6, #12]
   20284:	e79e      	b.n	201c4 <_vfiprintf_r+0x20>
   20286:	4621      	mov	r1, r4
   20288:	4630      	mov	r0, r6
   2028a:	f7fd fd6f 	bl	1dd6c <__swsetup_r>
   2028e:	2800      	cmp	r0, #0
   20290:	d09e      	beq.n	201d0 <_vfiprintf_r+0x2c>
   20292:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   20296:	b01d      	add	sp, #116	; 0x74
   20298:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2029c:	2b25      	cmp	r3, #37	; 0x25
   2029e:	d0a7      	beq.n	201f0 <_vfiprintf_r+0x4c>
   202a0:	46a8      	mov	r8, r5
   202a2:	e7a0      	b.n	201e6 <_vfiprintf_r+0x42>
   202a4:	4a43      	ldr	r2, [pc, #268]	; (203b4 <_vfiprintf_r+0x210>)
   202a6:	4645      	mov	r5, r8
   202a8:	1a80      	subs	r0, r0, r2
   202aa:	fa0b f000 	lsl.w	r0, fp, r0
   202ae:	4318      	orrs	r0, r3
   202b0:	9004      	str	r0, [sp, #16]
   202b2:	e7bb      	b.n	2022c <_vfiprintf_r+0x88>
   202b4:	9a03      	ldr	r2, [sp, #12]
   202b6:	1d11      	adds	r1, r2, #4
   202b8:	6812      	ldr	r2, [r2, #0]
   202ba:	9103      	str	r1, [sp, #12]
   202bc:	2a00      	cmp	r2, #0
   202be:	db01      	blt.n	202c4 <_vfiprintf_r+0x120>
   202c0:	9207      	str	r2, [sp, #28]
   202c2:	e004      	b.n	202ce <_vfiprintf_r+0x12a>
   202c4:	4252      	negs	r2, r2
   202c6:	f043 0302 	orr.w	r3, r3, #2
   202ca:	9207      	str	r2, [sp, #28]
   202cc:	9304      	str	r3, [sp, #16]
   202ce:	f898 3000 	ldrb.w	r3, [r8]
   202d2:	2b2e      	cmp	r3, #46	; 0x2e
   202d4:	d110      	bne.n	202f8 <_vfiprintf_r+0x154>
   202d6:	f898 3001 	ldrb.w	r3, [r8, #1]
   202da:	f108 0101 	add.w	r1, r8, #1
   202de:	2b2a      	cmp	r3, #42	; 0x2a
   202e0:	d137      	bne.n	20352 <_vfiprintf_r+0x1ae>
   202e2:	9b03      	ldr	r3, [sp, #12]
   202e4:	f108 0802 	add.w	r8, r8, #2
   202e8:	1d1a      	adds	r2, r3, #4
   202ea:	681b      	ldr	r3, [r3, #0]
   202ec:	9203      	str	r2, [sp, #12]
   202ee:	2b00      	cmp	r3, #0
   202f0:	bfb8      	it	lt
   202f2:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   202f6:	9305      	str	r3, [sp, #20]
   202f8:	4d31      	ldr	r5, [pc, #196]	; (203c0 <_vfiprintf_r+0x21c>)
   202fa:	2203      	movs	r2, #3
   202fc:	f898 1000 	ldrb.w	r1, [r8]
   20300:	4628      	mov	r0, r5
   20302:	f7fa fd93 	bl	1ae2c <memchr>
   20306:	b140      	cbz	r0, 2031a <_vfiprintf_r+0x176>
   20308:	2340      	movs	r3, #64	; 0x40
   2030a:	1b40      	subs	r0, r0, r5
   2030c:	fa03 f000 	lsl.w	r0, r3, r0
   20310:	9b04      	ldr	r3, [sp, #16]
   20312:	f108 0801 	add.w	r8, r8, #1
   20316:	4303      	orrs	r3, r0
   20318:	9304      	str	r3, [sp, #16]
   2031a:	f898 1000 	ldrb.w	r1, [r8]
   2031e:	2206      	movs	r2, #6
   20320:	4828      	ldr	r0, [pc, #160]	; (203c4 <_vfiprintf_r+0x220>)
   20322:	f108 0701 	add.w	r7, r8, #1
   20326:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   2032a:	f7fa fd7f 	bl	1ae2c <memchr>
   2032e:	2800      	cmp	r0, #0
   20330:	d034      	beq.n	2039c <_vfiprintf_r+0x1f8>
   20332:	4b25      	ldr	r3, [pc, #148]	; (203c8 <_vfiprintf_r+0x224>)
   20334:	bb03      	cbnz	r3, 20378 <_vfiprintf_r+0x1d4>
   20336:	9b03      	ldr	r3, [sp, #12]
   20338:	3307      	adds	r3, #7
   2033a:	f023 0307 	bic.w	r3, r3, #7
   2033e:	3308      	adds	r3, #8
   20340:	9303      	str	r3, [sp, #12]
   20342:	9b09      	ldr	r3, [sp, #36]	; 0x24
   20344:	444b      	add	r3, r9
   20346:	9309      	str	r3, [sp, #36]	; 0x24
   20348:	e74c      	b.n	201e4 <_vfiprintf_r+0x40>
   2034a:	fb00 3202 	mla	r2, r0, r2, r3
   2034e:	2101      	movs	r1, #1
   20350:	e786      	b.n	20260 <_vfiprintf_r+0xbc>
   20352:	2300      	movs	r3, #0
   20354:	250a      	movs	r5, #10
   20356:	4618      	mov	r0, r3
   20358:	9305      	str	r3, [sp, #20]
   2035a:	4688      	mov	r8, r1
   2035c:	f898 2000 	ldrb.w	r2, [r8]
   20360:	3101      	adds	r1, #1
   20362:	3a30      	subs	r2, #48	; 0x30
   20364:	2a09      	cmp	r2, #9
   20366:	d903      	bls.n	20370 <_vfiprintf_r+0x1cc>
   20368:	2b00      	cmp	r3, #0
   2036a:	d0c5      	beq.n	202f8 <_vfiprintf_r+0x154>
   2036c:	9005      	str	r0, [sp, #20]
   2036e:	e7c3      	b.n	202f8 <_vfiprintf_r+0x154>
   20370:	fb05 2000 	mla	r0, r5, r0, r2
   20374:	2301      	movs	r3, #1
   20376:	e7f0      	b.n	2035a <_vfiprintf_r+0x1b6>
   20378:	ab03      	add	r3, sp, #12
   2037a:	9300      	str	r3, [sp, #0]
   2037c:	4622      	mov	r2, r4
   2037e:	4b13      	ldr	r3, [pc, #76]	; (203cc <_vfiprintf_r+0x228>)
   20380:	a904      	add	r1, sp, #16
   20382:	4630      	mov	r0, r6
   20384:	f7fb f97e 	bl	1b684 <_printf_float>
   20388:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   2038c:	4681      	mov	r9, r0
   2038e:	d1d8      	bne.n	20342 <_vfiprintf_r+0x19e>
   20390:	89a3      	ldrh	r3, [r4, #12]
   20392:	065b      	lsls	r3, r3, #25
   20394:	f53f af7d 	bmi.w	20292 <_vfiprintf_r+0xee>
   20398:	9809      	ldr	r0, [sp, #36]	; 0x24
   2039a:	e77c      	b.n	20296 <_vfiprintf_r+0xf2>
   2039c:	ab03      	add	r3, sp, #12
   2039e:	9300      	str	r3, [sp, #0]
   203a0:	4622      	mov	r2, r4
   203a2:	4b0a      	ldr	r3, [pc, #40]	; (203cc <_vfiprintf_r+0x228>)
   203a4:	a904      	add	r1, sp, #16
   203a6:	4630      	mov	r0, r6
   203a8:	f7fb fc1c 	bl	1bbe4 <_printf_i>
   203ac:	e7ec      	b.n	20388 <_vfiprintf_r+0x1e4>
   203ae:	bf00      	nop
   203b0:	0002236c 	.word	0x0002236c
   203b4:	0002274c 	.word	0x0002274c
   203b8:	0002238c 	.word	0x0002238c
   203bc:	0002234c 	.word	0x0002234c
   203c0:	00022752 	.word	0x00022752
   203c4:	00022756 	.word	0x00022756
   203c8:	0001b685 	.word	0x0001b685
   203cc:	00020181 	.word	0x00020181

000203d0 <__svfiscanf_r>:
__svfscanf_r():
   203d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   203d4:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   203d8:	9301      	str	r3, [sp, #4]
   203da:	2300      	movs	r3, #0
   203dc:	4606      	mov	r6, r0
   203de:	460c      	mov	r4, r1
   203e0:	4692      	mov	sl, r2
   203e2:	270a      	movs	r7, #10
   203e4:	9346      	str	r3, [sp, #280]	; 0x118
   203e6:	9347      	str	r3, [sp, #284]	; 0x11c
   203e8:	4b9f      	ldr	r3, [pc, #636]	; (20668 <__svfiscanf_r+0x298>)
   203ea:	f10d 080c 	add.w	r8, sp, #12
   203ee:	93a2      	str	r3, [sp, #648]	; 0x288
   203f0:	4b9e      	ldr	r3, [pc, #632]	; (2066c <__svfiscanf_r+0x29c>)
   203f2:	f8df 927c 	ldr.w	r9, [pc, #636]	; 20670 <__svfiscanf_r+0x2a0>
   203f6:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   203fa:	93a3      	str	r3, [sp, #652]	; 0x28c
   203fc:	f89a 3000 	ldrb.w	r3, [sl]
   20400:	2b00      	cmp	r3, #0
   20402:	f000 812f 	beq.w	20664 <__svfiscanf_r+0x294>
   20406:	f7fa fc7d 	bl	1ad04 <__locale_ctype_ptr>
   2040a:	f89a b000 	ldrb.w	fp, [sl]
   2040e:	4458      	add	r0, fp
   20410:	7843      	ldrb	r3, [r0, #1]
   20412:	f013 0308 	ands.w	r3, r3, #8
   20416:	d143      	bne.n	204a0 <__svfiscanf_r+0xd0>
   20418:	f1bb 0f25 	cmp.w	fp, #37	; 0x25
   2041c:	f10a 0501 	add.w	r5, sl, #1
   20420:	f040 8099 	bne.w	20556 <__svfiscanf_r+0x186>
   20424:	9345      	str	r3, [sp, #276]	; 0x114
   20426:	9343      	str	r3, [sp, #268]	; 0x10c
   20428:	f89a 3001 	ldrb.w	r3, [sl, #1]
   2042c:	2b2a      	cmp	r3, #42	; 0x2a
   2042e:	d103      	bne.n	20438 <__svfiscanf_r+0x68>
   20430:	2310      	movs	r3, #16
   20432:	f10a 0502 	add.w	r5, sl, #2
   20436:	9343      	str	r3, [sp, #268]	; 0x10c
   20438:	7829      	ldrb	r1, [r5, #0]
   2043a:	46aa      	mov	sl, r5
   2043c:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   20440:	2a09      	cmp	r2, #9
   20442:	f105 0501 	add.w	r5, r5, #1
   20446:	d941      	bls.n	204cc <__svfiscanf_r+0xfc>
   20448:	2203      	movs	r2, #3
   2044a:	4889      	ldr	r0, [pc, #548]	; (20670 <__svfiscanf_r+0x2a0>)
   2044c:	f7fa fcee 	bl	1ae2c <memchr>
   20450:	b138      	cbz	r0, 20462 <__svfiscanf_r+0x92>
   20452:	eba0 0309 	sub.w	r3, r0, r9
   20456:	2001      	movs	r0, #1
   20458:	46aa      	mov	sl, r5
   2045a:	4098      	lsls	r0, r3
   2045c:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   2045e:	4318      	orrs	r0, r3
   20460:	9043      	str	r0, [sp, #268]	; 0x10c
   20462:	f89a 3000 	ldrb.w	r3, [sl]
   20466:	f10a 0501 	add.w	r5, sl, #1
   2046a:	2b67      	cmp	r3, #103	; 0x67
   2046c:	d84a      	bhi.n	20504 <__svfiscanf_r+0x134>
   2046e:	2b65      	cmp	r3, #101	; 0x65
   20470:	f080 80b7 	bcs.w	205e2 <__svfiscanf_r+0x212>
   20474:	2b47      	cmp	r3, #71	; 0x47
   20476:	d82f      	bhi.n	204d8 <__svfiscanf_r+0x108>
   20478:	2b45      	cmp	r3, #69	; 0x45
   2047a:	f080 80b2 	bcs.w	205e2 <__svfiscanf_r+0x212>
   2047e:	2b00      	cmp	r3, #0
   20480:	f000 8082 	beq.w	20588 <__svfiscanf_r+0x1b8>
   20484:	2b25      	cmp	r3, #37	; 0x25
   20486:	d066      	beq.n	20556 <__svfiscanf_r+0x186>
   20488:	2303      	movs	r3, #3
   2048a:	9744      	str	r7, [sp, #272]	; 0x110
   2048c:	9349      	str	r3, [sp, #292]	; 0x124
   2048e:	e045      	b.n	2051c <__svfiscanf_r+0x14c>
   20490:	9947      	ldr	r1, [sp, #284]	; 0x11c
   20492:	3301      	adds	r3, #1
   20494:	3101      	adds	r1, #1
   20496:	9147      	str	r1, [sp, #284]	; 0x11c
   20498:	6861      	ldr	r1, [r4, #4]
   2049a:	6023      	str	r3, [r4, #0]
   2049c:	3901      	subs	r1, #1
   2049e:	6061      	str	r1, [r4, #4]
   204a0:	6863      	ldr	r3, [r4, #4]
   204a2:	2b00      	cmp	r3, #0
   204a4:	dd0b      	ble.n	204be <__svfiscanf_r+0xee>
   204a6:	f7fa fc2d 	bl	1ad04 <__locale_ctype_ptr>
   204aa:	6823      	ldr	r3, [r4, #0]
   204ac:	7819      	ldrb	r1, [r3, #0]
   204ae:	4408      	add	r0, r1
   204b0:	7841      	ldrb	r1, [r0, #1]
   204b2:	070d      	lsls	r5, r1, #28
   204b4:	d4ec      	bmi.n	20490 <__svfiscanf_r+0xc0>
   204b6:	f10a 0501 	add.w	r5, sl, #1
   204ba:	46aa      	mov	sl, r5
   204bc:	e79e      	b.n	203fc <__svfiscanf_r+0x2c>
   204be:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   204c0:	4621      	mov	r1, r4
   204c2:	4630      	mov	r0, r6
   204c4:	4798      	blx	r3
   204c6:	2800      	cmp	r0, #0
   204c8:	d0ed      	beq.n	204a6 <__svfiscanf_r+0xd6>
   204ca:	e7f4      	b.n	204b6 <__svfiscanf_r+0xe6>
   204cc:	9b45      	ldr	r3, [sp, #276]	; 0x114
   204ce:	fb07 1303 	mla	r3, r7, r3, r1
   204d2:	3b30      	subs	r3, #48	; 0x30
   204d4:	9345      	str	r3, [sp, #276]	; 0x114
   204d6:	e7af      	b.n	20438 <__svfiscanf_r+0x68>
   204d8:	2b5b      	cmp	r3, #91	; 0x5b
   204da:	d061      	beq.n	205a0 <__svfiscanf_r+0x1d0>
   204dc:	d80c      	bhi.n	204f8 <__svfiscanf_r+0x128>
   204de:	2b58      	cmp	r3, #88	; 0x58
   204e0:	d1d2      	bne.n	20488 <__svfiscanf_r+0xb8>
   204e2:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   204e4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   204e8:	9243      	str	r2, [sp, #268]	; 0x10c
   204ea:	2210      	movs	r2, #16
   204ec:	9244      	str	r2, [sp, #272]	; 0x110
   204ee:	2b6f      	cmp	r3, #111	; 0x6f
   204f0:	bfb4      	ite	lt
   204f2:	2303      	movlt	r3, #3
   204f4:	2304      	movge	r3, #4
   204f6:	e010      	b.n	2051a <__svfiscanf_r+0x14a>
   204f8:	2b63      	cmp	r3, #99	; 0x63
   204fa:	d05c      	beq.n	205b6 <__svfiscanf_r+0x1e6>
   204fc:	2b64      	cmp	r3, #100	; 0x64
   204fe:	d1c3      	bne.n	20488 <__svfiscanf_r+0xb8>
   20500:	9744      	str	r7, [sp, #272]	; 0x110
   20502:	e7f4      	b.n	204ee <__svfiscanf_r+0x11e>
   20504:	2b70      	cmp	r3, #112	; 0x70
   20506:	d042      	beq.n	2058e <__svfiscanf_r+0x1be>
   20508:	d81d      	bhi.n	20546 <__svfiscanf_r+0x176>
   2050a:	2b6e      	cmp	r3, #110	; 0x6e
   2050c:	d059      	beq.n	205c2 <__svfiscanf_r+0x1f2>
   2050e:	d843      	bhi.n	20598 <__svfiscanf_r+0x1c8>
   20510:	2b69      	cmp	r3, #105	; 0x69
   20512:	d1b9      	bne.n	20488 <__svfiscanf_r+0xb8>
   20514:	2300      	movs	r3, #0
   20516:	9344      	str	r3, [sp, #272]	; 0x110
   20518:	2303      	movs	r3, #3
   2051a:	9349      	str	r3, [sp, #292]	; 0x124
   2051c:	6863      	ldr	r3, [r4, #4]
   2051e:	2b00      	cmp	r3, #0
   20520:	dd61      	ble.n	205e6 <__svfiscanf_r+0x216>
   20522:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   20524:	0659      	lsls	r1, r3, #25
   20526:	d56f      	bpl.n	20608 <__svfiscanf_r+0x238>
   20528:	9b49      	ldr	r3, [sp, #292]	; 0x124
   2052a:	2b02      	cmp	r3, #2
   2052c:	dc7c      	bgt.n	20628 <__svfiscanf_r+0x258>
   2052e:	ab01      	add	r3, sp, #4
   20530:	4622      	mov	r2, r4
   20532:	a943      	add	r1, sp, #268	; 0x10c
   20534:	4630      	mov	r0, r6
   20536:	f000 f8c7 	bl	206c8 <_scanf_chars>
   2053a:	2801      	cmp	r0, #1
   2053c:	f000 8092 	beq.w	20664 <__svfiscanf_r+0x294>
   20540:	2802      	cmp	r0, #2
   20542:	d1ba      	bne.n	204ba <__svfiscanf_r+0xea>
   20544:	e01d      	b.n	20582 <__svfiscanf_r+0x1b2>
   20546:	2b75      	cmp	r3, #117	; 0x75
   20548:	d0da      	beq.n	20500 <__svfiscanf_r+0x130>
   2054a:	2b78      	cmp	r3, #120	; 0x78
   2054c:	d0c9      	beq.n	204e2 <__svfiscanf_r+0x112>
   2054e:	2b73      	cmp	r3, #115	; 0x73
   20550:	d19a      	bne.n	20488 <__svfiscanf_r+0xb8>
   20552:	2302      	movs	r3, #2
   20554:	e7e1      	b.n	2051a <__svfiscanf_r+0x14a>
   20556:	6863      	ldr	r3, [r4, #4]
   20558:	2b00      	cmp	r3, #0
   2055a:	dd0c      	ble.n	20576 <__svfiscanf_r+0x1a6>
   2055c:	6823      	ldr	r3, [r4, #0]
   2055e:	781a      	ldrb	r2, [r3, #0]
   20560:	4593      	cmp	fp, r2
   20562:	d17f      	bne.n	20664 <__svfiscanf_r+0x294>
   20564:	3301      	adds	r3, #1
   20566:	6862      	ldr	r2, [r4, #4]
   20568:	6023      	str	r3, [r4, #0]
   2056a:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   2056c:	3a01      	subs	r2, #1
   2056e:	3301      	adds	r3, #1
   20570:	6062      	str	r2, [r4, #4]
   20572:	9347      	str	r3, [sp, #284]	; 0x11c
   20574:	e7a1      	b.n	204ba <__svfiscanf_r+0xea>
   20576:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   20578:	4621      	mov	r1, r4
   2057a:	4630      	mov	r0, r6
   2057c:	4798      	blx	r3
   2057e:	2800      	cmp	r0, #0
   20580:	d0ec      	beq.n	2055c <__svfiscanf_r+0x18c>
   20582:	9846      	ldr	r0, [sp, #280]	; 0x118
   20584:	2800      	cmp	r0, #0
   20586:	d163      	bne.n	20650 <__svfiscanf_r+0x280>
   20588:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   2058c:	e066      	b.n	2065c <__svfiscanf_r+0x28c>
   2058e:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   20590:	f042 0220 	orr.w	r2, r2, #32
   20594:	9243      	str	r2, [sp, #268]	; 0x10c
   20596:	e7a4      	b.n	204e2 <__svfiscanf_r+0x112>
   20598:	2308      	movs	r3, #8
   2059a:	9344      	str	r3, [sp, #272]	; 0x110
   2059c:	2304      	movs	r3, #4
   2059e:	e7bc      	b.n	2051a <__svfiscanf_r+0x14a>
   205a0:	4629      	mov	r1, r5
   205a2:	4640      	mov	r0, r8
   205a4:	f000 f9fc 	bl	209a0 <__sccl>
   205a8:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   205aa:	4605      	mov	r5, r0
   205ac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   205b0:	9343      	str	r3, [sp, #268]	; 0x10c
   205b2:	2301      	movs	r3, #1
   205b4:	e7b1      	b.n	2051a <__svfiscanf_r+0x14a>
   205b6:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   205b8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   205bc:	9343      	str	r3, [sp, #268]	; 0x10c
   205be:	2300      	movs	r3, #0
   205c0:	e7ab      	b.n	2051a <__svfiscanf_r+0x14a>
   205c2:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   205c4:	06d0      	lsls	r0, r2, #27
   205c6:	f53f af78 	bmi.w	204ba <__svfiscanf_r+0xea>
   205ca:	f012 0f01 	tst.w	r2, #1
   205ce:	9a01      	ldr	r2, [sp, #4]
   205d0:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   205d2:	f102 0104 	add.w	r1, r2, #4
   205d6:	9101      	str	r1, [sp, #4]
   205d8:	6812      	ldr	r2, [r2, #0]
   205da:	bf14      	ite	ne
   205dc:	8013      	strhne	r3, [r2, #0]
   205de:	6013      	streq	r3, [r2, #0]
   205e0:	e76b      	b.n	204ba <__svfiscanf_r+0xea>
   205e2:	2305      	movs	r3, #5
   205e4:	e799      	b.n	2051a <__svfiscanf_r+0x14a>
   205e6:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   205e8:	4621      	mov	r1, r4
   205ea:	4630      	mov	r0, r6
   205ec:	4798      	blx	r3
   205ee:	2800      	cmp	r0, #0
   205f0:	d097      	beq.n	20522 <__svfiscanf_r+0x152>
   205f2:	e7c6      	b.n	20582 <__svfiscanf_r+0x1b2>
   205f4:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   205f6:	3201      	adds	r2, #1
   205f8:	9247      	str	r2, [sp, #284]	; 0x11c
   205fa:	6862      	ldr	r2, [r4, #4]
   205fc:	3a01      	subs	r2, #1
   205fe:	2a00      	cmp	r2, #0
   20600:	6062      	str	r2, [r4, #4]
   20602:	dd0a      	ble.n	2061a <__svfiscanf_r+0x24a>
   20604:	3301      	adds	r3, #1
   20606:	6023      	str	r3, [r4, #0]
   20608:	f7fa fb7c 	bl	1ad04 <__locale_ctype_ptr>
   2060c:	6823      	ldr	r3, [r4, #0]
   2060e:	781a      	ldrb	r2, [r3, #0]
   20610:	4410      	add	r0, r2
   20612:	7842      	ldrb	r2, [r0, #1]
   20614:	0712      	lsls	r2, r2, #28
   20616:	d4ed      	bmi.n	205f4 <__svfiscanf_r+0x224>
   20618:	e786      	b.n	20528 <__svfiscanf_r+0x158>
   2061a:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   2061c:	4621      	mov	r1, r4
   2061e:	4630      	mov	r0, r6
   20620:	4798      	blx	r3
   20622:	2800      	cmp	r0, #0
   20624:	d0f0      	beq.n	20608 <__svfiscanf_r+0x238>
   20626:	e7ac      	b.n	20582 <__svfiscanf_r+0x1b2>
   20628:	2b04      	cmp	r3, #4
   2062a:	dc06      	bgt.n	2063a <__svfiscanf_r+0x26a>
   2062c:	ab01      	add	r3, sp, #4
   2062e:	4622      	mov	r2, r4
   20630:	a943      	add	r1, sp, #268	; 0x10c
   20632:	4630      	mov	r0, r6
   20634:	f000 f8ac 	bl	20790 <_scanf_i>
   20638:	e77f      	b.n	2053a <__svfiscanf_r+0x16a>
   2063a:	4b0e      	ldr	r3, [pc, #56]	; (20674 <__svfiscanf_r+0x2a4>)
   2063c:	2b00      	cmp	r3, #0
   2063e:	f43f af3c 	beq.w	204ba <__svfiscanf_r+0xea>
   20642:	ab01      	add	r3, sp, #4
   20644:	4622      	mov	r2, r4
   20646:	a943      	add	r1, sp, #268	; 0x10c
   20648:	4630      	mov	r0, r6
   2064a:	f7fb fbeb 	bl	1be24 <_scanf_float>
   2064e:	e774      	b.n	2053a <__svfiscanf_r+0x16a>
   20650:	89a3      	ldrh	r3, [r4, #12]
   20652:	f013 0f40 	tst.w	r3, #64	; 0x40
   20656:	bf18      	it	ne
   20658:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   2065c:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   20660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20664:	9846      	ldr	r0, [sp, #280]	; 0x118
   20666:	e7f9      	b.n	2065c <__svfiscanf_r+0x28c>
   20668:	00020bbd 	.word	0x00020bbd
   2066c:	0001c3e9 	.word	0x0001c3e9
   20670:	00022752 	.word	0x00022752
   20674:	0001be25 	.word	0x0001be25

00020678 <_vfiscanf_r>:
_vfscanf_r():
   20678:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2067c:	460c      	mov	r4, r1
   2067e:	4616      	mov	r6, r2
   20680:	461f      	mov	r7, r3
   20682:	4605      	mov	r5, r0
   20684:	b118      	cbz	r0, 2068e <_vfiscanf_r+0x16>
   20686:	6983      	ldr	r3, [r0, #24]
   20688:	b90b      	cbnz	r3, 2068e <_vfiscanf_r+0x16>
   2068a:	f7fa f991 	bl	1a9b0 <__sinit>
   2068e:	4b0b      	ldr	r3, [pc, #44]	; (206bc <_vfiscanf_r+0x44>)
   20690:	429c      	cmp	r4, r3
   20692:	d108      	bne.n	206a6 <_vfiscanf_r+0x2e>
   20694:	686c      	ldr	r4, [r5, #4]
   20696:	463b      	mov	r3, r7
   20698:	4632      	mov	r2, r6
   2069a:	4621      	mov	r1, r4
   2069c:	4628      	mov	r0, r5
   2069e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   206a2:	f7ff be95 	b.w	203d0 <__svfiscanf_r>
   206a6:	4b06      	ldr	r3, [pc, #24]	; (206c0 <_vfiscanf_r+0x48>)
   206a8:	429c      	cmp	r4, r3
   206aa:	d101      	bne.n	206b0 <_vfiscanf_r+0x38>
   206ac:	68ac      	ldr	r4, [r5, #8]
   206ae:	e7f2      	b.n	20696 <_vfiscanf_r+0x1e>
   206b0:	4b04      	ldr	r3, [pc, #16]	; (206c4 <_vfiscanf_r+0x4c>)
   206b2:	429c      	cmp	r4, r3
   206b4:	bf08      	it	eq
   206b6:	68ec      	ldreq	r4, [r5, #12]
   206b8:	e7ed      	b.n	20696 <_vfiscanf_r+0x1e>
   206ba:	bf00      	nop
   206bc:	0002236c 	.word	0x0002236c
   206c0:	0002238c 	.word	0x0002238c
   206c4:	0002234c 	.word	0x0002234c

000206c8 <_scanf_chars>:
_scanf_chars():
   206c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   206cc:	4615      	mov	r5, r2
   206ce:	688a      	ldr	r2, [r1, #8]
   206d0:	4680      	mov	r8, r0
   206d2:	460c      	mov	r4, r1
   206d4:	b932      	cbnz	r2, 206e4 <_scanf_chars+0x1c>
   206d6:	698a      	ldr	r2, [r1, #24]
   206d8:	2a00      	cmp	r2, #0
   206da:	bf0c      	ite	eq
   206dc:	2201      	moveq	r2, #1
   206de:	f04f 32ff 	movne.w	r2, #4294967295	; 0xffffffff
   206e2:	608a      	str	r2, [r1, #8]
   206e4:	2600      	movs	r6, #0
   206e6:	6822      	ldr	r2, [r4, #0]
   206e8:	06d1      	lsls	r1, r2, #27
   206ea:	bf5f      	itttt	pl
   206ec:	681a      	ldrpl	r2, [r3, #0]
   206ee:	1d11      	addpl	r1, r2, #4
   206f0:	6019      	strpl	r1, [r3, #0]
   206f2:	6817      	ldrpl	r7, [r2, #0]
   206f4:	69a3      	ldr	r3, [r4, #24]
   206f6:	b1db      	cbz	r3, 20730 <_scanf_chars+0x68>
   206f8:	2b01      	cmp	r3, #1
   206fa:	d107      	bne.n	2070c <_scanf_chars+0x44>
   206fc:	682b      	ldr	r3, [r5, #0]
   206fe:	6962      	ldr	r2, [r4, #20]
   20700:	781b      	ldrb	r3, [r3, #0]
   20702:	5cd3      	ldrb	r3, [r2, r3]
   20704:	b9a3      	cbnz	r3, 20730 <_scanf_chars+0x68>
   20706:	2e00      	cmp	r6, #0
   20708:	d131      	bne.n	2076e <_scanf_chars+0xa6>
   2070a:	e006      	b.n	2071a <_scanf_chars+0x52>
   2070c:	2b02      	cmp	r3, #2
   2070e:	d007      	beq.n	20720 <_scanf_chars+0x58>
   20710:	2e00      	cmp	r6, #0
   20712:	d12c      	bne.n	2076e <_scanf_chars+0xa6>
   20714:	69a3      	ldr	r3, [r4, #24]
   20716:	2b01      	cmp	r3, #1
   20718:	d129      	bne.n	2076e <_scanf_chars+0xa6>
   2071a:	2001      	movs	r0, #1
   2071c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   20720:	f7fa faf0 	bl	1ad04 <__locale_ctype_ptr>
   20724:	682b      	ldr	r3, [r5, #0]
   20726:	781b      	ldrb	r3, [r3, #0]
   20728:	4418      	add	r0, r3
   2072a:	7843      	ldrb	r3, [r0, #1]
   2072c:	071b      	lsls	r3, r3, #28
   2072e:	d4ef      	bmi.n	20710 <_scanf_chars+0x48>
   20730:	6823      	ldr	r3, [r4, #0]
   20732:	3601      	adds	r6, #1
   20734:	06da      	lsls	r2, r3, #27
   20736:	bf5e      	ittt	pl
   20738:	682b      	ldrpl	r3, [r5, #0]
   2073a:	781b      	ldrbpl	r3, [r3, #0]
   2073c:	703b      	strbpl	r3, [r7, #0]
   2073e:	682a      	ldr	r2, [r5, #0]
   20740:	686b      	ldr	r3, [r5, #4]
   20742:	f102 0201 	add.w	r2, r2, #1
   20746:	602a      	str	r2, [r5, #0]
   20748:	68a2      	ldr	r2, [r4, #8]
   2074a:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   2074e:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
   20752:	606b      	str	r3, [r5, #4]
   20754:	bf58      	it	pl
   20756:	3701      	addpl	r7, #1
   20758:	60a2      	str	r2, [r4, #8]
   2075a:	b142      	cbz	r2, 2076e <_scanf_chars+0xa6>
   2075c:	2b00      	cmp	r3, #0
   2075e:	dcc9      	bgt.n	206f4 <_scanf_chars+0x2c>
   20760:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   20764:	4629      	mov	r1, r5
   20766:	4640      	mov	r0, r8
   20768:	4798      	blx	r3
   2076a:	2800      	cmp	r0, #0
   2076c:	d0c2      	beq.n	206f4 <_scanf_chars+0x2c>
   2076e:	6823      	ldr	r3, [r4, #0]
   20770:	f013 0310 	ands.w	r3, r3, #16
   20774:	d105      	bne.n	20782 <_scanf_chars+0xba>
   20776:	68e2      	ldr	r2, [r4, #12]
   20778:	3201      	adds	r2, #1
   2077a:	60e2      	str	r2, [r4, #12]
   2077c:	69a2      	ldr	r2, [r4, #24]
   2077e:	b102      	cbz	r2, 20782 <_scanf_chars+0xba>
   20780:	703b      	strb	r3, [r7, #0]
   20782:	6923      	ldr	r3, [r4, #16]
   20784:	2000      	movs	r0, #0
   20786:	441e      	add	r6, r3
   20788:	6126      	str	r6, [r4, #16]
   2078a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2078e:	Address 0x000000000002078e is out of bounds.


00020790 <_scanf_i>:
_scanf_i():
   20790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20794:	460c      	mov	r4, r1
   20796:	469a      	mov	sl, r3
   20798:	4b74      	ldr	r3, [pc, #464]	; (2096c <_scanf_i+0x1dc>)
   2079a:	b087      	sub	sp, #28
   2079c:	4683      	mov	fp, r0
   2079e:	4616      	mov	r6, r2
   207a0:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   207a4:	ab03      	add	r3, sp, #12
   207a6:	68a7      	ldr	r7, [r4, #8]
   207a8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
   207ac:	4b70      	ldr	r3, [pc, #448]	; (20970 <_scanf_i+0x1e0>)
   207ae:	69a1      	ldr	r1, [r4, #24]
   207b0:	4a70      	ldr	r2, [pc, #448]	; (20974 <_scanf_i+0x1e4>)
   207b2:	f104 091c 	add.w	r9, r4, #28
   207b6:	2903      	cmp	r1, #3
   207b8:	bf18      	it	ne
   207ba:	461a      	movne	r2, r3
   207bc:	1e7b      	subs	r3, r7, #1
   207be:	f5b3 7fae 	cmp.w	r3, #348	; 0x15c
   207c2:	bf84      	itt	hi
   207c4:	f240 135d 	movwhi	r3, #349	; 0x15d
   207c8:	60a3      	strhi	r3, [r4, #8]
   207ca:	6823      	ldr	r3, [r4, #0]
   207cc:	bf88      	it	hi
   207ce:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
   207d2:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
   207d6:	6023      	str	r3, [r4, #0]
   207d8:	bf98      	it	ls
   207da:	2700      	movls	r7, #0
   207dc:	464b      	mov	r3, r9
   207de:	f04f 0800 	mov.w	r8, #0
   207e2:	9200      	str	r2, [sp, #0]
   207e4:	bf88      	it	hi
   207e6:	197f      	addhi	r7, r7, r5
   207e8:	6831      	ldr	r1, [r6, #0]
   207ea:	9301      	str	r3, [sp, #4]
   207ec:	ab03      	add	r3, sp, #12
   207ee:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
   207f2:	2202      	movs	r2, #2
   207f4:	7809      	ldrb	r1, [r1, #0]
   207f6:	f7fa fb19 	bl	1ae2c <memchr>
   207fa:	9b01      	ldr	r3, [sp, #4]
   207fc:	b328      	cbz	r0, 2084a <_scanf_i+0xba>
   207fe:	f1b8 0f01 	cmp.w	r8, #1
   20802:	d156      	bne.n	208b2 <_scanf_i+0x122>
   20804:	6862      	ldr	r2, [r4, #4]
   20806:	b92a      	cbnz	r2, 20814 <_scanf_i+0x84>
   20808:	2208      	movs	r2, #8
   2080a:	6062      	str	r2, [r4, #4]
   2080c:	6822      	ldr	r2, [r4, #0]
   2080e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   20812:	6022      	str	r2, [r4, #0]
   20814:	6822      	ldr	r2, [r4, #0]
   20816:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
   2081a:	6022      	str	r2, [r4, #0]
   2081c:	68a2      	ldr	r2, [r4, #8]
   2081e:	1e51      	subs	r1, r2, #1
   20820:	60a1      	str	r1, [r4, #8]
   20822:	b192      	cbz	r2, 2084a <_scanf_i+0xba>
   20824:	6832      	ldr	r2, [r6, #0]
   20826:	1c5d      	adds	r5, r3, #1
   20828:	1c51      	adds	r1, r2, #1
   2082a:	6031      	str	r1, [r6, #0]
   2082c:	7812      	ldrb	r2, [r2, #0]
   2082e:	701a      	strb	r2, [r3, #0]
   20830:	6873      	ldr	r3, [r6, #4]
   20832:	3b01      	subs	r3, #1
   20834:	2b00      	cmp	r3, #0
   20836:	6073      	str	r3, [r6, #4]
   20838:	dc06      	bgt.n	20848 <_scanf_i+0xb8>
   2083a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   2083e:	4631      	mov	r1, r6
   20840:	4658      	mov	r0, fp
   20842:	4798      	blx	r3
   20844:	2800      	cmp	r0, #0
   20846:	d177      	bne.n	20938 <_scanf_i+0x1a8>
   20848:	462b      	mov	r3, r5
   2084a:	f108 0801 	add.w	r8, r8, #1
   2084e:	f1b8 0f03 	cmp.w	r8, #3
   20852:	d1c9      	bne.n	207e8 <_scanf_i+0x58>
   20854:	6862      	ldr	r2, [r4, #4]
   20856:	b90a      	cbnz	r2, 2085c <_scanf_i+0xcc>
   20858:	220a      	movs	r2, #10
   2085a:	6062      	str	r2, [r4, #4]
   2085c:	6862      	ldr	r2, [r4, #4]
   2085e:	4946      	ldr	r1, [pc, #280]	; (20978 <_scanf_i+0x1e8>)
   20860:	6960      	ldr	r0, [r4, #20]
   20862:	1a89      	subs	r1, r1, r2
   20864:	9301      	str	r3, [sp, #4]
   20866:	f000 f89b 	bl	209a0 <__sccl>
   2086a:	9b01      	ldr	r3, [sp, #4]
   2086c:	f04f 0800 	mov.w	r8, #0
   20870:	461d      	mov	r5, r3
   20872:	68a3      	ldr	r3, [r4, #8]
   20874:	2b00      	cmp	r3, #0
   20876:	d039      	beq.n	208ec <_scanf_i+0x15c>
   20878:	6831      	ldr	r1, [r6, #0]
   2087a:	6960      	ldr	r0, [r4, #20]
   2087c:	780a      	ldrb	r2, [r1, #0]
   2087e:	5c80      	ldrb	r0, [r0, r2]
   20880:	2800      	cmp	r0, #0
   20882:	d033      	beq.n	208ec <_scanf_i+0x15c>
   20884:	2a30      	cmp	r2, #48	; 0x30
   20886:	6822      	ldr	r2, [r4, #0]
   20888:	d121      	bne.n	208ce <_scanf_i+0x13e>
   2088a:	0510      	lsls	r0, r2, #20
   2088c:	d51f      	bpl.n	208ce <_scanf_i+0x13e>
   2088e:	f108 0801 	add.w	r8, r8, #1
   20892:	b117      	cbz	r7, 2089a <_scanf_i+0x10a>
   20894:	3301      	adds	r3, #1
   20896:	3f01      	subs	r7, #1
   20898:	60a3      	str	r3, [r4, #8]
   2089a:	6873      	ldr	r3, [r6, #4]
   2089c:	3b01      	subs	r3, #1
   2089e:	2b00      	cmp	r3, #0
   208a0:	6073      	str	r3, [r6, #4]
   208a2:	dd1c      	ble.n	208de <_scanf_i+0x14e>
   208a4:	6833      	ldr	r3, [r6, #0]
   208a6:	3301      	adds	r3, #1
   208a8:	6033      	str	r3, [r6, #0]
   208aa:	68a3      	ldr	r3, [r4, #8]
   208ac:	3b01      	subs	r3, #1
   208ae:	60a3      	str	r3, [r4, #8]
   208b0:	e7df      	b.n	20872 <_scanf_i+0xe2>
   208b2:	f1b8 0f02 	cmp.w	r8, #2
   208b6:	d1b1      	bne.n	2081c <_scanf_i+0x8c>
   208b8:	6822      	ldr	r2, [r4, #0]
   208ba:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
   208be:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   208c2:	d1c2      	bne.n	2084a <_scanf_i+0xba>
   208c4:	2110      	movs	r1, #16
   208c6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   208ca:	6061      	str	r1, [r4, #4]
   208cc:	e7a5      	b.n	2081a <_scanf_i+0x8a>
   208ce:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
   208d2:	6022      	str	r2, [r4, #0]
   208d4:	780b      	ldrb	r3, [r1, #0]
   208d6:	3501      	adds	r5, #1
   208d8:	f805 3c01 	strb.w	r3, [r5, #-1]
   208dc:	e7dd      	b.n	2089a <_scanf_i+0x10a>
   208de:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   208e2:	4631      	mov	r1, r6
   208e4:	4658      	mov	r0, fp
   208e6:	4798      	blx	r3
   208e8:	2800      	cmp	r0, #0
   208ea:	d0de      	beq.n	208aa <_scanf_i+0x11a>
   208ec:	6823      	ldr	r3, [r4, #0]
   208ee:	05d9      	lsls	r1, r3, #23
   208f0:	d50c      	bpl.n	2090c <_scanf_i+0x17c>
   208f2:	454d      	cmp	r5, r9
   208f4:	d908      	bls.n	20908 <_scanf_i+0x178>
   208f6:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   208fa:	1e6f      	subs	r7, r5, #1
   208fc:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   20900:	4632      	mov	r2, r6
   20902:	4658      	mov	r0, fp
   20904:	4798      	blx	r3
   20906:	463d      	mov	r5, r7
   20908:	454d      	cmp	r5, r9
   2090a:	d02c      	beq.n	20966 <_scanf_i+0x1d6>
   2090c:	6822      	ldr	r2, [r4, #0]
   2090e:	f012 0210 	ands.w	r2, r2, #16
   20912:	d11e      	bne.n	20952 <_scanf_i+0x1c2>
   20914:	702a      	strb	r2, [r5, #0]
   20916:	6863      	ldr	r3, [r4, #4]
   20918:	4649      	mov	r1, r9
   2091a:	4658      	mov	r0, fp
   2091c:	9e00      	ldr	r6, [sp, #0]
   2091e:	47b0      	blx	r6
   20920:	6822      	ldr	r2, [r4, #0]
   20922:	f8da 3000 	ldr.w	r3, [sl]
   20926:	f012 0f20 	tst.w	r2, #32
   2092a:	d008      	beq.n	2093e <_scanf_i+0x1ae>
   2092c:	1d1a      	adds	r2, r3, #4
   2092e:	f8ca 2000 	str.w	r2, [sl]
   20932:	681b      	ldr	r3, [r3, #0]
   20934:	6018      	str	r0, [r3, #0]
   20936:	e009      	b.n	2094c <_scanf_i+0x1bc>
   20938:	f04f 0800 	mov.w	r8, #0
   2093c:	e7d6      	b.n	208ec <_scanf_i+0x15c>
   2093e:	07d2      	lsls	r2, r2, #31
   20940:	d5f4      	bpl.n	2092c <_scanf_i+0x19c>
   20942:	1d1a      	adds	r2, r3, #4
   20944:	f8ca 2000 	str.w	r2, [sl]
   20948:	681b      	ldr	r3, [r3, #0]
   2094a:	8018      	strh	r0, [r3, #0]
   2094c:	68e3      	ldr	r3, [r4, #12]
   2094e:	3301      	adds	r3, #1
   20950:	60e3      	str	r3, [r4, #12]
   20952:	2000      	movs	r0, #0
   20954:	eba5 0509 	sub.w	r5, r5, r9
   20958:	44a8      	add	r8, r5
   2095a:	6925      	ldr	r5, [r4, #16]
   2095c:	4445      	add	r5, r8
   2095e:	6125      	str	r5, [r4, #16]
   20960:	b007      	add	sp, #28
   20962:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20966:	2001      	movs	r0, #1
   20968:	e7fa      	b.n	20960 <_scanf_i+0x1d0>
   2096a:	bf00      	nop
   2096c:	00022760 	.word	0x00022760
   20970:	00020af9 	.word	0x00020af9
   20974:	0001d739 	.word	0x0001d739
   20978:	0002277c 	.word	0x0002277c

0002097c <_read_r>:
_read_r():
   2097c:	b538      	push	{r3, r4, r5, lr}
   2097e:	4605      	mov	r5, r0
   20980:	4608      	mov	r0, r1
   20982:	4611      	mov	r1, r2
   20984:	2200      	movs	r2, #0
   20986:	4c05      	ldr	r4, [pc, #20]	; (2099c <_read_r+0x20>)
   20988:	6022      	str	r2, [r4, #0]
   2098a:	461a      	mov	r2, r3
   2098c:	f7f7 fb9c 	bl	180c8 <_read>
   20990:	1c43      	adds	r3, r0, #1
   20992:	d102      	bne.n	2099a <_read_r+0x1e>
   20994:	6823      	ldr	r3, [r4, #0]
   20996:	b103      	cbz	r3, 2099a <_read_r+0x1e>
   20998:	602b      	str	r3, [r5, #0]
   2099a:	bd38      	pop	{r3, r4, r5, pc}
   2099c:	2007d064 	.word	0x2007d064

000209a0 <__sccl>:
__sccl():
   209a0:	b570      	push	{r4, r5, r6, lr}
   209a2:	780b      	ldrb	r3, [r1, #0]
   209a4:	1e44      	subs	r4, r0, #1
   209a6:	2b5e      	cmp	r3, #94	; 0x5e
   209a8:	bf13      	iteet	ne
   209aa:	1c4a      	addne	r2, r1, #1
   209ac:	1c8a      	addeq	r2, r1, #2
   209ae:	784b      	ldrbeq	r3, [r1, #1]
   209b0:	2100      	movne	r1, #0
   209b2:	bf08      	it	eq
   209b4:	2101      	moveq	r1, #1
   209b6:	f100 05ff 	add.w	r5, r0, #255	; 0xff
   209ba:	f804 1f01 	strb.w	r1, [r4, #1]!
   209be:	42a5      	cmp	r5, r4
   209c0:	d1fb      	bne.n	209ba <__sccl+0x1a>
   209c2:	b913      	cbnz	r3, 209ca <__sccl+0x2a>
   209c4:	3a01      	subs	r2, #1
   209c6:	4610      	mov	r0, r2
   209c8:	bd70      	pop	{r4, r5, r6, pc}
   209ca:	f081 0401 	eor.w	r4, r1, #1
   209ce:	4611      	mov	r1, r2
   209d0:	54c4      	strb	r4, [r0, r3]
   209d2:	780d      	ldrb	r5, [r1, #0]
   209d4:	1c4a      	adds	r2, r1, #1
   209d6:	2d2d      	cmp	r5, #45	; 0x2d
   209d8:	d006      	beq.n	209e8 <__sccl+0x48>
   209da:	2d5d      	cmp	r5, #93	; 0x5d
   209dc:	d0f3      	beq.n	209c6 <__sccl+0x26>
   209de:	b90d      	cbnz	r5, 209e4 <__sccl+0x44>
   209e0:	460a      	mov	r2, r1
   209e2:	e7f0      	b.n	209c6 <__sccl+0x26>
   209e4:	462b      	mov	r3, r5
   209e6:	e7f2      	b.n	209ce <__sccl+0x2e>
   209e8:	784e      	ldrb	r6, [r1, #1]
   209ea:	2e5d      	cmp	r6, #93	; 0x5d
   209ec:	d0fa      	beq.n	209e4 <__sccl+0x44>
   209ee:	42b3      	cmp	r3, r6
   209f0:	dcf8      	bgt.n	209e4 <__sccl+0x44>
   209f2:	3102      	adds	r1, #2
   209f4:	3301      	adds	r3, #1
   209f6:	429e      	cmp	r6, r3
   209f8:	54c4      	strb	r4, [r0, r3]
   209fa:	dcfb      	bgt.n	209f4 <__sccl+0x54>
   209fc:	e7e9      	b.n	209d2 <__sccl+0x32>

000209fe <_strtoul_l.isra.0>:
_strtoul_l.isra.0():
   209fe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   20a02:	4680      	mov	r8, r0
   20a04:	4689      	mov	r9, r1
   20a06:	4692      	mov	sl, r2
   20a08:	461e      	mov	r6, r3
   20a0a:	460f      	mov	r7, r1
   20a0c:	463d      	mov	r5, r7
   20a0e:	9808      	ldr	r0, [sp, #32]
   20a10:	f815 4b01 	ldrb.w	r4, [r5], #1
   20a14:	f7fa f972 	bl	1acfc <__locale_ctype_ptr_l>
   20a18:	4420      	add	r0, r4
   20a1a:	7843      	ldrb	r3, [r0, #1]
   20a1c:	f013 0308 	ands.w	r3, r3, #8
   20a20:	d10a      	bne.n	20a38 <_strtoul_l.isra.0+0x3a>
   20a22:	2c2d      	cmp	r4, #45	; 0x2d
   20a24:	d10a      	bne.n	20a3c <_strtoul_l.isra.0+0x3e>
   20a26:	2301      	movs	r3, #1
   20a28:	782c      	ldrb	r4, [r5, #0]
   20a2a:	1cbd      	adds	r5, r7, #2
   20a2c:	b15e      	cbz	r6, 20a46 <_strtoul_l.isra.0+0x48>
   20a2e:	2e10      	cmp	r6, #16
   20a30:	d113      	bne.n	20a5a <_strtoul_l.isra.0+0x5c>
   20a32:	2c30      	cmp	r4, #48	; 0x30
   20a34:	d009      	beq.n	20a4a <_strtoul_l.isra.0+0x4c>
   20a36:	e010      	b.n	20a5a <_strtoul_l.isra.0+0x5c>
   20a38:	462f      	mov	r7, r5
   20a3a:	e7e7      	b.n	20a0c <_strtoul_l.isra.0+0xe>
   20a3c:	2c2b      	cmp	r4, #43	; 0x2b
   20a3e:	bf04      	itt	eq
   20a40:	782c      	ldrbeq	r4, [r5, #0]
   20a42:	1cbd      	addeq	r5, r7, #2
   20a44:	e7f2      	b.n	20a2c <_strtoul_l.isra.0+0x2e>
   20a46:	2c30      	cmp	r4, #48	; 0x30
   20a48:	d125      	bne.n	20a96 <_strtoul_l.isra.0+0x98>
   20a4a:	782a      	ldrb	r2, [r5, #0]
   20a4c:	f002 02df 	and.w	r2, r2, #223	; 0xdf
   20a50:	2a58      	cmp	r2, #88	; 0x58
   20a52:	d14a      	bne.n	20aea <_strtoul_l.isra.0+0xec>
   20a54:	2610      	movs	r6, #16
   20a56:	786c      	ldrb	r4, [r5, #1]
   20a58:	3502      	adds	r5, #2
   20a5a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   20a5e:	fbb1 f1f6 	udiv	r1, r1, r6
   20a62:	2700      	movs	r7, #0
   20a64:	fb06 fe01 	mul.w	lr, r6, r1
   20a68:	4638      	mov	r0, r7
   20a6a:	ea6f 0e0e 	mvn.w	lr, lr
   20a6e:	f1a4 0230 	sub.w	r2, r4, #48	; 0x30
   20a72:	2a09      	cmp	r2, #9
   20a74:	d811      	bhi.n	20a9a <_strtoul_l.isra.0+0x9c>
   20a76:	4614      	mov	r4, r2
   20a78:	42a6      	cmp	r6, r4
   20a7a:	dd1d      	ble.n	20ab8 <_strtoul_l.isra.0+0xba>
   20a7c:	2f00      	cmp	r7, #0
   20a7e:	db18      	blt.n	20ab2 <_strtoul_l.isra.0+0xb4>
   20a80:	4281      	cmp	r1, r0
   20a82:	d316      	bcc.n	20ab2 <_strtoul_l.isra.0+0xb4>
   20a84:	d101      	bne.n	20a8a <_strtoul_l.isra.0+0x8c>
   20a86:	45a6      	cmp	lr, r4
   20a88:	db13      	blt.n	20ab2 <_strtoul_l.isra.0+0xb4>
   20a8a:	2701      	movs	r7, #1
   20a8c:	fb00 4006 	mla	r0, r0, r6, r4
   20a90:	f815 4b01 	ldrb.w	r4, [r5], #1
   20a94:	e7eb      	b.n	20a6e <_strtoul_l.isra.0+0x70>
   20a96:	260a      	movs	r6, #10
   20a98:	e7df      	b.n	20a5a <_strtoul_l.isra.0+0x5c>
   20a9a:	f1a4 0241 	sub.w	r2, r4, #65	; 0x41
   20a9e:	2a19      	cmp	r2, #25
   20aa0:	d801      	bhi.n	20aa6 <_strtoul_l.isra.0+0xa8>
   20aa2:	3c37      	subs	r4, #55	; 0x37
   20aa4:	e7e8      	b.n	20a78 <_strtoul_l.isra.0+0x7a>
   20aa6:	f1a4 0261 	sub.w	r2, r4, #97	; 0x61
   20aaa:	2a19      	cmp	r2, #25
   20aac:	d804      	bhi.n	20ab8 <_strtoul_l.isra.0+0xba>
   20aae:	3c57      	subs	r4, #87	; 0x57
   20ab0:	e7e2      	b.n	20a78 <_strtoul_l.isra.0+0x7a>
   20ab2:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   20ab6:	e7eb      	b.n	20a90 <_strtoul_l.isra.0+0x92>
   20ab8:	2f00      	cmp	r7, #0
   20aba:	da09      	bge.n	20ad0 <_strtoul_l.isra.0+0xd2>
   20abc:	2322      	movs	r3, #34	; 0x22
   20abe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   20ac2:	f8c8 3000 	str.w	r3, [r8]
   20ac6:	f1ba 0f00 	cmp.w	sl, #0
   20aca:	d107      	bne.n	20adc <_strtoul_l.isra.0+0xde>
   20acc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   20ad0:	b103      	cbz	r3, 20ad4 <_strtoul_l.isra.0+0xd6>
   20ad2:	4240      	negs	r0, r0
   20ad4:	f1ba 0f00 	cmp.w	sl, #0
   20ad8:	d00c      	beq.n	20af4 <_strtoul_l.isra.0+0xf6>
   20ada:	b127      	cbz	r7, 20ae6 <_strtoul_l.isra.0+0xe8>
   20adc:	3d01      	subs	r5, #1
   20ade:	f8ca 5000 	str.w	r5, [sl]
   20ae2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   20ae6:	464d      	mov	r5, r9
   20ae8:	e7f9      	b.n	20ade <_strtoul_l.isra.0+0xe0>
   20aea:	2430      	movs	r4, #48	; 0x30
   20aec:	2e00      	cmp	r6, #0
   20aee:	d1b4      	bne.n	20a5a <_strtoul_l.isra.0+0x5c>
   20af0:	2608      	movs	r6, #8
   20af2:	e7b2      	b.n	20a5a <_strtoul_l.isra.0+0x5c>
   20af4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00020af8 <_strtoul_r>:
_strtoul_r():
   20af8:	b537      	push	{r0, r1, r2, r4, r5, lr}
   20afa:	4c06      	ldr	r4, [pc, #24]	; (20b14 <_strtoul_r+0x1c>)
   20afc:	4d06      	ldr	r5, [pc, #24]	; (20b18 <_strtoul_r+0x20>)
   20afe:	6824      	ldr	r4, [r4, #0]
   20b00:	6a24      	ldr	r4, [r4, #32]
   20b02:	2c00      	cmp	r4, #0
   20b04:	bf08      	it	eq
   20b06:	462c      	moveq	r4, r5
   20b08:	9400      	str	r4, [sp, #0]
   20b0a:	f7ff ff78 	bl	209fe <_strtoul_l.isra.0>
   20b0e:	b003      	add	sp, #12
   20b10:	bd30      	pop	{r4, r5, pc}
   20b12:	bf00      	nop
   20b14:	2007c0e4 	.word	0x2007c0e4
   20b18:	2007c148 	.word	0x2007c148

00020b1c <strtoul>:
strtoul():
   20b1c:	4b08      	ldr	r3, [pc, #32]	; (20b40 <strtoul+0x24>)
   20b1e:	b537      	push	{r0, r1, r2, r4, r5, lr}
   20b20:	681c      	ldr	r4, [r3, #0]
   20b22:	4d08      	ldr	r5, [pc, #32]	; (20b44 <strtoul+0x28>)
   20b24:	6a23      	ldr	r3, [r4, #32]
   20b26:	2b00      	cmp	r3, #0
   20b28:	bf08      	it	eq
   20b2a:	462b      	moveq	r3, r5
   20b2c:	9300      	str	r3, [sp, #0]
   20b2e:	4613      	mov	r3, r2
   20b30:	460a      	mov	r2, r1
   20b32:	4601      	mov	r1, r0
   20b34:	4620      	mov	r0, r4
   20b36:	f7ff ff62 	bl	209fe <_strtoul_l.isra.0>
   20b3a:	b003      	add	sp, #12
   20b3c:	bd30      	pop	{r4, r5, pc}
   20b3e:	bf00      	nop
   20b40:	2007c0e4 	.word	0x2007c0e4
   20b44:	2007c148 	.word	0x2007c148

00020b48 <__submore>:
__submore():
   20b48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   20b4c:	460c      	mov	r4, r1
   20b4e:	6b49      	ldr	r1, [r1, #52]	; 0x34
   20b50:	f104 0344 	add.w	r3, r4, #68	; 0x44
   20b54:	4299      	cmp	r1, r3
   20b56:	d11c      	bne.n	20b92 <__submore+0x4a>
   20b58:	f44f 6180 	mov.w	r1, #1024	; 0x400
   20b5c:	f7fa fca2 	bl	1b4a4 <_malloc_r>
   20b60:	b918      	cbnz	r0, 20b6a <__submore+0x22>
   20b62:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   20b66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   20b6a:	f44f 6380 	mov.w	r3, #1024	; 0x400
   20b6e:	63a3      	str	r3, [r4, #56]	; 0x38
   20b70:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
   20b74:	6360      	str	r0, [r4, #52]	; 0x34
   20b76:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
   20b7a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   20b7e:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
   20b82:	7043      	strb	r3, [r0, #1]
   20b84:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   20b88:	7003      	strb	r3, [r0, #0]
   20b8a:	6020      	str	r0, [r4, #0]
   20b8c:	2000      	movs	r0, #0
   20b8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   20b92:	6ba6      	ldr	r6, [r4, #56]	; 0x38
   20b94:	0077      	lsls	r7, r6, #1
   20b96:	463a      	mov	r2, r7
   20b98:	f7fe ffb8 	bl	1fb0c <_realloc_r>
   20b9c:	4605      	mov	r5, r0
   20b9e:	2800      	cmp	r0, #0
   20ba0:	d0df      	beq.n	20b62 <__submore+0x1a>
   20ba2:	eb00 0806 	add.w	r8, r0, r6
   20ba6:	4601      	mov	r1, r0
   20ba8:	4632      	mov	r2, r6
   20baa:	4640      	mov	r0, r8
   20bac:	f7fa f95b 	bl	1ae66 <memcpy>
   20bb0:	f8c4 8000 	str.w	r8, [r4]
   20bb4:	6365      	str	r5, [r4, #52]	; 0x34
   20bb6:	63a7      	str	r7, [r4, #56]	; 0x38
   20bb8:	e7e8      	b.n	20b8c <__submore+0x44>
   20bba:	Address 0x0000000000020bba is out of bounds.


00020bbc <_ungetc_r>:
_ungetc_r():
   20bbc:	1c4b      	adds	r3, r1, #1
   20bbe:	b570      	push	{r4, r5, r6, lr}
   20bc0:	4606      	mov	r6, r0
   20bc2:	460d      	mov	r5, r1
   20bc4:	4614      	mov	r4, r2
   20bc6:	d103      	bne.n	20bd0 <_ungetc_r+0x14>
   20bc8:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   20bcc:	4628      	mov	r0, r5
   20bce:	bd70      	pop	{r4, r5, r6, pc}
   20bd0:	b118      	cbz	r0, 20bda <_ungetc_r+0x1e>
   20bd2:	6983      	ldr	r3, [r0, #24]
   20bd4:	b90b      	cbnz	r3, 20bda <_ungetc_r+0x1e>
   20bd6:	f7f9 feeb 	bl	1a9b0 <__sinit>
   20bda:	4b2e      	ldr	r3, [pc, #184]	; (20c94 <_ungetc_r+0xd8>)
   20bdc:	429c      	cmp	r4, r3
   20bde:	d12c      	bne.n	20c3a <_ungetc_r+0x7e>
   20be0:	6874      	ldr	r4, [r6, #4]
   20be2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   20be6:	f023 0320 	bic.w	r3, r3, #32
   20bea:	81a3      	strh	r3, [r4, #12]
   20bec:	b29b      	uxth	r3, r3
   20bee:	0759      	lsls	r1, r3, #29
   20bf0:	d413      	bmi.n	20c1a <_ungetc_r+0x5e>
   20bf2:	06da      	lsls	r2, r3, #27
   20bf4:	d5e8      	bpl.n	20bc8 <_ungetc_r+0xc>
   20bf6:	071b      	lsls	r3, r3, #28
   20bf8:	d50b      	bpl.n	20c12 <_ungetc_r+0x56>
   20bfa:	4621      	mov	r1, r4
   20bfc:	4630      	mov	r0, r6
   20bfe:	f7f9 fdbb 	bl	1a778 <_fflush_r>
   20c02:	2800      	cmp	r0, #0
   20c04:	d1e0      	bne.n	20bc8 <_ungetc_r+0xc>
   20c06:	89a3      	ldrh	r3, [r4, #12]
   20c08:	60a0      	str	r0, [r4, #8]
   20c0a:	f023 0308 	bic.w	r3, r3, #8
   20c0e:	81a3      	strh	r3, [r4, #12]
   20c10:	61a0      	str	r0, [r4, #24]
   20c12:	89a3      	ldrh	r3, [r4, #12]
   20c14:	f043 0304 	orr.w	r3, r3, #4
   20c18:	81a3      	strh	r3, [r4, #12]
   20c1a:	6b63      	ldr	r3, [r4, #52]	; 0x34
   20c1c:	b2ed      	uxtb	r5, r5
   20c1e:	6862      	ldr	r2, [r4, #4]
   20c20:	b1e3      	cbz	r3, 20c5c <_ungetc_r+0xa0>
   20c22:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   20c24:	429a      	cmp	r2, r3
   20c26:	da12      	bge.n	20c4e <_ungetc_r+0x92>
   20c28:	6823      	ldr	r3, [r4, #0]
   20c2a:	1e5a      	subs	r2, r3, #1
   20c2c:	6022      	str	r2, [r4, #0]
   20c2e:	f803 5c01 	strb.w	r5, [r3, #-1]
   20c32:	6863      	ldr	r3, [r4, #4]
   20c34:	3301      	adds	r3, #1
   20c36:	6063      	str	r3, [r4, #4]
   20c38:	e7c8      	b.n	20bcc <_ungetc_r+0x10>
   20c3a:	4b17      	ldr	r3, [pc, #92]	; (20c98 <_ungetc_r+0xdc>)
   20c3c:	429c      	cmp	r4, r3
   20c3e:	d101      	bne.n	20c44 <_ungetc_r+0x88>
   20c40:	68b4      	ldr	r4, [r6, #8]
   20c42:	e7ce      	b.n	20be2 <_ungetc_r+0x26>
   20c44:	4b15      	ldr	r3, [pc, #84]	; (20c9c <_ungetc_r+0xe0>)
   20c46:	429c      	cmp	r4, r3
   20c48:	bf08      	it	eq
   20c4a:	68f4      	ldreq	r4, [r6, #12]
   20c4c:	e7c9      	b.n	20be2 <_ungetc_r+0x26>
   20c4e:	4621      	mov	r1, r4
   20c50:	4630      	mov	r0, r6
   20c52:	f7ff ff79 	bl	20b48 <__submore>
   20c56:	2800      	cmp	r0, #0
   20c58:	d0e6      	beq.n	20c28 <_ungetc_r+0x6c>
   20c5a:	e7b5      	b.n	20bc8 <_ungetc_r+0xc>
   20c5c:	6921      	ldr	r1, [r4, #16]
   20c5e:	6823      	ldr	r3, [r4, #0]
   20c60:	b151      	cbz	r1, 20c78 <_ungetc_r+0xbc>
   20c62:	4299      	cmp	r1, r3
   20c64:	d208      	bcs.n	20c78 <_ungetc_r+0xbc>
   20c66:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   20c6a:	428d      	cmp	r5, r1
   20c6c:	d104      	bne.n	20c78 <_ungetc_r+0xbc>
   20c6e:	3b01      	subs	r3, #1
   20c70:	3201      	adds	r2, #1
   20c72:	6023      	str	r3, [r4, #0]
   20c74:	6062      	str	r2, [r4, #4]
   20c76:	e7a9      	b.n	20bcc <_ungetc_r+0x10>
   20c78:	63e3      	str	r3, [r4, #60]	; 0x3c
   20c7a:	f104 0344 	add.w	r3, r4, #68	; 0x44
   20c7e:	6363      	str	r3, [r4, #52]	; 0x34
   20c80:	2303      	movs	r3, #3
   20c82:	63a3      	str	r3, [r4, #56]	; 0x38
   20c84:	4623      	mov	r3, r4
   20c86:	6422      	str	r2, [r4, #64]	; 0x40
   20c88:	f803 5f46 	strb.w	r5, [r3, #70]!
   20c8c:	6023      	str	r3, [r4, #0]
   20c8e:	2301      	movs	r3, #1
   20c90:	e7d1      	b.n	20c36 <_ungetc_r+0x7a>
   20c92:	bf00      	nop
   20c94:	0002236c 	.word	0x0002236c
   20c98:	0002238c 	.word	0x0002238c
   20c9c:	0002234c 	.word	0x0002234c

00020ca0 <__env_lock>:
__env_lock():
   20ca0:	4770      	bx	lr

00020ca2 <__env_unlock>:
__env_unlock():
   20ca2:	4770      	bx	lr

00020ca4 <_malloc_usable_size_r>:
_malloc_usable_size_r():
   20ca4:	f851 0c04 	ldr.w	r0, [r1, #-4]
   20ca8:	2800      	cmp	r0, #0
   20caa:	f1a0 0004 	sub.w	r0, r0, #4
   20cae:	bfbc      	itt	lt
   20cb0:	580b      	ldrlt	r3, [r1, r0]
   20cb2:	18c0      	addlt	r0, r0, r3
   20cb4:	4770      	bx	lr
   20cb6:	Address 0x0000000000020cb6 is out of bounds.


00020cb8 <__gedf2>:
__gedf2():
   20cb8:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
   20cbc:	e006      	b.n	20ccc <__cmpdf2+0x4>
   20cbe:	bf00      	nop

00020cc0 <__ledf2>:
__ledf2():
   20cc0:	f04f 0c01 	mov.w	ip, #1
   20cc4:	e002      	b.n	20ccc <__cmpdf2+0x4>
   20cc6:	bf00      	nop

00020cc8 <__cmpdf2>:
__nedf2():
   20cc8:	f04f 0c01 	mov.w	ip, #1
   20ccc:	f84d cd04 	str.w	ip, [sp, #-4]!
   20cd0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   20cd4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   20cd8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   20cdc:	bf18      	it	ne
   20cde:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   20ce2:	d01b      	beq.n	20d1c <__cmpdf2+0x54>
   20ce4:	b001      	add	sp, #4
   20ce6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   20cea:	bf0c      	ite	eq
   20cec:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   20cf0:	ea91 0f03 	teqne	r1, r3
   20cf4:	bf02      	ittt	eq
   20cf6:	ea90 0f02 	teqeq	r0, r2
   20cfa:	2000      	moveq	r0, #0
   20cfc:	4770      	bxeq	lr
   20cfe:	f110 0f00 	cmn.w	r0, #0
   20d02:	ea91 0f03 	teq	r1, r3
   20d06:	bf58      	it	pl
   20d08:	4299      	cmppl	r1, r3
   20d0a:	bf08      	it	eq
   20d0c:	4290      	cmpeq	r0, r2
   20d0e:	bf2c      	ite	cs
   20d10:	17d8      	asrcs	r0, r3, #31
   20d12:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   20d16:	f040 0001 	orr.w	r0, r0, #1
   20d1a:	4770      	bx	lr
   20d1c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   20d20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   20d24:	d102      	bne.n	20d2c <__cmpdf2+0x64>
   20d26:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   20d2a:	d107      	bne.n	20d3c <__cmpdf2+0x74>
   20d2c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   20d30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   20d34:	d1d6      	bne.n	20ce4 <__cmpdf2+0x1c>
   20d36:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   20d3a:	d0d3      	beq.n	20ce4 <__cmpdf2+0x1c>
   20d3c:	f85d 0b04 	ldr.w	r0, [sp], #4
   20d40:	4770      	bx	lr
   20d42:	bf00      	nop

00020d44 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
   20d44:	4684      	mov	ip, r0
   20d46:	4610      	mov	r0, r2
   20d48:	4662      	mov	r2, ip
   20d4a:	468c      	mov	ip, r1
   20d4c:	4619      	mov	r1, r3
   20d4e:	4663      	mov	r3, ip
   20d50:	e000      	b.n	20d54 <__aeabi_cdcmpeq>
   20d52:	bf00      	nop

00020d54 <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
   20d54:	b501      	push	{r0, lr}
   20d56:	f7ff ffb7 	bl	20cc8 <__cmpdf2>
   20d5a:	2800      	cmp	r0, #0
   20d5c:	bf48      	it	mi
   20d5e:	f110 0f00 	cmnmi.w	r0, #0
   20d62:	bd01      	pop	{r0, pc}

00020d64 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
   20d64:	f84d ed08 	str.w	lr, [sp, #-8]!
   20d68:	f7ff fff4 	bl	20d54 <__aeabi_cdcmpeq>
   20d6c:	bf0c      	ite	eq
   20d6e:	2001      	moveq	r0, #1
   20d70:	2000      	movne	r0, #0
   20d72:	f85d fb08 	ldr.w	pc, [sp], #8
   20d76:	bf00      	nop

00020d78 <__aeabi_dcmplt>:
__aeabi_dcmplt():
   20d78:	f84d ed08 	str.w	lr, [sp, #-8]!
   20d7c:	f7ff ffea 	bl	20d54 <__aeabi_cdcmpeq>
   20d80:	bf34      	ite	cc
   20d82:	2001      	movcc	r0, #1
   20d84:	2000      	movcs	r0, #0
   20d86:	f85d fb08 	ldr.w	pc, [sp], #8
   20d8a:	bf00      	nop

00020d8c <__aeabi_dcmple>:
__aeabi_dcmple():
   20d8c:	f84d ed08 	str.w	lr, [sp, #-8]!
   20d90:	f7ff ffe0 	bl	20d54 <__aeabi_cdcmpeq>
   20d94:	bf94      	ite	ls
   20d96:	2001      	movls	r0, #1
   20d98:	2000      	movhi	r0, #0
   20d9a:	f85d fb08 	ldr.w	pc, [sp], #8
   20d9e:	bf00      	nop

00020da0 <__aeabi_dcmpge>:
__aeabi_dcmpge():
   20da0:	f84d ed08 	str.w	lr, [sp, #-8]!
   20da4:	f7ff ffce 	bl	20d44 <__aeabi_cdrcmple>
   20da8:	bf94      	ite	ls
   20daa:	2001      	movls	r0, #1
   20dac:	2000      	movhi	r0, #0
   20dae:	f85d fb08 	ldr.w	pc, [sp], #8
   20db2:	bf00      	nop

00020db4 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
   20db4:	f84d ed08 	str.w	lr, [sp, #-8]!
   20db8:	f7ff ffc4 	bl	20d44 <__aeabi_cdrcmple>
   20dbc:	bf34      	ite	cc
   20dbe:	2001      	movcc	r0, #1
   20dc0:	2000      	movcs	r0, #0
   20dc2:	f85d fb08 	ldr.w	pc, [sp], #8
   20dc6:	bf00      	nop

00020dc8 <__aeabi_dcmpun>:
__unorddf2():
   20dc8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   20dcc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   20dd0:	d102      	bne.n	20dd8 <__aeabi_dcmpun+0x10>
   20dd2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   20dd6:	d10a      	bne.n	20dee <__aeabi_dcmpun+0x26>
   20dd8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   20ddc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   20de0:	d102      	bne.n	20de8 <__aeabi_dcmpun+0x20>
   20de2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   20de6:	d102      	bne.n	20dee <__aeabi_dcmpun+0x26>
   20de8:	f04f 0000 	mov.w	r0, #0
   20dec:	4770      	bx	lr
   20dee:	f04f 0001 	mov.w	r0, #1
   20df2:	4770      	bx	lr

00020df4 <__aeabi_d2iz>:
__aeabi_d2iz():
   20df4:	ea4f 0241 	mov.w	r2, r1, lsl #1
   20df8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   20dfc:	d215      	bcs.n	20e2a <__aeabi_d2iz+0x36>
   20dfe:	d511      	bpl.n	20e24 <__aeabi_d2iz+0x30>
   20e00:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   20e04:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   20e08:	d912      	bls.n	20e30 <__aeabi_d2iz+0x3c>
   20e0a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   20e0e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   20e12:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   20e16:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   20e1a:	fa23 f002 	lsr.w	r0, r3, r2
   20e1e:	bf18      	it	ne
   20e20:	4240      	negne	r0, r0
   20e22:	4770      	bx	lr
   20e24:	f04f 0000 	mov.w	r0, #0
   20e28:	4770      	bx	lr
   20e2a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   20e2e:	d105      	bne.n	20e3c <__aeabi_d2iz+0x48>
   20e30:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   20e34:	bf08      	it	eq
   20e36:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   20e3a:	4770      	bx	lr
   20e3c:	f04f 0000 	mov.w	r0, #0
   20e40:	4770      	bx	lr
   20e42:	bf00      	nop
   20e44:	49207525 	.word	0x49207525
   20e48:	77205152 	.word	0x77205152
   20e4c:	74207361 	.word	0x74207361
   20e50:	67676972 	.word	0x67676972
   20e54:	64657265 	.word	0x64657265
   20e58:	7562202c 	.word	0x7562202c
   20e5c:	6f6e2074 	.word	0x6f6e2074
   20e60:	51524920 	.word	0x51524920
   20e64:	72657320 	.word	0x72657320
   20e68:	65636976 	.word	0x65636976
   20e6c:	73617720 	.word	0x73617720
   20e70:	66656420 	.word	0x66656420
   20e74:	64656e69 	.word	0x64656e69
   20e78:	0a21      	.short	0x0a21
   20e7a:	00          	.byte	0x00
   20e7b:	4e          	.byte	0x4e
   20e7c:	4620494d 	.word	0x4620494d
   20e80:	746c7561 	.word	0x746c7561
   20e84:	654d000a 	.word	0x654d000a
   20e88:	6146206d 	.word	0x6146206d
   20e8c:	0a746c75 	.word	0x0a746c75
   20e90:	53554200 	.word	0x53554200
   20e94:	75614620 	.word	0x75614620
   20e98:	000a746c 	.word	0x000a746c
   20e9c:	67617355 	.word	0x67617355
   20ea0:	61462065 	.word	0x61462065
   20ea4:	0a746c75 	.word	0x0a746c75
   20ea8:	47424400 	.word	0x47424400
   20eac:	204e4f4d 	.word	0x204e4f4d
   20eb0:	6c756146 	.word	0x6c756146
   20eb4:	49000a74 	.word	0x49000a74
   20eb8:	6e205152 	.word	0x6e205152
   20ebc:	7220746f 	.word	0x7220746f
   20ec0:	73696765 	.word	0x73696765
   20ec4:	65726574 	.word	0x65726574
   20ec8:	6d002164 	.word	0x6d002164
   20ecc:	286e6961 	.word	0x286e6961
   20ed0:	68732029 	.word	0x68732029
   20ed4:	646c756f 	.word	0x646c756f
   20ed8:	76656e20 	.word	0x76656e20
   20edc:	65207265 	.word	0x65207265
   20ee0:	20746978 	.word	0x20746978
   20ee4:	74206e6f 	.word	0x74206e6f
   20ee8:	20736968 	.word	0x20736968
   20eec:	74737973 	.word	0x74737973
   20ef0:	000a6d65 	.word	0x000a6d65
   20ef4:	78656e55 	.word	0x78656e55
   20ef8:	74636570 	.word	0x74636570
   20efc:	49206465 	.word	0x49206465
   20f00:	63205253 	.word	0x63205253
   20f04:	206c6c61 	.word	0x206c6c61
   20f08:	6c207461 	.word	0x6c207461
   20f0c:	735f6370 	.word	0x735f6370
   20f10:	632e7379 	.word	0x632e7379
   20f14:	00          	.byte	0x00
   20f15:	4d          	.byte	0x4d
   20f16:	6d65      	.short	0x6d65
   20f18:	2079726f 	.word	0x2079726f
   20f1c:	6f666e49 	.word	0x6f666e49
   20f20:	74616d72 	.word	0x74616d72
   20f24:	3a6e6f69 	.word	0x3a6e6f69
   20f28:	6f6c470a 	.word	0x6f6c470a
   20f2c:	206c6162 	.word	0x206c6162
   20f30:	64657355 	.word	0x64657355
   20f34:	3a202020 	.word	0x3a202020
   20f38:	64352520 	.word	0x64352520
   20f3c:	6c616d0a 	.word	0x6c616d0a
   20f40:	20636f6c 	.word	0x20636f6c
   20f44:	64657355 	.word	0x64657355
   20f48:	3a202020 	.word	0x3a202020
   20f4c:	64352520 	.word	0x64352520
   20f50:	6c616d0a 	.word	0x6c616d0a
   20f54:	20636f6c 	.word	0x20636f6c
   20f58:	69617641 	.word	0x69617641
   20f5c:	3a202e6c 	.word	0x3a202e6c
   20f60:	64352520 	.word	0x64352520
   20f64:	7379530a 	.word	0x7379530a
   20f68:	206d6574 	.word	0x206d6574
   20f6c:	69617641 	.word	0x69617641
   20f70:	3a202e6c 	.word	0x3a202e6c
   20f74:	64352520 	.word	0x64352520
   20f78:	78654e0a 	.word	0x78654e0a
   20f7c:	65482074 	.word	0x65482074
   20f80:	70207061 	.word	0x70207061
   20f84:	20207274 	.word	0x20207274
   20f88:	203a2020 	.word	0x203a2020
   20f8c:	30257830 	.word	0x30257830
   20f90:	4c0a5838 	.word	0x4c0a5838
   20f94:	20747361 	.word	0x20747361
   20f98:	6b726273 	.word	0x6b726273
   20f9c:	70202928 	.word	0x70202928
   20fa0:	20207274 	.word	0x20207274
   20fa4:	7830203a 	.word	0x7830203a
   20fa8:	58383025 	.word	0x58383025
   20fac:	73614c0a 	.word	0x73614c0a
   20fb0:	62732074 	.word	0x62732074
   20fb4:	29286b72 	.word	0x29286b72
   20fb8:	7a697320 	.word	0x7a697320
   20fbc:	203a2065 	.word	0x203a2065
   20fc0:	4e0a7525 	.word	0x4e0a7525
   20fc4:	20206d75 	.word	0x20206d75
   20fc8:	6b726273 	.word	0x6b726273
   20fcc:	63202928 	.word	0x63202928
   20fd0:	736c6c61 	.word	0x736c6c61
   20fd4:	7525203a 	.word	0x7525203a
   20fd8:	000a      	.short	0x000a
   20fda:	7953      	.short	0x7953
   20fdc:	6d657473 	.word	0x6d657473
   20fe0:	776f5020 	.word	0x776f5020
   20fe4:	6f2d7265 	.word	0x6f2d7265
   20fe8:	42203a6e 	.word	0x42203a6e
   20fec:	69746f6f 	.word	0x69746f6f
   20ff0:	2e20676e 	.word	0x2e20676e
   20ff4:	53002e2e 	.word	0x53002e2e
   20ff8:	65747379 	.word	0x65747379
   20ffc:	7243206d 	.word	0x7243206d
   21000:	3a687361 	.word	0x3a687361
   21004:	2d655220 	.word	0x2d655220
   21008:	746f6f62 	.word	0x746f6f62
   2100c:	20676e69 	.word	0x20676e69
   21010:	002e2e2e 	.word	0x002e2e2e
   21014:	63746157 	.word	0x63746157
   21018:	676f6468 	.word	0x676f6468
   2101c:	73795320 	.word	0x73795320
   21020:	206d6574 	.word	0x206d6574
   21024:	65736552 	.word	0x65736552
   21028:	42203a74 	.word	0x42203a74
   2102c:	69746f6f 	.word	0x69746f6f
   21030:	2e20676e 	.word	0x2e20676e
   21034:	2e2e      	.short	0x2e2e
	...

00021037 <ExCvt>:
   21037:	9a80 4190 418e 808f 4545 4945 4949 8f8e     ...A.A..EEEIII..
   21047:	9290 4f92 4f99 5555 9959 9b9a 9d9c 9f9e     ...O.OUUY.......
   21057:	4941 554f a5a5 a7a6 a9a8 abaa 21ac afae     AIOU.........!..
   21067:	b1b0 b3b2 b5b4 b7b6 b9b8 bbba bdbc bfbe     ................
   21077:	c1c0 c3c2 c5c4 c7c6 c9c8 cbca cdcc cfce     ................
   21087:	d1d0 d3d2 d5d4 d7d6 d9d8 dbda dddc dfde     ................
   21097:	e1e0 e3e2 e5e4 e7e6 e9e8 ebea edec efee     ................
   210a7:	f1f0 f3f2 f5f4 f7f6 f9f8 fbfa fdfc fffe     ................

000210b7 <LfnOfs>:
   210b7:	0301 0705 0e09 1210 1614 1c18 001e               .............

000210c4 <cst.6348>:
   210c4:	8000 4000 2000 1000 0800 4000 2000 1000     ...@. .....@. ..
   210d4:	0800 0400 0200 feeb 4d90 4453 534f 2e35     .........MSDOS5.
   210e4:	0030 4f4e 4e20 4d41 2045 2020 4620 5441     0.NO NAME    FAT
   210f4:	3233 2020 0020 4f4e 4e20 4d41 2045 2020     32   .NO NAME   
   21104:	4620 5441 2020 2020 0020 2a22 3c3a 3f3e      FAT     ."*:<>?
   21114:	7f7c 2b00 3b2c 5b3d 005d                    |..+,;=[].

0002111e <vst.6347>:
   2111e:	0400 0200 0100 0080 0040 0020 0010 0008     ........@. .....
   2112e:	0004 0002 0000                              ......

00021134 <Tbl>:
   21134:	00c7 00fc 00e9 00e2 00e4 00e0 00e5 00e7     ................
   21144:	00ea 00eb 00e8 00ef 00ee 00ec 00c4 00c5     ................
   21154:	00c9 00e6 00c6 00f4 00f6 00f2 00fb 00f9     ................
   21164:	00ff 00d6 00dc 00a2 00a3 00a5 20a7 0192     ............. ..
   21174:	00e1 00ed 00f3 00fa 00f1 00d1 00aa 00ba     ................
   21184:	00bf 2310 00ac 00bd 00bc 00a1 00ab 00bb     ...#............
   21194:	2591 2592 2593 2502 2524 2561 2562 2556     .%.%.%.%$%a%b%V%
   211a4:	2555 2563 2551 2557 255d 255c 255b 2510     U%c%Q%W%]%\%[%.%
   211b4:	2514 2534 252c 251c 2500 253c 255e 255f     .%4%,%.%.%<%^%_%
   211c4:	255a 2554 2569 2566 2560 2550 256c 2567     Z%T%i%f%`%P%l%g%
   211d4:	2568 2564 2565 2559 2558 2552 2553 256b     h%d%e%Y%X%R%S%k%
   211e4:	256a 2518 250c 2588 2584 258c 2590 2580     j%.%.%.%.%.%.%.%
   211f4:	03b1 00df 0393 03c0 03a3 03c3 00b5 03c4     ................
   21204:	03a6 0398 03a9 03b4 221e 03c6 03b5 2229     ........."....)"
   21214:	2261 00b1 2265 2264 2320 2321 00f7 2248     a"..e"d" #!#..H"
   21224:	00b0 2219 00b7 221a 207f 00b2 25a0 00a0     ..."...". ...%..

00021234 <tbl_lower.5775>:
   21234:	0061 0062 0063 0064 0065 0066 0067 0068     a.b.c.d.e.f.g.h.
   21244:	0069 006a 006b 006c 006d 006e 006f 0070     i.j.k.l.m.n.o.p.
   21254:	0071 0072 0073 0074 0075 0076 0077 0078     q.r.s.t.u.v.w.x.
   21264:	0079 007a 00a1 00a2 00a3 00a5 00ac 00af     y.z.............
   21274:	00e0 00e1 00e2 00e3 00e4 00e5 00e6 00e7     ................
   21284:	00e8 00e9 00ea 00eb 00ec 00ed 00ee 00ef     ................
   21294:	00f0 00f1 00f2 00f3 00f4 00f5 00f6 00f8     ................
   212a4:	00f9 00fa 00fb 00fc 00fd 00fe 00ff 0101     ................
   212b4:	0103 0105 0107 0109 010b 010d 010f 0111     ................
   212c4:	0113 0115 0117 0119 011b 011d 011f 0121     ..............!.
   212d4:	0123 0125 0127 0129 012b 012d 012f 0131     #.%.'.).+.-./.1.
   212e4:	0133 0135 0137 013a 013c 013e 0140 0142     3.5.7.:.<.>.@.B.
   212f4:	0144 0146 0148 014b 014d 014f 0151 0153     D.F.H.K.M.O.Q.S.
   21304:	0155 0157 0159 015b 015d 015f 0161 0163     U.W.Y.[.]._.a.c.
   21314:	0165 0167 0169 016b 016d 016f 0171 0173     e.g.i.k.m.o.q.s.
   21324:	0175 0177 017a 017c 017e 0192 03b1 03b2     u.w.z.|.~.......
   21334:	03b3 03b4 03b5 03b6 03b7 03b8 03b9 03ba     ................
   21344:	03bb 03bc 03bd 03be 03bf 03c0 03c1 03c3     ................
   21354:	03c4 03c5 03c6 03c7 03c8 03c9 03ca 0430     ..............0.
   21364:	0431 0432 0433 0434 0435 0436 0437 0438     1.2.3.4.5.6.7.8.
   21374:	0439 043a 043b 043c 043d 043e 043f 0440     9.:.;.<.=.>.?.@.
   21384:	0441 0442 0443 0444 0445 0446 0447 0448     A.B.C.D.E.F.G.H.
   21394:	0449 044a 044b 044c 044d 044e 044f 0451     I.J.K.L.M.N.O.Q.
   213a4:	0452 0453 0454 0455 0456 0457 0458 0459     R.S.T.U.V.W.X.Y.
   213b4:	045a 045b 045c 045e 045f 2170 2171 2172     Z.[.\.^._.p!q!r!
   213c4:	2173 2174 2175 2176 2177 2178 2179 217a     s!t!u!v!w!x!y!z!
   213d4:	217b 217c 217d 217e 217f ff41 ff42 ff43     {!|!}!~!.!A.B.C.
   213e4:	ff44 ff45 ff46 ff47 ff48 ff49 ff4a ff4b     D.E.F.G.H.I.J.K.
   213f4:	ff4c ff4d ff4e ff4f ff50 ff51 ff52 ff53     L.M.N.O.P.Q.R.S.
   21404:	ff54 ff55 ff56 ff57 ff58 ff59 ff5a 0000     T.U.V.W.X.Y.Z...

00021414 <tbl_upper.5776>:
   21414:	0041 0042 0043 0044 0045 0046 0047 0048     A.B.C.D.E.F.G.H.
   21424:	0049 004a 004b 004c 004d 004e 004f 0050     I.J.K.L.M.N.O.P.
   21434:	0051 0052 0053 0054 0055 0056 0057 0058     Q.R.S.T.U.V.W.X.
   21444:	0059 005a 0021 ffe0 ffe1 ffe5 ffe2 ffe3     Y.Z.!...........
   21454:	00c0 00c1 00c2 00c3 00c4 00c5 00c6 00c7     ................
   21464:	00c8 00c9 00ca 00cb 00cc 00cd 00ce 00cf     ................
   21474:	00d0 00d1 00d2 00d3 00d4 00d5 00d6 00d8     ................
   21484:	00d9 00da 00db 00dc 00dd 00de 0178 0100     ............x...
   21494:	0102 0104 0106 0108 010a 010c 010e 0110     ................
   214a4:	0112 0114 0116 0118 011a 011c 011e 0120     .............. .
   214b4:	0122 0124 0126 0128 012a 012c 012e 0130     ".$.&.(.*.,...0.
   214c4:	0132 0134 0136 0139 013b 013d 013f 0141     2.4.6.9.;.=.?.A.
   214d4:	0143 0145 0147 014a 014c 014e 0150 0152     C.E.G.J.L.N.P.R.
   214e4:	0154 0156 0158 015a 015c 015e 0160 0162     T.V.X.Z.\.^.`.b.
   214f4:	0164 0166 0168 016a 016c 016e 0170 0172     d.f.h.j.l.n.p.r.
   21504:	0174 0176 0179 017b 017d 0191 0391 0392     t.v.y.{.}.......
   21514:	0393 0394 0395 0396 0397 0398 0399 039a     ................
   21524:	039b 039c 039d 039e 039f 03a0 03a1 03a3     ................
   21534:	03a4 03a5 03a6 03a7 03a8 03a9 03aa 0410     ................
   21544:	0411 0412 0413 0414 0415 0416 0417 0418     ................
   21554:	0419 041a 041b 041c 041d 041e 041f 0420     .............. .
   21564:	0421 0422 0423 0424 0425 0426 0427 0428     !.".#.$.%.&.'.(.
   21574:	0429 042a 042b 042c 042d 042e 042f 0401     ).*.+.,.-.../...
   21584:	0402 0403 0404 0405 0406 0407 0408 0409     ................
   21594:	040a 040b 040c 040e 040f 2160 2161 2162     ..........`!a!b!
   215a4:	2163 2164 2165 2166 2167 2168 2169 216a     c!d!e!f!g!h!i!j!
   215b4:	216b 216c 216d 216e 216f ff21 ff22 ff23     k!l!m!n!o!!.".#.
   215c4:	ff24 ff25 ff26 ff27 ff28 ff29 ff2a ff2b     $.%.&.'.(.).*.+.
   215d4:	ff2c ff2d ff2e ff2f ff30 ff31 ff32 ff33     ,.-.../.0.1.2.3.
   215e4:	ff34 ff35 ff36 ff37 ff38 ff39 ff3a 0000     4.5.6.7.8.9.:...
   215f4:	ff9f c7ff 8094 ff9a                         ........

000215fc <CSWTCH.70>:
   215fc:	0000 0010 0000 0020 0000 0040 0000 0080     ...... ...@.....
   2160c:	6f6e 6564 e700 adde e7e7 4548 4c4c 0a4f     node......HELLO.
	...

0002161d <LED_DISPLAY_CHARMAP>:
	...
   2163d:	8600 0000 0000 0000 0000 0000 4000 0080     .............@..
   2164d:	303f 4f5b 6d66 077c 677f 0000 0000 0000     ?0[Ofm|..g......
   2165d:	7700 397f 793f 3d71 3076 001f 0038 3f00     .w.9?yq=v0..8..?
   2166d:	0073 6d00 3f00 0000 0000 0000 0000 0000     s..m.?..........
   2167d:	7700 397f 793f 3d71 3076 001f 0038 3f00     .w.9?yq=v0..8..?
   2168d:	0073 6d00 3f00 0000 0000 0000 0000 0000     s..m.?..........
   2169d:	ffff b0ff                                        ...

000216a0 <typeinfo for UartDev>:
   216a0:	22b0 0002 16ac 0002 16d4 0002               ."..........

000216ac <typeinfo name for UartDev>:
   216ac:	5537 7261 4474 7665 ff00 ffff               7UartDev....

000216b8 <vtable for UartDev>:
   216b8:	0000 0000 16a0 0002 4d09 0001 4c65 0001     .........M..eL..
   216c8:	4ce9 0001 4cc1 0001 4cd5 0001               .L...L...L..

000216d4 <typeinfo for CharDev>:
   216d4:	2250 0002 16dc 0002                         P"......

000216dc <typeinfo name for CharDev>:
   216dc:	4337 6168 4472 7665 ff00 ffff               7CharDev....

000216e8 <vtable for CharDev>:
   216e8:	0000 0000 16d4 0002 9009 0001 9009 0001     ................
   216f8:	4f3d 0001 0000 0000 0000 0000               =O..........

00021704 <typeinfo name for SingletonTemplate<Uart0>>:
   21704:	3731 6953 676e 656c 6f74 546e 6d65 6c70     17SingletonTempl
   21714:	7461 4965 5535 7261 3074 0045               ateI5Uart0E.

00021720 <typeinfo for SingletonTemplate<Uart0>>:
   21720:	2250 0002 1704 0002                         P"......

00021728 <typeinfo name for Uart0>:
   21728:	5535 7261 3074 ff00                         5Uart0..

00021730 <typeinfo for Uart0>:
   21730:	2310 0002 1728 0002 0000 0000 0002 0000     .#..(...........
   21740:	16a0 0002 0002 0000 1720 0002 0002 0000     ........ .......

00021750 <vtable for Uart0>:
   21750:	0000 0000 1730 0002 4d09 0001 4c65 0001     ....0....M..eL..
   21760:	4ce9 0001 5189 0001 519d 0001               .L...Q...Q..

0002176c <typeinfo name for SingletonTemplate<Uart3>>:
   2176c:	3731 6953 676e 656c 6f74 546e 6d65 6c70     17SingletonTempl
   2177c:	7461 4965 5535 7261 3374 0045               ateI5Uart3E.

00021788 <typeinfo for SingletonTemplate<Uart3>>:
   21788:	2250 0002 176c 0002                         P"..l...

00021790 <typeinfo name for Uart3>:
   21790:	5535 7261 3374 ff00                         5Uart3..

00021798 <typeinfo for Uart3>:
   21798:	2310 0002 1790 0002 0000 0000 0002 0000     .#..............
   217a8:	16a0 0002 0002 0000 1788 0002 0002 0000     ................

000217b8 <vtable for Uart3>:
   217b8:	0000 0000 1798 0002 4d09 0001 4c65 0001     .........M..eL..
   217c8:	4ce9 0001 51f1 0001 5205 0001 4000 4000     .L...Q...R...@.@
   217d8:	8000 4000 0000 4009 4000 4009               ...@...@.@.@

000217e4 <typeinfo name for SingletonTemplate<Uart2>>:
   217e4:	3731 6953 676e 656c 6f74 546e 6d65 6c70     17SingletonTempl
   217f4:	7461 4965 5535 7261 3274 0045               ateI5Uart2E.

00021800 <typeinfo for SingletonTemplate<Uart2>>:
   21800:	2250 0002 17e4 0002                         P"......

00021808 <typeinfo name for Uart2>:
   21808:	5535 7261 3274 ff00                         5Uart2..

00021810 <typeinfo for Uart2>:
   21810:	2310 0002 1808 0002 0000 0000 0002 0000     .#..............
   21820:	16a0 0002 0002 0000 1800 0002 0002 0000     ................

00021830 <vtable for Uart2>:
   21830:	0000 0000 1810 0002 4d09 0001 4c65 0001     .........M..eL..
   21840:	4ce9 0001 5515 0001 5529 0001 6c25 3a69     .L...U..)U..%li:
   21850:	2500 3a69 2c00 3025 5832 5300 4154 5452     .%i:.,%02X.START
   21860:	003a 4e45 3a44 6c00 676f 6567 0072 5245     :.END:.logger.ER
   21870:	4f52 3a52 6c20 676f 6567 2072 6e69 7469     ROR: logger init
   21880:	6169 696c 617a 6974 6e6f 6620 6961 756c     ialization failu
   21890:	6572 3000 6c3a 676f 632e 7673 4600 6961     re.0:log.csv.Fai
   218a0:	656c 2064 6966 656c 7720 6972 6574 203a     led file write: 
   218b0:	4500 7272 726f 2520 2075 7277 7469 6e69     .Error %u writin
   218c0:	2067 6f6c 6667 6c69 2e65 2520 2f75 7525     g logfile. %u/%u
   218d0:	7720 6972 7474 6e65 202e 7046 7274 203a      written. Fptr: 
   218e0:	7525 000a                                   %u..

000218e4 <typeinfo name for scheduler_task>:
   218e4:	3431 6373 6568 7564 656c 5f72 6174 6b73     14scheduler_task
   218f4:	ff00 ffff                                   ....

000218f8 <typeinfo for scheduler_task>:
   218f8:	2250 0002 18e4 0002                         P"......

00021900 <vtable for scheduler_task>:
   21900:	0000 0000 18f8 0002 0000 0000 0000 0000     ................
   21910:	6047 0001 604b 0001 604f 0001 9009 0001     G`..K`..O`......
   21920:	202a 5320 6174 7472 6e69 2067 6373 6568     *  Starting sche
   21930:	7564 656c 2072 2e2e 0a2e 4500 5252 524f     duler .....ERROR
   21940:	203a 6f53 656d 6e6f 2065 696b 6c6c 6465     : Someone killed
   21950:	7420 6568 7320 6863 6465 6c75 7265 4500      the scheduler.E
   21960:	5252 524f 203a 6552 7566 6973 676e 7420     RROR: Refusing t
   21970:	206f 7473 7261 2074 534f 7320 6863 6465     o start OS sched
   21980:	6c75 7265 6420 6575 7420 206f 7265 6f72     uler due to erro
   21990:	2872 2973 4500 5252 524f 203a 4f4e 7420     r(s).ERROR: NO t
   219a0:	7361 736b 6120 6464 6465 6220 2079 6373     asks added by sc
   219b0:	6568 7564 656c 5f72 6461 5f64 6174 6b73     heduler_add_task
   219c0:	2928 2a00 2020 7243 6165 6974 676e 7420     ().*  Creating t
   219d0:	7361 736b 2e20 2e2e 000a 2020 2d2d 203e     asks .....  --> 
   219e0:	4146 4c49 4445 7820 6154 6b73 7243 6165     FAILED xTaskCrea
   219f0:	6574 2928 4500 5252 524f 203a 7243 6165     te().ERROR: Crea
   21a00:	6974 676e 6320 756f 746e 6e69 2067 6573     ting counting se
   21a10:	616d 6870 726f 0065 202a 4920 696e 6974     maphore.*  Initi
   21a20:	6c61 7a69 6e69 2067 6174 6b73 2073 2e2e     alizing tasks ..
   21a30:	0a2e 2000 2d20 3e2d 4620 4941 454c 2044     ...  --> FAILED 
   21a40:	6e69 7469 2928 2a00 2020 6552 6967 7473     init().*  Regist
   21a50:	7265 6e69 2067 6174 6b73 2773 7420 6c65     ering tasks' tel
   21a60:	6d65 7465 7972 2e20 2e2e 000a 7266 6565     emetry .....free
   21a70:	735f 6174 6b63 7200 6e75 635f 756f 746e     _stack.run_count
   21a80:	2000 2d20 3e2d 4620 4941 454c 2044 6574     .  --> FAILED te
   21a90:	656c 656d 7274 2079 6572 6967 7473 6172     lemetry registra
   21aa0:	6974 6e6f 2a00 2020 6552 7473 726f 6e69     tion.*  Restorin
   21ab0:	2067 6964 6b73 7420 6c65 6d65 7465 7972     g disk telemetry
   21ac0:	000a 6964 6b73 2a00 2020 2000 6174 6b73     ..disk.*  . task
   21ad0:	6320 6c61 696c 676e 7420 7361 456b 746e      calling taskEnt
   21ae0:	7972 2928 6620 726f 6120 6c6c 7420 7361     ry() for all tas
   21af0:	736b 2e20 2e2e 0020 202a 4520 6361 2068     ks ... .*  Each 
   21b00:	6174 6b73 7720 6c69 206c 6874 6e65 6520     task will then e
   21b10:	746e 7265 7420 6568 7220 6e75 2928 6c20     nter the run() l
   21b20:	6f6f 0a70 2000 2d20 3e2d 4620 4941 454c     oop..  --> FAILE
   21b30:	2044 6174 6b73 6e45 7274 2879 0029 5245     D taskEntry().ER
   21b40:	4f52 3a52 4b20 6c69 696c 676e 4620 6572     ROR: Killing Fre
   21b50:	5265 4f54 2053 7564 2065 6f74 6520 7272     eRTOS due to err
   21b60:	726f 7328 0029 2d20 3e2d 4620 4941 554c     or(s). --> FAILU
   21b70:	4552 6420 7465 6365 6574 3b64 7320 7375     RE detected; sus
   21b80:	6570 646e 6e69 2067 6874 7369 7420 7361     pending this tas
   21b90:	206b 2e2e 002e 4449 454c 4800 4c41 4954     k ....IDLE.HALTI
   21ba0:	474e 5320 5359 4554 3a4d 5920 756f 2072     NG SYSTEM: Your 
   21bb0:	7973 7473 6d65 7220 6e61 6f20 7475 6f20     system ran out o
   21bc0:	2066 656d 6f6d 7972 2820 4152 294d 0a21     f memory (RAM)!.
   21bd0:	4800 4c41 4954 474e 5320 5359 4554 3a4d     .HALTING SYSTEM:
   21be0:	5320 6174 6b63 6f20 6576 6672 6f6c 2077      Stack overflow 
   21bf0:	7962 7420 7361 3a6b 0020 540a 7972 6920     by task: ..Try i
   21c00:	636e 6572 7361 6e69 2067 7473 6361 206b     ncreasing stack 
   21c10:	656d 6f6d 7972 6f20 2066 6874 7369 7420     memory of this t
   21c20:	7361 2e6b 000a 6f44 656e 4500 7272 726f     ask...Done.Error
   21c30:	4400 6e6f 2165 4600 4941 454c 0044 5245     .Done!.FAILED.ER
   21c40:	4f52 3a52 5020 736f 6973 6c62 2065 6873     ROR: Possible sh
   21c50:	726f 2074 6e6f 5320 4144 6f20 2072 4353     ort on SDA or SC
   21c60:	204c 6977 6572 2820 3249 3243 2129 4500     L wire (I2C2)!.E
   21c70:	5252 524f 203a 6146 6c69 6465 7420 206f     RROR: Failed to 
   21c80:	6e69 7469 6169 696c 657a 7720 7269 6c65     initialize wirel
   21c90:	7365 0073 6564 7562 0067 7953 7473 6d65     ess.debug.System
   21ca0:	4220 6f6f 2074 2040 2e25 6633 4d20 7a68      Boot @ %.3f Mhz
   21cb0:	000a 7953 7473 6d65 7220 6265 6f6f 6574     ..System reboote
   21cc0:	2064 6661 6574 2072 7263 7361 2e68 2020     d after crash.  
   21cd0:	6552 656c 6176 746e 6920 666e 3a6f 500a     Relevant info:.P
   21ce0:	3a43 3020 2578 3830 2e58 2020 524c 203a     C: 0x%08X.  LR: 
   21cf0:	7830 3025 5838 202e 5020 5253 203a 7830     0x%08X.  PSR: 0x
   21d00:	3025 5838 500a 736f 6973 6c62 2065 616c     %08X.Possible la
   21d10:	7473 7220 6e75 696e 676e 4f20 2053 6154     st running OS Ta
   21d20:	6b73 203a 2527 2773 000a 4620 616c 6873     sk: '%s'.. Flash
   21d30:	0020 7245 7361 6e69 2067 6e61 2064 6f66      .Erasing and fo
   21d40:	6d72 7461 6974 676e 5320 4950 6620 616c     rmatting SPI fla
   21d50:	6873 202c 6874 7369 6320 6e61 7420 6b61     sh, this can tak
   21d60:	2065 2061 6877 6c69 2065 2e2e 202e 5300     e a while ... .S
   21d70:	4950 4620 414c 4853 6920 2073 6f70 7373     PI FLASH is poss
   21d80:	6269 796c 6420 6d61 6761 6465 0021 6150     ibly damaged!.Pa
   21d90:	6567 7320 7a69 3a65 2520 0a75 4d00 6d65     ge size: %u..Mem
   21da0:	2020 6973 657a 203a 7525 2820 6172 2077       size: %u (raw 
   21db0:	7962 6574 2973 000a 4453 4320 7261 0064     bytes)..SD Card.
   21dc0:	5245 4f52 3a52 4120 6363 6c65 7265 7461     ERROR: Accelerat
   21dd0:	6f69 206e 6553 736e 726f 4500 5252 524f     ion Sensor.ERROR
   21de0:	203a 6554 706d 7265 7461 7275 2065 6553     : Temperature Se
   21df0:	736e 726f 4500 5252 524f 203a 2d37 6553     nsor.ERROR: 7-Se
   21e00:	6d67 6e65 2074 6944 7073 616c 0079 616e     gment Display.na
   21e10:	6464 0072 6553 2074 6977 6572 656c 7373     ddr.Set wireless
   21e20:	6e20 646f 2065 6461 7264 7365 2073 6f74      node address to
   21e30:	2520 2069 7266 6d6f 2720 7325 2027 6966      %i from '%s' fi
   21e40:	656c 203a 7325 000a 6f42 7261 2064 4449     le: %s..Board ID
   21e50:	6920 3a73 2720 7325 2027 3028 2578 3230      is: '%s' (0x%02
   21e60:	2958 000a 6e45 6574 2072 2061 6f62 7261     X)..Enter a boar
   21e70:	2064 4449 2820 3436 6320 6168 7372 6d20     d ID (64 chars m
   21e80:	7861 3a29 0020 3625 7334 4200 616f 6472     ax): .%64s.Board
   21e90:	4920 2044 6f74 7020 6f72 7267 6d61 203a      ID to program: 
   21ea0:	2527 2773 000a 6e45 6574 2072 5927 2027     '%s'..Enter 'Y' 
   21eb0:	6f74 6320 6e6f 6966 6d72 202e 4220 414f     to confirm.  BOA
   21ec0:	4452 4920 2044 4143 4e4e 544f 4220 2045     RD ID CANNOT BE 
   21ed0:	4843 4e41 4547 2044 4e41 2044 5349 5020     CHANGED AND IS P
   21ee0:	5245 414d 454e 544e 2500 7333 4200 616f     ERMANENT.%3s.Boa
   21ef0:	6472 4920 2044 6f6e 2074 7270 676f 6172     rd ID not progra
   21f00:	6d6d 6465 5900 756f 6320 6e61 7020 6f72     mmed.You can pro
   21f10:	7267 6d61 6120 5020 5245 414d 454e 544e     gram a PERMANENT
   21f20:	4920 2044 666f 7920 756f 2072 6f62 7261      ID of your boar
   21f30:	2e64 5400 206f 6f64 7420 6968 2c73 6820     d..To do this, h
   21f40:	6c6f 2064 5753 2031 6e61 2064 5753 2034     old SW1 and SW4 
   21f50:	6e61 2064 6572 6573 2074 6874 2065 6f62     and reset the bo
   21f60:	7261 2e64 4300 5550 6620 616c 6873 6120     ard..CPU flash a
   21f70:	746c 7265 6465 702f 6f72 7267 6d61 656d     ltered/programme
   21f80:	2064 6f63 6e75 7374 203a 7525 252f 0a75     d counts: %u/%u.
   21f90:	4300 5550 7020 6f72 7267 6d61 656d 2064     .CPU programmed 
   21fa0:	6c66 7361 2068 6d28 6e69 6d2f 7861 3a29     flash (min/max):
   21fb0:	2520 4b75 2062 202d 7525 624b 000a 614c      %uKb - %uKb..La
   21fc0:	7473 7020 6f72 7267 6d61 696d 676e 7420     st programming t
   21fd0:	6f6f 206b 7525 6d20 0a73 4300 6c61 696c     ook %u ms..Calli
   21fe0:	676e 7920 756f 2072 616d 6e69 2928 2d00     ng your main().-
   21ff0:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
   22000:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
   22010:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
   22020:	2d2d 2d2d 2d2d 2d2d 002d 424b 4d00 0042     ---------.KB.MB.
   22030:	6559 0073 6f4e 2500 3a73 4f20 204b 2d2d     Yes.No.%s: OK --
   22040:	4320 7061 6361 7469 2079 2d25 6435 7325      Capacity %-5d%s
   22050:	202c 7641 6961 616c 6c62 3a65 2520 352d     , Available: %-5
   22060:	2575 0a73 2500 3a73 4520 7272 726f 6f20     u%s..%s: Error o
   22070:	2072 6f6e 2074 7270 7365 6e65 2e74 2020     r not present.  
   22080:	7245 6f72 2072 2523 2c69 4d20 756f 746e     Error #%i, Mount
   22090:	6465 203a 7325 000a 6e55 7865 6570 7463     ed: %s..Unexpect
   220a0:	6465 6320 6c61 206c 6f74 6520 6978 2874     ed call to exit(
   220b0:	0029 6e55 7865 6570 7463 6465 6320 6c61     ).Unexpected cal
   220c0:	206c 6f74 6b20 6c69 286c 0029 642f 7665     l to kill()./dev
   220d0:	752f 7261 3074 2f00 6564 2f76 6175 7472     /uart0./dev/uart
   220e0:	0031 642f 7665 752f 6273 3800                    1./dev/usb.

000220eb <typeinfo name for play_mp3>:
   220eb:	7038 616c 5f79 706d 0033 ffff b0ff               8play_mp3....

000220f8 <typeinfo for play_mp3>:
   220f8:	22b0 0002 20eb 0002 18f8 0002               ."... ......

00022104 <typeinfo name for read_file>:
   22104:	7239 6165 5f64 6966 656c ff00               9read_file..

00022110 <typeinfo for read_file>:
   22110:	22b0 0002 2104 0002 18f8 0002               ."...!......

0002211c <typeinfo name for uart_display>:
   2211c:	3231 6175 7472 645f 7369 6c70 7961 ff00     12uart_display..

0002212c <typeinfo for uart_display>:
   2212c:	22b0 0002 211c 0002 18f8 0002               ."...!......

00022138 <vtable for play_mp3>:
   22138:	0000 0000 20f8 0002 856f 0001 8639 0001     ..... ..o...9...
   22148:	877d 0001 604b 0001 604f 0001 8679 0001     }...K`..O`..y...

00022158 <vtable for read_file>:
   22158:	0000 0000 2110 0002 856d 0001 8647 0001     .....!..m...G...
   22168:	88f9 0001 604b 0001 604f 0001 8821 0001     ....K`..O`..!...

00022178 <vtable for uart_display>:
   22178:	0000 0000 212c 0002 856b 0001 8657 0001     ....,!..k...W...
   22188:	8569 0001 604b 0001 604f 0001 8a89 0001     i...K`..O`......
   22198:	6572 7473 7261 0a74 3100 743a 6172 6b63     restart..1:track
   221a8:	0073 3a31 7274 6361 736b 252f 0073 6425     s.1:tracks/%s.%d
   221b8:	2d20 2520 0a73 6e00 7865 0a74 7000 6572      - %s..next..pre
   221c8:	0a76 7200 6165 5f64 6966 656c 7000 7561     v..read_file.pau
   221d8:	6573 000a 6f48 0a77 4f00 6570 656e 2064     se..How..Opened 
   221e8:	7325 000a 6f43 6c75 2064 6f6e 2074 706f     %s..Could not op
   221f8:	6e65 2520 0a73 7000 616c 5f79 706d 0033     en %s..play_mp3.
   22208:	6175 7472 645f 7369 6c70 7961 ff00 ffff     uart_display....

00022218 <typeinfo for __cxxabiv1::__class_type_info>:
   22218:	22b0 0002 2224 0002 2334 0002               ."..$"..4#..

00022224 <typeinfo name for __cxxabiv1::__class_type_info>:
   22224:	314e 5f30 635f 7878 6261 7669 3131 5f37     N10__cxxabiv117_
   22234:	635f 616c 7373 745f 7079 5f65 6e69 6f66     _class_type_info
   22244:	0045 ffff                                   E...

00022248 <vtable for __cxxabiv1::__class_type_info>:
   22248:	0000 0000 2218 0002 8e3d 0001 8e51 0001     ....."..=...Q...
   22258:	9495 0001 9495 0001 8e7d 0001 8dfd 0001     ........}.......
   22268:	8e65 0001 8ea7 0001 8e31 0001               e.......1...

00022274 <typeinfo for __cxxabiv1::__si_class_type_info>:
   22274:	22b0 0002 2280 0002 2218 0002               ."..."..."..

00022280 <typeinfo name for __cxxabiv1::__si_class_type_info>:
   22280:	314e 5f30 635f 7878 6261 7669 3231 5f30     N10__cxxabiv120_
   22290:	735f 5f69 6c63 7361 5f73 7974 6570 695f     _si_class_type_i
   222a0:	666e 456f ff00 ffff                         nfoE....

000222a8 <vtable for __cxxabiv1::__si_class_type_info>:
   222a8:	0000 0000 2274 0002 8ee1 0001 8ef5 0001     ....t"..........
   222b8:	9495 0001 9495 0001 8e7d 0001 8dfd 0001     ........}.......
   222c8:	8fbd 0001 8f41 0001 8f09 0001               ....A.......

000222d4 <typeinfo for __cxxabiv1::__vmi_class_type_info>:
   222d4:	22b0 0002 22e0 0002 2218 0002               ."..."..."..

000222e0 <typeinfo name for __cxxabiv1::__vmi_class_type_info>:
   222e0:	314e 5f30 635f 7878 6261 7669 3231 5f31     N10__cxxabiv121_
   222f0:	765f 696d 635f 616c 7373 745f 7079 5f65     _vmi_class_type_
   22300:	6e69 6f66 0045 ffff                         infoE...

00022308 <vtable for __cxxabiv1::__vmi_class_type_info>:
   22308:	0000 0000 22d4 0002 9011 0001 9025 0001     ....."......%...
   22318:	9495 0001 9495 0001 8e7d 0001 8dfd 0001     ........}.......
   22328:	9369 0001 90d7 0001 9039 0001               i.......9...

00022334 <typeinfo for std::type_info>:
   22334:	2250 0002 233c 0002                         P"..<#..

0002233c <typeinfo name for std::type_info>:
   2233c:	7453 7439 7079 5f65 6e69 6f66 ff00 ffff     St9type_info....

0002234c <__sf_fake_stderr>:
	...

0002236c <__sf_fake_stdin>:
	...

0002238c <__sf_fake_stdout>:
	...

000223ac <_global_impure_ptr>:
   223ac:	c0e8 2007 0043 4f50 4953 0058               ... C.POSIX.

000223b8 <DAYS_IN_MONTH>:
   223b8:	001f 0000 001c 0000 001f 0000 001e 0000     ................
   223c8:	001f 0000 001e 0000 001f 0000 001f 0000     ................
   223d8:	001e 0000 001f 0000 001e 0000 001f 0000     ................

000223e8 <_DAYS_BEFORE_MONTH>:
   223e8:	0000 0000 001f 0000 003b 0000 005a 0000     ........;...Z...
   223f8:	0078 0000 0097 0000 00b5 0000 00d4 0000     x...............
   22408:	00f3 0000 0111 0000 0130 0000 014e 0000     ........0...N...

00022418 <__month_lengths>:
   22418:	001f 0000 001c 0000 001f 0000 001e 0000     ................
   22428:	001f 0000 001e 0000 001f 0000 001f 0000     ................
   22438:	001e 0000 001f 0000 001e 0000 001f 0000     ................
   22448:	001f 0000 001d 0000 001f 0000 001e 0000     ................
   22458:	001f 0000 001e 0000 001f 0000 001f 0000     ................
   22468:	001e 0000 001f 0000 001e 0000 001f 0000     ................
   22478:	4e49 0046 6e69 0066 414e 004e 616e 006e     INF.inf.NAN.nan.
   22488:	3130 3332 3534 3736 3938 4241 4443 4645     0123456789ABCDEF
   22498:	3000 3231 3433 3635 3837 6139 6362 6564     .0123456789abcde
   224a8:	0066 2565 646c ff00                         f.e%ld..

000224b0 <fpi.6129>:
   224b0:	0035 0000 fbce ffff 03cb 0000 0001 0000     5...............
   224c0:	0000 0000                                   ....

000224c4 <fpinan.6165>:
   224c4:	0034 0000 fbce ffff 03cb 0000 0001 0000     4...............
   224d4:	0000 0000                                   ....

000224d8 <tinytens>:
   224d8:	89bc 97d8 d2b2 3c9c a733 d5a8 f623 3949     .......<3...#.I9
   224e8:	a73d 44f4 0ffd 32a5 979d cf8c ba08 255b     =..D...2......[%
   224f8:	6f43 64ac 0628 1168 5a54 4700 544d 2500     Co.d(.h.TZ.GMT.%
   22508:	3031 5e5b 2d30 2c39 2d2b 255d 006e 254d     10[^0-9,+-]%n.M%
   22518:	7568 6e25 252e 7568 6e25 252e 7568 6e25     hu%n.%hu%n.%hu%n
   22528:	2f00 6825 2575 3a6e 6825 2575 3a6e 6825     ./%hu%n:%hu%n:%h
   22538:	2575 006e                                   u%n.

0002253c <_ctype_>:
   2253c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
   2254c:	2020 2020 2020 2020 2020 2020 2020 2020                     
   2255c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
   2256c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
   2257c:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
   2258c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
   2259c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
   225ac:	0202 0202 0202 0202 0202 0202 1010 1010     ................
   225bc:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...
   2263c:	4900 666e 6e69 7469 0079 614e 004e ffff     .Infinity.NaN...
   2264c:	ffff ffff                                   ....

00022650 <__mprec_bigtens>:
   22650:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
   22660:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
   22670:	bf3c 7f73 4fdd 7515                         <.s..O.u

00022678 <__mprec_tens>:
   22678:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
   22688:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
   22698:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
   226a8:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
   226b8:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
   226c8:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
   226d8:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
   226e8:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
   226f8:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
   22708:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
   22718:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
   22728:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
   22738:	9db4 79d9 7843 44ea                         ...yCx.D

00022740 <p05.6047>:
   22740:	0005 0000 0019 0000 007d 0000 2d23 2b30     ........}...#-0+
   22750:	0020 6c68 004c 6665 4567 4746 ff00 ffff      .hlL.efgEFG....
   22760:	277e 0002 2781 0002 2784 0002 2d41 6146     ~'...'...'..A-Fa
   22770:	662d 3938 3130 3332 3534 3736 005d 2d2b     -f8901234567].+-
   22780:	3000 0030 5878 ff00                         .00.xX..

00022788 <__init_array_start>:
__preinit_array_start():
   22788:	00018ab9 	.word	0x00018ab9

0002278c <APP_SYM_TABLE>:
__symbol_table_start():
   2278c:	31303030 30383561 61205420 74726f62     0001a580 T abort
   2279c:	3030300a 35363531 20542063 30636461     .0001565c T adc0
   227ac:	7465675f 6165725f 676e6964 3030300a     _get_reading.000
   227bc:	65353531 20542038 30636461 696e695f     155e8 T adc0_ini
   227cc:	30300a74 35353130 54203061 43444120     t.000155a0 T ADC
   227dc:	5152495f 646e6148 0a72656c 31303030     _IRQHandler.0001
   227ec:	65383561 61205420 0a696f74 31303030     a58e T atoi.0001
   227fc:	38393561 63205420 6f6c6c61 30300a63     a598 T calloc.00
   2280c:	31353130 54203036 4e414320 5152495f     015160 T CAN_IRQ
   2281c:	646e6148 0a72656c 31303030 34616635     Handler.00015fa4
   2282c:	63205420 73696c5f 72635f74 65746165      T c_list_create
   2283c:	3030300a 66663531 20542030 696c5f63     .00015ff0 T c_li
   2284c:	665f7473 5f646e69 0a6d6c65 31303030     st_find_elm.0001
   2285c:	63313036 63205420 73696c5f 6f665f74     601c T c_list_fo
   2286c:	61655f72 655f6863 300a6d6c 35313030     r_each_elm.00015
   2287c:	20386266 5f632054 7473696c 736e695f     fb8 T c_list_ins
   2288c:	5f747265 5f6d6c65 0a646e65 31303030     ert_elm_end.0001
   2289c:	30616530 63205420 7473756c 63657332     0ea0 T clust2sec
   228ac:	30300a74 34363130 54206366 6c656420     t.000164fc T del
   228bc:	6d5f7961 30300a73 34363130 54203264     ay_ms.000164d2 T
   228cc:	6c656420 755f7961 30300a73 33333130      delay_us.000133
   228dc:	54206334 73696420 6e695f6b 61697469     4c T disk_initia
   228ec:	657a696c 3030300a 66333331 20542032     lize.000133f2 T 
   228fc:	6b736964 636f695f 300a6c74 33313030     disk_ioctl.00013
   2290c:	20323833 69642054 725f6b73 0a646165     382 T disk_read.
   2291c:	31303030 32373333 64205420 5f6b7369     00013372 T disk_
   2292c:	74617473 300a7375 33313030 20616233     status.000133ba 
   2293c:	69642054 775f6b73 65746972 3030300a     T disk_write.000
   2294c:	36656431 20542038 0a766964 31303030     1de68 T div.0001
   2295c:	63373335 65205420 33746e69 616e655f     537c T eint3_ena
   2296c:	5f656c62 74726f70 30300a30 32353130     ble_port0.000152
   2297c:	54206366 4e494520 495f3354 61485152     fc T EINT3_IRQHa
   2298c:	656c646e 30300a72 36613130 54203835     ndler.0001a658 T
   2299c:	6c636620 0a65736f 31303030 34396531      fclose.00011e94
   229ac:	66205420 6f6c635f 300a6573 32313030      T f_close.00012
   229bc:	20633830 5f662054 736f6c63 72696465     08c T f_closedir
   229cc:	3030300a 63363231 20542030 635f6666     .000126c0 T ff_c
   229dc:	65766e6f 300a7472 32313030 20303237     onvert.00012720 
   229ec:	66662054 6572635f 6e79735f 6a626f63     T ff_cre_syncobj
   229fc:	3030300a 33373231 20542034 645f6666     .00012734 T ff_d
   22a0c:	735f6c65 6f636e79 300a6a62 61313030     el_syncobj.0001a
   22a1c:	20636337 66662054 6873756c 3030300a     7cc T fflush.000
   22a2c:	35373231 20542065 725f6666 675f6c65     1275e T ff_rel_g
   22a3c:	746e6172 3030300a 33373231 20542038     rant.00012738 T 
   22a4c:	725f6666 675f7165 746e6172 3030300a     ff_req_grant.000
   22a5c:	66363231 20542063 775f6666 70756f74     126fc T ff_wtoup
   22a6c:	0a726570 31303030 38343861 66205420     per.0001a848 T f
   22a7c:	63746567 3030300a 30313231 20542034     getc.00012104 T 
   22a8c:	65675f66 65726674 30300a65 39613130     f_getfree.0001a9
   22a9c:	54206331 65676620 300a7374 32313030     1c T fgets.00012
   22aac:	20383063 6c662054 5f687361 70696863     c08 T flash_chip
   22abc:	6172655f 300a6573 32313030 20303462     _erase.00012b40 
   22acc:	6c662054 5f687361 5f746567 65676170     T flash_get_page
   22adc:	756f635f 300a746e 32313030 20303662     _count.00012b60 
   22aec:	6c662054 5f687361 5f746567 65676170     T flash_get_page
   22afc:	7a69735f 30300a65 39323130 54203836     _size.00012968 T
   22b0c:	616c6620 695f6873 6974696e 7a696c61      flash_initializ
   22b1c:	30300a65 61323130 54206339 616c6620     e.00012a9c T fla
   22b2c:	695f6873 6c74636f 3030300a 31623231     sh_ioctl.00012b1
   22b3c:	20542038 73616c66 65725f68 705f6461     8 T flash_read_p
   22b4c:	616d7265 746e656e 0a64695f 31303030     ermanent_id.0001
   22b5c:	30306132 66205420 6873616c 6165725f     2a00 T flash_rea
   22b6c:	65735f64 726f7463 30300a73 62323130     d_sectors.00012b
   22b7c:	54206336 616c6620 735f6873 6f707075     6c T flash_suppo
   22b8c:	5f737472 6174656d 61746164 3030300a     rts_metadata.000
   22b9c:	64613231 20542034 73616c66 72775f68     12ad4 T flash_wr
   22bac:	5f657469 6d726570 6e656e61 64695f74     ite_permanent_id
   22bbc:	3030300a 35613231 20542030 73616c66     .00012a50 T flas
   22bcc:	72775f68 5f657469 74636573 0a73726f     h_write_sectors.
   22bdc:	31303030 38626531 66205420 65736c5f     00011eb8 T f_lse
   22bec:	300a6b65 32313030 20636331 5f662054     ek.000121cc T f_
   22bfc:	73666b6d 3030300a 34393131 20542034     mkfs.00011944 T 
   22c0c:	6f6d5f66 0a746e75 31303030 63306261     f_mount.0001ab0c
   22c1c:	66205420 6e65706f 3030300a 63393131      T fopen.000119c
   22c2c:	20542030 706f5f66 300a6e65 32313030     0 T f_open.00012
   22c3c:	20363030 5f662054 6e65706f 0a726964     006 T f_opendir.
   22c4c:	31303030 65656131 66205420 6165725f     00011aee T f_rea
   22c5c:	30300a64 30323130 54203661 725f6620     d.000120a6 T f_r
   22c6c:	64646165 300a7269 61313030 20386664     eaddir.0001adf8 
   22c7c:	72662054 300a6565 31313030 20613065     T free.00011e0a 
   22c8c:	5f662054 636e7973 3030300a 35633131     T f_sync.00011c5
   22c9c:	20542065 72775f66 0a657469 31303030     e T f_write.0001
   22cac:	36626530 67205420 665f7465 300a7461     0eb6 T get_fat.0
   22cbc:	33313030 20343234 65672054 61665f74     0013424 T get_fa
   22ccc:	6d697474 30300a65 30303130 54203030     ttime.00010000 T
   22cdc:	705f6720 65566e66 726f7463 30300a73      g_pfnVectors.00
   22cec:	38353130 54203064 43324920 52495f32     0158d0 T I2C2_IR
   22cfc:	6e614851 72656c64 3030300a 30326331     QHandler.0001c20
   22d0c:	20542038 69727069 0a66746e 31303030     8 T iprintf.0001
   22d1c:	38373563 69205420 6e616373 30300a66     c578 T iscanf.00
   22d2c:	34363130 54206565 5f736920 65657266     0164ee T is_free
   22d3c:	736f7472 6e75725f 676e696e 3030300a     rtos_running.000
   22d4c:	34313031 20542038 5f727369 61666564     10148 T isr_defa
   22d5c:	5f746c75 646e6168 0a72656c 31303030     ult_handler.0001
   22d6c:	63343230 69205420 685f7273 5f647261     024c T isr_hard_
   22d7c:	6c756166 61685f74 656c646e 30300a72     fault_handler.00
   22d8c:	32303130 54206333 72736920 6765725f     01023c T isr_reg
   22d9c:	65747369 30300a72 31303130 54203439     ister.00010194 T
   22dac:	72736920 7365725f 300a7465 35313030      isr_reset.00015
   22dbc:	20386465 6f6c2054 72656767 696e695f     ed8 T logger_ini
   22dcc:	30300a74 34303130 54203436 63706c20     t.00010464 T lpc
   22ddc:	6c63705f 30300a6b 34303130 54203033     _pclk.00010430 T
   22dec:	63706c20 6f63705f 300a706e 30313030      lpc_pconp.00010
   22dfc:	20346132 706c2054 79735f63 65735f73     2a4 T lpc_sys_se
   22e0c:	5f707574 74737973 745f6d65 72656d69     tup_system_timer
   22e1c:	3030300a 63333531 20542063 5f63706c     .000153cc T lpc_
   22e2c:	656d6974 6e655f72 656c6261 3030300a     timer_enable.000
   22e3c:	65393831 20542063 6e69616d 3030300a     189ec T main.000
   22e4c:	37336231 20542038 6c6c616d 6f666e69     1b378 T mallinfo
   22e5c:	3030300a 65646131 20542038 6c6c616d     .0001ade8 T mall
   22e6c:	300a636f 61313030 20633265 656d2054     oc.0001ae2c T me
   22e7c:	7268636d 3030300a 34656131 20542038     mchr.0001ae48 T 
   22e8c:	636d656d 300a706d 61313030 20363665     memcmp.0001ae66 
   22e9c:	656d2054 7970636d 3030300a 37656131     T memcpy.0001ae7
   22eac:	20542063 6d6d656d 0a65766f 31303030     c T memmove.0001
   22ebc:	30626561 6d205420 65736d65 30300a74     aeb0 T memset.00
   22ecc:	66333130 54203831 73656d20 6f665f68     013f18 T mesh_fo
   22edc:	705f6d72 300a746b 33313030 20633066     rm_pkt.00013f0c 
   22eec:	656d2054 675f6873 6e5f7465 5f65646f     T mesh_get_node_
   22efc:	72646461 0a737365 31303030 30633134     address.000141c0
   22f0c:	6d205420 5f687365 5f746567 5f6d756e      T mesh_get_num_
   22f1c:	74756f72 5f676e69 72746e65 0a736569     routing_entries.
   22f2c:	31303030 63613434 6d205420 5f687365     000144ac T mesh_
   22f3c:	5f746567 5f646e70 5f746b70 6e756f63     get_pnd_pkt_coun
   22f4c:	30300a74 30343130 54203836 73656d20     t.00014068 T mes
   22f5c:	6e695f68 300a7469 34313030 20383631     h_init.00014168 
   22f6c:	656d2054 735f6873 0a646e65 31303030     T mesh_send.0001
   22f7c:	30313034 6d205420 5f687365 646e6573     4010 T mesh_send
   22f8c:	726f665f 5f64656d 0a746b70 31303030     _formed_pkt.0001
   22f9c:	63643134 6d205420 5f687365 76726573     41dc T mesh_serv
   22fac:	0a656369 31303030 34666533 6d205420     ice.00013ef4 T m
   22fbc:	5f687365 5f746573 65646f6e 6464615f     esh_set_node_add
   22fcc:	73736572 3030300a 38306231 20542030     ress.0001b080 T 
   22fdc:	69746b6d 300a656d 63313030 20343037     mktime.0001c704 
   22fec:	616e2054 300a666e 33313030 20636437     T nanf.000137dc 
   22ffc:	6f6e2054 63696472 656c635f 615f7261     T nordic_clear_a
   2300c:	695f6c6c 5f72746e 67616c66 30300a73     ll_intr_flags.00
   2301c:	38333130 54206361 726f6e20 5f636964     0138ac T nordic_
   2302c:	61656c63 61705f72 74656b63 6176615f     clear_packet_ava
   2303c:	62616c69 665f656c 0a67616c 31303030     ilable_flag.0001
   2304c:	63333833 6e205420 6964726f 6c635f63     383c T nordic_cl
   2305c:	5f726165 6b636170 735f7465 5f746e65     ear_packet_sent_
   2306c:	67616c66 3030300a 63383331 20542038     flag.000138c8 T 
   2307c:	64726f6e 665f6369 6873756c 5f78725f     nordic_flush_rx_
   2308c:	6f666966 3030300a 34383331 20542034     fifo.00013844 T 
   2309c:	64726f6e 665f6369 6873756c 5f78745f     nordic_flush_tx_
   230ac:	6f666966 3030300a 35613331 20542063     fifo.00013a5c T 
   230bc:	64726f6e 695f6369 0a74696e 31303030     nordic_init.0001
   230cc:	63393833 6e205420 6964726f 73695f63     389c T nordic_is
   230dc:	6361705f 5f74656b 69617661 6c62616c     _packet_availabl
   230ec:	30300a65 37333130 54206563 726f6e20     e.000137ce T nor
   230fc:	5f636964 745f7369 69665f78 655f6f66     dic_is_tx_fifo_e
   2310c:	7974706d 3030300a 35383331 20542030     mpty.00013850 T 
   2311c:	64726f6e 6d5f6369 3165646f 6e65735f     nordic_mode1_sen
   2312c:	69735f64 656c676e 6361705f 0a74656b     d_single_packet.
   2313c:	31303030 32363933 6e205420 6964726f     00013962 T nordi
   2314c:	6f705f63 5f726577 6e776f64 3030300a     c_power_down.000
   2315c:	34393331 20542061 64726f6e 705f6369     1394a T nordic_p
   2316c:	7265776f 0a70755f 31303030 34653733     ower_up.000137e4
   2317c:	6e205420 6964726f 75715f63 5f657565      T nordic_queue_
   2318c:	665f7874 0a6f6669 31303030 34623833     tx_fifo.000138b4
   2319c:	6e205420 6964726f 65725f63 725f6461      T nordic_read_r
   231ac:	69665f78 300a6f66 33313030 20383038     x_fifo.00013808 
   231bc:	6f6e2054 63696472 5f78725f 535f6f74     T nordic_rx_to_S
   231cc:	626e6174 300a3179 33313030 20633261     tanby1.00013a2c 
   231dc:	6f6e2054 63696472 7465735f 6464615f     T nordic_set_add
   231ec:	69775f72 0a687464 31303030 63393933     r_width.0001399c
   231fc:	6e205420 6964726f 65735f63 69615f74      T nordic_set_ai
   2320c:	61645f72 725f6174 0a657461 31303030     r_data_rate.0001
   2321c:	63653933 6e205420 6964726f 65735f63     39ec T nordic_se
   2322c:	75615f74 745f6f74 736e6172 5f74696d     t_auto_transmit_
   2323c:	6974706f 0a736e6f 31303030 38373933     options.00013978
   2324c:	6e205420 6964726f 65735f63 68635f74      T nordic_set_ch
   2325c:	656e6e61 30300a6c 39333130 54203231     annel.00013912 T
   2326c:	726f6e20 5f636964 5f746573 0a637263      nordic_set_crc.
   2327c:	31303030 34643833 6e205420 6964726f     000138d4 T nordi
   2328c:	65735f63 6e695f74 735f7274 616e6769     c_set_intr_signa
   2329c:	300a736c 33313030 20383161 6f6e2054     ls.00013a18 T no
   232ac:	63696472 7465735f 7961705f 64616f6c     rdic_set_payload
   232bc:	726f665f 7069705f 30300a65 39333130     _for_pipe.000139
   232cc:	54203863 726f6e20 5f636964 5f746573     c8 T nordic_set_
   232dc:	65776f70 656c5f72 0a6c6576 31303030     power_level.0001
   232ec:	65346133 6e205420 6964726f 65735f63     3a4e T nordic_se
   232fc:	78725f74 7069705f 615f3065 0a726464     t_rx_pipe0_addr.
   2330c:	31303030 32346133 6e205420 6964726f     00013a42 T nordi
   2331c:	65735f63 78745f74 6464615f 73736572     c_set_tx_address
   2332c:	3030300a 31383331 20542038 64726f6e     .00013818 T nord
   2333c:	735f6369 646e6174 5f317962 725f6f74     ic_standby1_to_r
   2334c:	30300a78 37333130 54203066 726f6e20     x.000137f0 T nor
   2335c:	5f636964 6e617473 31796264 5f6f745f     dic_standby1_to_
   2336c:	6d5f7874 3165646f 3030300a 62633231     tx_mode1.00012cb
   2337c:	20542063 65776f70 666f5f72 30300a66     c T power_off.00
   2338c:	32633130 54203830 69727020 0a66746e     01c208 T printf.
   2339c:	31303030 63646630 70205420 665f7475     00010fdc T put_f
   233ac:	300a7461 63313030 20306632 75702054     at.0001c2f0 T pu
   233bc:	300a7374 36313030 20653135 76702054     ts.0001651e T pv
   233cc:	74726f50 6c6c614d 300a636f 37313030     PortMalloc.00017
   233dc:	20303935 76702054 6b736154 72636e49     590 T pvTaskIncr
   233ec:	6e656d65 74754d74 65487865 6f43646c     ementMutexHeldCo
   233fc:	0a746e75 31303030 34313637 70205420     unt.00017614 T p
   2340c:	726f5078 696e4974 6c616974 53657369     xPortInitialiseS
   2341c:	6b636174 3030300a 35376331 20542063     tack.0001c75c T 
   2342c:	73696172 30300a65 33633130 54203035     raise.0001c350 T
   2343c:	6e617220 30300a64 63323130 54203065      rand.00012ce0 T
   2344c:	76637220 61645f72 6c626174 0a6b636f      rcvr_datablock.
   2345c:	31303030 34633363 72205420 6c6c6165     0001c3c4 T reall
   2346c:	300a636f 35313030 20633630 49522054     oc.0001506c T RI
   2347c:	52495f54 6e614851 72656c64 3030300a     T_IRQHandler.000
   2348c:	64363531 20542030 5f637472 74746567     156d0 T rtc_gett
   2349c:	0a656d69 31303030 30383735 72205420     ime.00015780 T r
   234ac:	695f6374 0a74696e 31303030 38616335     tc_init.00015ca8
   234bc:	52205420 495f4354 61485152 656c646e      T RTC_IRQHandle
   234cc:	30300a72 37353130 54203831 63747220     r.00015718 T rtc
   234dc:	7465735f 656d6974 3030300a 36373731     _settime.0001776
   234ec:	20542038 5f737472 5f746f6e 6c6c7566     8 T rts_not_full
   234fc:	6172745f 675f6563 300a7465 37313030     _trace_get.00017
   2350c:	20343537 74722054 6f6e5f73 75665f74     754 T rts_not_fu
   2351c:	745f6c6c 65636172 696e695f 30300a74     ll_trace_init.00
   2352c:	35633130 54203837 61637320 300a666e     01c578 T scanf.0
   2353c:	32313030 20383665 64732054 696e695f     0012e68 T sd_ini
   2354c:	6c616974 0a657a69 31303030 30333133     tialize.00013130
   2355c:	73205420 6f695f64 0a6c7463 31303030      T sd_ioctl.0001
   2356c:	34656632 73205420 65725f64 300a6461     2fe4 T sd_read.0
   2357c:	32313030 20346466 64732054 6174735f     0012fd4 T sd_sta
   2358c:	0a737574 31303030 34346532 73205420     tus.00012e44 T s
   2359c:	70755f64 65746164 7261635f 74735f64     d_update_card_st
   235ac:	73757461 3030300a 37303331 20542063     atus.0001307c T 
   235bc:	775f6473 65746972 3030300a 62643231     sd_write.00012db
   235cc:	20542038 646e6573 646d635f 3030300a     8 T send_cmd.000
   235dc:	61356331 20542038 76746573 0a667562     1c5a8 T setvbuf.
   235ec:	31303030 34393763 73205420 69727069     0001c794 T sipri
   235fc:	0a66746e 31303030 63643763 73205420     ntf.0001c7dc T s
   2360c:	61637369 300a666e 35313030 20383130     iscanf.00015018 
   2361c:	70732054 6c5f3169 0a6b636f 31303030     T spi1_lock.0001
   2362c:	38343035 73205420 5f316970 6f6c6e75     5048 T spi1_unlo
   2363c:	300a6b63 63313030 20343937 70732054     ck.0001c794 T sp
   2364c:	746e6972 30300a66 33633130 54203030     rintf.0001c300 T
   2365c:	61727320 300a646e 63313030 20636437      srand.0001c7dc 
   2366c:	73732054 666e6163 3030300a 33343531     T sscanf.0001543
   2367c:	20542038 31707373 616d645f 696e695f     8 T ssp1_dma_ini
   2368c:	30300a74 34353130 54203435 70737320     t.00015454 T ssp
   2369c:	6d645f31 72745f61 66736e61 625f7265     1_dma_transfer_b
   236ac:	6b636f6c 3030300a 62386331 20542061     lock.0001c8ba T 
   236bc:	63727473 300a7268 63313030 20366438     strchr.0001c8d6 
   236cc:	74732054 706d6372 3030300a 65386331     T strcmp.0001c8e
   236dc:	20542061 63727473 300a7970 63313030     a T strcpy.0001c
   236ec:	20616638 74732054 6e656c72 3030300a     8fa T strlen.000
   236fc:	30396331 20542061 6e727473 0a706d63     1c90a T strncmp.
   2370c:	31303030 65323963 73205420 636e7274     0001c92e T strnc
   2371c:	300a7970 63313030 20383539 74732054     py.0001c958 T st
   2372c:	72747372 3030300a 33366431 20542032     rstr.0001d632 T 
   2373c:	74727473 725f6b6f 3030300a 35376431     strtok_r.0001d75
   2374c:	20542063 74727473 300a6c6f 30323030     c T strtol.00020
   2375c:	20633162 74732054 756f7472 30300a6c     b1c T strtoul.00
   2376c:	30383130 54203439 73797320 6c6c6163     018094 T syscall
   2377c:	6e695f73 300a7469 30313030 20386136     s_init.000106a8 
   2378c:	79732054 65675f73 6f625f74 745f746f     T sys_get_boot_t
   2379c:	0a657079 31303030 30303630 73205420     ype.00010600 T s
   237ac:	675f7379 635f7465 635f7570 6b636f6c     ys_get_cpu_clock
   237bc:	3030300a 62343831 20542030 5f737973     .000184b0 T sys_
   237cc:	5f746567 5f6d656d 6f666e69 3030300a     get_mem_info.000
   237dc:	32333031 20542034 5f737973 5f746567     10324 T sys_get_
   237ec:	5f6d656d 6f666e69 7274735f 3030300a     mem_info_str.000
   237fc:	66323031 20542038 5f737973 5f746567     102f8 T sys_get_
   2380c:	69747075 755f656d 30300a73 30383130     uptime_us.000180
   2381c:	54203036 73797320 7465735f 636e695f     60 T sys_set_inc
   2382c:	5f726168 636e7566 3030300a 35303831     har_func.0001805
   2383c:	20542034 5f737973 5f746573 6374756f     4 T sys_set_outc
   2384c:	5f726168 636e7566 3030300a 38376431     har_func.0001d78
   2385c:	20542038 656d6974 3030300a 37333031     8 T time.0001037
   2386c:	20542034 454d4954 495f3152 61485152     4 T TIMER1_IRQHa
   2387c:	656c646e 30300a72 39353130 54206332     ndler.0001592c T
   2388c:	6d6c7420 6d6f635f 656e6f70 615f746e      tlm_component_a
   2389c:	300a6464 35313030 20383039 6c742054     dd.00015908 T tl
   238ac:	6f635f6d 6e6f706d 5f746e65 5f746567     m_component_get_
   238bc:	6e5f7962 0a656d61 31303030 30376135     by_name.00015a70
   238cc:	74205420 735f6d6c 61657274 65645f6d      T tlm_stream_de
   238dc:	65646f63 6c69665f 30300a65 61353130     code_file.00015a
   238ec:	54203834 6d6c7420 7261765f 6c626169     48 T tlm_variabl
   238fc:	65675f65 79625f74 6d616e5f 30300a65     e_get_by_name.00
   2390c:	39353130 54206363 6d6c7420 7261765f     0159cc T tlm_var
   2391c:	6c626169 65725f65 74736967 300a7265     iable_register.0
   2392c:	36313030 20363934 30752054 6762645f     0016496 T u0_dbg
   2393c:	6972705f 0a66746e 31303030 38373436     _printf.00016478
   2394c:	75205420 62645f30 75705f67 30300a74      T u0_dbg_put.00
   2395c:	39303130 54206333 72617520 675f3074     01093c T uart0_g
   2396c:	68637465 300a7261 30313030 20636438     etchar.000108dc 
   2397c:	61752054 5f307472 74696e69 3030300a     T uart0_init.000
   2398c:	63313531 20542063 54524155 52495f30     151cc T UART0_IR
   2399c:	6e614851 72656c64 3030300a 35393031     QHandler.0001095
   239ac:	20542034 74726175 75705f30 61686374     4 T uart0_putcha
   239bc:	30300a72 39303130 54206336 72617520     r.0001096c T uar
   239cc:	705f3074 0a737475 31303030 38353535     t0_puts.00015558
   239dc:	55205420 32545241 5152495f 646e6148      T UART2_IRQHand
   239ec:	0a72656c 31303030 34373235 55205420     ler.00015274 T U
   239fc:	33545241 5152495f 646e6148 0a72656c     ART3_IRQHandler.
   23a0c:	31303030 38623536 75205420 73694c78     000165b8 T uxLis
   23a1c:	6d655274 0a65766f 31303030 63386236     tRemove.00016b8c
   23a2c:	75205420 65755178 654d6575 67617373      T uxQueueMessag
   23a3c:	61577365 6e697469 30300a67 62363130     esWaiting.00016b
   23a4c:	54206539 51787520 65756575 7373654d     9e T uxQueueMess
   23a5c:	73656761 74696157 46676e69 496d6f72     agesWaitingFromI
   23a6c:	300a5253 37313030 20303534 78752054     SR.00017450 T ux
   23a7c:	6b736154 53746547 6b636174 68676948     TaskGetStackHigh
   23a8c:	65746157 72614d72 30300a6b 37373130     WaterMark.000177
   23a9c:	54206337 70417620 63696c70 6f697461     7c T vApplicatio
   23aac:	6c64496e 6f6f4865 30300a6b 37373130     nIdleHook.000177
   23abc:	54203862 70417620 63696c70 6f697461     b8 T vApplicatio
   23acc:	6c614d6e 46636f6c 656c6961 6f6f4864     nMallocFailedHoo
   23adc:	30300a6b 37373130 54203038 70417620     k.00017780 T vAp
   23aec:	63696c70 6f697461 6174536e 764f6b63     plicationStackOv
   23afc:	6c667265 6f48776f 300a6b6f 36313030     erflowHook.00016
   23b0c:	20363535 4c762054 49747369 6974696e     556 T vListIniti
   23b1c:	73696c61 30300a65 35363130 54206336     alise.0001656c T
   23b2c:	694c7620 6e497473 61697469 6573696c      vListInitialise
   23b3c:	6d657449 3030300a 38353631 20542061     Item.0001658a T 
   23b4c:	73694c76 736e4974 0a747265 31303030     vListInsert.0001
   23b5c:	32373536 76205420 7473694c 65736e49     6572 T vListInse
   23b6c:	6e457472 30300a64 36373130 54203436     rtEnd.00017664 T
   23b7c:	6f507620 6e457472 68635364 6c756465      vPortEndSchedul
   23b8c:	300a7265 37313030 20383636 50762054     er.00017668 T vP
   23b9c:	4574726f 7265746e 74697243 6c616369     ortEnterCritical
   23bac:	3030300a 38363731 20542038 726f5076     .00017688 T vPor
   23bbc:	69784574 69724374 61636974 30300a6c     tExitCritical.00
   23bcc:	35363130 54206333 6f507620 72467472     01653c T vPortFr
   23bdc:	300a6565 37313030 20303436 50762054     ee.00017640 T vP
   23bec:	5374726f 61484356 656c646e 30300a72     ortSVCHandler.00
   23bfc:	35373130 54203861 75527620 6d69546e     0175a8 T vRunTim
   23c0c:	61745365 72734974 72746e45 30300a79     eStatIsrEntry.00
   23c1c:	35373130 54203064 75527620 6d69546e     0175d0 T vRunTim
   23c2c:	61745365 72734974 74697845 3030300a     eStatIsrExit.000
   23c3c:	36636431 20542063 696e7376 6e697270     1dc6c T vsniprin
   23c4c:	300a6674 64313030 20633663 73762054     tf.0001dc6c T vs
   23c5c:	6972706e 0a66746e 31303030 38623137     nprintf.000171b8
   23c6c:	76205420 6b736154 616c6544 30300a79      T vTaskDelay.00
   23c7c:	31373130 54203036 61547620 65446b73     017160 T vTaskDe
   23c8c:	5579616c 6c69746e 3030300a 33663631     layUntil.00016f3
   23c9c:	20542034 73615476 646e456b 65686353     4 T vTaskEndSche
   23cac:	656c7564 30300a72 34373130 54203434     duler.00017444 T
   23cbc:	61547620 694d6b73 64657373 6c656959      vTaskMissedYiel
   23ccc:	30300a64 33373130 54203035 61547620     d.00017350 T vTa
   23cdc:	6c506b73 4f656361 6576456e 694c746e     skPlaceOnEventLi
   23cec:	300a7473 37313030 20303934 54762054     st.00017490 T vT
   23cfc:	506b7361 726f6972 49797469 7265686e     askPriorityInher
   23d0c:	300a7469 36313030 20633565 54762054     it.00016e5c T vT
   23d1c:	526b7361 6d757365 30300a65 33373130     askResume.000173
   23d2c:	54203065 61547620 65536b73 6d695474     e0 T vTaskSetTim
   23d3c:	74754f65 74617453 30300a65 65363130     eOutState.00016e
   23d4c:	54203064 61547620 74536b73 53747261     d0 T vTaskStartS
   23d5c:	64656863 72656c75 3030300a 61323731     cheduler.000172a
   23d6c:	20542030 73615476 7375536b 646e6570     0 T vTaskSuspend
   23d7c:	3030300a 35663631 20542034 73615476     .00016f54 T vTas
   23d8c:	7375536b 646e6570 0a6c6c41 31303030     kSuspendAll.0001
   23d9c:	38653137 76205420 6b736154 74697753     71e8 T vTaskSwit
   23dac:	6f436863 7865746e 30300a74 63323130     chContext.00012c
   23dbc:	54206338 69617720 65725f74 0a796461     8c T wait_ready.
   23dcc:	31303030 30313633 77205420 6c657269     00013610 T wirel
   23ddc:	5f737365 74696e69 3030300a 35363331     ess_init.0001365
   23dec:	20542063 65726977 7373656c 7265735f     c T wireless_ser
   23dfc:	65636976 3030300a 36643231 20542063     vice.00012d6c T 
   23e0c:	74696d78 7461645f 6f6c6261 300a6b63     xmit_datablock.0
   23e1c:	37313030 20306136 50782054 5074726f     00176a0 T xPortP
   23e2c:	53646e65 6e614856 72656c64 3030300a     endSVHandler.000
   23e3c:	32373731 20542034 726f5078 61745374     17724 T xPortSta
   23e4c:	63537472 75646568 0a72656c 31303030     rtScheduler.0001
   23e5c:	34653637 78205420 74726f50 54737953     76e4 T xPortSysT
   23e6c:	486b6369 6c646e61 300a7265 36313030     ickHandler.00016
   23e7c:	20656337 51782054 65756575 61657243     7ce T xQueueCrea
   23e8c:	6f436574 69746e75 6553676e 6870616d     teCountingSemaph
   23e9c:	0a65726f 31303030 34653836 78205420     ore.000168e4 T x
   23eac:	75657551 65724365 4d657461 78657475     QueueCreateMutex
   23ebc:	3030300a 39373631 20542063 65755178     .0001679c T xQue
   23ecc:	65476575 6972656e 65724363 0a657461     ueGenericCreate.
   23edc:	31303030 30663936 78205420 75657551     000169f0 T xQueu
   23eec:	6e654765 63697265 65636552 0a657669     eGenericReceive.
   23efc:	31303030 30333736 78205420 75657551     00016730 T xQueu
   23f0c:	6e654765 63697265 65736552 30300a74     eGenericReset.00
   23f1c:	37363130 54203065 75517820 47657565     0167e0 T xQueueG
   23f2c:	72656e65 65536369 300a646e 36313030     enericSend.00016
   23f3c:	20383039 51782054 65756575 656e6547     908 T xQueueGene
   23f4c:	53636972 46646e65 496d6f72 300a5253     ricSendFromISR.0
   23f5c:	36313030 20383839 51782054 65756575     0016988 T xQueue
   23f6c:	65766947 6d6f7246 0a525349 31303030     GiveFromISR.0001
   23f7c:	34326236 78205420 75657551 63655265     6b24 T xQueueRec
   23f8c:	65766965 6d6f7246 0a525349 31303030     eiveFromISR.0001
   23f9c:	32616236 78205420 75657551 6c655365     6ba2 T xQueueSel
   23fac:	46746365 536d6f72 300a7465 37313030     ectFromSet.00017
   23fbc:	20386633 54782054 436b7361 6b636568     3f8 T xTaskCheck
   23fcc:	54726f46 4f656d69 300a7475 36313030     ForTimeOut.00016
   23fdc:	20386263 54782054 436b7361 74616572     cb8 T xTaskCreat
   23fec:	30300a65 34373130 54203037 61547820     e.00017470 T xTa
   23ffc:	65476b73 68635374 6c756465 74537265     skGetSchedulerSt
   2400c:	0a657461 31303030 34366636 78205420     ate.00016f64 T x
   2401c:	6b736154 54746547 436b6369 746e756f     TaskGetTickCount
   2402c:	3030300a 37663631 20542030 73615478     .00016f70 T xTas
   2403c:	7465476b 6b636954 6e756f43 6f724674     kGetTickCountFro
   2404c:	5253496d 3030300a 37663631 20542063     mISR.00016f7c T 
   2405c:	73615478 636e496b 656d6572 6954746e     xTaskIncrementTi
   2406c:	300a6b63 37313030 20303235 54782054     ck.00017520 T xT
   2407c:	506b7361 726f6972 44797469 6e697369     askPriorityDisin
   2408c:	69726568 30300a74 33373130 54203037     herit.00017370 T
   2409c:	61547820 65526b73 65766f6d 6d6f7246      xTaskRemoveFrom
   240ac:	6e657645 73694c74 30300a74 30373130     EventList.000170
   240bc:	54203838 61547820 65526b73 656d7573     88 T xTaskResume
   240cc:	0a6c6c41 31303030 38326338 68205420     All.00018c28 T h
   240dc:	6c646e61 73695f65 73692872 65765f72     andle_isr(isr_ve
   240ec:	726f7463 75202c2a 6769736e 2064656e     ctor*, unsigned 
   240fc:	676e6f6c 30300a29 35383130 54206337     long).0001857c T
   2410c:	73657220 74726174 7273695f 300a2928      restart_isr().0
   2411c:	30313030 20346236 6f6c2054 656c5f77     00106b4 T low_le
   2412c:	5f6c6576 74696e69 300a2928 38313030     vel_init().00018
   2413c:	20303735 5f632054 746e6965 61685f33     570 T c_eint3_ha
   2414c:	656c646e 0a292872 31303030 38613937     ndler().000179a8
   2415c:	68205420 5f686769 6576656c 6e695f6c      T high_level_in
   2416c:	29287469 3030300a 64333631 20542063     it().000163dc T 
   2417c:	65686373 656c7564 74735f72 28747261     scheduler_start(
   2418c:	6c6f6f62 6f62202c 0a296c6f 31303030     bool, bool).0001
   2419c:	30633336 73205420 64656863 72656c75     63c0 T scheduler
   241ac:	6464615f 7361745f 6373286b 75646568     _add_task(schedu
   241bc:	5f72656c 6b736174 300a292a 36313030     ler_task*).00016
   241cc:	20303132 63732054 75646568 5f72656c     210 T scheduler_
   241dc:	74696e69 6c6c615f 6f6f6228 300a296c     init_all(bool).0
   241ec:	38313030 20343437 72772054 5f657469     0018744 T write_
   241fc:	5f33706d 69676572 72657473 736e7528     mp3_register(uns
   2420c:	656e6769 68632064 202c7261 69736e75     igned char, unsi
   2421c:	64656e67 61686320 75202c72 6769736e     gned char, unsig
   2422c:	2064656e 72616863 30300a29 36383130     ned char).000186
   2423c:	54203464 706f7020 74616c75 72745f65     d4 T populate_tr
   2424c:	736b6361 7269645f 300a2928 30313030     acks_dir().00010
   2425c:	20633435 79732054 6c635f73 5f6b636f     54c T sys_clock_
   2426c:	666e6f63 72756769 0a292865 31303030     configure().0001
   2427c:	63653036 73205420 64656863 72656c75     60ec T scheduler
   2428c:	745f635f 5f6b7361 76697270 28657461     _c_task_private(
   2429c:	64696f76 300a292a 30313030 20303831     void*).00010180 
   242ac:	73622054 6e695f73 75287469 6769736e     T bss_init(unsig
   242bc:	2064656e 2c746e69 736e7520 656e6769     ned int, unsigne
   242cc:	6e692064 300a2974 38313030 20343239     d int).00018924 
   242dc:	706d2054 6e695f33 29287469 3030300a     T mp3_init().000
   242ec:	61353831 20542038 7478656e 7273695f     185a8 T next_isr
   242fc:	300a2928 38313030 20346435 72702054     ().000185d4 T pr
   2430c:	695f7665 29287273 3030300a 36313031     ev_isr().0001016
   2431c:	20542061 61746164 696e695f 6e752874     a T data_init(un
   2432c:	6e676973 69206465 202c746e 69736e75     signed int, unsi
   2433c:	64656e67 746e6920 6e75202c 6e676973     gned int, unsign
   2434c:	69206465 0a29746e 31303030 30303638     ed int).00018600
   2435c:	70205420 65737561 7273695f 300a2928      T pause_isr().0
   2436c:	34313030 20303336 454c2054 69445f44     0014630 T LED_Di
   2437c:	616c7073 733a3a79 654c7465 69447466     splay::setLeftDi
   2438c:	28746967 72616863 30300a29 36343130     git(char).000146
   2439c:	54203834 44454c20 7369445f 79616c70     48 T LED_Display
   243ac:	65733a3a 67695274 69447468 28746967     ::setRightDigit(
   243bc:	72616863 30300a29 36343130 54203036     char).00014660 T
   243cc:	44454c20 7369445f 79616c70 6e693a3a      LED_Display::in
   243dc:	29287469 3030300a 39363431 20542038     it().00014698 T 
   243ec:	5f44454c 70736944 3a79616c 7465733a     LED_Display::set
   243fc:	626d754e 63287265 29726168 3030300a     Number(char).000
   2440c:	32373431 20542063 6867694c 65535f74     1472c T Light_Se
   2441c:	726f736e 65673a3a 77615274 756c6156     nsor::getRawValu
   2442c:	0a292865 31303030 38323734 4c205420     e().00014728 T L
   2443c:	74686769 6e65535f 3a726f73 696e693a     ight_Sensor::ini
   2444c:	0a292874 31303030 30353436 73205420     t().00016450 T s
   2445c:	64656863 72656c75 7361745f 673a3a6b     cheduler_task::g
   2446c:	61547465 74506b73 4e794272 28656d61     etTaskPtrByName(
   2447c:	72616863 6e6f6320 292a7473 3030300a     char const*).000
   2448c:	31343631 20542063 65686373 656c7564     1641c T schedule
   2449c:	61745f72 3a3a6b73 65686373 656c7564     r_task::schedule
   244ac:	61745f72 63286b73 20726168 736e6f63     r_task(char cons
   244bc:	202c2a74 69736e75 64656e67 6e6f6c20     t*, unsigned lon
   244cc:	75202c67 6769736e 2064656e 72616863     g, unsigned char
   244dc:	6f76202c 292a6469 3030300a 31343631     , void*).0001641
   244ec:	20542063 65686373 656c7564 61745f72     c T scheduler_ta
   244fc:	3a3a6b73 65686373 656c7564 61745f72     sk::scheduler_ta
   2450c:	63286b73 20726168 736e6f63 202c2a74     sk(char const*, 
   2451c:	69736e75 64656e67 6e6f6c20 75202c67     unsigned long, u
   2452c:	6769736e 2064656e 72616863 6f76202c     nsigned char, vo
   2453c:	292a6469 3030300a 35633831 20542034     id*).00018c54 T 
   2454c:	4762614c 494f4950 7265746e 74707572     LabGPIOInterrupt
   2455c:	683a3a73 6c646e61 6e695f65 72726574     s::handle_interr
   2456c:	28747075 30300a29 64383130 54203435     upt().00018d54 T
   2457c:	62614c20 4f495047 65746e49 70757272      LabGPIOInterrup
   2458c:	3a3a7374 61747461 6e496863 72726574     ts::attachInterr
   2459c:	48747075 6c646e61 75287265 6769736e     uptHandler(unsig
   245ac:	2064656e 72616863 6e75202c 6e676973     ned char, unsign
   245bc:	6c206465 2c676e6f 696f7620 2a282064     ed long, void (*
   245cc:	2c292829 746e4920 75727265 6f437470     )(), InterruptCo
   245dc:	7469646e 5f6e6f69 300a2945 38313030     ndition_E).00018
   245ec:	20383163 614c2054 49504762 746e494f     c18 T LabGPIOInt
   245fc:	75727265 3a737470 696e693a 0a292874     errupts::init().
   2460c:	31303030 38306338 4c205420 50476261     00018c08 T LabGP
   2461c:	6e494f49 72726574 73747075 614c3a3a     IOInterrupts::La
   2462c:	49504762 746e494f 75727265 28737470     bGPIOInterrupts(
   2463c:	30300a29 63383130 54203830 62614c20     ).00018c08 T Lab
   2464c:	4f495047 65746e49 70757272 3a3a7374     GPIOInterrupts::
   2465c:	4762614c 494f4950 7265746e 74707572     LabGPIOInterrupt
   2466c:	0a292873 31303030 63636338 4c205420     s().00018ccc T L
   2467c:	50476261 6e494f49 72726574 73747075     abGPIOInterrupts
   2468c:	4c7e3a3a 50476261 6e494f49 72726574     ::~LabGPIOInterr
   2469c:	73747075 300a2928 38313030 20636363     upts().00018ccc 
   246ac:	614c2054 49504762 746e494f 75727265     T LabGPIOInterru
   246bc:	3a737470 614c7e3a 49504762 746e494f     pts::~LabGPIOInt
   246cc:	75727265 28737470 30300a29 35343130     errupts().000145
   246dc:	54206135 63634120 72656c65 6f697461     5a T Acceleratio
   246ec:	65535f6e 726f736e 6e693a3a 29287469     n_Sensor::init()
   246fc:	3030300a 64363431 20542032 3a44454c     .000146d2 T LED:
   2470c:	696e693a 0a292874 31303030 38643634     :init().000146d8
   2471c:	4c205420 3a3a4445 41746573 75286c6c      T LED::setAll(u
   2472c:	6769736e 2064656e 72616863 30300a29     nsigned char).00
   2473c:	38353130 54203035 43324920 693a3a32     015850 T I2C2::i
   2474c:	2874696e 69736e75 64656e67 746e6920     nit(unsigned int
   2475c:	30300a29 38353130 54206362 43324920     ).000158bc T I2C
   2476c:	493a3a32 28324332 30300a29 38353130     2::I2C2().000158
   2477c:	54206362 43324920 493a3a32 28324332     bc T I2C2::I2C2(
   2478c:	30300a29 31353130 54203062 72615520     ).000151b0 T Uar
   2479c:	3a3a3074 74726155 0a292830 31303030     t0::Uart0().0001
   247ac:	30623135 55205420 30747261 61553a3a     51b0 T Uart0::Ua
   247bc:	28307472 30300a29 35353130 54206333     rt0().0001553c T
   247cc:	72615520 3a3a3274 74726155 0a292832      Uart2::Uart2().
   247dc:	31303030 63333535 55205420 32747261     0001553c T Uart2
   247ec:	61553a3a 28327472 30300a29 32353130     ::Uart2().000152
   247fc:	54203831 72615520 3a3a3374 74696e69     18 T Uart3::init
   2480c:	736e7528 656e6769 6e692064 69202c74     (unsigned int, i
   2481c:	202c746e 29746e69 3030300a 35323531     nt, int).0001525
   2482c:	20542038 74726155 553a3a33 33747261     8 T Uart3::Uart3
   2483c:	300a2928 35313030 20383532 61552054     ().00015258 T Ua
   2484c:	3a337472 7261553a 29283374 3030300a     rt3::Uart3().000
   2485c:	34663431 20542030 72616843 3a766544     14f40 T CharDev:
   2486c:	7475703a 61686328 6f632072 2a74736e     :put(char const*
   2487c:	6e75202c 6e676973 69206465 0a29746e     , unsigned int).
   2488c:	31303030 38366634 43205420 44726168     00014f68 T CharD
   2489c:	3a3a7665 6e697270 63286674 20726168     ev::printf(char 
   248ac:	736e6f63 202c2a74 292e2e2e 3030300a     const*, ...).000
   248bc:	65663431 20542030 72616843 3a766544     14fe0 T CharDev:
   248cc:	6168433a 76654472 300a2928 34313030     :CharDev().00014
   248dc:	20306566 68432054 65447261 433a3a76     fe0 T CharDev::C
   248ec:	44726168 29287665 3030300a 30303531     harDev().0001500
   248fc:	20542030 72616843 3a766544 68437e3a     0 T CharDev::~Ch
   2490c:	65447261 0a292876 31303030 30303035     arDev().00015000
   2491c:	43205420 44726168 3a3a7665 6168437e      T CharDev::~Cha
   2492c:	76654472 300a2928 34313030 20303038     rDev().00014800 
   2493c:	614c2054 49504762 733a3a4f 73417465     T LabGPIO::setAs
   2494c:	75706e49 0a292874 31303030 32313834     Input().00014812
   2495c:	4c205420 50476261 3a3a4f49 41746573      T LabGPIO::setA
   2496c:	74754f73 28747570 30300a29 38343130     sOutput().000148
   2497c:	54203233 62614c20 4f495047 65733a3a     32 T LabGPIO::se
   2498c:	776f4c74 300a2928 34313030 20323238     tLow().00014822 
   2499c:	614c2054 49504762 733a3a4f 69487465     T LabGPIO::setHi
   249ac:	29286867 3030300a 34383431 20542034     gh().00014844 T 
   249bc:	4762614c 3a4f4950 7465673a 6576654c     LabGPIO::getLeve
   249cc:	0a29286c 31303030 38633734 4c205420     l().000147c8 T L
   249dc:	50476261 3a3a4f49 4762614c 284f4950     abGPIO::LabGPIO(
   249ec:	69736e75 64656e67 61686320 75202c72     unsigned char, u
   249fc:	6769736e 2064656e 72616863 30300a29     nsigned char).00
   24a0c:	37343130 54203863 62614c20 4f495047     0147c8 T LabGPIO
   24a1c:	614c3a3a 49504762 6e75284f 6e676973     ::LabGPIO(unsign
   24a2c:	63206465 2c726168 736e7520 656e6769     ed char, unsigne
   24a3c:	68632064 0a297261 31303030 38353834     d char).00014858
   24a4c:	4c205420 50476261 3a3a4f49 62614c7e      T LabGPIO::~Lab
   24a5c:	4f495047 300a2928 34313030 20383538     GPIO().00014858 
   24a6c:	614c2054 49504762 7e3a3a4f 4762614c     T LabGPIO::~LabG
   24a7c:	284f4950 30300a29 34343130 54203065     PIO().000144e0 T
   24a8c:	6f745320 65676172 65723a3a 63286461      Storage::read(c
   24a9c:	20726168 736e6f63 202c2a74 64696f76     har const*, void
   24aac:	75202c2a 6769736e 2064656e 2c746e69     *, unsigned int,
   24abc:	736e7520 656e6769 6e692064 300a2974      unsigned int).0
   24acc:	34313030 20343764 61552054 65447472     0014d74 T UartDe
   24adc:	733a3a76 61427465 61526475 75286574     v::setBaudRate(u
   24aec:	6769736e 2064656e 29746e69 3030300a     nsigned int).000
   24afc:	61643431 20542038 74726155 3a766544     14da8 T UartDev:
   24b0c:	6e61683a 49656c64 7265746e 74707572     :handleInterrupt
   24b1c:	300a2928 34313030 20303965 61552054     ().00014e90 T Ua
   24b2c:	65447472 693a3a76 2874696e 69736e75     rtDev::init(unsi
   24b3c:	64656e67 746e6920 6e75202c 6e676973     gned int, unsign
   24b4c:	69206465 202c746e 2c746e69 746e6920     ed int, int, int
   24b5c:	30300a29 63343130 54203865 72615520     ).00014ce8 T Uar
   24b6c:	76654474 6c663a3a 28687375 30300a29     tDev::flush().00
   24b7c:	64343130 54203830 72615520 76654474     014d08 T UartDev
   24b8c:	65673a3a 61684374 68632872 2c2a7261     ::getChar(char*,
   24b9c:	736e7520 656e6769 6e692064 300a2974      unsigned int).0
   24bac:	34313030 20343663 61552054 65447472     0014c64 T UartDe
   24bbc:	703a3a76 68437475 63287261 2c726168     v::putChar(char,
   24bcc:	736e7520 656e6769 6e692064 300a2974      unsigned int).0
   24bdc:	34313030 20383665 61552054 65447472     0014e68 T UartDe
   24bec:	553a3a76 44747261 75287665 6769736e     v::UartDev(unsig
   24bfc:	2064656e 2a746e69 30300a29 65343130     ned int*).00014e
   24c0c:	54203836 72615520 76654474 61553a3a     68 T UartDev::Ua
   24c1c:	65447472 6e752876 6e676973 69206465     rtDev(unsigned i
   24c2c:	292a746e 3030300a 39393431 20542036     nt*).00014996 T 
   24c3c:	5f433249 65736142 65723a3a 65526461     I2C_Base::readRe
   24c4c:	74736967 28737265 69736e75 64656e67     gisters(unsigned
   24c5c:	61686320 75202c72 6769736e 2064656e      char, unsigned 
   24c6c:	72616863 6e75202c 6e676973 63206465     char, unsigned c
   24c7c:	2a726168 6e75202c 6e676973 6c206465     har*, unsigned l
   24c8c:	29676e6f 3030300a 64393431 20542063     ong).000149dc T 
   24c9c:	5f433249 65736142 65723a3a 65526461     I2C_Base::readRe
   24cac:	74736967 28737265 69736e75 64656e67     gisters(unsigned
   24cbc:	61686320 75202c72 6769736e 2064656e      char, unsigned 
   24ccc:	72616863 75202c2a 6769736e 2064656e     char*, unsigned 
   24cdc:	676e6f6c 30300a29 39343130 54203062     long).000149b0 T
   24cec:	43324920 7361425f 773a3a65 65746972      I2C_Base::write
   24cfc:	69676552 72657473 6e752873 6e676973     Registers(unsign
   24d0c:	63206465 2c726168 736e7520 656e6769     ed char, unsigne
   24d1c:	68632064 2c2a7261 736e7520 656e6769     d char*, unsigne
   24d2c:	6f6c2064 0a29676e 31303030 63326334     d long).00014c2c
   24d3c:	49205420 425f4332 3a657361 6e61683a      T I2C_Base::han
   24d4c:	49656c64 7265746e 74707572 300a2928     dleInterrupt().0
   24d5c:	34313030 20346639 32492054 61425f43     00149f4 T I2C_Ba
   24d6c:	3a3a6573 63656863 7665446b 52656369     se::checkDeviceR
   24d7c:	6f707365 2865736e 69736e75 64656e67     esponse(unsigned
   24d8c:	61686320 300a2972 34313030 20323639      char).00014962 
   24d9c:	32492054 61425f43 3a3a6573 74697277     T I2C_Base::writ
   24dac:	67655265 65747369 65685472 6165526e     eRegisterThenRea
   24dbc:	6e752864 6e676973 63206465 2c726168     d(unsigned char,
   24dcc:	736e7520 656e6769 68632064 2c2a7261      unsigned char*,
   24ddc:	736e7520 656e6769 6f6c2064 202c676e      unsigned long, 
   24dec:	69736e75 64656e67 61686320 202c2a72     unsigned char*, 
   24dfc:	69736e75 64656e67 6e6f6c20 300a2967     unsigned long).0
   24e0c:	34313030 20343661 32492054 61425f43     0014a64 T I2C_Ba
   24e1c:	3a3a6573 74696e69 736e7528 656e6769     se::init(unsigne
   24e2c:	6f6c2064 202c676e 69736e75 64656e67     d long, unsigned
   24e3c:	6e6f6c20 300a2967 34313030 20653639      long).0001496e 
   24e4c:	32492054 61425f43 3a3a6573 64616572     T I2C_Base::read
   24e5c:	28676552 69736e75 64656e67 61686320     Reg(unsigned cha
   24e6c:	75202c72 6769736e 2064656e 72616863     r, unsigned char
   24e7c:	30300a29 38343130 54206135 43324920     ).0001485a T I2C
   24e8c:	7361425f 743a3a65 736e6172 28726566     _Base::transfer(
   24e9c:	69736e75 64656e67 61686320 75202c72     unsigned char, u
   24eac:	6769736e 2064656e 72616863 75202c2a     nsigned char*, u
   24ebc:	6769736e 2064656e 676e6f6c 6e75202c     nsigned long, un
   24ecc:	6e676973 63206465 2a726168 6e75202c     signed char*, un
   24edc:	6e676973 6c206465 29676e6f 3030300a     signed long).000
   24eec:	63393431 20542034 5f433249 65736142     149c4 T I2C_Base
   24efc:	72773a3a 52657469 75286765 6769736e     ::writeReg(unsig
   24f0c:	2064656e 72616863 6e75202c 6e676973     ned char, unsign
   24f1c:	63206465 2c726168 736e7520 656e6769     ed char, unsigne
   24f2c:	68632064 0a297261 31303030 38306134     d char).00014a08
   24f3c:	49205420 425f4332 3a657361 4332493a      T I2C_Base::I2C
   24f4c:	7361425f 504c2865 32495f43 79545f43     _Base(LPC_I2C_Ty
   24f5c:	65446570 0a292a66 31303030 38306134     peDef*).00014a08
   24f6c:	49205420 425f4332 3a657361 4332493a      T I2C_Base::I2C
   24f7c:	7361425f 504c2865 32495f43 79545f43     _Base(LPC_I2C_Ty
   24f8c:	65446570 0a292a66 31303030 32373734     peDef*).00014772
   24f9c:	49205420 545f4332 3a706d65 7465673a      T I2C_Temp::get
   24fac:	736c6543 28737569 30300a29 37343130     Celsius().000147
   24fbc:	54203461 43324920 6d65545f 673a3a70     a4 T I2C_Temp::g
   24fcc:	61467465 686e6572 28746965 30300a29     etFarenheit().00
   24fdc:	37343130 54203035 43324920 6d65545f     014750 T I2C_Tem
   24fec:	693a3a70 2874696e 30300a29 37343130     p::init().000147
   24ffc:	54203833 69775320 65686374 673a3a73     38 T Switches::g
   2500c:	77537465 68637469 756c6156 29287365     etSwitchValues()
   2501c:	3030300a 33373431 20542032 74697753     .00014732 T Swit
   2502c:	73656863 6e693a3a 29287469 3030300a     ches::init().000
   2503c:	37353431 20542063 535f5249 6f736e65     1457c T IR_Senso
   2504c:	733a3a72 65726f74 6f437249 75286564     r::storeIrCode(u
   2505c:	6769736e 2064656e 676e6f6c 30300a29     nsigned long).00
   2506c:	35343130 54203839 5f524920 736e6553     014598 T IR_Sens
   2507c:	3a3a726f 6f636564 72496564 65646f43     or::decodeIrCode
   2508c:	300a2928 34313030 20636635 52492054     ().000145fc T IR
   2509c:	6e65535f 3a726f73 696e693a 0a292874     _Sensor::init().
   250ac:	31303030 34393439 73205420 3a3a6474     00019494 T std::
   250bc:	65707974 666e695f 5f3a3a6f 5f73695f     type_info::__is_
   250cc:	6e696f70 5f726574 20292870 736e6f63     pointer_p() cons
   250dc:	30300a74 34393130 54203439 64747320     t.00019494 T std
   250ec:	79743a3a 695f6570 3a6f666e 695f5f3a     ::type_info::__i
   250fc:	75665f73 6974636e 705f6e6f 63202928     s_function_p() c
   2510c:	74736e6f 3030300a 39343931 20542038     onst.00019498 T 
   2511c:	3a647473 7079743a 6e695f65 3a3a6f66     std::type_info::
   2512c:	7265706f 726f7461 73283d3d 3a3a6474     operator==(std::
   2513c:	65707974 666e695f 6f63206f 2674736e     type_info const&
   2514c:	6f632029 0a74736e 31303030 32393439     ) const.00019492
   2515c:	73205420 3a3a6474 65707974 666e695f      T std::type_inf
   2516c:	7e3a3a6f 65707974 666e695f 0a29286f     o::~type_info().
   2517c:	31303030 32393439 73205420 3a3a6474     00019492 T std::
   2518c:	65707974 666e695f 7e3a3a6f 65707974     type_info::~type
   2519c:	666e695f 0a29286f 31303030 63633439     _info().000194cc
   251ac:	73205420 3a3a6474 5f746567 6d726574      T std::get_term
   251bc:	74616e69 0a292865 31303030 63643439     inate().000194dc
   251cc:	73205420 3a3a6474 6d726574 74616e69      T std::terminat
   251dc:	0a292865 00021600                                e()..
